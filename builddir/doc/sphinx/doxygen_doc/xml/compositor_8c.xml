<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="compositor_8c" kind="file" language="C++">
    <compoundname>compositor.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">sys/wait.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">sys/utsname.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">linux/input.h</includes>
    <includes local="no">dlfcn.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">setjmp.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes refid="timeline_8h" local="yes">timeline.h</includes>
    <includes refid="libweston_8h" local="no">libweston/libweston.h</includes>
    <includes refid="weston-log_8h" local="no">libweston/weston-log.h</includes>
    <includes refid="linux-dmabuf_8h" local="yes">linux-dmabuf.h</includes>
    <includes local="yes">viewporter-server-protocol.h</includes>
    <includes local="yes">presentation-time-server-protocol.h</includes>
    <includes local="yes">xdg-output-unstable-v1-server-protocol.h</includes>
    <includes local="yes">linux-explicit-synchronization-unstable-v1-server-protocol.h</includes>
    <includes refid="linux-explicit-synchronization_8h" local="yes">linux-explicit-synchronization.h</includes>
    <includes local="yes">shared/fd-util.h</includes>
    <includes local="yes">shared/helpers.h</includes>
    <includes local="yes">shared/os-compatibility.h</includes>
    <includes local="yes">shared/string-helpers.h</includes>
    <includes local="yes">shared/timespec-util.h</includes>
    <includes local="yes">git-version.h</includes>
    <includes local="no">libweston/version.h</includes>
    <includes refid="plugin-registry_8h" local="no">libweston/plugin-registry.h</includes>
    <includes refid="pixel-formats_8h" local="yes">pixel-formats.h</includes>
    <includes refid="backend_8h" local="yes">backend.h</includes>
    <includes refid="libweston-internal_8h" local="yes">libweston-internal.h</includes>
    <includes refid="weston-log-internal_8h" local="yes">weston-log-internal.h</includes>
    <incdepgraph>
      <node id="16">
        <label>sys/stat.h</label>
      </node>
      <node id="29">
        <label>stdbool.h</label>
      </node>
      <node id="9">
        <label>stdarg.h</label>
      </node>
      <node id="33">
        <label>libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>linux/input.h</label>
      </node>
      <node id="53">
        <label>pixel-formats.h</label>
        <link refid="pixel-formats_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>assert.h</label>
      </node>
      <node id="47">
        <label>shared/string-helpers.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>sys/mman.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="30">
        <label>libweston/weston-log.h</label>
        <link refid="weston-log_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>git-version.h</label>
      </node>
      <node id="22">
        <label>setjmp.h</label>
      </node>
      <node id="36">
        <label>wayland-server.h</label>
      </node>
      <node id="35">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="39">
        <label>linux-dmabuf.h</label>
        <link refid="linux-dmabuf_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>xdg-output-unstable-v1-server-protocol.h</label>
      </node>
      <node id="25">
        <label>errno.h</label>
      </node>
      <node id="3">
        <label>fcntl.h</label>
      </node>
      <node id="46">
        <label>shared/os-compatibility.h</label>
      </node>
      <node id="32">
        <label>shared/helpers.h</label>
      </node>
      <node id="11">
        <label>sys/ioctl.h</label>
      </node>
      <node id="52">
        <label>stddef.h</label>
      </node>
      <node id="50">
        <label>libweston/version.h</label>
      </node>
      <node id="56">
        <label>weston-log-internal.h</label>
        <link refid="weston-log-internal_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>limits.h</label>
      </node>
      <node id="40">
        <label>viewporter-server-protocol.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="27">
        <label>timeline.h</label>
        <link refid="timeline_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>unistd.h</label>
      </node>
      <node id="21">
        <label>signal.h</label>
      </node>
      <node id="44">
        <label>linux-explicit-synchronization.h</label>
        <link refid="linux-explicit-synchronization_8h"/>
      </node>
      <node id="45">
        <label>shared/fd-util.h</label>
      </node>
      <node id="51">
        <label>libweston/plugin-registry.h</label>
        <link refid="plugin-registry_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>time.h</label>
      </node>
      <node id="18">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>sys/wait.h</label>
      </node>
      <node id="23">
        <label>sys/time.h</label>
      </node>
      <node id="37">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="34">
        <label>pixman.h</label>
      </node>
      <node id="28">
        <label>wayland-util.h</label>
      </node>
      <node id="31">
        <label>wayland-server-core.h</label>
      </node>
      <node id="41">
        <label>presentation-time-server-protocol.h</label>
      </node>
      <node id="14">
        <label>sys/socket.h</label>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/libweston/compositor.c</label>
        <link refid="compositor_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>libweston-internal.h</label>
        <link refid="libweston-internal_8h"/>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="48">
        <label>shared/timespec-util.h</label>
      </node>
      <node id="54">
        <label>backend.h</label>
        <link refid="backend_8h"/>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="43">
        <label>linux-explicit-synchronization-unstable-v1-server-protocol.h</label>
      </node>
      <node id="15">
        <label>sys/utsname.h</label>
      </node>
      <node id="26">
        <label>inttypes.h</label>
      </node>
      <node id="20">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structweston__frame__callback" prot="public">weston_frame_callback</innerclass>
    <innerclass refid="structweston__presentation__feedback" prot="public">weston_presentation_feedback</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="compositor_8c_1a0584d6a834326cf77fb5fbe467c6470e" prot="public" static="no">
        <name>DEFAULT_REPAINT_WINDOW</name>
        <initializer>7 /* milliseconds */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="86" column="9" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="compositor_8c_1aa73bd2f1cea7f00bf17a2133d62f3683" prot="public" static="yes" mutable="no">
        <type>const struct wl_surface_interface</type>
        <definition>const struct wl_surface_interface surface_interface</definition>
        <argsstring></argsstring>
        <name>surface_interface</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8h_1a2c686f203eab16492d51ed7262aa479c" kindref="member">surface_destroy</ref>,
	<ref refid="compositor_8c_1ac8ce9129dec4b98443594b1530e74850" kindref="member">surface_attach</ref>,
	<ref refid="compositor_8c_1a917d497af6f3b46cff8b8e945788c467" kindref="member">surface_damage</ref>,
	<ref refid="compositor_8c_1a912761f200744a8f0573d81b54b90567" kindref="member">surface_frame</ref>,
	<ref refid="compositor_8c_1abc6fd4a4b0ba02c3d33c4460e83448d1" kindref="member">surface_set_opaque_region</ref>,
	<ref refid="compositor_8c_1a0aa233677ade41ddddb66e3c2d3abac6" kindref="member">surface_set_input_region</ref>,
	<ref refid="compositor_8c_1a5ec3b2813076e104865ea284bc42ec43" kindref="member">surface_commit</ref>,
	<ref refid="compositor_8c_1aeb511e6b049fc0a49ae4924c963c7579" kindref="member">surface_set_buffer_transform</ref>,
	<ref refid="compositor_8c_1a92648370f41ad171aa68e2a6f1520b5f" kindref="member">surface_set_buffer_scale</ref>,
	<ref refid="compositor_8c_1a7944a85d6240001e4a6d6a28c2095e1e" kindref="member">surface_damage_buffer</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3844" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3862" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1a86526f54f154d09c2cbff99e15cfb496" prot="public" static="yes" mutable="no">
        <type>const struct wl_region_interface</type>
        <definition>const struct wl_region_interface region_interface</definition>
        <argsstring></argsstring>
        <name>region_interface</name>
        <initializer>= {
	<ref refid="compositor_8c_1a0e1f8e67c4a1f114a7a876c6c0efdfad" kindref="member">region_destroy</ref>,
	<ref refid="compositor_8c_1ad29282af488305858933033bce359267" kindref="member">region_add</ref>,
	<ref refid="compositor_8c_1af03567984ff8cd0573c50fb1141500af" kindref="member">region_subtract</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3928" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3939" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1afbcfe7c24900dddd75fca580763d76d5" prot="public" static="yes" mutable="no">
        <type>const struct wl_compositor_interface</type>
        <definition>const struct wl_compositor_interface compositor_interface</definition>
        <argsstring></argsstring>
        <name>compositor_interface</name>
        <initializer>= {
	<ref refid="compositor_8c_1a5b8dd407ac0c279b1c696563ebf3690b" kindref="member">compositor_create_surface</ref>,
	<ref refid="compositor_8c_1a33f445c7eec125220a7659c5338d0ba6" kindref="member">compositor_create_region</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3946" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1ab88ac65f920154b20f6492c1850981c0" prot="public" static="yes" mutable="no">
        <type>const struct wl_subsurface_interface</type>
        <definition>const struct wl_subsurface_interface subsurface_implementation</definition>
        <argsstring></argsstring>
        <name>subsurface_implementation</name>
        <initializer>= {
	<ref refid="compositor_8c_1a594ac6116fb205e27731b270a2833c9c" kindref="member">subsurface_destroy</ref>,
	<ref refid="compositor_8c_1a0e10bc8d2d20e78143885c1599042d56" kindref="member">subsurface_set_position</ref>,
	<ref refid="compositor_8c_1a64e1434908dd85ef1717819989240c83" kindref="member">subsurface_place_above</ref>,
	<ref refid="compositor_8c_1a7b32361590a91215ce7c0f9fa2e1a440" kindref="member">subsurface_place_below</ref>,
	<ref refid="compositor_8c_1ab74225d716446e5743e6f01d364b1224" kindref="member">subsurface_set_sync</ref>,
	<ref refid="compositor_8c_1adcb4bc5ecd26b791655f2522edc15fdf" kindref="member">subsurface_set_desync</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4577" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1ac78dc71c34c71109a0e006e329e7ba48" prot="public" static="yes" mutable="no">
        <type>const struct wl_subcompositor_interface</type>
        <definition>const struct wl_subcompositor_interface subcompositor_interface</definition>
        <argsstring></argsstring>
        <name>subcompositor_interface</name>
        <initializer>= {
	<ref refid="compositor_8c_1a57855c7af38a10c0d2b79e38eca07029" kindref="member">subcompositor_destroy</ref>,
	<ref refid="compositor_8c_1a482ff084752a55a1452da0dd635847a9" kindref="member">subcompositor_get_subsurface</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4737" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1aec80d874d744f8e9ceef99cd23999319" prot="public" static="yes" mutable="no">
        <type>const struct wl_output_interface</type>
        <definition>const struct wl_output_interface output_interface</definition>
        <argsstring></argsstring>
        <name>output_interface</name>
        <initializer>= {
	<ref refid="compositor_8c_1ac0cb28d2d906827fe74fd564f5d295c9" kindref="member">output_release</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4935" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4940" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1a9befc30be02a740021a20ac1727b467f" prot="public" static="yes" mutable="no">
        <type>const struct zxdg_output_v1_interface</type>
        <definition>const struct zxdg_output_v1_interface xdg_output_interface</definition>
        <argsstring></argsstring>
        <name>xdg_output_interface</name>
        <initializer>= {
	<ref refid="compositor_8c_1a9ba515976004a333e4a3316c87df1640" kindref="member">xdg_output_destroy</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6796" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1a16938f1fb13be1f7d8c9cc005586a714" prot="public" static="yes" mutable="no">
        <type>const struct zxdg_output_manager_v1_interface</type>
        <definition>const struct zxdg_output_manager_v1_interface xdg_output_manager_interface</definition>
        <argsstring></argsstring>
        <name>xdg_output_manager_interface</name>
        <initializer>= {
	<ref refid="compositor_8c_1a12068091b6fa2576537299a107f14708" kindref="member">xdg_output_manager_destroy</ref>,
	<ref refid="compositor_8c_1a7cf6a9bbfcc7bac3fd0fa5ed30c193b2" kindref="member">xdg_output_manager_get_xdg_output</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6813" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1a95a6d6f014e466d0d2e9d978266cfbfe" prot="public" static="yes" mutable="no">
        <type>const struct wp_viewport_interface</type>
        <definition>const struct wp_viewport_interface viewport_interface</definition>
        <argsstring></argsstring>
        <name>viewport_interface</name>
        <initializer>= {
	<ref refid="compositor_8c_1a880c557ac9d14d1a3da29a2ad863d013" kindref="member">viewport_destroy</ref>,
	<ref refid="compositor_8c_1a22290c89b2399b62ccdb697585d8c8ae" kindref="member">viewport_set_source</ref>,
	<ref refid="compositor_8c_1af5946cc45776e2bb021818a0ee0f89e6" kindref="member">viewport_set_destination</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6944" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1ac95e339b9003e6d994bb0b5277190c94" prot="public" static="yes" mutable="no">
        <type>const struct wp_viewporter_interface</type>
        <definition>const struct wp_viewporter_interface viewporter_interface</definition>
        <argsstring></argsstring>
        <name>viewporter_interface</name>
        <initializer>= {
	<ref refid="compositor_8c_1a4866b48d79d522905b444456b1008fd9" kindref="member">viewporter_destroy</ref>,
	<ref refid="compositor_8c_1a8e694fc99050a6bcf0a292cf6c6ade49" kindref="member">viewporter_get_viewport</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6995" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7025" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1a1dc37b108afa890e4ee284df7b543040" prot="public" static="yes" mutable="no">
        <type>const struct wp_presentation_interface</type>
        <definition>const struct wp_presentation_interface presentation_implementation</definition>
        <argsstring></argsstring>
        <name>presentation_implementation</name>
        <initializer>= {
	<ref refid="compositor_8c_1a7cbe15dfcaeedbf13974990ba3180316" kindref="member">presentation_destroy</ref>,
	<ref refid="compositor_8c_1a3c4d41b60377ef8140fddb73b2ac6400" kindref="member">presentation_feedback</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7065" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7099" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="compositor_8c_1acc40172637b56f2ac467c5c6692f0126" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char* const backend_map[]</definition>
        <argsstring>[]</argsstring>
        <name>backend_map</name>
        <initializer>= {
	[<ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a62a6d338e4bbfd69283bcecd0c4146d3" kindref="member">WESTON_BACKEND_DRM</ref>] =		&quot;drm-backend.so&quot;,
	[WESTON_BACKEND_FBDEV] =	&quot;fbdev-backend.so&quot;,
	[WESTON_BACKEND_HEADLESS] =	&quot;headless-backend.so&quot;,
	[WESTON_BACKEND_RDP] =		&quot;rdp-backend.so&quot;,
	[WESTON_BACKEND_WAYLAND] =	&quot;wayland-backend.so&quot;,
	[WESTON_BACKEND_X11] =		&quot;x11-backend.so&quot;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7949" column="26" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7949" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="compositor_8c_1a7885b07813c43dba107948b93948ffc0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_output_update_matrix</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_update_matrix</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5879" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5879" bodyend="5936" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="89" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3853d7f753575c4feb9c1f8ed1255157" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_output_transform_scale_init</definition>
        <argsstring>(struct weston_output *output, uint32_t transform, uint32_t scale)</argsstring>
        <name>weston_output_transform_scale_init</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5939" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5939" bodyend="5949" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="92" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a85713ea74ab000b63800f8d67acda7f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_build_view_list</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_build_view_list</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2672" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2672" bodyend="2694" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="96" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga42eb945978c9fc4207fab33dd5e46be1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * weston_output_create_heads_string</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_create_heads_string</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Create a string with the attached heads&apos; names. </para>
        </briefdescription>
        <detaileddescription>
<para>The string must be free()&apos;d. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6362" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6362" bodyend="6381" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="99" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a414429eff51d0e6b424cb132a93199f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_mode_switch_send_events</definition>
        <argsstring>(struct weston_head *head, bool mode_changed, bool scale_changed)</argsstring>
        <name>weston_mode_switch_send_events</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mode_changed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_changed</declname>
        </param>
        <briefdescription>
<para>Send wl_output events for mode and scale changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>Send on all resources bound to this head. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode_changed</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, send the current mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale_changed</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, send the current scale. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="108" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="108" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3d654fef021c6e693cae4dd46bff927b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_mode_switch_finish</definition>
        <argsstring>(struct weston_output *output, int mode_changed, int scale_changed)</argsstring>
        <name>weston_mode_switch_finish</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode_changed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale_changed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="143" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="143" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ad1d1cfd09469f19cf86f0c4fdd43e76f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_reflow_outputs</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_output *resized_output, int delta_width)</argsstring>
        <name>weston_compositor_reflow_outputs</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>resized_output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delta_width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5826" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5826" bodyend="5846" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="200" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga5b6b26af26f582ad5627ea7ae6129a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_mode_set_native</definition>
        <argsstring>(struct weston_output *output, struct weston_mode *mode, int32_t scale)</argsstring>
        <name>weston_output_mode_set_native</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__mode" kindref="compound">weston_mode</ref> *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="207" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="207" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga71e8b4c2d4a15c8d153b85f178d1006d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_mode_switch_to_native</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_mode_switch_to_native</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="247" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="247" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga3cae00e20c6451270741932f1330e64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_mode_switch_to_temporary</definition>
        <argsstring>(struct weston_output *output, struct weston_mode *mode, int32_t scale)</argsstring>
        <name>weston_output_mode_switch_to_temporary</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__mode" kindref="compound">weston_mode</ref> *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="284" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="284" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1416f09293d589dc99655700e0a72b53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void region_init_infinite</definition>
        <argsstring>(pixman_region32_t *region)</argsstring>
        <name>region_init_infinite</name>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="312" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="312" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ae73f9f170b78a4645e3033dd8ae4681c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
        <definition>static struct weston_subsurface * weston_surface_to_subsurface</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_to_subsurface</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4175" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4175" bodyend="4181" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="319" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aa7c65b03520dde2e12d5a35f444435d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
        <definition>struct weston_view* weston_view_create</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_view_create</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="322" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="322" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8307b26a9a729ad861efe692081b7f9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_presentation_feedback_discard</definition>
        <argsstring>(struct weston_presentation_feedback *feedback)</argsstring>
        <name>weston_presentation_feedback_discard</name>
        <param>
          <type>struct <ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref> *</type>
          <declname>feedback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="373" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="373" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9e35ed3c3311c408ac495e8f6588aa94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_presentation_feedback_discard_list</definition>
        <argsstring>(struct wl_list *list)</argsstring>
        <name>weston_presentation_feedback_discard_list</name>
        <param>
          <type>struct wl_list *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="381" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="381" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ad6a928cae402e6a349262cec7f7b7e84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_presentation_feedback_present</definition>
        <argsstring>(struct weston_presentation_feedback *feedback, struct weston_output *output, uint32_t refresh_nsec, const struct timespec *ts, uint64_t seq, uint32_t flags)</argsstring>
        <name>weston_presentation_feedback_present</name>
        <param>
          <type>struct <ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref> *</type>
          <declname>feedback</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>refresh_nsec</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="390" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="390" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9ed5c3db4ada6f1dd62f7464a7d8aec9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_presentation_feedback_present_list</definition>
        <argsstring>(struct wl_list *list, struct weston_output *output, uint32_t refresh_nsec, const struct timespec *ts, uint64_t seq, uint32_t flags)</argsstring>
        <name>weston_presentation_feedback_present_list</name>
        <param>
          <type>struct wl_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>refresh_nsec</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="432" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="432" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a955920073f8520f3785617fea6a4cfb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_state_handle_buffer_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>surface_state_handle_buffer_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="451" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="451" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a4c31d06dcae13b2f9aa2ba0acd2b6a16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_state_init</definition>
        <argsstring>(struct weston_surface_state *state)</argsstring>
        <name>weston_surface_state_init</name>
        <param>
          <type>struct <ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="461" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="461" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1acfaf23bfe99d132bcb56e63e80535a14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_state_fini</definition>
        <argsstring>(struct weston_surface_state *state)</argsstring>
        <name>weston_surface_state_fini</name>
        <param>
          <type>struct <ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="491" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="491" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9cfb047c81ff27e9e303e8f48d3d65ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_state_set_buffer</definition>
        <argsstring>(struct weston_surface_state *state, struct weston_buffer *buffer)</argsstring>
        <name>weston_surface_state_set_buffer</name>
        <param>
          <type>struct <ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="515" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="515" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1e3347a74e72ecb0aa7617dbf89b76fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
        <definition>struct weston_surface* weston_surface_create</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_surface_create</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="530" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="530" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a864f2297b36a4f94f96b8ba55869fe66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_set_color</definition>
        <argsstring>(struct weston_surface *surface, float red, float green, float blue, float alpha)</argsstring>
        <name>weston_surface_set_color</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>float</type>
          <declname>red</declname>
        </param>
        <param>
          <type>float</type>
          <declname>green</declname>
        </param>
        <param>
          <type>float</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="578" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="578" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1666f1b9cb32183712d16d893af00dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_to_global_float</definition>
        <argsstring>(struct weston_view *view, float sx, float sy, float *x, float *y)</argsstring>
        <name>weston_view_to_global_float</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="586" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="586" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a659e0e7b6d6e149fd9872287e0528a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_transformed_coord</definition>
        <argsstring>(int width, int height, enum wl_output_transform transform, int32_t scale, float sx, float sy, float *bx, float *by)</argsstring>
        <name>weston_transformed_coord</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>enum wl_output_transform</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>by</declname>
        </param>
        <briefdescription>
<para>Transform a point to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface width. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface height. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer transform. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer scale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sx</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface x coordinate of a point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sy</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface y coordinate of a point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bx</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer x coordinate of the point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">by</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer Y coordinate of the point.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Converts the given surface-local coordinates to buffer coordinates according to the given buffer transform and scale. This ignores wp_viewport.</para>
<para>The given width and height must be the result of inverse scaled and inverse transformed buffer size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="630" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="630" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1586f602e908b42e1e4b1c486a21783d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_box32_t</type>
        <definition>pixman_box32_t weston_transformed_rect</definition>
        <argsstring>(int width, int height, enum wl_output_transform transform, int32_t scale, pixman_box32_t rect)</argsstring>
        <name>weston_transformed_rect</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>enum wl_output_transform</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>pixman_box32_t</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Transform a rectangle to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface width. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface height. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer transform. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer scale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Rectangle in surface coordinates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rectangle in buffer coordinates.</para>
</simplesect>
Converts the given surface-local rectangle to buffer coordinates according to the given buffer transform and scale. The resulting rectangle is guaranteed to be well-formed. This ignores wp_viewport.</para>
<para>The given width and height must be the result of inverse scaled and inverse transformed buffer size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="693" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="693" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a69d6ae1e2501bc0b76f563edadc212d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_matrix_transform_region</definition>
        <argsstring>(pixman_region32_t *dest, struct weston_matrix *matrix, pixman_region32_t *src)</argsstring>
        <name>weston_matrix_transform_region</name>
        <param>
          <type>pixman_region32_t *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__matrix" kindref="compound">weston_matrix</ref> *</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Transform a region by a matrix, restricted to axis-aligned transformations. </para>
        </briefdescription>
        <detaileddescription>
<para>Warning: This function does not work for projective, affine, or matrices that encode arbitrary rotations. Only 90-degree step rotations are supported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="733" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="733" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a6edea0da779eae3aca7dd73800591528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_transformed_region</definition>
        <argsstring>(int width, int height, enum wl_output_transform transform, int32_t scale, pixman_region32_t *src, pixman_region32_t *dest)</argsstring>
        <name>weston_transformed_region</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>enum wl_output_transform</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Transform a region to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface width. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface height. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer transform. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer scale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Region in surface coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Resulting region in buffer coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Converts the given surface-local region to buffer coordinates according to the given buffer transform and scale. This ignores wp_viewport.</para>
<para>The given width and height must be the result of inverse scaled and inverse transformed buffer size.</para>
<para>src and dest are allowed to point to the same memory for in-place conversion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="801" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="801" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1adf80476a5086883b94c07fb5c3378257" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void viewport_surface_to_buffer</definition>
        <argsstring>(struct weston_surface *surface, float sx, float sy, float *bx, float *by)</argsstring>
        <name>viewport_surface_to_buffer</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="893" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="893" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a4feb46d02393c29f583d77410b940895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_to_buffer_float</definition>
        <argsstring>(struct weston_surface *surface, float sx, float sy, float *bx, float *by)</argsstring>
        <name>weston_surface_to_buffer_float</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="923" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="923" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a93bb5bbf6daec9ac24e8735e22fca35d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_box32_t</type>
        <definition>pixman_box32_t weston_surface_to_buffer_rect</definition>
        <argsstring>(struct weston_surface *surface, pixman_box32_t rect)</argsstring>
        <name>weston_surface_to_buffer_rect</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>pixman_box32_t</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Transform a rectangle from surface coordinates to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to fetch wp_viewport and buffer transformation from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The rectangle to transform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed rectangle.</para>
</simplesect>
Viewport and buffer transformations can only do translation, scaling, and rotations in 90-degree steps. Therefore the only loss in the conversion is coordinate rounding.</para>
<para>However, some coordinate rounding takes place as an intermediate step before the buffer scale factor is applied, so the rectangle boundary may not be exactly as expected.</para>
<para>This is OK for damage tracking since a little extra coverage is not a problem. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="956" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="956" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8ac3e73015c689738f959bce31cb2d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_to_buffer_region</definition>
        <argsstring>(struct weston_surface *surface, pixman_region32_t *surface_region, pixman_region32_t *buffer_region)</argsstring>
        <name>weston_surface_to_buffer_region</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>surface_region</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>buffer_region</declname>
        </param>
        <briefdescription>
<para>Transform a region from surface coordinates to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to fetch wp_viewport and buffer transformation from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">surface_region</parametername>
</parameternamelist>
<parameterdescription>
<para>The region in surface coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer_region</parametername>
</parameternamelist>
<parameterdescription>
<para>The region converted to buffer coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Buffer_region must be init&apos;d, but will be completely overwritten.</para>
<para>Viewport and buffer transformations can only do translation, scaling, and rotations in 90-degree steps. Therefore the only loss in the conversion is from the coordinate rounding that takes place in <ref refid="libweston-internal_8h_1a93bb5bbf6daec9ac24e8735e22fca35d" kindref="member">weston_surface_to_buffer_rect</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="993" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="993" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a6c1656484b6903667a3b4add28c5863e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_move_to_plane</definition>
        <argsstring>(struct weston_view *view, struct weston_plane *plane)</argsstring>
        <name>weston_view_move_to_plane</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1016" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1016" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3a8dd59c945611948e04e68ba09248d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_damage_below</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_damage_below</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
<para>Inflict damage on the plane where the view is visible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view that causes the damage.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If the view is currently on a plane (including the primary plane), take the view&apos;s boundingbox, subtract all the opaque views that cover it, and add the remaining region as damage to the plane. This corresponds to the damage inflicted to the plane if this view disappeared.</para>
<para>A repaint is scheduled for this view.</para>
<para>The region of all opaque views covering this view is stored in <ref refid="structweston__view_1a7f10ad4288de845f3f42609bdf617416" kindref="member">weston_view::clip</ref> and updated by <ref refid="compositor_8c_1acb03c4841e0548b73c4c656ba2e497cf" kindref="member">view_accumulate_damage()</ref> during <ref refid="compositor_8c_1a2867191b08eb96f9f930169435b3fc91" kindref="member">weston_output_repaint()</ref>. Specifically, that region matches the scenegraph as it was last painted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1044" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1044" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a2c49db8213dba7327fb950b106cefe12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_send_enter_leave</definition>
        <argsstring>(struct weston_surface *surface, struct weston_head *head, bool enter, bool leave)</argsstring>
        <name>weston_surface_send_enter_leave</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>leave</declname>
        </param>
        <briefdescription>
<para>Send wl_surface.enter/leave events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>A head of the entered/left output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enter</parametername>
</parameternamelist>
<parameterdescription>
<para>True if entered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leave</parametername>
</parameternamelist>
<parameterdescription>
<para>True if left.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Send the enter/leave events for all protocol objects bound to the given output by the client owning the surface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1069" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1069" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ac28af9009d1913bd215e38e4c81ffbaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_compute_protection</definition>
        <argsstring>(struct protected_surface *psurface)</argsstring>
        <name>weston_surface_compute_protection</name>
        <param>
          <type>struct <ref refid="structprotected__surface" kindref="compound">protected_surface</ref> *</type>
          <declname>psurface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1092" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1092" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a50650978de46321362c16d562ca7b5c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void notify_surface_protection_change</definition>
        <argsstring>(void *data)</argsstring>
        <name>notify_surface_protection_change</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1136" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1136" bodyend="1149"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ac6277c99f8902551d05f429293eba72d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_schedule_surface_protection_update</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_schedule_surface_protection_update</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
Schedule an idle task to notify surface about the update in protection, if not already scheduled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1158" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1158" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1abc565bcb3c395271150775df024dd283" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_update_output_mask</definition>
        <argsstring>(struct weston_surface *es, uint32_t mask)</argsstring>
        <name>weston_surface_update_output_mask</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>es</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>es</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The new set of outputs for the surface</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Sets the surface&apos;s set of outputs to the ones specified by the new output mask provided. Identifies the outputs that have changed, the posts enter and leave events for these outputs as appropriate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1181" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1181" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a57d0eb1ecf46caba40a0a2422d9c1215" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void notify_view_output_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>notify_view_output_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1215" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1215" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a282f55c3bc4fcad342539921f04cc484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_output</definition>
        <argsstring>(struct weston_view *view, struct weston_output *output)</argsstring>
        <name>weston_view_set_output</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Set the primary output of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view whose primary output to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The new primary output for the view</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Set <emphasis>output</emphasis> to be the primary output of the <emphasis>view</emphasis>.</para>
<para>Notice that the assignment may be temporary; the primary output could be automatically changed. Hence, one cannot rely on the value persisting.</para>
<para>Passing NULL as /a output will set the primary output to NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1238" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1238" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1af34bc0feacb56b0c008ecc97e52f5f3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_assign_output</definition>
        <argsstring>(struct weston_surface *es)</argsstring>
        <name>weston_surface_assign_output</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>es</declname>
        </param>
        <briefdescription>
<para>Recalculate which <ref refid="structoutput" kindref="compound">output(s)</ref> the surface has views displayed on. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>es</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to remap to outputs</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Finds the output that is showing the largest amount of one of the surface&apos;s various views. This output becomes the surface&apos;s primary output for vsync and frame callback purposes.</para>
<para>Also notes all outputs of all of the surface&apos;s views in the output_mask for the surface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1265" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1265" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1abe82cb82b75a6a7196ef924bb28959fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_view_assign_output</definition>
        <argsstring>(struct weston_view *ev)</argsstring>
        <name>weston_view_assign_output</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
<para>Recalculate which <ref refid="structoutput" kindref="compound">output(s)</ref> the view is displayed on. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ev</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to remap to outputs</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Identifies the set of outputs that the view is visible on, noting them into the output_mask. The output that the view is most visible on is set as the view&apos;s primary output.</para>
<para>Also does the same for the view&apos;s surface. See <ref refid="compositor_8c_1af34bc0feacb56b0c008ecc97e52f5f3c" kindref="member">weston_surface_assign_output()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1312" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1312" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a07a79ca767ffc8da27b22cda265ac918" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_view_to_view_map</definition>
        <argsstring>(struct weston_view *from, struct weston_view *to, int from_x, int from_y, int *to_x, int *to_y)</argsstring>
        <name>weston_view_to_view_map</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>to</declname>
        </param>
        <param>
          <type>int</type>
          <declname>from_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>from_y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>to_x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>to_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1351" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1351" bodyend="1361"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1afe7856d3c7d24936ab4aa74d750fcf0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_view_transfer_scissor</definition>
        <argsstring>(struct weston_view *from, struct weston_view *to)</argsstring>
        <name>weston_view_transfer_scissor</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1364" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1364" bodyend="1376"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a6d7bfa562732fc69bc391bc2d7adba0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void view_compute_bbox</definition>
        <argsstring>(struct weston_view *view, const pixman_box32_t *inbox, pixman_region32_t *bbox)</argsstring>
        <name>view_compute_bbox</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>const pixman_box32_t *</type>
          <declname>inbox</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1379" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1379" bodyend="1416"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3966855a76171e76ab98d2bd8794b5d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_view_update_transform_scissor</definition>
        <argsstring>(struct weston_view *view, pixman_region32_t *region)</argsstring>
        <name>weston_view_update_transform_scissor</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1419" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1419" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aed539db7d29e01bea9f9c1e6e3715a29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_view_update_transform_disable</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_update_transform_disable</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1438" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1438" bodyend="1477"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a41bf61c294ac21a6f96d3f39935d5104" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int weston_view_update_transform_enable</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_update_transform_enable</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1480" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1480" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8a613ccb6d7bc4a72867c81cef0a5c88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
        <definition>static struct weston_layer* get_view_layer</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>get_view_layer</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1536" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1536" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9605e8abe1240aa6cbe7abdd2fc7f2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_update_transform</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_update_transform</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1544" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1544" bodyend="1592"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_geometry_dirty</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_geometry_dirty</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1595" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1595" bodyend="1614"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a5567b014f0bf27bad49deebeb21df258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_to_global_fixed</definition>
        <argsstring>(struct weston_view *view, wl_fixed_t vx, wl_fixed_t vy, wl_fixed_t *x, wl_fixed_t *y)</argsstring>
        <name>weston_view_to_global_fixed</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1617" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1617" bodyend="1629"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a29e66a2344e0ea20637f84c0650ed90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_from_global_float</definition>
        <argsstring>(struct weston_view *view, float x, float y, float *vx, float *vy)</argsstring>
        <name>weston_view_from_global_float</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>vy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1632" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1632" bodyend="1655"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a4f40c4fe8494126d487f957034d73320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_from_global_fixed</definition>
        <argsstring>(struct weston_view *view, wl_fixed_t x, wl_fixed_t y, wl_fixed_t *vx, wl_fixed_t *vy)</argsstring>
        <name>weston_view_from_global_fixed</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>vy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1658" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1658" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a0e9c9a3eaa8a28e392585c3fc0a92c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_from_global</definition>
        <argsstring>(struct weston_view *view, int32_t x, int32_t y, int32_t *vx, int32_t *vy)</argsstring>
        <name>weston_view_from_global</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>vy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1673" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1673" bodyend="1681"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1c85f3f5502d6a8f4fed02cf23198ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_schedule_repaint</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_schedule_repaint</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to be repainted</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Marks the <ref refid="structoutput" kindref="compound">output(s)</ref> that the surface is shown on as needing to be repainted. See <ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1690" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1690" bodyend="1697"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a60b2b361cc447823985669f9743e8e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_schedule_repaint</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_schedule_repaint</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to be repainted</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Marks the <ref refid="structoutput" kindref="compound">output(s)</ref> that the view is shown on as needing to be repainted. See <ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1706" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1706" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a37abee2fc874d8a6394731696eb5be5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_damage</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_damage</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>XXX: This function does it the wrong way. </para>
        </briefdescription>
        <detaileddescription>
<para>surface-&gt;damage is the damage from the client, and causes <ref refid="compositor_8c_1a1a8cc3ae582c32975439217ea082b321" kindref="member">surface_flush_damage()</ref> to copy pixels. No window management action can cause damage to the client-provided content, warranting re-upload!</para>
<para>Instead of surface-&gt;damage, this function should record the damage with all the views for this surface to avoid extraneous texture uploads. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1726" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1726" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ae1df17820e004a35b62f4a923066e9fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_position</definition>
        <argsstring>(struct weston_view *view, float x, float y)</argsstring>
        <name>weston_view_set_position</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1736" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1736" bodyend="1744"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a19ed25f3efe3f373dcccd90251e05bc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void transform_parent_handle_parent_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>transform_parent_handle_parent_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1747" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1747" bodyend="1755"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7fe0cf860d67bd9ee79c561a95adb1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_transform_parent</definition>
        <argsstring>(struct weston_view *view, struct weston_view *parent)</argsstring>
        <name>weston_view_set_transform_parent</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1758" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1758" bodyend="1781"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8b2efecffa6f4d76ea628be8363723d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_mask</definition>
        <argsstring>(struct weston_view *view, int x, int y, int width, int height)</argsstring>
        <name>weston_view_set_mask</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set a clip mask rectangle on a view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to set the clip mask on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Top-left corner X coordinate of the clip rectangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Top-left corner Y coordinate of the clip rectangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the clip rectangle, non-negative. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the clip rectangle, non-negative.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
A shell may set a clip mask rectangle on a view. Everything outside the rectangle is cut away for input and output purposes: it is not drawn and cannot be hit by hit-test based input like pointer motion or touch-downs. Everything inside the rectangle will behave normally. Clients are unaware of clipping.</para>
<para>The rectangle is set in surface-local coordinates. Setting a clip mask rectangle does not affect the view position, the view is positioned as it would be without a clip. The clip also does not change <ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">weston_surface::width</ref>,height.</para>
<para>The clip mask rectangle is part of transformation inheritance (<ref refid="compositor_8c_1a7fe0cf860d67bd9ee79c561a95adb1d5" kindref="member">weston_view_set_transform_parent()</ref>). A clip set in the root of the transformation inheritance tree will affect all views in the tree. A clip can be set only on the root view. Attempting to set a clip on view that has a transformation parent will fail. Assigning a parent to a view that has a clip set will cause the clip to be forgotten.</para>
<para>Because the clip mask is an axis-aligned rectangle, it poses restrictions on the additional transformations in the child views. These transformations may not rotate the coordinate axes, i.e., only translation and scaling are allowed. Violating this restriction causes the clipping to malfunction. Furthermore, using scaling may cause rounding errors in child clipping.</para>
<para>The clip mask rectangle is not automatically adjusted based on wl_surface.attach dx and dy arguments.</para>
<para>A clip mask rectangle can be set only if the compositor capability WESTON_CAP_VIEW_CLIP_MASK is present.</para>
<para>This function sets the clip mask rectangle and schedules a repaint for the view. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1825" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1825" bodyend="1851"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7b5c79b554c9394f17b2d3a1fd7c5607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_mask_infinite</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_set_mask_infinite</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
<para>Remove the clip mask from a view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to remove the clip mask from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Removed the clip mask rectangle and schedules a repaint.</para>
<para><simplesect kind="see"><para><ref refid="compositor_8c_1a8b2efecffa6f4d76ea628be8363723d1" kindref="member">weston_view_set_mask</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1862" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1862" bodyend="1867"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab6d0b425ed3ea36224d7fe3f3c5d4667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_view_is_mapped</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_is_mapped</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1879" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1879" bodyend="1882"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aed7c9bb67356401511a6503c3ad79fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_view_is_opaque</definition>
        <argsstring>(struct weston_view *ev, pixman_region32_t *region)</argsstring>
        <name>weston_view_is_opaque</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1894" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1894" bodyend="1917"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9f7bccb7057b651aefb9a0c6726afefb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_view_has_valid_buffer</definition>
        <argsstring>(struct weston_view *ev)</argsstring>
        <name>weston_view_has_valid_buffer</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
<para>Check if the view has a valid buffer available. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ev</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to check if it has a valid buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Returns true if the view has a valid buffer or false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1926" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1926" bodyend="1929"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1acf5cce4094634e7b4bca357181e7cdcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_view_matches_output_entirely</definition>
        <argsstring>(struct weston_view *ev, struct weston_output *output)</argsstring>
        <name>weston_view_matches_output_entirely</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Check if the view matches the entire output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ev</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to check against.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Returns true if the view does indeed matches the entire output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1939" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1939" bodyend="1952"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_surface_is_mapped</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_is_mapped</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1965" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1965" bodyend="1968"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ae414372c58d7d4d3cda6836f10f7297b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_set_size</definition>
        <argsstring>(struct weston_surface *surface, int32_t width, int32_t height)</argsstring>
        <name>surface_set_size</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1971" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1971" bodyend="1983"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab9e73efa632b2b2aa47c1b460f08e16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_set_size</definition>
        <argsstring>(struct weston_surface *surface, int32_t width, int32_t height)</argsstring>
        <name>weston_surface_set_size</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1986" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1986" bodyend="1991"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a716350c40cfa4dbdaf261c189db93fd2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fixed_round_up_to_int</definition>
        <argsstring>(wl_fixed_t f)</argsstring>
        <name>fixed_round_up_to_int</name>
        <param>
          <type>wl_fixed_t</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="1994" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1994" bodyend="1997"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ac34fa0eb65307332b99b81459efb8996" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void convert_size_by_transform_scale</definition>
        <argsstring>(int32_t *width_out, int32_t *height_out, int32_t width, int32_t height, uint32_t transform, int32_t scale)</argsstring>
        <name>convert_size_by_transform_scale</name>
        <param>
          <type>int32_t *</type>
          <declname>width_out</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>height_out</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2000" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2000" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a849ce542b155c49dca402c5409cc949c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_calculate_size_from_buffer</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_calculate_size_from_buffer</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2028" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2028" bodyend="2044"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a6ac26db8811de30a2d615fba193bc8d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_update_size</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_update_size</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2047" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2047" bodyend="2070"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga8e5847024d92d76171a144d15c5452da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_get_time</definition>
        <argsstring>(struct timespec *time)</argsstring>
        <name>weston_compositor_get_time</name>
        <param>
          <type>struct timespec *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>weston_compositor_get_time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2076" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2076" bodyend="2079"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
        <definition>struct weston_view* weston_compositor_pick_view</definition>
        <argsstring>(struct weston_compositor *compositor, wl_fixed_t x, wl_fixed_t y, wl_fixed_t *vx, wl_fixed_t *vy)</argsstring>
        <name>weston_compositor_pick_view</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>vy</declname>
        </param>
        <briefdescription>
<para>weston_compositor_pick_view </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2085" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2085" bodyend="2121"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a2dda573c5d07d16bb4ea3d12552fe684" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_repick</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_repick</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2124" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2124" bodyend="2133"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1af34d4b676e7ce4e41a963cd0b41c6dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_unmap</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_unmap</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2136" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2136" bodyend="2169"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a80d606617df1553ec673787ebcfa2ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_unmap</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_unmap</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2172" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2172" bodyend="2180"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a08352bf4c20b0f27d456a674c9b5db50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_reset_pending_buffer</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_reset_pending_buffer</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2183" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2183" bodyend="2190"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3b0df14d913003992656e8f791a6da9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_destroy</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_destroy</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2193" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2193" bodyend="2218"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aa8175b2c6f8cd4cc3f3f6006ecf7acb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_destroy</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_destroy</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2221" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2221" bodyend="2262"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aa12406a4681fa5f9c5b124f3c2ebacc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_surface</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_surface</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2265" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2265" bodyend="2285"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aa90b197708859ed4f2848c93210108e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_buffer_destroy_handler</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>weston_buffer_destroy_handler</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2288" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2288" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a31d4c4886f3f3d7e363a732225462faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
        <definition>struct weston_buffer* weston_buffer_from_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>weston_buffer_from_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2298" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2298" bodyend="2321"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1afc11707445de683f8f5a17a50efaf6b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_buffer_reference_handle_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>weston_buffer_reference_handle_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2324" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2324" bodyend="2333"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a46c9d30efa62b7ca5f720b1dd83ebe12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_buffer_reference</definition>
        <argsstring>(struct weston_buffer_reference *ref, struct weston_buffer *buffer)</argsstring>
        <name>weston_buffer_reference</name>
        <param>
          <type>struct <ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2336" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2336" bodyend="2356"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3e33e031d0a5d63c152fd4df34fecabc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_buffer_release_reference_handle_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>weston_buffer_release_reference_handle_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2359" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2359" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ae1b6b031617a5c703532f54ac2b5b10c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_buffer_release_destroy</definition>
        <argsstring>(struct weston_buffer_release *buffer_release)</argsstring>
        <name>weston_buffer_release_destroy</name>
        <param>
          <type>struct <ref refid="structweston__buffer__release" kindref="compound">weston_buffer_release</ref> *</type>
          <declname>buffer_release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2371" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2371" bodyend="2385"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a0abe1ac1aff541e5670f35fb2db85c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_buffer_release_reference</definition>
        <argsstring>(struct weston_buffer_release_reference *ref, struct weston_buffer_release *buffer_release)</argsstring>
        <name>weston_buffer_release_reference</name>
        <param>
          <type>struct <ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer__release" kindref="compound">weston_buffer_release</ref> *</type>
          <declname>buffer_release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2388" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2388" bodyend="2410"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a23af340f7ae575bb87d66816c0e0ebdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_buffer_release_move</definition>
        <argsstring>(struct weston_buffer_release_reference *dest, struct weston_buffer_release_reference *src)</argsstring>
        <name>weston_buffer_release_move</name>
        <param>
          <type>struct <ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2413" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2413" bodyend="2418"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9db6a27b0a2d68a347640c0d65e13896" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_attach</definition>
        <argsstring>(struct weston_surface *surface, struct weston_buffer *buffer)</argsstring>
        <name>weston_surface_attach</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2421" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2421" bodyend="2435"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga674d4dd1642c36ca73a7ddc246a4b411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_damage_all</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_damage_all</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>weston_compositor_damage_all </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2441" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2441" bodyend="2447"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gab45be972c9a7bf6c86c6ca8db03034f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_damage</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_damage</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2453" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2453" bodyend="2461"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1a8cc3ae582c32975439217ea082b321" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_flush_damage</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>surface_flush_damage</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2464" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2464" bodyend="2475"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1acb03c4841e0548b73c4c656ba2e497cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void view_accumulate_damage</definition>
        <argsstring>(struct weston_view *view, pixman_region32_t *opaque)</argsstring>
        <name>view_accumulate_damage</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>opaque</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2478" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2478" bodyend="2503"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a6ba21689267a8c556a22e62d862a3dbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_accumulate_damage</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>output_accumulate_damage</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2506" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2506" bodyend="2560"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a092f0ef14e5e1724842a8e715958cec1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_stash_subsurface_views</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>surface_stash_subsurface_views</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2563" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2563" bodyend="2576"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1c9ba96123930d7ece3568bb1af09df5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_free_unused_subsurface_views</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>surface_free_unused_subsurface_views</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2579" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2579" bodyend="2595"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9e4901372e3d7fc89f4ede3f1e79f9cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void view_list_add_subsurface_view</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_subsurface *sub, struct weston_view *parent)</argsstring>
        <name>view_list_add_subsurface_view</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2598" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2598" bodyend="2642"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ac0185a13039a19aeb8a792569edea2e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void view_list_add</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_view *view)</argsstring>
        <name>view_list_add</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2651" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2651" bodyend="2669"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a999dfbb20f771e6ed9c9410c2cb94aca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_output_take_feedback_list</definition>
        <argsstring>(struct weston_output *output, struct weston_surface *surface)</argsstring>
        <name>weston_output_take_feedback_list</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2697" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2697" bodyend="2719"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a2867191b08eb96f9f930169435b3fc91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int weston_output_repaint</definition>
        <argsstring>(struct weston_output *output, void *repaint_data)</argsstring>
        <name>weston_output_repaint</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>repaint_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2722" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2722" bodyend="2818"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8d755040e2f527edf3a8e58103a869f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_output_schedule_repaint_reset</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_schedule_repaint_reset</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2821" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2821" bodyend="2826"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ac7c1af243e29d2397f591a16b9989a80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int weston_output_maybe_repaint</definition>
        <argsstring>(struct weston_output *output, struct timespec *now, void *repaint_data)</argsstring>
        <name>weston_output_maybe_repaint</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct timespec *</type>
          <declname>now</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>repaint_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2829" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2829" bodyend="2871"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a74b7a85b9664e8c61dcaf16efeac7c18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_repaint_timer_arm</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>output_repaint_timer_arm</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2874" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2874" bodyend="2910"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1acc76702d769aa1e1bffb35feded7fdd4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int output_repaint_timer_handler</definition>
        <argsstring>(void *data)</argsstring>
        <name>output_repaint_timer_handler</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2913" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2913" bodyend="2956"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ae796c3933dd7408dbd276248cc2f585f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct timespec</type>
        <definition>static struct timespec convert_presentation_time_now</definition>
        <argsstring>(struct weston_compositor *compositor, const struct timespec *presentation_stamp, const struct timespec *presentation_now, clockid_t target_clock)</argsstring>
        <name>convert_presentation_time_now</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>presentation_stamp</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>presentation_now</declname>
        </param>
        <param>
          <type>clockid_t</type>
          <declname>target_clock</declname>
        </param>
        <briefdescription>
<para>Convert a presentation timestamp to another clock domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor defines the presentation clock domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>presentation_stamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp in presentation clock domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>presentation_now</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time in presentation clock domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_clock</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines the target clock domain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This approximation relies on presentation_stamp to be close to current time. The further it is from current time and the bigger the speed difference between the two clock domains, the bigger the conversion error.</para>
<para>Conversion error due to system load is biased and unbounded. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2913" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2972" bodyend="2989"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga0f26c6ea66cf6683814ed60baf2a04c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_finish_frame</definition>
        <argsstring>(struct weston_output *output, const struct timespec *stamp, uint32_t presented_flags)</argsstring>
        <name>weston_output_finish_frame</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>stamp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>presented_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="2995" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2995" bodyend="3064"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1acf4bda3e3d5108f93f239e4631ef3d23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idle_repaint</definition>
        <argsstring>(void *data)</argsstring>
        <name>idle_repaint</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3067" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3067" bodyend="3078"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1adcf675a1f1ac2cea92e8ca52900b89c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_entry_insert</definition>
        <argsstring>(struct weston_layer_entry *list, struct weston_layer_entry *entry)</argsstring>
        <name>weston_layer_entry_insert</name>
        <param>
          <type>struct <ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3081" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3081" bodyend="3086"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a30169d037f8e3aa397fb354f9ee3f5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_entry_remove</definition>
        <argsstring>(struct weston_layer_entry *entry)</argsstring>
        <name>weston_layer_entry_remove</name>
        <param>
          <type>struct <ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3089" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3089" bodyend="3094"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab4294fb27b3079ee70660a0975d3e0e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_init</definition>
        <argsstring>(struct weston_layer *layer, struct weston_compositor *compositor)</argsstring>
        <name>weston_layer_init</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="structweston__layer" kindref="compound">weston_layer</ref> struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>The layer to initialize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3103" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3103" bodyend="3111"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a736341961367a84eac0b635b94eefc61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_set_position</definition>
        <argsstring>(struct weston_layer *layer, enum weston_layer_position position)</argsstring>
        <name>weston_layer_set_position</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5c" kindref="member">weston_layer_position</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Sets the position of the layer in the layer list. </para>
        </briefdescription>
        <detaileddescription>
<para>The layer will be placed below any layer with the same position value, if any. This function is safe to call if the layer is already on the list, but the layer may be moved below other layers at the same position, if any.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>The layer to modify </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position the layer will be placed at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3122" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3122" bodyend="3140"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aeea455f7de4acc7dda325e8dda148caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_unset_position</definition>
        <argsstring>(struct weston_layer *layer)</argsstring>
        <name>weston_layer_unset_position</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Hide a layer by taking it off the layer list. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is safe to call if the layer is not on the list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>The layer to hide </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3148" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3148" bodyend="3152"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3bad282ec84d83635ede2e78f0861f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_set_mask</definition>
        <argsstring>(struct weston_layer *layer, int x, int y, int width, int height)</argsstring>
        <name>weston_layer_set_mask</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3155" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3155" bodyend="3168"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aa94f16fd96514709edcd9b4a0163378c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_set_mask_infinite</definition>
        <argsstring>(struct weston_layer *layer)</argsstring>
        <name>weston_layer_set_mask_infinite</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3171" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3171" bodyend="3183"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aa3710db18821fd6bb0226c49e22de3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_layer_mask_is_infinite</definition>
        <argsstring>(struct weston_layer *layer)</argsstring>
        <name>weston_layer_mask_is_infinite</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3186" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3186" bodyend="3192"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga0464b27eac6a50ce14d0db08958e9489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_schedule_repaint</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_schedule_repaint</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3198" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3198" bodyend="3225"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga8477eedbbb0660db00b0c1be93c913db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_schedule_repaint</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_schedule_repaint</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>weston_compositor_schedule_repaint </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3231" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3231" bodyend="3237"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a5a0d1ef05488f5cda9db52851384fd3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>surface_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3240" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3240" bodyend="3243"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ac8ce9129dec4b98443594b1530e74850" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_attach</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *buffer_resource, int32_t sx, int32_t sy)</argsstring>
        <name>surface_attach</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>buffer_resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3246" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3246" bodyend="3268"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a917d497af6f3b46cff8b8e945788c467" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_damage</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int32_t x, int32_t y, int32_t width, int32_t height)</argsstring>
        <name>surface_damage</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3271" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3271" bodyend="3283"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7944a85d6240001e4a6d6a28c2095e1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_damage_buffer</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int32_t x, int32_t y, int32_t width, int32_t height)</argsstring>
        <name>surface_damage_buffer</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3286" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3286" bodyend="3298"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1af9c12b9946237a2be9cdef08b4c35a6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_frame_callback</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_frame_callback</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3301" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3301" bodyend="3307"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a912761f200744a8f0573d81b54b90567" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_frame</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t callback)</argsstring>
        <name>surface_frame</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3310" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3310" bodyend="3334"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1abc6fd4a4b0ba02c3d33c4460e83448d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_set_opaque_region</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *region_resource)</argsstring>
        <name>surface_set_opaque_region</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>region_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3337" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3337" bodyend="3351"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a0aa233677ade41ddddb66e3c2d3abac6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_set_input_region</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *region_resource)</argsstring>
        <name>surface_set_input_region</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>region_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3354" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3354" bodyend="3369"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a411b1a124400a8cb7c32743969d392fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_damage_subsurfaces</definition>
        <argsstring>(struct weston_subsurface *sub)</argsstring>
        <name>weston_surface_damage_subsurfaces</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3377" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3377" bodyend="3387"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a20cee2086988cfd1aa0b14a3193d152e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_commit_subsurface_order</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_commit_subsurface_order</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3390" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3390" bodyend="3402"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a2c7580fd16e1524e7a78e0a7da90df65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_build_buffer_matrix</definition>
        <argsstring>(const struct weston_surface *surface, struct weston_matrix *matrix)</argsstring>
        <name>weston_surface_build_buffer_matrix</name>
        <param>
          <type>const struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__matrix" kindref="compound">weston_matrix</ref> *</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3405" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3405" bodyend="3478"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ae8dd0a644496b82ef4bf964a31ef4912" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool fixed_sum_gt</definition>
        <argsstring>(wl_fixed_t a, wl_fixed_t b, wl_fixed_t c)</argsstring>
        <name>fixed_sum_gt</name>
        <param>
          <type>wl_fixed_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Compute a + b &gt; c while being safe to overflows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3484" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3484" bodyend="3487"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a432a707b8a97876547d05d64b3354202" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool weston_surface_is_pending_viewport_source_valid</definition>
        <argsstring>(const struct weston_surface *surface)</argsstring>
        <name>weston_surface_is_pending_viewport_source_valid</name>
        <param>
          <type>const struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3490" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3490" bodyend="3543"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ad01b7a89f9a4c724b06e9f1a1f05fb36" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool fixed_is_integer</definition>
        <argsstring>(wl_fixed_t v)</argsstring>
        <name>fixed_is_integer</name>
        <param>
          <type>wl_fixed_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3546" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3546" bodyend="3549"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab239fc2e3bf80e7cd50225e989c1a19c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool weston_surface_is_pending_viewport_dst_size_int</definition>
        <argsstring>(const struct weston_surface *surface)</argsstring>
        <name>weston_surface_is_pending_viewport_dst_size_int</name>
        <param>
          <type>const struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3552" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3552" bodyend="3565"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7f9ab53322e7c4360d112df3a38bd4f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void apply_damage_buffer</definition>
        <argsstring>(pixman_region32_t *dest, struct weston_surface *surface, struct weston_surface_state *state)</argsstring>
        <name>apply_damage_buffer</name>
        <param>
          <type>pixman_region32_t *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3572" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3572" bodyend="3599"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab082e54ee88811e676e3e932e2820da4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_set_desired_protection</definition>
        <argsstring>(struct weston_surface *surface, enum weston_hdcp_protection protection)</argsstring>
        <name>weston_surface_set_desired_protection</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref></type>
          <declname>protection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3602" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3602" bodyend="3609"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aed71d5b5c095ee7fc682f0d3429206b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_set_protection_mode</definition>
        <argsstring>(struct weston_surface *surface, enum weston_surface_protection_mode p_mode)</argsstring>
        <name>weston_surface_set_protection_mode</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208" kindref="member">weston_surface_protection_mode</ref></type>
          <declname>p_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3612" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3612" bodyend="3625"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ad420490981468499323960dbd05bf335" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_commit_state</definition>
        <argsstring>(struct weston_surface *surface, struct weston_surface_state *state)</argsstring>
        <name>weston_surface_commit_state</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3628" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3628" bodyend="3725"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7281214dbf2a86a822ae3365f2523296" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_surface_commit</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_commit</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3728" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3728" bodyend="3735"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a5af8c47c66e28f6b48930c21947c2449" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_commit</definition>
        <argsstring>(struct weston_subsurface *sub)</argsstring>
        <name>weston_subsurface_commit</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4073" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4073" bodyend="4095" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="3738" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a531fdc54e36e70d1837deea4cda0b8f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_parent_commit</definition>
        <argsstring>(struct weston_subsurface *sub, int parent_is_synchronized)</argsstring>
        <name>weston_subsurface_parent_commit</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parent_is_synchronized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4119" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4119" bodyend="4134" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="3741" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a5ec3b2813076e104865ea284bc42ec43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_commit</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>surface_commit</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3745" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3745" bodyend="3821"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aeb511e6b049fc0a49ae4924c963c7579" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_set_buffer_transform</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int transform)</argsstring>
        <name>surface_set_buffer_transform</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3824" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3824" bodyend="3841"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a92648370f41ad171aa68e2a6f1520b5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_set_buffer_scale</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int32_t scale)</argsstring>
        <name>surface_set_buffer_scale</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3844" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3844" bodyend="3860"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a5b8dd407ac0c279b1c696563ebf3690b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compositor_create_surface</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id)</argsstring>
        <name>compositor_create_surface</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3876" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3876" bodyend="3900"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aa81b1bfad86911e3fd69ef1335a1621c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_region</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_region</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3903" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3903" bodyend="3909"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a0e1f8e67c4a1f114a7a876c6c0efdfad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void region_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>region_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3912" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3912" bodyend="3915"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ad29282af488305858933033bce359267" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void region_add</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int32_t x, int32_t y, int32_t width, int32_t height)</argsstring>
        <name>region_add</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3918" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3918" bodyend="3925"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1af03567984ff8cd0573c50fb1141500af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void region_subtract</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int32_t x, int32_t y, int32_t width, int32_t height)</argsstring>
        <name>region_subtract</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3928" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3928" bodyend="3937"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a33f445c7eec125220a7659c5338d0ba6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compositor_create_region</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id)</argsstring>
        <name>compositor_create_region</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3946" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3946" bodyend="3968"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9f0d2063744a806235268b9adb2d93d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_commit_from_cache</definition>
        <argsstring>(struct weston_subsurface *sub)</argsstring>
        <name>weston_subsurface_commit_from_cache</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3976" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3976" bodyend="3988"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a28c45634b3c0827f4f9b1def8ae64a6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_commit_to_cache</definition>
        <argsstring>(struct weston_subsurface *sub)</argsstring>
        <name>weston_subsurface_commit_to_cache</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="3991" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3991" bodyend="4054"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a85761db04b1070b833ecddedd45aecfe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool weston_subsurface_is_synchronized</definition>
        <argsstring>(struct weston_subsurface *sub)</argsstring>
        <name>weston_subsurface_is_synchronized</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4057" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4057" bodyend="4070"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a49d0e26e11bad0d3cad50a1931c6773c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_synchronized_commit</definition>
        <argsstring>(struct weston_subsurface *sub)</argsstring>
        <name>weston_subsurface_synchronized_commit</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4098" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4098" bodyend="4116"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1b51a4a75ae0b401248907493275a06a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int subsurface_get_label</definition>
        <argsstring>(struct weston_surface *surface, char *buf, size_t len)</argsstring>
        <name>subsurface_get_label</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4137" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4137" bodyend="4140"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1afb1ab3e1f12ba225f738e88dad91eafa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_committed</definition>
        <argsstring>(struct weston_surface *surface, int32_t dx, int32_t dy)</argsstring>
        <name>subsurface_committed</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4143" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4143" bodyend="4172"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8868325c450a7c04cd3e1cfec22b7104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
        <definition>struct weston_surface* weston_surface_get_main_surface</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_get_main_surface</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4184" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4184" bodyend="4192"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a77ddbc1401698987792d00d6e7e3407d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_surface_set_role</definition>
        <argsstring>(struct weston_surface *surface, const char *role_name, struct wl_resource *error_resource, uint32_t error_code)</argsstring>
        <name>weston_surface_set_role</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>role_name</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>error_resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4195" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4195" bodyend="4217"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a0ece5eb3f051d927072a77f531cd2a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* weston_surface_get_role</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_get_role</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4220" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4220" bodyend="4223"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a15415df8115e81631c8dae987b7ef40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_set_label_func</definition>
        <argsstring>(struct weston_surface *surface, int(*desc)(struct weston_surface *, char *, size_t))</argsstring>
        <name>weston_surface_set_label_func</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int(*)(struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *, char *, size_t)</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4226" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4226" bodyend="4233"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1af05cf4ebc640cb40915253335538b4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_get_content_size</definition>
        <argsstring>(struct weston_surface *surface, int *width, int *height)</argsstring>
        <name>weston_surface_get_content_size</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Get the size of surface contents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the width of raw contents. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the height of raw contents.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Retrieves the raw surface content size in pixels for the given surface. This is the whole content size in buffer pixels. If the surface has no content or the renderer does not implement this feature, zeroes are returned.</para>
<para>This function is used to determine the buffer size needed for a <ref refid="compositor_8c_1a353f17fe827e1c25b87e7e964e8d9892" kindref="member">weston_surface_copy_content()</ref> call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4250" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4250" bodyend="4262"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a4a639f0bac3d1fb3f0c464ea0e6f79e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__geometry" kindref="compound">weston_geometry</ref></type>
        <definition>struct weston_geometry weston_surface_get_bounding_box</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_get_bounding_box</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>Get the bounding box of a surface and its subsurfaces. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The bounding box relative to the surface origin. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4250" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4271" bodyend="4299"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a353f17fe827e1c25b87e7e964e8d9892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_surface_copy_content</definition>
        <argsstring>(struct weston_surface *surface, void *target, size_t size, int src_x, int src_y, int width, int height)</argsstring>
        <name>weston_surface_copy_content</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Copy surface contents to system memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to copy from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the target memory buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the target buffer in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_x</parametername>
</parameternamelist>
<parameterdescription>
<para>X location on contents to copy from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y location on contents to copy from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width in pixels of the area to copy. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height in pixels of the area to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success, -1 for failure.</para>
</simplesect>
Surface contents are maintained by the renderer. They can be in a reserved <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> or as a copy, e.g. a GL texture, or something else.</para>
<para>Surface contents are copied into memory pointed to by target, which has size bytes of space available. The target memory may be larger than needed, but being smaller returns an error. The extra bytes in target may or may not be written; their content is unspecified. Size must be large enough to hold the image.</para>
<para>The image in the target memory will be arranged in rows from top to bottom, and pixels on a row from left to right. The pixel format is PIXMAN_a8b8g8r8, 4 bytes per pixel, and stride is exactly width * 4.</para>
<para>Parameters src_x and src_y define the upper-left corner in buffer coordinates (pixels) to copy from. Parameters width and height define the size of the area to copy in pixels.</para>
<para>The rectangle defined by src_x, src_y, width, height must fit in the surface contents. Otherwise an error is returned.</para>
<para>Use weston_surface_get_content_size to determine the content size; the needed target buffer size and rectangle limits.</para>
<para>CURRENT IMPLEMENTATION RESTRICTIONS:<itemizedlist>
<listitem><para>the machine must be little-endian due to Pixman formats.</para>
</listitem></itemizedlist>
</para>
<para>NOTE: Pixman formats are premultiplied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4343" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4343" bodyend="4371"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a0e10bc8d2d20e78143885c1599042d56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_set_position</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int32_t x, int32_t y)</argsstring>
        <name>subsurface_set_position</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4374" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4374" bodyend="4385"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a252fb05c3938d932cc7433c6bd8d33f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
        <definition>static struct weston_subsurface* subsurface_find_sibling</definition>
        <argsstring>(struct weston_subsurface *sub, struct weston_surface *surface)</argsstring>
        <name>subsurface_find_sibling</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4388" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4388" bodyend="4400"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a98bd70f506eda7d4a47290c1fa57564a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
        <definition>static struct weston_subsurface* subsurface_sibling_check</definition>
        <argsstring>(struct weston_subsurface *sub, struct weston_surface *surface, const char *request)</argsstring>
        <name>subsurface_sibling_check</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4403" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4403" bodyend="4421"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a64e1434908dd85ef1717819989240c83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_place_above</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *sibling_resource)</argsstring>
        <name>subsurface_place_above</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>sibling_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4424" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4424" bodyend="4445"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7b32361590a91215ce7c0f9fa2e1a440" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_place_below</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *sibling_resource)</argsstring>
        <name>subsurface_place_below</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>sibling_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4448" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4448" bodyend="4469"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab74225d716446e5743e6f01d364b1224" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_set_sync</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>subsurface_set_sync</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4472" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4472" bodyend="4478"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1adcb4bc5ecd26b791655f2522edc15fdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_set_desync</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>subsurface_set_desync</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4481" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4481" bodyend="4492"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a18e348e2a4a8ba61593acb2ac2b55d99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_unlink_parent</definition>
        <argsstring>(struct weston_subsurface *sub)</argsstring>
        <name>weston_subsurface_unlink_parent</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4495" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4495" bodyend="4501"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aabe0b5dbc4ede8ba5ee5512700e29280" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_destroy</definition>
        <argsstring>(struct weston_subsurface *sub)</argsstring>
        <name>weston_subsurface_destroy</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4577" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4577" bodyend="4611" declfile="/home/lzm/Wayland/weston/libweston/compositor.c" declline="4504" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8faf846f7827d029521b1b56e2e42753" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_handle_surface_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>subsurface_handle_surface_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4507" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4507" bodyend="4519"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a408f361bce4435744da760f988151e8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_handle_parent_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>subsurface_handle_parent_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4522" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4522" bodyend="4534"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ad1f7477e1113a6f6f4890cd82bbaf0bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_resource_destroy</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>subsurface_resource_destroy</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4537" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4537" bodyend="4543"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a594ac6116fb205e27731b270a2833c9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subsurface_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>subsurface_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4546" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4546" bodyend="4549"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9331354bd8e5e7e63055d107ac24fbf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_link_parent</definition>
        <argsstring>(struct weston_subsurface *sub, struct weston_surface *parent)</argsstring>
        <name>weston_subsurface_link_parent</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4552" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4552" bodyend="4563"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a705baeb759c43d415fb583237c4099d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_subsurface_link_surface</definition>
        <argsstring>(struct weston_subsurface *sub, struct weston_surface *surface)</argsstring>
        <name>weston_subsurface_link_surface</name>
        <param>
          <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4566" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4566" bodyend="4574"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aba7e8f914e858130b418607d6ba0e927" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
        <definition>static struct weston_subsurface* weston_subsurface_create</definition>
        <argsstring>(uint32_t id, struct weston_surface *surface, struct weston_surface *parent)</argsstring>
        <name>weston_subsurface_create</name>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4623" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4623" bodyend="4652"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a24be0342da422ccfb092a615cc34f8a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref> *</type>
        <definition>static struct weston_subsurface* weston_subsurface_create_for_parent</definition>
        <argsstring>(struct weston_surface *parent)</argsstring>
        <name>weston_subsurface_create_for_parent</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4658" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4658" bodyend="4673"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a482ff084752a55a1452da0dd635847a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subcompositor_get_subsurface</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, struct wl_resource *surface_resource, struct wl_resource *parent_resource)</argsstring>
        <name>subcompositor_get_subsurface</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>parent_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4676" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4676" bodyend="4734"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a57855c7af38a10c0d2b79e38eca07029" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void subcompositor_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>subcompositor_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4737" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4737" bodyend="4740"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab8fded79b16d0a14a2b21cd8dfeb5901" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_subcompositor</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_subcompositor</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4748" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4748" bodyend="4762"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7d36f815ecf064d9757684440667d74b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_dpms</definition>
        <argsstring>(struct weston_compositor *compositor, enum dpms_enum state)</argsstring>
        <name>weston_compositor_dpms</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3" kindref="member">dpms_enum</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set a DPMS mode on all of the compositor&apos;s outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The DPMS state the outputs will be set to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4770" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4770" bodyend="4778"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_wake</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_wake</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Restores the compositor to active status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If the compositor was in a sleeping mode, all outputs are powered back on via DPMS. Otherwise if the compositor was inactive (idle/locked, offscreen, or sleeping) then the compositor&apos;s wake signal will fire.</para>
<para>Restarts the idle timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4793" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4793" bodyend="4813"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gabbeb356dd9688004330df598b514a27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_offscreen</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_offscreen</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Turns off rendering and frame events for the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This is used for example to prevent further rendering while the compositor is shutting down.</para>
<para>Stops the idle timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4827" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4827" bodyend="4837"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga0d01f39e15e169b13384be82bb05370d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_sleep</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_sleep</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Powers down all attached output devices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Causes rendering to the outputs to cease, and no frame events to be sent. Only powers down the outputs if the compositor is not already in sleep mode.</para>
<para>Stops the idle timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4852" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4852" bodyend="4860"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aaa64c25507c0562733cb9a0204c41fdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int idle_handler</definition>
        <argsstring>(void *data)</argsstring>
        <name>idle_handler</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Sets compositor to idle mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This is called when the idle timer fires. Once the compositor is in idle mode it requires a wake action (e.g. via <ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake()</ref>) to restore it. The compositor&apos;s idle_signal will be triggered when the idle event occurs.</para>
<para>Idleness can be inhibited by setting the compositor&apos;s idle_inhibit property. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4875" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4875" bodyend="4886"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab52c880548e2277a5d370b343d782cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_plane_init</definition>
        <argsstring>(struct weston_plane *plane, struct weston_compositor *ec, int32_t x, int32_t y)</argsstring>
        <name>weston_plane_init</name>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4889" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4889" bodyend="4902"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1afdee68639f6f9af1a195ee4892afcce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_plane_release</definition>
        <argsstring>(struct weston_plane *plane)</argsstring>
        <name>weston_plane_release</name>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4905" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4905" bodyend="4918"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gac0da9a90074155e609e2f5845cbf25fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_stack_plane</definition>
        <argsstring>(struct weston_compositor *ec, struct weston_plane *plane, struct weston_plane *above)</argsstring>
        <name>weston_compositor_stack_plane</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>above</declname>
        </param>
        <briefdescription>
<para>weston_compositor_stack_plane </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4924" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4924" bodyend="4932"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ac0cb28d2d906827fe74fd564f5d295c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_release</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>output_release</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4935" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4935" bodyend="4938"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1abc7611c7625fe7037be956da53b4104f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void unbind_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>unbind_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4945" column="13" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4945" bodyend="4948"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1671db7d67d73ce968cb2d6c5dc602e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_output</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_output</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4951" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4951" bodyend="4993"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a0040a314b962fe31b3713f756aef192a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_head_add_global</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_add_global</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="4996" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4996" bodyend="5001"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a6c9611470b87c980708d481413c3e2ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_head_remove_global</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_remove_global</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Remove the global wl_output protocol object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head whose global to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Also orphans the wl_resources for this head (wl_output). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5010" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5010" bodyend="5031"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga09a7ecebc209197f9691e09a4c8a3c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
        <definition>struct weston_head* weston_head_from_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>weston_head_from_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Get the backing object of wl_output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>A wl_output protocol object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The backing object (user data) of a wl_resource representing a wl_output protocol object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5042" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5042" bodyend="5048"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gab458db3cc734c39f07222a72cfca7bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_init</definition>
        <argsstring>(struct weston_head *head, const char *name)</argsstring>
        <name>weston_head_init</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Initialize a pre-allocated <ref refid="structweston__head" kindref="compound">weston_head</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to initialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The head name, e.g. the connector name or equivalent.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The head will be safe to attach, detach and release.</para>
<para>The name is used in logs, and can be used by compositors as a configuration identifier. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5064" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5064" bodyend="5078"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gac664a86e8af03efbb0bcdd7795941826" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_output_emit_heads_changed</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_emit_heads_changed</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Send output heads changed signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output that changed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Notify that the enabled output gained and/or lost heads, or that the associated heads may have changed their connection status. This does not include cases where the output becomes enabled or disabled. The registered callbacks are called after the change has successfully happened.</para>
<para>If connection status change causes the compositor to attach or detach a head to an enabled output, the registered callbacks may be called multiple times. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5095" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5095" bodyend="5099"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a87485b6d14e938f80a345fc5190d017d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_call_heads_changed</definition>
        <argsstring>(void *data)</argsstring>
        <name>weston_compositor_call_heads_changed</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Idle task for emitting heads_changed_signal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5103" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5103" bodyend="5116"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gae456afce819647679741443d15cd82cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_schedule_heads_changed</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_schedule_heads_changed</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Schedule a call on idle to heads_changed callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The Compositor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5126" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5126" bodyend="5136"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga9cc453a480c9083e2b15d974f0c9d61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_add_head</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_head *head)</argsstring>
        <name>weston_compositor_add_head</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Register a new head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to register, must not be already registered.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This signals the core that a new head has become available, leading to heads_changed hook being called later. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5150" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5150" bodyend="5159"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaaf5629bbdce30062a548444c7df59205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_add_heads_changed_listener</definition>
        <argsstring>(struct weston_compositor *compositor, struct wl_listener *listener)</argsstring>
        <name>weston_compositor_add_heads_changed_listener</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Adds a listener to be called when heads change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The listener notify function argument is <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref>.</para>
<para>The listener function will be called after heads are added or their connection status has changed. Several changes may be accumulated into a single call. The user is expected to iterate over the existing heads and check their statuses to find out what changed.</para>
<para><simplesect kind="see"><para><ref refid="group__compositor_1ga23fa98d05ed6886179c337931ae8a407" kindref="member">weston_compositor_iterate_heads</ref>, <ref refid="group__head_1gad0da27f9a2e98faf8aecf84704935440" kindref="member">weston_head_is_connected</ref>, <ref refid="group__head_1ga8d49a887b440265b363a5075fefff343" kindref="member">weston_head_is_enabled</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5178" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5178" bodyend="5182"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga23fa98d05ed6886179c337931ae8a407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
        <definition>struct weston_head* weston_compositor_iterate_heads</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_head *iter)</argsstring>
        <name>weston_compositor_iterate_heads</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Iterate over available heads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator, or NULL for start. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next available head in the list.</para>
</simplesect>
Returns all available heads, regardless of being connected or enabled.</para>
<para>You can iterate over all heads as follows: <programlisting><codeline><highlight class="normal">struct<sp/>weston_head<sp/>*head<sp/>=<sp/>NULL;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">while<sp/>((head<sp/>=<sp/>weston_compositor_iterate_heads(compositor,<sp/>head)))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If you cause <computeroutput>iter</computeroutput> to be removed from the list, you cannot use it to continue iterating. Removing any other item is safe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5207" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5207" bodyend="5228"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaabbac16a3b4715c19d3f69b521e89750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
        <definition>struct weston_head* weston_output_iterate_heads</definition>
        <argsstring>(struct weston_output *output, struct weston_head *iter)</argsstring>
        <name>weston_output_iterate_heads</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Iterate over attached heads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output whose heads to iterate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator, or NULL for start. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next attached head in the list.</para>
</simplesect>
Returns all heads currently attached to the output.</para>
<para>You can iterate over all heads as follows: <programlisting><codeline><highlight class="normal">struct<sp/>weston_head<sp/>*head<sp/>=<sp/>NULL;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">while<sp/>((head<sp/>=<sp/>weston_output_iterate_heads(output,<sp/>head)))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If you cause <computeroutput>iter</computeroutput> to be removed from the list, you cannot use it to continue iterating. Removing any other item is safe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5253" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5253" bodyend="5274"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga4e31a4f40995c5c80cca21775d15a15a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_attach_head</definition>
        <argsstring>(struct weston_output *output, struct weston_head *head)</argsstring>
        <name>weston_output_attach_head</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Attach a head to an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to attach to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head that is not yet attached. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure.</para>
</simplesect>
Attaches the given head to the output. All heads of an output are clones and share the resolution and timings.</para>
<para>Cloning heads this way uses less resources than creating an output for each head, but is not always possible due to environment, driver and hardware limitations.</para>
<para>On failure, the head remains unattached. Success of this function does not guarantee the output configuration is actually valid. The final checks are made on <ref refid="group__output_1ga80c54aa6f93b50afc216bb6ab9c97575" kindref="member">weston_output_enable()</ref> unless the output was already enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5296" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5296" bodyend="5327"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gac5cc5415250a9aa4f830af252b72a666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_detach</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_detach</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Detach a head from its output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to detach.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
It is safe to detach a non-attached head.</para>
<para>If the head is attached to an enabled output and the output will be left with no heads, the output will be disabled.</para>
<para><simplesect kind="see"><para><ref refid="group__output_1gad86b73873e740780e6a1b4b7ad7b7e2b" kindref="member">weston_output_disable</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5342" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5342" bodyend="5373"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga620a43a89a9f4045689f5f7bddeaa533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_release</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_release</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Destroy a head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to be released.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Destroys the head. The caller is responsible for freeing the memory pointed to by <computeroutput>head</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5386" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5386" bodyend="5398"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a5e9c9f5852d7e6ceacf306a825839a79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_head_set_device_changed</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_set_device_changed</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5401" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5401" bodyend="5407"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a5895bebb65c3adf73ba2f4f7529fdb4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool str_null_eq</definition>
        <argsstring>(const char *a, const char *b)</argsstring>
        <name>str_null_eq</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>String equal comparison with NULLs being equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5411" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5411" bodyend="5420"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gad1dbb9d1e8023b3c1587b2a15d1ee550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_monitor_strings</definition>
        <argsstring>(struct weston_head *head, const char *make, const char *model, const char *serialno)</argsstring>
        <name>weston_head_set_monitor_strings</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>make</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>serialno</declname>
        </param>
        <briefdescription>
<para>Store monitor make, model and serial number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>make</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor make. If EDID is available, the PNP ID. Otherwise any string, or NULL for none. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor model or name, or a made-up string, or NULL for none. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialno</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor serial number, a made-up string, or NULL for none.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This may set the device_changed flag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5438" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5438" bodyend="5457"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga0ec29ead0db5f04159e9b69a889713b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_non_desktop</definition>
        <argsstring>(struct weston_head *head, bool non_desktop)</argsstring>
        <name>weston_head_set_non_desktop</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_desktop</declname>
        </param>
        <briefdescription>
<para>Store display non-desktop status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>non_desktop</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the head connects to a non-desktop display. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5468" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5468" bodyend="5476"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga0af29bbbf4c6d09c82bbac58286c656a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_transform</definition>
        <argsstring>(struct weston_head *head, uint32_t transform)</argsstring>
        <name>weston_head_set_transform</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Store display transformation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>The transformation to apply for this head</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This may set the device_changed flag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5489" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5489" bodyend="5497"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga453bc787c6868e53371866de3f4db622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_physical_size</definition>
        <argsstring>(struct weston_head *head, int32_t mm_width, int32_t mm_height)</argsstring>
        <name>weston_head_set_physical_size</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>mm_width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>mm_height</declname>
        </param>
        <briefdescription>
<para>Store physical image size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mm_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Image area width in millimeters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mm_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Image area height in millimeters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This may set the device_changed flag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5512" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5512" bodyend="5523"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gab4123b993477c318d4c87d782b6e4b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_subpixel</definition>
        <argsstring>(struct weston_head *head, enum wl_output_subpixel sp)</argsstring>
        <name>weston_head_set_subpixel</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>enum wl_output_subpixel</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
<para>Store monitor sub-pixel layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sp</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub-pixel layout. The possible values are:<itemizedlist>
<listitem><para>WL_OUTPUT_SUBPIXEL_UNKNOWN,</para>
</listitem><listitem><para>WL_OUTPUT_SUBPIXEL_NONE,</para>
</listitem><listitem><para>WL_OUTPUT_SUBPIXEL_HORIZONTAL_RGB,</para>
</listitem><listitem><para>WL_OUTPUT_SUBPIXEL_HORIZONTAL_BGR,</para>
</listitem><listitem><para>WL_OUTPUT_SUBPIXEL_VERTICAL_RGB,</para>
</listitem><listitem><para>WL_OUTPUT_SUBPIXEL_VERTICAL_BGR</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This may set the device_changed flag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5542" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5542" bodyend="5551"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga4ece2c0a2966224ebece0b092a6a9883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_internal</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_set_internal</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Mark the monitor as internal. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used for embedded screens, like laptop panels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to mark as internal.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
By default a head is external. The type is often inferred from the physical connector type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5566" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5566" bodyend="5569"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga522efc0ba8ba4ce81c0ac4c1cf197f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_connection_status</definition>
        <argsstring>(struct weston_head *head, bool connected)</argsstring>
        <name>weston_head_set_connection_status</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>connected</declname>
        </param>
        <briefdescription>
<para>Store connector status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>connected</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the head is connected.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Connectors are created as disconnected. This function can be used to set the connector status.</para>
<para>The status should be set to true when a physical connector is connected to a video sink device like a monitor and to false when the connector is disconnected. For nested backends, the connection status should reflect the connection to the parent display server.</para>
<para>When the connection status changes, it schedules a call to the heads_changed hook and sets the device_changed flag.</para>
<para><simplesect kind="see"><para>weston_compositor_set_heads_changed_cb </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5592" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5592" bodyend="5600"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a888123607202b7d3715f8dd68e9ce079" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_output_compute_protection</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_compute_protection</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5603" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5603" bodyend="5627"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ad857cfe1c11b72be724989f35dbb2d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_content_protection_status</definition>
        <argsstring>(struct weston_head *head, enum weston_hdcp_protection status)</argsstring>
        <name>weston_head_set_content_protection_status</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5630" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5630" bodyend="5636"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gad0da27f9a2e98faf8aecf84704935440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_head_is_connected</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_is_connected</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Is the head currently connected? </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Connection status.</para>
</simplesect>
Returns true if the head is physically connected to a monitor, or in case of a nested backend returns true when there is a connection to the parent display server.</para>
<para>This is independent from the head being enabled.</para>
<para><simplesect kind="see"><para><ref refid="group__head_1ga8d49a887b440265b363a5075fefff343" kindref="member">weston_head_is_enabled</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5653" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5653" bodyend="5656"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga8d49a887b440265b363a5075fefff343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_head_is_enabled</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_is_enabled</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Is the head currently enabled? </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Video status.</para>
</simplesect>
Returns true if the head is currently transmitting a video stream.</para>
<para>This is independent of the head being connected.</para>
<para><simplesect kind="see"><para><ref refid="group__head_1gad0da27f9a2e98faf8aecf84704935440" kindref="member">weston_head_is_connected</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5671" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5671" bodyend="5677"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga8166b9178e0d63360ebe4bd1a3d9466b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_head_is_device_changed</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_is_device_changed</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Has the device information changed? </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the device information has changed since last reset.</para>
</simplesect>
The information about the connected display device, e.g. a monitor, may change without being disconnected in between. Changing information causes a call to the heads_changed hook.</para>
<para>The information includes make, model, serial number, physical size, and sub-pixel type. The connection status is also included.</para>
<para><simplesect kind="see"><para><ref refid="group__head_1ga4f891068162ad3c11b7c971dcf7087d6" kindref="member">weston_head_reset_device_changed</ref>, weston_compositor_set_heads_changed_cb </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5695" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5695" bodyend="5698"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gaf349968c812aa4496e3afd9e2a550ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_head_is_non_desktop</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_is_non_desktop</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Does the head represent a non-desktop display? </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the device is a non-desktop display.</para>
</simplesect>
Non-desktop heads are not attached to outputs by default. This stops weston from extending the desktop onto head mounted displays. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5711" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5711" bodyend="5714"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga4f891068162ad3c11b7c971dcf7087d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_reset_device_changed</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_reset_device_changed</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Acknowledge device information change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to acknowledge.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Clears the device changed flag on this head. When a compositor has processed device information, it should call this to be able to notice further changes.</para>
<para><simplesect kind="see"><para><ref refid="group__head_1ga8166b9178e0d63360ebe4bd1a3d9466b" kindref="member">weston_head_is_device_changed</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5728" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5728" bodyend="5731"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gadc2cacc63e1e08fa67962fd1379dd085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* weston_head_get_name</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_get_name</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Get the name of a head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The head&apos;s name, not NULL.</para>
</simplesect>
The name depends on the backend. The DRM backend uses connector names, other backends may use hardcoded names or user-given names. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5744" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5744" bodyend="5747"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gaa421449fe0fad20bece74a1359e9dea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
        <definition>struct weston_output* weston_head_get_output</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_get_output</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Get the output the head is attached to. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output the head is attached to, or NULL if detached. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5756" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5756" bodyend="5759"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga2be199d2caef16d084aa4aa56434f0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t weston_head_get_transform</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_get_transform</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Get the head&apos;s native transformation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The head&apos;s native transform, as a WL_OUTPUT_TRANSFORM_* value</para>
</simplesect>
A <ref refid="structweston__head" kindref="compound">weston_head</ref> may have a &apos;native&apos; transform provided by the backend. Examples include panels which are physically rotated, where the rotation is recorded and described as part of the system configuration. This call will return any known native transform for the head. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5774" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5774" bodyend="5777"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gacb1d8713745a3e871acad1bdb129d720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_add_destroy_listener</definition>
        <argsstring>(struct weston_head *head, struct wl_listener *listener)</argsstring>
        <name>weston_head_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Add destroy callback for a head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to watch for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener to add. The <computeroutput>notify</computeroutput> member must be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Heads may get destroyed for various reasons by the backends. If a head is attached to an output, the compositor should listen for head destruction and reconfigure or destroy the output if necessary.</para>
<para>The destroy callbacks will be called on <ref refid="structweston__head" kindref="compound">weston_head</ref> destruction before any automatic detaching from an associated <ref refid="structweston__output" kindref="compound">weston_output</ref> and before any <ref refid="structweston__head" kindref="compound">weston_head</ref> information is lost.</para>
<para>The <computeroutput>data</computeroutput> argument to the notify callback is the <ref refid="structweston__head" kindref="compound">weston_head</ref> being destroyed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5798" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5798" bodyend="5802"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga523c746a6ae0d5457e5696b903c1508d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct wl_listener *</type>
        <definition>struct wl_listener* weston_head_get_destroy_listener</definition>
        <argsstring>(struct weston_head *head, wl_notify_func_t notify)</argsstring>
        <name>weston_head_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>wl_notify_func_t</type>
          <declname>notify</declname>
        </param>
        <briefdescription>
<para>Look up destroy listener for a head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>The notify function used used for the added destroy listener. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The listener, or NULL if not found.</para>
</simplesect>
This looks up the previously added destroy listener struct based on the notify function it has. The listener can be used to access user data through <computeroutput>container_of()</computeroutput>.</para>
<para><simplesect kind="see"><para>wl_signal_get() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5818" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5818" bodyend="5822"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8d4a3039ba1a23bfe713131cf3b7cd5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_region_from_global</definition>
        <argsstring>(struct weston_output *output, pixman_region32_t *region)</argsstring>
        <name>weston_output_region_from_global</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>Transform a region in-place from global to output coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output that defines the transformation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>region</parametername>
</parameternamelist>
<parameterdescription>
<para>The region to be transformed in-place.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This takes a region in the global coordinate system, and takes into account output position, transform and scale, and the zoom, and converts the region into output pixel coordinates in the framebuffer.</para>
<para>Uses floating-point operations if zoom is active, which may round to expand the region. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5864" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5864" bodyend="5876"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ad023069a2b5f2fc41dc15c035e2602f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_output_init_geometry</definition>
        <argsstring>(struct weston_output *output, int x, int y)</argsstring>
        <name>weston_output_init_geometry</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5952" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5952" bodyend="5961"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga1e29336a58385636b0d2c213eaddbac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_move</definition>
        <argsstring>(struct weston_output *output, int x, int y)</argsstring>
        <name>weston_output_move</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="5967" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5967" bodyend="6011"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a40168272ce3900f82ea1c3d368a8bd98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_add_output</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_output *output)</argsstring>
        <name>weston_compositor_add_output</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Signal that a pending output is taken into use. </para>
        </briefdescription>
        <detaileddescription>
<para>Removes the output from the pending list and adds it to the compositor&apos;s list of enabled outputs. The output created signal is emitted.</para>
<para>The output gets an internal ID assigned, and the wl_output global is created.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6028" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6028" bodyend="6057"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaa6ff5fff6210e59ee443c89fd4941082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_transform_coordinate</definition>
        <argsstring>(struct weston_output *output, double device_x, double device_y, double *x, double *y)</argsstring>
        <name>weston_output_transform_coordinate</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>double</type>
          <declname>device_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>device_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Transform device coordinates into global coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structweston__output" kindref="compound">weston_output</ref> object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device_x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate in device units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate in device units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate in the global space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate in the global space.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Transforms coordinates from the device coordinate space (physical pixel units) to the global coordinate space (logical pixel units). This takes into account output transform and scale. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6075" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6075" bodyend="6089"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga794fc39a73df6dca432c753825ef2a1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_remove_output</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_compositor_remove_output</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Removes output from compositor&apos;s list of enabled outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that is being removed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The following happens:</para>
<para><itemizedlist>
<listitem><para>The output assignments of all views in the current scenegraph are recomputed.</para>
</listitem><listitem><para>Presentation feedback is discarded.</para>
</listitem><listitem><para>Compositor is notified that outputs were changed and applies the necessary changes to re-layout outputs.</para>
</listitem><listitem><para>The output is put back in the pending outputs list.</para>
</listitem><listitem><para>Signal is emitted to notify all users of the <ref refid="structweston__output" kindref="compound">weston_output</ref> object that the output is being destroyed.</para>
</listitem><listitem><para>wl_output protocol objects referencing this <ref refid="structweston__output" kindref="compound">weston_output</ref> are made inert, and the wl_output global is removed.</para>
</listitem><listitem><para>The output&apos;s internal ID is released. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6119" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6119" bodyend="6149"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaf55cb7ce87a56e9284c9860ed8e56cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_set_scale</definition>
        <argsstring>(struct weston_output *output, int32_t scale)</argsstring>
        <name>weston_output_set_scale</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Sets the output scale for a given output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that the scale is set for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale factor for the given output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
It only supports setting scale for an output that is not enabled and it can only be ran once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6162" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6162" bodyend="6172"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga11bebd6791c64fbf449251f74e3254bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_set_transform</definition>
        <argsstring>(struct weston_output *output, uint32_t transform)</argsstring>
        <name>weston_output_set_transform</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Sets the output transform for a given output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that the transform is set for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Transform value for the given output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Refer to wl_output::transform section located at <ulink url="https://wayland.freedesktop.org/docs/html/apa.html#protocol-spec-wl_output">https://wayland.freedesktop.org/docs/html/apa.html#protocol-spec-wl_output</ulink> for list of values that can be passed to this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6186" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6186" bodyend="6256"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga524b14e04e1478ab2ebe168b97cda322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_output_set_renderer_shadow_buffer</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_set_renderer_shadow_buffer</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Make the output use renderer shadow buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object to modify. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success, false if unsupported.</para>
</simplesect>
This can only be set on a disabled output object.</para>
<para>This is a temporary API to demonstrate WESTON_CAP_COLOR_OPS and allow testing related features. This will be superseded with color management API.</para>
<para>By default, a renderer is not using a shadow buffer of its own. Enabling a shadow buffer may enable other color related features.</para>
<para>Support depends on the chosen renderer and the graphics driver stack in use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6277" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6277" bodyend="6289"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaeb6468e3cabf74cba4030400f1907799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_init</definition>
        <argsstring>(struct weston_output *output, struct weston_compositor *compositor, const char *name)</argsstring>
        <name>weston_output_init</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="structweston__output" kindref="compound">weston_output</ref> object with enough data so an output can be configured. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name for the output (the string is copied).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Sets initial values for fields that are expected to be configured either by compositors or backends.</para>
<para>The name is used in logs, and can be used by compositors as a configuration identifier. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6308" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6308" bodyend="6332"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga3bf54722d538ec9410a82d1242a84958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_add_pending_output</definition>
        <argsstring>(struct weston_output *output, struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_add_pending_output</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Adds <ref refid="structweston__output" kindref="compound">weston_output</ref> object to pending output list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The opposite of this operation is built into <ref refid="group__output_1ga4f2b78dfe24872b341fccb812d1e9473" kindref="member">weston_output_release()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6345" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6345" bodyend="6353"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga80c54aa6f93b50afc216bb6ab9c97575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_enable</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_enable</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="structweston__output" kindref="compound">weston_output</ref> object that can be used by the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that needs to be enabled. Must not be enabled already. Must have at least one head attached.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output coordinates are calculated and each new output is by default assigned to the right of previous one.</para>
<para>Sets up the transformation, zoom, and geometry of the output using the properties that need to be configured by the compositor.</para>
<para>Establishes a repaint timer for the output with the relevant display object&apos;s event loop. See <ref refid="compositor_8c_1acc76702d769aa1e1bffb35feded7fdd4" kindref="member">output_repaint_timer_handler()</ref>.</para>
<para>The output is assigned an ID. Weston can support up to 32 distinct outputs, with IDs numbered from 0-31; the compositor&apos;s output_id_pool is referred to and used to find the first available ID number, and then this ID is marked as used in output_id_pool.</para>
<para>The output is also assigned a Wayland global with the wl_output external interface.</para>
<para>Backend specific function is called to set up the output output.</para>
<para>Output is added to the compositor&apos;s output list</para>
<para>If the backend specific function fails, the <ref refid="structweston__output" kindref="compound">weston_output</ref> object is returned to a state it was before calling this function and is added to the compositor&apos;s pending_output_list in case it needs to be reconfigured or just so it can be destroyed at shutdown.</para>
<para>0 is returned on success, -1 on failure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6419" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6419" bodyend="6496"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gad86b73873e740780e6a1b4b7ad7b7e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_disable</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_disable</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Converts a <ref refid="structweston__output" kindref="compound">weston_output</ref> object to a pending output state, so it can be configured again or destroyed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that needs to be disabled.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Calls a backend specific function to disable an output, in case such function exists.</para>
<para>The backend specific disable function may choose to postpone the disabling by returning a negative value, in which case this function returns early. In that case the backend will guarantee the output will be disabled soon by the backend calling this function again. One must not attempt to re-enable the output until that happens.</para>
<para>Otherwise, if the output is being used by the compositor, it is removed from weston&apos;s output_list (see <ref refid="group__compositor_1ga794fc39a73df6dca432c753825ef2a1b" kindref="member">weston_compositor_remove_output()</ref>) and is returned to a state it was before <ref refid="group__output_1ga80c54aa6f93b50afc216bb6ab9c97575" kindref="member">weston_output_enable()</ref> was ran (see weston_output_enable_undo()).</para>
<para>See <ref refid="group__output_1gaeb6468e3cabf74cba4030400f1907799" kindref="member">weston_output_init()</ref> for more information on the state output is returned to.</para>
<para>If the output has never been enabled yet, this function can still be called to ensure that the output is actually turned off rather than left in the state it was discovered in. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6527" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6527" bodyend="6547"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gae835d9bf9af471b041a588778a774db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_flush_heads_changed</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_flush_heads_changed</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Forces a synchronous call to heads_changed hook. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If there are new or changed heads, calls the heads_changed hook and returns after the hook returns. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6559" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6559" bodyend="6565"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga76ab2121852bb7a085ac23abaac35bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_add_destroy_listener</definition>
        <argsstring>(struct weston_output *output, struct wl_listener *listener)</argsstring>
        <name>weston_output_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Add destroy callback for an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to watch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener to add. The <computeroutput>notify</computeroutput> member must be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The listener callback will be called when user destroys an output. This may be delayed by a backend in some cases. The main purpose of the listener is to allow hooking up custom data to the output. The custom data can be fetched via <ref refid="group__output_1ga0678ba130cd10a2c92720a2decfe7aeb" kindref="member">weston_output_get_destroy_listener()</ref> followed by container_of().</para>
<para>The <computeroutput>data</computeroutput> argument to the notify callback is the <ref refid="structweston__output" kindref="compound">weston_output</ref> being destroyed.</para>
<para><simplesect kind="note"><para>This is for the final destruction of an output, not when it gets disabled. If you want to keep track of enabled outputs, this is not it. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6587" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6587" bodyend="6591"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga0678ba130cd10a2c92720a2decfe7aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct wl_listener *</type>
        <definition>struct wl_listener* weston_output_get_destroy_listener</definition>
        <argsstring>(struct weston_output *output, wl_notify_func_t notify)</argsstring>
        <name>weston_output_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>wl_notify_func_t</type>
          <declname>notify</declname>
        </param>
        <briefdescription>
<para>Look up destroy listener for an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>The notify function used used for the added destroy listener. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The listener, or NULL if not found.</para>
</simplesect>
This looks up the previously added destroy listener struct based on the notify function it has. The listener can be used to access user data through <computeroutput>container_of()</computeroutput>.</para>
<para><simplesect kind="see"><para>wl_signal_get() <ref refid="group__output_1ga76ab2121852bb7a085ac23abaac35bdd" kindref="member">weston_output_add_destroy_listener()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6607" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6607" bodyend="6611"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga4f2b78dfe24872b341fccb812d1e9473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_release</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_release</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Uninitialize an output. </para>
        </briefdescription>
        <detaileddescription>
<para>Removes the output from the list of enabled outputs if necessary, but does not call the backend&apos;s output disable function. The output will no longer be in the list of pending outputs either.</para>
<para>All fields of <ref refid="structweston__output" kindref="compound">weston_output</ref> become uninitialized, i.e. should not be used anymore. The caller can free the memory after this. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6626" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6626" bodyend="6647"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga2a4277e31b2ef83535ad5ace9cb61488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
        <definition>struct weston_output* weston_compositor_find_output_by_name</definition>
        <argsstring>(struct weston_compositor *compositor, const char *name)</argsstring>
        <name>weston_compositor_find_output_by_name</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Find an output by its given name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor to search in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The output name to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An existing output with the given name, or NULL if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6658" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6658" bodyend="6672"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gafee0c9120b6d2ffcdbf3d7cae5837975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
        <definition>struct weston_output* weston_compositor_create_output</definition>
        <argsstring>(struct weston_compositor *compositor, const char *name)</argsstring>
        <name>weston_compositor_create_output</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a named output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <computeroutput><ref refid="structweston__output" kindref="compound">weston_output</ref></computeroutput>, or NULL on failure.</para>
</simplesect>
This creates a new <ref refid="structweston__output" kindref="compound">weston_output</ref> that starts with no heads attached.</para>
<para>An output must be configured and it must have at least one head before it can be enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6688" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6688" bodyend="6700"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gadc6c426dbd044667d0d1f5ec7ec47ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
        <definition>struct weston_output* weston_compositor_create_output_with_head</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_head *head)</argsstring>
        <name>weston_compositor_create_output_with_head</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Create an output for an unused head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to attach to the output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <computeroutput><ref refid="structweston__output" kindref="compound">weston_output</ref></computeroutput>, or NULL on failure.</para>
</simplesect>
This creates a new <ref refid="structweston__output" kindref="compound">weston_output</ref> that starts with the given head attached. The output inherits the name of the head. The head must not be already attached to another output.</para>
<para>An output must be configured before it can be enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6717" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6717" bodyend="6732"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga44dae09ae8bbdb6e8b6574e2bd407c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_destroy</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_destroy</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Destroy an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to destroy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The heads attached to the given output are detached and become unused again.</para>
<para>It is not necessary to explicitly destroy all outputs at compositor exit. <ref refid="group__compositor_1ga4f29f61ed5f73015798a14bdabb73dcc" kindref="member">weston_compositor_destroy()</ref> will automatically destroy any remaining outputs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6747" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6747" bodyend="6750"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaf0756dca4563d0814c75d534c51a7ecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
        <definition>struct weston_head* weston_output_get_first_head</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_get_first_head</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>When you need a head... </para>
        </briefdescription>
        <detaileddescription>
<para>This function is a hack, used until all code has been converted to become multi-head aware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> whose head to get. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The first head in the output&apos;s list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6763" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6763" bodyend="6770"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a25906f3a587580e6a9541dd7d301b626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_allow_protection</definition>
        <argsstring>(struct weston_output *output, bool allow_protection)</argsstring>
        <name>weston_output_allow_protection</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_protection</declname>
        </param>
        <briefdescription>
<para>Allow/Disallow content-protection support for an output. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the allow_protection member for an output. Setting of this field will allow the compositor to attempt content-protection for this output, for a backend that supports the content-protection protocol.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> for whom the content-protection is to be allowed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_protection</parametername>
</parameternamelist>
<parameterdescription>
<para>The bool value which is to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6783" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6783" bodyend="6787"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ab2082b5532a7c8324da7d39ef3673875" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void xdg_output_unlist</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>xdg_output_unlist</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6790" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6790" bodyend="6793"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a9ba515976004a333e4a3316c87df1640" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void xdg_output_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>xdg_output_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6796" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6796" bodyend="6799"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a12068091b6fa2576537299a107f14708" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void xdg_output_manager_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>xdg_output_manager_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6806" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6806" bodyend="6810"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7cf6a9bbfcc7bac3fd0fa5ed30c193b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void xdg_output_manager_get_xdg_output</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *manager, uint32_t id, struct wl_resource *output_resource)</argsstring>
        <name>xdg_output_manager_get_xdg_output</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>manager</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>output_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6813" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6813" bodyend="6844"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a0b34e2cffc5ee1646f798a4ad50d8132" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_xdg_output_manager</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_xdg_output_manager</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6852" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6852" bodyend="6866"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1abd81170672c94f1f7a5a534fec6e54fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_viewport</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_viewport</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6869" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6869" bodyend="6882"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a880c557ac9d14d1a3da29a2ad863d013" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void viewport_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>viewport_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6885" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6885" bodyend="6889"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a22290c89b2399b62ccdb697585d8c8ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void viewport_set_source</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, wl_fixed_t src_x, wl_fixed_t src_y, wl_fixed_t src_width, wl_fixed_t src_height)</argsstring>
        <name>viewport_set_source</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>src_x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>src_y</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>src_width</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>src_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6892" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6892" bodyend="6941"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1af5946cc45776e2bb021818a0ee0f89e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void viewport_set_destination</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int32_t dst_width, int32_t dst_height)</argsstring>
        <name>viewport_set_destination</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dst_width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dst_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6944" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6944" bodyend="6979"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a4866b48d79d522905b444456b1008fd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void viewporter_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>viewporter_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6988" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6988" bodyend="6992"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8e694fc99050a6bcf0a292cf6c6ade49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void viewporter_get_viewport</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *viewporter, uint32_t id, struct wl_resource *surface_resource)</argsstring>
        <name>viewporter_get_viewport</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>viewporter</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="6995" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6995" bodyend="7023"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1f3e7a9e31035d88a63ec0d719fbf31f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_viewporter</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_viewporter</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7031" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7031" bodyend="7045"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1adc1e5ea031c0f18d0b9656c82e9d9ea5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_presentation_feedback</definition>
        <argsstring>(struct wl_resource *feedback_resource)</argsstring>
        <name>destroy_presentation_feedback</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>feedback_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7048" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7048" bodyend="7056"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a7cbe15dfcaeedbf13974990ba3180316" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void presentation_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>presentation_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7059" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7059" bodyend="7062"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3c4d41b60377ef8140fddb73b2ac6400" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void presentation_feedback</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *presentation_resource, struct wl_resource *surface_resource, uint32_t callback)</argsstring>
        <name>presentation_feedback</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>presentation_resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7065" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7065" bodyend="7097"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ae4de3049c82f4b9d03e1c7a4a25ba9a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_presentation</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_presentation</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7105" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7105" bodyend="7121"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a32f49c76a582b17a1bf32145f3ea92b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compositor_bind</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>compositor_bind</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7124" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7124" bodyend="7139"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1ae5e7ea266b6890182083372ff590d6be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* output_repaint_status_text</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>output_repaint_status_text</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7142" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7142" bodyend="7157"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1a9942d8e9c924958c273e7c6c381d0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void debug_scene_view_print_buffer</definition>
        <argsstring>(FILE *fp, struct weston_view *view)</argsstring>
        <name>debug_scene_view_print_buffer</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7160" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7160" bodyend="7196"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a5d400b2046e40cca8f7c688e8148448d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void debug_scene_view_print</definition>
        <argsstring>(FILE *fp, struct weston_view *view, int view_idx)</argsstring>
        <name>debug_scene_view_print</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>int</type>
          <declname>view_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7199" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7199" bodyend="7259"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a8c486ef70efdebbe07c34efe41709645" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void debug_scene_view_print_tree</definition>
        <argsstring>(struct weston_view *view, FILE *fp, int *view_idx)</argsstring>
        <name>debug_scene_view_print_tree</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>view_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7262" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7262" bodyend="7288"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga4fa96710c12bf0aee8935872bc1c7437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* weston_compositor_print_scene_graph</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_print_scene_graph</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
<para>Output information on how libweston is currently composing the scene graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7297" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7297" bodyend="7376"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a2c78c515f84e121a200b18bbd59fe007" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void debug_scene_graph_cb</definition>
        <argsstring>(struct weston_log_subscription *sub, void *data)</argsstring>
        <name>debug_scene_graph_cb</name>
        <param>
          <type>struct <ref refid="structweston__log__subscription" kindref="compound">weston_log_subscription</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called when the &apos;scene-graph&apos; debug scope is bound by a client. </para>
        </briefdescription>
        <detaileddescription>
<para>This one-shot weston-debug scope prints the current scene graph when bound, and then terminates the stream. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7384" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7384" bodyend="7392"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaa92b2b7d2b73302bf143e1c3245045f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* weston_compositor_get_test_data</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_get_test_data</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
<para>Retrieve testsuite data from compositor. </para>
        </briefdescription>
        <detaileddescription>
<para>The testsuite data can be defined by the test suite of projects that uses libweston and given to the compositor at the moment of its creation. This function should be used when we need to retrieve the testsuite private data from the compositor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ec</parametername>
</parameternamelist>
<parameterdescription>
<para>The weston compositor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The testsuite data.</para>
</simplesect>
<simplesect kind="see"><para>weston_compositor_test_data_init </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7408" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7408" bodyend="7411"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga081445a62197fac7bcbeeab449261373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
        <definition>struct weston_compositor* weston_compositor_create</definition>
        <argsstring>(struct wl_display *display, struct weston_log_context *log_ctx, void *user_data, const struct weston_testsuite_data *test_data)</argsstring>
        <name>weston_compositor_create</name>
        <param>
          <type>struct wl_display *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__log__context" kindref="compound">weston_log_context</ref> *</type>
          <declname>log_ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__testsuite__data" kindref="compound">weston_testsuite_data</ref> *</type>
          <declname>test_data</declname>
        </param>
        <briefdescription>
<para>Create the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para>This functions creates and initializes a compositor instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>display</parametername>
</parameternamelist>
<parameterdescription>
<para>The Wayland display to be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an object that can later be retrieved </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to weston_debug_compositor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>test_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional testsuite data, or NULL. using the <ref refid="group__compositor_1gaaecdc50a0ea2aebbf36a22db50e62385" kindref="member">weston_compositor_get_user_data</ref> function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The compositor instance on success or NULL on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7427" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7427" bodyend="7552"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gacc91a9f77baf1c72d967471bade09cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_shutdown</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_shutdown</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
<para>weston_compositor_shutdown </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7558" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7558" bodyend="7583"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga6299e93b80dfd70bd2c9c1603417f940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_exit_with_code</definition>
        <argsstring>(struct weston_compositor *compositor, int exit_code)</argsstring>
        <name>weston_compositor_exit_with_code</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exit_code</declname>
        </param>
        <briefdescription>
<para>weston_compositor_exit_with_code </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7589" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7589" bodyend="7596"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gad227efb7ecb34f771ad93dc86fdb5bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_set_default_pointer_grab</definition>
        <argsstring>(struct weston_compositor *ec, const struct weston_pointer_grab_interface *interface)</argsstring>
        <name>weston_compositor_set_default_pointer_grab</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
<para>weston_compositor_set_default_pointer_grab </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7602" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7602" bodyend="7614"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gabaca768863a217e3c5fa4d7519676a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_set_presentation_clock</definition>
        <argsstring>(struct weston_compositor *compositor, clockid_t clk_id)</argsstring>
        <name>weston_compositor_set_presentation_clock</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>clockid_t</type>
          <declname>clk_id</declname>
        </param>
        <briefdescription>
<para>weston_compositor_set_presentation_clock </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7620" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7620" bodyend="7631"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaab7e6328af752385d84c17b9eebddf74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_set_presentation_clock_software</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_set_presentation_clock_software</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>For choosing the software clock, when the display hardware or API does not expose a compatible presentation timestamp. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7639" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7639" bodyend="7660"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_read_presentation_clock</definition>
        <argsstring>(const struct weston_compositor *compositor, struct timespec *ts)</argsstring>
        <name>weston_compositor_read_presentation_clock</name>
        <param>
          <type>const struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct timespec *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
<para>Read the current time from the Presentation clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ts</parametername>
</parameternamelist>
<parameterdescription>
<para>The current time.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Reading the current time in user space is always imprecise to some degree.</para>
</simplesect>
This function is never meant to fail. If reading the clock does fail, an error message is logged and a zero time is returned. Callers are not supposed to detect or react to failures. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7677" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7677" bodyend="7696"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga321e3fcf45c3aa5f8d5280691f6232c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_compositor_import_dmabuf</definition>
        <argsstring>(struct weston_compositor *compositor, struct linux_dmabuf_buffer *buffer)</argsstring>
        <name>weston_compositor_import_dmabuf</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Import dmabuf buffer into current renderer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the dmabuf buffer to import </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on usable buffers, false otherwise</para>
</simplesect>
This function tests that the <ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref> is usable for the current renderer. Returns false on unusable buffers. Usually usability is tested by importing the dmabufs for composition.</para>
<para>This hook is also used for detecting if the renderer supports dmabufs at all. If the renderer hook is NULL, dmabufs are not supported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7715" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7715" bodyend="7726"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a3694816c632e1265384ed06f9a0bfab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_compositor_dmabuf_can_scanout</definition>
        <argsstring>(struct weston_compositor *compositor, struct linux_dmabuf_buffer *buffer)</argsstring>
        <name>weston_compositor_dmabuf_can_scanout</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7729" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7729" bodyend="7738"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a727f0b7833b706014790d029ba86684c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_version</definition>
        <argsstring>(int *major, int *minor, int *micro)</argsstring>
        <name>weston_version</name>
        <param>
          <type>int *</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>micro</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7741" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7741" bodyend="7746"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1f6a9e6a6915ff39ee0f7dfca47bed95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t weston_module_path_from_env</definition>
        <argsstring>(const char *name, char *path, size_t path_len)</argsstring>
        <name>weston_module_path_from_env</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>path_len</declname>
        </param>
        <briefdescription>
<para>Attempts to find a module path from the module map specified in the environment. </para>
        </briefdescription>
        <detaileddescription>
<para>If found, writes the full path into the path variable.</para>
<para>The module map is a string in environment variable WESTON_MODULE_MAP, where each entry is of the form &quot;name=path&quot; and entries are separated by semicolons. Whitespace is significant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Where the path is written to if found. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocated bytes at <computeroutput>path</computeroutput> . </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the string written to path on success, or 0 if the module was not specified in the environment map or path_len was too small. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7763" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7763" bodyend="7797"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a1cf9686b2a6a6764e8197fdbb473607f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* weston_load_module</definition>
        <argsstring>(const char *name, const char *entrypoint)</argsstring>
        <name>weston_load_module</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>entrypoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7800" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7800" bodyend="7844"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a91193ce4a068dee9a1cf248a81a049bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_compositor_add_destroy_listener_once</definition>
        <argsstring>(struct weston_compositor *compositor, struct wl_listener *listener, wl_notify_func_t destroy_handler)</argsstring>
        <name>weston_compositor_add_destroy_listener_once</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>wl_notify_func_t</type>
          <declname>destroy_handler</declname>
        </param>
        <briefdescription>
<para>Add a compositor destroy listener only once. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor whose destroy to watch for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener struct to initialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destroy_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback when compositor is destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if listener is added, or false if there already is a listener with the given <computeroutput>destroy_handler</computeroutput>.</para>
</simplesect>
This function does nothing and returns false if the given callback function is already present in the <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> destroy callbacks list. Otherwise, this function initializes the given listener with the given callback pointer and adds it to the compositor&apos;s destroy callbacks list.</para>
<para>This can be used to ensure that plugin initialization is done only once in case the same plugin is loaded multiple times. If this function returns false, the plugin should be already initialized successfully.</para>
<para>All plugins should register a destroy listener for cleaning up. Note, that the plugin destruction order is not guaranteed: plugins that depend on other plugins must be able to be torn down in arbitrary order.</para>
<para><simplesect kind="see"><para><ref refid="group__compositor_1ga4f29f61ed5f73015798a14bdabb73dcc" kindref="member">weston_compositor_destroy</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7870" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7870" bodyend="7880"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga4f29f61ed5f73015798a14bdabb73dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_destroy</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_destroy</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Destroys the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function cleans up the compositor state and then destroys it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7891" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7891" bodyend="7918"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaf4e53253ff94f741ee4a04e7e52e302f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_exit</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_exit</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Instruct the compositor to exit. </para>
        </briefdescription>
        <detaileddescription>
<para>This functions does not directly destroy the compositor object, it merely command it to start the tear down process. It is not guaranteed that the tear down will happen immediately.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor to tear down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7931" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7931" bodyend="7934"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaaecdc50a0ea2aebbf36a22db50e62385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* weston_compositor_get_user_data</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_get_user_data</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Return the user data stored in the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the user data pointer set with user_data parameter to the <ref refid="group__compositor_1ga081445a62197fac7bcbeeab449261373" kindref="member">weston_compositor_create</ref> function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7944" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7944" bodyend="7947"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga14405f588f9880d19e0764af6243e5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_load_backend</definition>
        <argsstring>(struct weston_compositor *compositor, enum weston_compositor_backend backend, struct weston_backend_config *config_base)</argsstring>
        <name>weston_compositor_load_backend</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036" kindref="member">weston_compositor_backend</ref></type>
          <declname>backend</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__backend__config" kindref="compound">weston_backend_config</ref> *</type>
          <declname>config_base</declname>
        </param>
        <briefdescription>
<para>Load a backend into a <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>A backend must be loaded to make a <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> work. A backend provides input and output capabilities, and determines the renderer to use.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>A compositor that has not had a backend loaded yet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the backend file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_base</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a backend-specific configuration structure&apos;s &apos;base&apos; member.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="7973" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7973" bodyend="7998"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gac6e898461759aedc521674d927c4f433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_load_xwayland</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_load_xwayland</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>weston_compositor_load_xwayland </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="8004" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="8004" bodyend="8014"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1aed6929d897784a5d5538aca4aaf7d4cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_buffer_send_server_error</definition>
        <argsstring>(struct weston_buffer *buffer, const char *msg)</argsstring>
        <name>weston_buffer_send_server_error</name>
        <param>
          <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Resolve an internal compositor error by disconnecting the client. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used in cases when the wl_buffer turns out unusable and there is no fallback path.</para>
<para>It is possible the fault is caused by a compositor bug, the underlying graphics stack bug or normal behaviour, or perhaps a client mistake. In any case, the options are to either composite garbage or nothing, or disconnect the client. This is a helper function for the latter.</para>
<para>The error is sent as an INVALID_OBJECT error on the client&apos;s wl_display.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The weston buffer that is unusable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>A custom error message attached to the protocol error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="8032" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="8032" bodyend="8049"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1a2b2ea3608297a59698d168b47e7d4072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_disable_planes_incr</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_disable_planes_incr</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="8052" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="8052" bodyend="8063"/>
      </memberdef>
      <memberdef kind="function" id="compositor_8c_1abc5d5ea39a8242825a8a617805027997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_disable_planes_decr</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_disable_planes_decr</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/compositor.c" line="8066" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="8066" bodyend="8077"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2010-2011<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2008-2011<sp/>Kristian<sp/>Høgsberg</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012-2018<sp/>Collabora,<sp/>Ltd.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2017,<sp/>2018<sp/>General<sp/>Electric<sp/>Company</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ioctl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/utsname.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/input.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;setjmp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timeline_8h" kindref="compound">timeline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="libweston_8h" kindref="compound">libweston/libweston.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="weston-log_8h" kindref="compound">libweston/weston-log.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linux-dmabuf_8h" kindref="compound">linux-dmabuf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;viewporter-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;presentation-time-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xdg-output-unstable-v1-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;linux-explicit-synchronization-unstable-v1-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linux-explicit-synchronization_8h" kindref="compound">linux-explicit-synchronization.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/fd-util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/helpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/os-compatibility.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/string-helpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/timespec-util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;git-version.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libweston/version.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="plugin-registry_8h" kindref="compound">libweston/plugin-registry.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pixel-formats_8h" kindref="compound">pixel-formats.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="backend_8h" kindref="compound">backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libweston-internal_8h" kindref="compound">libweston-internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weston-log-internal_8h" kindref="compound">weston-log-internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor">#define<sp/>DEFAULT_REPAINT_WINDOW<sp/>7<sp/></highlight><highlight class="comment">/*<sp/>milliseconds<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="compositor_8c_1a7885b07813c43dba107948b93948ffc0" kindref="member">weston_output_update_matrix</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="compositor_8c_1a3853d7f753575c4feb9c1f8ed1255157" kindref="member">weston_output_transform_scale_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>transform,<sp/>uint32_t<sp/>scale);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="compositor_8c_1a85713ea74ab000b63800f8d67acda7f2" kindref="member">weston_compositor_build_view_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="group__output_1ga42eb945978c9fc4207fab33dd5e46be1" kindref="member">weston_output_create_heads_string</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="compositor_8c_1a414429eff51d0e6b424cb132a93199f6" kindref="member">weston_mode_switch_send_events</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mode_changed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scale_changed)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;head-&gt;<ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode_changed)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_mode(resource,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;flags,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;refresh);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>wl_resource_get_version(resource);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>&gt;=<sp/>WL_OUTPUT_SCALE_SINCE_VERSION<sp/>&amp;&amp;<sp/>scale_changed)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_scale(resource,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>&gt;=<sp/>WL_OUTPUT_DONE_SINCE_VERSION)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_done(resource);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;head-&gt;<ref refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" kindref="member">xdg_output_resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_logical_position(resource,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_logical_size(resource,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_done(resource);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="compositor_8c_1a3d654fef021c6e693cae4dd46bff927b" kindref="member">weston_mode_switch_finish</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode_changed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale_changed)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>old_output_region;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;old_output_region);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;old_output_region,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>output<sp/>region<sp/>and<sp/>transformation<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3853d7f753575c4feb9c1f8ed1255157" kindref="member">weston_output_transform_scale_init</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7885b07813c43dba107948b93948ffc0" kindref="member">weston_output_update_matrix</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>a<sp/>pointer<sp/>falls<sp/>outside<sp/>the<sp/>outputs<sp/>new<sp/>geometry,<sp/>move<sp/>it<sp/>to<sp/>its</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>lower-right<sp/>corner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(seat,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor-&gt;seat_list,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>,<sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pixman_region32_contains_point(&amp;old_output_region,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>,<sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>,<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_contains_point(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>,<sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>,<sp/>NULL))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref><sp/>&gt;=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref><sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref><sp/>&gt;=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref><sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>=<sp/>wl_fixed_from_int(<ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>=<sp/>wl_fixed_from_int(<ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;old_output_region);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mode_changed<sp/>&amp;&amp;<sp/>!scale_changed)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>notify<sp/>clients<sp/>of<sp/>the<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/>output_link)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a414429eff51d0e6b424cb132a93199f6" kindref="member">weston_mode_switch_send_events</ref>(head,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode_changed,<sp/>scale_changed);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="compositor_8c_1ad1d1cfd09469f19cf86f0c4fdd43e76f" kindref="member">weston_compositor_reflow_outputs</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*resized_output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta_width);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="group__output_1ga5b6b26af26f582ad5627ea7ae6129a89" kindref="member">weston_output_mode_set_native</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>*mode,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode_changed<sp/>=<sp/>0,<sp/>scale_changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>old_width;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;switch_mode)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;original_mode)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode_changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;switch_mode(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>mode);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale<sp/>!=<sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_width<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_mode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_scale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3d654fef021c6e693cae4dd46bff927b" kindref="member">weston_mode_switch_finish</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>mode_changed,<sp/>scale_changed);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode_changed<sp/>||<sp/>scale_changed)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad1d1cfd09469f19cf86f0c4fdd43e76f" kindref="member">weston_compositor_reflow_outputs</ref>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor,<sp/><ref refid="structoutput" kindref="compound">output</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref><sp/>-<sp/>old_width);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor-&gt;output_resized_signal,<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><ref refid="group__output_1ga71e8b4c2d4a15c8d153b85f178d1006d" kindref="member">weston_output_mode_switch_to_native</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode_changed<sp/>=<sp/>0,<sp/>scale_changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;switch_mode)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;original_mode)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;already<sp/>in<sp/>the<sp/>native<sp/>mode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>non<sp/>fullscreen<sp/>clients<sp/>haven&apos;t<sp/>seen<sp/>a<sp/>mode<sp/>set<sp/>since<sp/>we</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>switched<sp/>into<sp/>a<sp/>temporary,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>notify<sp/>them<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mode<sp/>at<sp/>that<sp/>time<sp/>is<sp/>different<sp/>from<sp/>the<sp/>native<sp/>mode<sp/>now.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode_changed<sp/>=<sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;original_mode<sp/>!=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_mode);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_changed<sp/>=<sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;original_scale<sp/>!=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_scale);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;switch_mode(<ref refid="structoutput" kindref="compound">output</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_mode);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_scale;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;original_mode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;original_scale<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3d654fef021c6e693cae4dd46bff927b" kindref="member">weston_mode_switch_finish</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>mode_changed,<sp/>scale_changed);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="group__output_1ga3cae00e20c6451270741932f1330e64d" kindref="member">weston_output_mode_switch_to_temporary</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>*mode,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;switch_mode)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>original_mode<sp/>is<sp/>the<sp/>last<sp/>mode<sp/>non<sp/>full<sp/>screen<sp/>clients<sp/>have<sp/>seen,</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>we<sp/>shouldn&apos;t<sp/>change<sp/>it<sp/>if<sp/>we<sp/>already<sp/>have<sp/>one<sp/>set.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;original_mode)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;original_mode<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_mode;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;original_scale<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_scale;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;switch_mode(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>mode);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3d654fef021c6e693cae4dd46bff927b" kindref="member">weston_mode_switch_finish</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="compositor_8c_1a1416f09293d589dc99655700e0a72b53" kindref="member">region_init_infinite</ref>(pixman_region32_t<sp/>*region)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(region,<sp/>INT32_MIN,<sp/>INT32_MIN,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT32_MAX,<sp/>UINT32_MAX);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><ref refid="compositor_8c_1ae73f9f170b78a4645e3033dd8ae4681c" kindref="member">weston_surface_to_subsurface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="compositor_8c_1aa7c65b03520dde2e12d5a35f444435d5" kindref="member">weston_view_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*view);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref><sp/>=<sp/><ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref><sp/>=<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;primary_plane;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>to<sp/>surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;view-&gt;<ref refid="structweston__view_1a2f080864caf024d69229c411f4c65f94" kindref="member">destroy_signal</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;view-&gt;<ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;view-&gt;<ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;view-&gt;<ref refid="structweston__view_1a7f10ad4288de845f3f42609bdf617416" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a2ee87852507e80f9c33d1dbaa7749e1b" kindref="member">alpha</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a826a16f7e32f6db912d72b515f0e4d46" kindref="member">transformation_list</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a826a16f7e32f6db912d72b515f0e4d46" kindref="member">transformation_list</ref>,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a4ba9d647b2fd275411de8d7ba1568758" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a1a379a971f1948d4ccc8d76d58506078" kindref="member">weston_matrix_init</ref>(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1aa0a618d418cb2ffdd5d1eb070c5e3dd4" kindref="member">child_list</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1aae2b060fd6ca394b45cc79c7c3a601aa" kindref="member">dirty</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="structweston__frame__callback" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__frame__callback" kindref="compound">weston_frame_callback</ref><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__frame__callback_1a3ab6028e919e5d0710aabc6168f9405c" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="structweston__presentation__feedback" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__presentation__feedback_1a64f0bfce27f6fc6438da533274186ea6" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>could<sp/>use<sp/>just<sp/>wl_resource_get_link()<sp/>instead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__presentation__feedback_1a57cb4d2be2f4783258168d332eb5d3f8" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>per-surface<sp/>feedback<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__presentation__feedback_1a71b0e7133b7e6d2767b4d7a3563e4359" kindref="member">psf_flags</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><ref refid="compositor_8c_1a8307b26a9a729ad861efe692081b7f9e" kindref="member">weston_presentation_feedback_discard</ref>(</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref><sp/>*<ref refid="structfeedback" kindref="compound">feedback</ref>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp_presentation_feedback_send_discarded(<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><ref refid="compositor_8c_1a9e35ed3c3311c408ac495e8f6588aa94" kindref="member">weston_presentation_feedback_discard_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*list)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref><sp/>*<ref refid="structfeedback" kindref="compound">feedback</ref>,<sp/>*tmp;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(<ref refid="structfeedback" kindref="compound">feedback</ref>,<sp/>tmp,<sp/>list,<sp/><ref refid="structweston__presentation__feedback_1a57cb4d2be2f4783258168d332eb5d3f8" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a8307b26a9a729ad861efe692081b7f9e" kindref="member">weston_presentation_feedback_discard</ref>(<ref refid="structfeedback" kindref="compound">feedback</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><ref refid="compositor_8c_1ad6a928cae402e6a349262cec7f7b7e84" kindref="member">weston_presentation_feedback_present</ref>(</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref><sp/>*<ref refid="structfeedback" kindref="compound">feedback</ref>,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>refresh_nsec,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*ts,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>seq,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>wl_resource_get_client(<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*o;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_lo;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_nsec;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/>output_link)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(o,<sp/>&amp;head-&gt;<ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_client(o)<sp/>!=<sp/><ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp_presentation_feedback_send_sync_output(<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource,<sp/>o);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>clone<sp/>mode,<sp/>send<sp/>it<sp/>for<sp/>just<sp/>one<sp/>wl_output<sp/>global,</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>they<sp/>are<sp/>all<sp/>equivalent<sp/>anyway.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(done)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_to_proto(ts,<sp/>&amp;tv_sec_hi,<sp/>&amp;tv_sec_lo,<sp/>&amp;tv_nsec);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp_presentation_feedback_send_presented(<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refresh_nsec,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seq<sp/>&gt;&gt;<sp/>32,<sp/>seq<sp/>&amp;<sp/>0xffffffff,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|<sp/><ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;psf_flags);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><ref refid="compositor_8c_1a9ed5c3db4ada6f1dd62f7464a7d8aec9" kindref="member">weston_presentation_feedback_present_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*list,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>refresh_nsec,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*ts,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>seq,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref><sp/>*<ref refid="structfeedback" kindref="compound">feedback</ref>,<sp/>*tmp;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!(flags<sp/>&amp;<sp/><ref refid="libweston_8h_1ac57ab20ccb8a4f9f66d9d2f9bb5500d0" kindref="member">WP_PRESENTATION_FEEDBACK_INVALID</ref>)<sp/>||</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_empty(list));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(<ref refid="structfeedback" kindref="compound">feedback</ref>,<sp/>tmp,<sp/>list,<sp/><ref refid="structweston__presentation__feedback_1a57cb4d2be2f4783258168d332eb5d3f8" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad6a928cae402e6a349262cec7f7b7e84" kindref="member">weston_presentation_feedback_present</ref>(<ref refid="structfeedback" kindref="compound">feedback</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refresh_nsec,<sp/>ts,<sp/>seq,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags);</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><ref refid="compositor_8c_1a955920073f8520f3785617fea6a4cfb6" kindref="member">surface_state_handle_buffer_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/>*state<sp/>=</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref>,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__surface__state_1a04028650bbb36f367c176363be4a90ff" kindref="member">buffer_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><ref refid="compositor_8c_1a4c31d06dcae13b2f9aa2ba0acd2b6a16" kindref="member">weston_surface_state_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/>*state)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a6597f745d7ffcd424e8cdaffce3cafb2" kindref="member">newly_attached</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a04028650bbb36f367c176363be4a90ff" kindref="member">buffer_destroy_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a955920073f8520f3785617fea6a4cfb6" kindref="member">surface_state_handle_buffer_destroy</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a251b246e8b6677da69fa03421bcc8d26" kindref="member">sx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1aee475073e8434bca501ab79d3bbdeb2d" kindref="member">sy</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;state-&gt;<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;state-&gt;<ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;state-&gt;<ref refid="structweston__surface__state_1ac7e80149394ec6a71d4b3a34551eb982" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1416f09293d589dc99655700e0a72b53" kindref="member">region_init_infinite</ref>(&amp;state-&gt;<ref refid="structweston__surface__state_1a3ec88c1ba535b2ba4e38dc9a2eb97a32" kindref="member">input</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;state-&gt;<ref refid="structweston__surface__state_1a9e10cab51077c11e29ffbdb2bf4e3a59" kindref="member">frame_callback_list</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;state-&gt;<ref refid="structweston__surface__state_1a86d5bea2884539ddaa34e0995bf90ccf" kindref="member">feedback_list</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" kindref="member">transform</ref><sp/>=<sp/>WL_OUTPUT_TRANSFORM_NORMAL;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" kindref="member">scale</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>=<sp/>wl_fixed_from_int(-1);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1a90026f4dae947712c1963459d7ef8cfa" kindref="member">changed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a6d57cd58b8c29333b246883193786774" kindref="member">acquire_fence_fd</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1aa7cb0c5d15edb989d03c635046a5e923" kindref="member">desired_protection</ref><sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a2c8ab81f6bccd6fad2dec8bb13045d96" kindref="member">protection_mode</ref><sp/>=<sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208ab0feceb730258d0d17f95c9570f69934" kindref="member">WESTON_SURFACE_PROTECTION_MODE_RELAXED</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><ref refid="compositor_8c_1acfaf23bfe99d132bcb56e63e80535a14" kindref="member">weston_surface_state_fini</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/>*state)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__frame__callback" kindref="compound">weston_frame_callback</ref><sp/>*cb,<sp/>*next;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(cb,<sp/>next,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a9e10cab51077c11e29ffbdb2bf4e3a59" kindref="member">frame_callback_list</ref>,<sp/><ref refid="structweston__frame__callback_1a3ab6028e919e5d0710aabc6168f9405c" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(cb-&gt;<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9e35ed3c3311c408ac495e8f6588aa94" kindref="member">weston_presentation_feedback_discard_list</ref>(&amp;state-&gt;<ref refid="structweston__surface__state_1a86d5bea2884539ddaa34e0995bf90ccf" kindref="member">feedback_list</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;state-&gt;<ref refid="structweston__surface__state_1a3ec88c1ba535b2ba4e38dc9a2eb97a32" kindref="member">input</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;state-&gt;<ref refid="structweston__surface__state_1ac7e80149394ec6a71d4b3a34551eb982" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;state-&gt;<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;state-&gt;<ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;state-&gt;<ref refid="structweston__surface__state_1a04028650bbb36f367c176363be4a90ff" kindref="member">buffer_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_clear(&amp;state-&gt;<ref refid="structweston__surface__state_1a6d57cd58b8c29333b246883193786774" kindref="member">acquire_fence_fd</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0abe1ac1aff541e5670f35fb2db85c7d" kindref="member">weston_buffer_release_reference</ref>(&amp;state-&gt;<ref refid="structweston__surface__state_1a38c0835d8fcdd6d883bc2685aae7402d" kindref="member">buffer_release_ref</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><ref refid="compositor_8c_1a9cfb047c81ff27e9e303e8f48d3d65ed" kindref="member">weston_surface_state_set_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/>*state,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref><sp/>==<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;state-&gt;<ref refid="structweston__surface__state_1a04028650bbb36f367c176363be4a90ff" kindref="member">buffer_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref><sp/>=<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>-&gt;<ref refid="structweston__buffer_1a4939f6e2e960d15807c89662da233f26" kindref="member">destroy_signal</ref>,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a04028650bbb36f367c176363be4a90ff" kindref="member">buffer_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><ref refid="compositor_8c_1a1e3347a74e72ecb0aa7617dbf89b76fb" kindref="member">weston_surface_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;destroy_signal);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;commit_signal);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor<sp/>=<sp/><ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;ref_count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.transform<sp/>=<sp/>WL_OUTPUT_TRANSFORM_NORMAL;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.src_width<sp/>=<sp/>wl_fixed_from_int(-1);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport.surface.<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4c31d06dcae13b2f9aa2ba0acd2b6a16" kindref="member">weston_surface_state_init</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;opaque);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1416f09293d589dc99655700e0a72b53" kindref="member">region_init_infinite</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;input);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;frame_callback_list);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;feedback_list);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list_pending);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a1a379a971f1948d4ccc8d76d58506078" kindref="member">weston_matrix_init</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_to_surface_matrix);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a1a379a971f1948d4ccc8d76d58506078" kindref="member">weston_matrix_init</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;surface_to_buffer_matrix);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pointer_constraints);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;acquire_fence_fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;desired_protection<sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;current_protection<sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;protection_mode<sp/>=<sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208ab0feceb730258d0d17f95c9570f69934" kindref="member">WESTON_SURFACE_PROTECTION_MODE_RELAXED</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><ref refid="compositor_8c_1a864f2297b36a4f94f96b8ba55869fe66" kindref="member">weston_surface_set_color</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="alpha-blending-test_8c_1a81e020c207c4f444a5d60e57c7d55fdf" kindref="member">red</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>green,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="alpha-blending-test_8c_1a9a6f44170dd627caeb06bd6a43943349" kindref="member">blue</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha)</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;renderer-&gt;surface_set_color(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="alpha-blending-test_8c_1a81e020c207c4f444a5d60e57c7d55fdf" kindref="member">red</ref>,<sp/>green,<sp/><ref refid="alpha-blending-test_8c_1a9a6f44170dd627caeb06bd6a43943349" kindref="member">blue</ref>,<sp/>alpha);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;is_opaque<sp/>=<sp/>!(alpha<sp/>&lt;<sp/>1.0);</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><ref refid="compositor_8c_1a1666f1b9cb32183712d16d893af00dae" kindref="member">weston_view_to_global_float</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ad81ff06883a9d4720a6b9400233ab04f" kindref="member">enabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__vector" kindref="compound">weston_vector</ref><sp/>v<sp/>=<sp/>{<sp/>{<sp/>sx,<sp/>sy,<sp/>0.0<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>,<sp/>1.0f<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a8798df1cafe699c91c0cc477f7524c1b" kindref="member">weston_matrix_transform</ref>(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a02e76479fada96d5d1f80b8530f8ea18" kindref="member">matrix</ref>,<sp/>&amp;v);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabsf(v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3])<sp/>&lt;<sp/>1e-6)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;warning:<sp/>numerical<sp/>instability<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s(),<sp/>divisor<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>__func__,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3]);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]<sp/>/<sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]<sp/>/<sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>sx<sp/>+<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>sy<sp/>+<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><ref refid="compositor_8c_1a659e0e7b6d6e149fd9872287e0528a93" kindref="member">weston_transformed_coord</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_output_transform<sp/>transform,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*bx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*by)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(transform)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_NORMAL:</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>sx;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED:</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>width<sp/>-<sp/>sx;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_90:</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>width<sp/>-<sp/>sx;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_90:</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>sx;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_180:</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>width<sp/>-<sp/>sx;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>height<sp/>-<sp/>sy;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_180:</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>sx;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>height<sp/>-<sp/>sy;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_270:</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>height<sp/>-<sp/>sy;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>sx;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>height<sp/>-<sp/>sy;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>width<sp/>-<sp/>sx;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal">WL_EXPORT<sp/>pixman_box32_t</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><ref refid="compositor_8c_1a1586f602e908b42e1e4b1c486a21783d" kindref="member">weston_transformed_rect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_output_transform<sp/>transform,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>rect)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/>x2,<sp/>y1,<sp/>y2;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>ret;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a659e0e7b6d6e149fd9872287e0528a93" kindref="member">weston_transformed_coord</ref>(width,<sp/>height,<sp/>transform,<sp/>scale,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x1,<sp/>rect.y1,<sp/>&amp;x1,<sp/>&amp;y1);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a659e0e7b6d6e149fd9872287e0528a93" kindref="member">weston_transformed_coord</ref>(width,<sp/>height,<sp/>transform,<sp/>scale,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x2,<sp/>rect.y2,<sp/>&amp;x2,<sp/>&amp;y2);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;=<sp/>x2)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.x1<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.x2<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.x1<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.x2<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;=<sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.y1<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.y2<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.y1<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.y2<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><ref refid="compositor_8c_1a69d6ae1e2501bc0b76f563edadc212d1" kindref="member">weston_matrix_transform_region</ref>(pixman_region32_t<sp/>*dest,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/>*matrix,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*src)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*src_rects,<sp/>*dest_rects;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrects,<sp/>i;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_rects<sp/>=<sp/>pixman_region32_rectangles(src,<sp/>&amp;nrects);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects<sp/>=<sp/>malloc(nrects<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*dest_rects));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_rects)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrects;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__vector" kindref="compound">weston_vector</ref><sp/>vec1<sp/>=<sp/>{{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_rects[i].x1,<sp/>src_rects[i].y1,<sp/>0,<sp/>1</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}};</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a8798df1cafe699c91c0cc477f7524c1b" kindref="member">weston_matrix_transform</ref>(matrix,<sp/>&amp;vec1);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]<sp/>/=<sp/>vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]<sp/>/=<sp/>vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__vector" kindref="compound">weston_vector</ref><sp/>vec2<sp/>=<sp/>{{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_rects[i].x2,<sp/>src_rects[i].y2,<sp/>0,<sp/>1</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}};</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a8798df1cafe699c91c0cc477f7524c1b" kindref="member">weston_matrix_transform</ref>(matrix,<sp/>&amp;vec2);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]<sp/>/=<sp/>vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]<sp/>/=<sp/>vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]<sp/>&lt;<sp/>vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>floor(vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>ceil(vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>floor(vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>ceil(vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]<sp/>&lt;<sp/>vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>floor(vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>ceil(vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>floor(vec2.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>ceil(vec1.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_clear(dest);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rects(dest,<sp/>dest_rects,<sp/>nrects);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(dest_rects);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><ref refid="compositor_8c_1a6edea0da779eae3aca7dd73800591528" kindref="member">weston_transformed_region</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_output_transform<sp/>transform,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*src,<sp/>pixman_region32_t<sp/>*dest)</highlight></codeline>
<codeline lineno="805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*src_rects,<sp/>*dest_rects;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrects,<sp/>i;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform<sp/>==<sp/>WL_OUTPUT_TRANSFORM_NORMAL<sp/>&amp;&amp;<sp/>scale<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src<sp/>!=<sp/>dest)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(dest,<sp/>src);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_rects<sp/>=<sp/>pixman_region32_rectangles(src,<sp/>&amp;nrects);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects<sp/>=<sp/>malloc(nrects<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*dest_rects));</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_rects)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform<sp/>==<sp/>WL_OUTPUT_TRANSFORM_NORMAL)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dest_rects,<sp/>src_rects,<sp/>nrects<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*dest_rects));</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrects;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(transform)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_NORMAL:</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>src_rects[i].x1;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>src_rects[i].y1;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>src_rects[i].x2;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>src_rects[i].y2;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_90:</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>src_rects[i].y1;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>width<sp/>-<sp/>src_rects[i].x2;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>src_rects[i].y2;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>width<sp/>-<sp/>src_rects[i].x1;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_180:</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>width<sp/>-<sp/>src_rects[i].x2;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>height<sp/>-<sp/>src_rects[i].y2;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>width<sp/>-<sp/>src_rects[i].x1;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>height<sp/>-<sp/>src_rects[i].y1;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_270:</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>height<sp/>-<sp/>src_rects[i].y2;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>src_rects[i].x1;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>height<sp/>-<sp/>src_rects[i].y1;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>src_rects[i].x2;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED:</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>width<sp/>-<sp/>src_rects[i].x2;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>src_rects[i].y1;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>width<sp/>-<sp/>src_rects[i].x1;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>src_rects[i].y2;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_90:</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>src_rects[i].y1;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>src_rects[i].x1;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>src_rects[i].y2;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>src_rects[i].x2;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_180:</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>src_rects[i].x1;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>height<sp/>-<sp/>src_rects[i].y2;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>src_rects[i].x2;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>height<sp/>-<sp/>src_rects[i].y1;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270:</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>=<sp/>height<sp/>-<sp/>src_rects[i].y2;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>=<sp/>width<sp/>-<sp/>src_rects[i].x2;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>=<sp/>height<sp/>-<sp/>src_rects[i].y1;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>=<sp/>width<sp/>-<sp/>src_rects[i].x1;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrects;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x1<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].x2<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y1<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i].y2<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_clear(dest);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rects(dest,<sp/>dest_rects,<sp/>nrects);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(dest_rects);</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><ref refid="compositor_8c_1adf80476a5086883b94c07fb5c3378257" kindref="member">viewport_surface_to_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*bx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*by)</highlight></codeline>
<codeline lineno="895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>*vp<sp/>=<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>,<sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__viewport_1a1b8c86e76e559b39c5c2f02dd4202265" kindref="member">src_x</ref>,<sp/><ref refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" kindref="member">src_y</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>==<sp/>wl_fixed_from_int(-1))<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>sx;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a1b8c86e76e559b39c5c2f02dd4202265" kindref="member">src_x</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" kindref="member">src_y</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a1b8c86e76e559b39c5c2f02dd4202265" kindref="member">src_x</ref><sp/>=<sp/>wl_fixed_to_double(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a1b8c86e76e559b39c5c2f02dd4202265" kindref="member">src_x</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" kindref="member">src_y</ref><sp/>=<sp/>wl_fixed_to_double(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" kindref="member">src_y</ref>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>=<sp/>wl_fixed_to_double(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref><sp/>=<sp/>wl_fixed_to_double(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx<sp/>=<sp/>sx<sp/>*<sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>/<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref><sp/>+<sp/><ref refid="structweston__buffer__viewport_1a1b8c86e76e559b39c5c2f02dd4202265" kindref="member">src_x</ref>;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*by<sp/>=<sp/>sy<sp/>*<sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref><sp/>/<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref><sp/>+<sp/><ref refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" kindref="member">src_y</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><ref refid="compositor_8c_1a4feb46d02393c29f583d77410b940895" kindref="member">weston_surface_to_buffer_float</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*bx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*by)</highlight></codeline>
<codeline lineno="925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>*vp<sp/>=<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>transform<sp/>coordinates<sp/>if<sp/>the<sp/>viewport<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1adf80476a5086883b94c07fb5c3378257" kindref="member">viewport_surface_to_buffer</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>sx,<sp/>sy,<sp/>bx,<sp/>by);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a659e0e7b6d6e149fd9872287e0528a93" kindref="member">weston_transformed_coord</ref>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" kindref="member">transform</ref>,<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" kindref="member">scale</ref>,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bx,<sp/>*by,<sp/>bx,<sp/>by);</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal">WL_EXPORT<sp/>pixman_box32_t</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><ref refid="compositor_8c_1a93bb5bbf6daec9ac24e8735e22fca35d" kindref="member">weston_surface_to_buffer_rect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>rect)</highlight></codeline>
<codeline lineno="958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>*vp<sp/>=<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xf,<sp/>yf;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>transform<sp/>box<sp/>coordinates<sp/>if<sp/>the<sp/>viewport<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1adf80476a5086883b94c07fb5c3378257" kindref="member">viewport_surface_to_buffer</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>rect.x1,<sp/>rect.y1,<sp/>&amp;xf,<sp/>&amp;yf);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x1<sp/>=<sp/>floorf(xf);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.y1<sp/>=<sp/>floorf(yf);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1adf80476a5086883b94c07fb5c3378257" kindref="member">viewport_surface_to_buffer</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>rect.x2,<sp/>rect.y2,<sp/>&amp;xf,<sp/>&amp;yf);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x2<sp/>=<sp/>ceilf(xf);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.y2<sp/>=<sp/>ceilf(yf);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="compositor_8c_1a1586f602e908b42e1e4b1c486a21783d" kindref="member">weston_transformed_rect</ref>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" kindref="member">transform</ref>,<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" kindref="member">scale</ref>,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect);</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><ref refid="compositor_8c_1a8ac3e73015c689738f959bce31cb2d88" kindref="member">weston_surface_to_buffer_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*surface_region,</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*buffer_region)</highlight></codeline>
<codeline lineno="996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*src_rects,<sp/>*dest_rects;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrects,<sp/>i;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_rects<sp/>=<sp/>pixman_region32_rectangles(surface_region,<sp/>&amp;nrects);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects<sp/>=<sp/>malloc(nrects<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*dest_rects));</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_rects)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrects;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_rects[i]<sp/>=<sp/><ref refid="compositor_8c_1a93bb5bbf6daec9ac24e8735e22fca35d" kindref="member">weston_surface_to_buffer_rect</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_rects[i]);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(buffer_region);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rects(buffer_region,<sp/>dest_rects,<sp/>nrects);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(dest_rects);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><ref refid="compositor_8c_1a6c1656484b6903667a3b4add28c5863e" kindref="member">weston_view_move_to_plane</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*plane)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref><sp/>==<sp/>plane)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3a8dd59c945611948e04e68ba09248d7" kindref="member">weston_view_damage_below</ref>(view);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref><sp/>=<sp/>plane;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a37abee2fc874d8a6394731696eb5be5c" kindref="member">weston_surface_damage</ref>(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><ref refid="compositor_8c_1a3a8dd59c945611948e04e68ba09248d7" kindref="member">weston_view_damage_below</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>damage;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;damage);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_subtract(&amp;damage,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a7f10ad4288de845f3f42609bdf617416" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union(&amp;view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>,<sp/>&amp;damage);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;damage);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a60b2b361cc447823985669f9743e8e29" kindref="member">weston_view_schedule_repaint</ref>(view);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><ref refid="compositor_8c_1a2c49db8213dba7327fb950b106cefe12" kindref="member">weston_surface_send_enter_leave</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enter,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leave)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*wloutput;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(enter<sp/>!=<sp/>leave);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>wl_resource_get_client(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(wloutput,<sp/>&amp;head-&gt;<ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_client(wloutput)<sp/>!=<sp/><ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enter)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface_send_enter(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource,<sp/>wloutput);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leave)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface_send_leave(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource,<sp/>wloutput);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><ref refid="compositor_8c_1ac28af9009d1913bd215e38e4c81ffbaa" kindref="member">weston_surface_compute_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>min_protection;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>min_protection_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;output_list,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;output_mask<sp/>&amp;<sp/>(1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id))<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>content-protection<sp/>is<sp/>enabled<sp/>with<sp/>protection</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mode<sp/>as<sp/>RELAXED<sp/>for<sp/>a<sp/>surface,<sp/>and<sp/>if</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>content-recording<sp/>features<sp/>like:<sp/>screen-shooter,</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>recorder,<sp/>screen-sharing,<sp/>etc<sp/>are<sp/>on,<sp/>then<sp/>notify<sp/>the</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>client,<sp/>that<sp/>the<sp/>protection<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Note:<sp/>If<sp/>the<sp/>protection<sp/>mode<sp/>is<sp/>ENFORCED<sp/>then<sp/>there</highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>no<sp/>need<sp/>to<sp/>bother<sp/>the<sp/>client<sp/>as<sp/>the<sp/>renderer<sp/>takes</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>care<sp/>of<sp/>censoring<sp/>the<sp/>visibility<sp/>of<sp/>the<sp/>protected</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>content.</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;disable_planes<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;protection_mode<sp/>==<sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208ab0feceb730258d0d17f95c9570f69934" kindref="member">WESTON_SURFACE_PROTECTION_MODE_RELAXED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_protection<sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_protection_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!min_protection_valid)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_protection<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_protection;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_protection_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;current_protection<sp/>&lt;<sp/>min_protection)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_protection<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_protection;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!min_protection_valid)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_protection<sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;current_protection<sp/>=<sp/>min_protection;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1aa8e2bb41742f074cbbdcf2967965f3ad" kindref="member">weston_protected_surface_send_event</ref>(psurface,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;current_protection);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><ref refid="compositor_8c_1a50650978de46321362c16d562ca7b5c1" kindref="member">notify_surface_protection_change</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>compositor-&gt;<ref refid="structweston__compositor_1a42ad71eeccc5497d3667cca8e38f39f8" kindref="member">content_protection</ref>;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp-&gt;<ref refid="structcontent__protection_1acdaf51b0f4db5fb0c0d9dcf9b8ab7cfe" kindref="member">surface_protection_update</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Notify<sp/>the<sp/>clients,<sp/>whose<sp/>surfaces<sp/>are<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(psurface,<sp/>&amp;cp-&gt;<ref refid="structcontent__protection_1a8e39824cc2b131956732d99ddbd27e4a" kindref="member">protected_list</ref>,<sp/><ref refid="structprotected__surface_1aa40b1e3218e17c8c140de83036091348" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psurface<sp/>&amp;&amp;<sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac28af9009d1913bd215e38e4c81ffbaa" kindref="member">weston_surface_compute_protection</ref>(psurface);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><ref refid="compositor_8c_1ac6277c99f8902551d05f429293eba72d" kindref="member">weston_schedule_surface_protection_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp<sp/>=<sp/><ref refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a42ad71eeccc5497d3667cca8e38f39f8" kindref="member">content_protection</ref>;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_loop<sp/>*loop;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cp<sp/>||<sp/>cp-&gt;<ref refid="structcontent__protection_1acdaf51b0f4db5fb0c0d9dcf9b8ab7cfe" kindref="member">surface_protection_update</ref>)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>wl_display_get_event_loop(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp-&gt;<ref refid="structcontent__protection_1acdaf51b0f4db5fb0c0d9dcf9b8ab7cfe" kindref="member">surface_protection_update</ref><sp/>=<sp/>wl_event_loop_add_idle(loop,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a50650978de46321362c16d562ca7b5c1" kindref="member">notify_surface_protection_change</ref>,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><ref refid="compositor_8c_1abc565bcb3c395271150775df024dd283" kindref="member">weston_surface_update_output_mask</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*es,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>different<sp/>=<sp/>es-&gt;<ref refid="structweston__surface_1a0fbe47c63b1a9a07b10d5c9074841c2e" kindref="member">output_mask</ref><sp/>^<sp/>mask;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>entered<sp/>=<sp/>mask<sp/>&amp;<sp/>different;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>left<sp/>=<sp/>es-&gt;<ref refid="structweston__surface_1a0fbe47c63b1a9a07b10d5c9074841c2e" kindref="member">output_mask</ref><sp/>&amp;<sp/>different;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>output_bit;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>es-&gt;<ref refid="structweston__surface_1a0fbe47c63b1a9a07b10d5c9074841c2e" kindref="member">output_mask</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(es-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(different<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;es-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_bit<sp/>=<sp/>1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(output_bit<sp/>&amp;<sp/>different))</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c49db8213dba7327fb950b106cefe12" kindref="member">weston_surface_send_enter_leave</ref>(es,<sp/>head,</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_bit<sp/>&amp;<sp/>entered,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_bit<sp/>&amp;<sp/>left);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Change<sp/>in<sp/>surfaces&apos;<sp/>output<sp/>mask<sp/>might<sp/>trigger<sp/>a<sp/>change<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>protection.</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac6277c99f8902551d05f429293eba72d" kindref="member">weston_schedule_surface_protection_update</ref>(es-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><ref refid="compositor_8c_1a57d0eb1ecf46caba40a0a2422d9c1215" kindref="member">notify_view_output_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view<sp/>=</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref>,<sp/><ref refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" kindref="member">output_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" kindref="member">output</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" kindref="member">output_destroy_listener</ref>.notify<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><ref refid="compositor_8c_1a282f55c3bc4fcad342539921f04cc484" kindref="member">weston_view_set_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" kindref="member">output_destroy_listener</ref>.notify)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;view-&gt;<ref refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" kindref="member">output_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" kindref="member">output_destroy_listener</ref>.notify<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" kindref="member">output</ref><sp/>=<sp/><ref refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" kindref="member">output_destroy_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a57d0eb1ecf46caba40a0a2422d9c1215" kindref="member">notify_view_output_destroy</ref>;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;destroy_signal,</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" kindref="member">output_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><ref refid="compositor_8c_1af34bc0feacb56b0c008ecc97e52f5f3c" kindref="member">weston_surface_assign_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*es)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*new_output;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>region;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="gl-renderer_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>,<sp/>area,<sp/>mask;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*e;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_output<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gl-renderer_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;region);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;es-&gt;<ref refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" kindref="member">views</ref>,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!view-&gt;<ref refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;region,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>,</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" kindref="member">output</ref>-&gt;<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>pixman_region32_extents(&amp;region);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/>(e-&gt;x2<sp/>-<sp/>e-&gt;x1)<sp/>*<sp/>(e-&gt;y2<sp/>-<sp/>e-&gt;y1);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/>view-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref>;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area<sp/>&gt;=<sp/><ref refid="gl-renderer_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_output<sp/>=<sp/>view-&gt;<ref refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gl-renderer_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref><sp/>=<sp/>area;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;region);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>es-&gt;<ref refid="structweston__surface_1ae8d290fdb242cb764120c95fe33c3f58" kindref="member">output</ref><sp/>=<sp/>new_output;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1abc565bcb3c395271150775df024dd283" kindref="member">weston_surface_update_output_mask</ref>(es,<sp/>mask);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><ref refid="compositor_8c_1abe82cb82b75a6a7196ef924bb28959fc" kindref="member">weston_view_assign_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/>ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/>*new_output;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="gl-renderer_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>,<sp/>area,<sp/>mask;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*e;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_output<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gl-renderer_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;destroying)</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>,<sp/>&amp;ev-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>pixman_region32_extents(&amp;<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/>(e-&gt;x2<sp/>-<sp/>e-&gt;x1)<sp/>*<sp/>(e-&gt;y2<sp/>-<sp/>e-&gt;y1);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/>1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area<sp/>&gt;=<sp/><ref refid="gl-renderer_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_output<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gl-renderer_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref><sp/>=<sp/>area;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a282f55c3bc4fcad342539921f04cc484" kindref="member">weston_view_set_output</ref>(ev,<sp/>new_output);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af34bc0feacb56b0c008ecc97e52f5f3c" kindref="member">weston_surface_assign_output</ref>(ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><ref refid="compositor_8c_1a07a79ca767ffc8da27b22cda265ac918" kindref="member">weston_view_to_view_map</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*from,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*to,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*to_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*to_y)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1666f1b9cb32183712d16d893af00dae" kindref="member">weston_view_to_global_float</ref>(from,<sp/>from_x,<sp/>from_y,<sp/>&amp;<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/>&amp;<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a29e66a2344e0ea20637f84c0650ed90d" kindref="member">weston_view_from_global_float</ref>(to,<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>,<sp/>&amp;<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/>&amp;<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*to_x<sp/>=<sp/>round(<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*to_y<sp/>=<sp/>round(<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><ref refid="compositor_8c_1afe7856d3c7d24936ab4aa74d750fcf0a" kindref="member">weston_view_transfer_scissor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*from,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*to)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*a;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>b;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>pixman_region32_extents(&amp;from-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a07a79ca767ffc8da27b22cda265ac918" kindref="member">weston_view_to_view_map</ref>(from,<sp/>to,<sp/>a-&gt;x1,<sp/>a-&gt;y1,<sp/>&amp;b.x1,<sp/>&amp;b.y1);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a07a79ca767ffc8da27b22cda265ac918" kindref="member">weston_view_to_view_map</ref>(from,<sp/>to,<sp/>a-&gt;x2,<sp/>a-&gt;y2,<sp/>&amp;b.x2,<sp/>&amp;b.y2);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;to-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_with_extents(&amp;to-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>,<sp/>&amp;b);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><ref refid="compositor_8c_1a6d7bfa562732fc69bc391bc2d7adba0c" kindref="member">view_compute_bbox</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pixman_box32_t<sp/>*inbox,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*bbox)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_x<sp/>=<sp/>HUGE_VALF,<sp/><sp/>min_y<sp/>=<sp/>HUGE_VALF;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_x<sp/>=<sp/>-HUGE_VALF,<sp/>max_y<sp/>=<sp/>-HUGE_VALF;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>s[4][2]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>inbox-&gt;x1,<sp/>inbox-&gt;y1<sp/>},</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>inbox-&gt;x1,<sp/>inbox-&gt;y2<sp/>},</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>inbox-&gt;x2,<sp/>inbox-&gt;y1<sp/>},</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>inbox-&gt;x2,<sp/>inbox-&gt;y2<sp/>},</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>int_x,<sp/>int_y;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inbox-&gt;x1<sp/>==<sp/>inbox-&gt;x2<sp/>||<sp/>inbox-&gt;y1<sp/>==<sp/>inbox-&gt;y2)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>rounding<sp/>empty<sp/>bbox<sp/>to<sp/>1x1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(bbox);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1666f1b9cb32183712d16d893af00dae" kindref="member">weston_view_to_global_float</ref>(view,<sp/>s[i][0],<sp/>s[i][1],<sp/>&amp;<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/>&amp;<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref><sp/>&lt;<sp/>min_x)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_x<sp/>=<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref><sp/>&gt;<sp/>max_x)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_x<sp/>=<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref><sp/>&lt;<sp/>min_y)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_y<sp/>=<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref><sp/>&gt;<sp/>max_y)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_y<sp/>=<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_x<sp/>=<sp/>floorf(min_x);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_y<sp/>=<sp/>floorf(min_y);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(bbox,<sp/>int_x,<sp/>int_y,</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ceilf(max_x)<sp/>-<sp/>int_x,<sp/>ceilf(max_y)<sp/>-<sp/>int_y);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><ref refid="compositor_8c_1a3966855a76171e76ab98d2bd8794b5d4" kindref="member">weston_view_update_transform_scissor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref><sp/>=<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1afe7856d3c7d24936ab4aa74d750fcf0a" kindref="member">weston_view_transfer_scissor</ref>(<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>,<sp/>view);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref>)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(region,<sp/>region,</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><ref refid="compositor_8c_1aed539db7d29e01bea9f9c1e6e3715a29" kindref="member">weston_view_update_transform_disable</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ad81ff06883a9d4720a6b9400233ab04f" kindref="member">enabled</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>round<sp/>off<sp/>fractions<sp/>when<sp/>not<sp/>transformed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref><sp/>=<sp/>roundf(view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref><sp/>=<sp/>roundf(view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>identity<sp/>matrix,<sp/>but<sp/>with<sp/>x<sp/>and<sp/>y<sp/>translation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>.<ref refid="structweston__matrix_1a82a0c24ad4a2dcdead2d84fcbc59a9ad" kindref="member">type</ref><sp/>=<sp/><ref refid="matrix_8h_1a36f1c17c5d79896d6e3072add55c8c2aa827fdf83faf73bf1af8049792f35c739" kindref="member">WESTON_MATRIX_TRANSFORM_TRANSLATE</ref>;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>.<ref refid="structweston__matrix_1a525734d347a66825ef16f69d00ab82c0" kindref="member">d</ref>[12]<sp/>=<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>.<ref refid="structweston__matrix_1a525734d347a66825ef16f69d00ab82c0" kindref="member">d</ref>[13]<sp/>=<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a02e76479fada96d5d1f80b8530f8ea18" kindref="member">matrix</ref><sp/>=<sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a6e78c58ca4e4f089c383ff89c68f5f8e" kindref="member">inverse</ref><sp/>=<sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a6e78c58ca4e4f089c383ff89c68f5f8e" kindref="member">inverse</ref>.<ref refid="structweston__matrix_1a525734d347a66825ef16f69d00ab82c0" kindref="member">d</ref>[12]<sp/>=<sp/>-view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a6e78c58ca4e4f089c383ff89c68f5f8e" kindref="member">inverse</ref>.<ref refid="structweston__matrix_1a525734d347a66825ef16f69d00ab82c0" kindref="member">d</ref>[13]<sp/>=<sp/>-view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>,</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3966855a76171e76ab98d2bd8794b5d4" kindref="member">weston_view_update_transform_scissor</ref>(view,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_translate(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a2ee87852507e80f9c33d1dbaa7749e1b" kindref="member">alpha</ref><sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ab587081c8482be3e8c68d6d806945aff" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_translate(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><ref refid="compositor_8c_1a41bf61c294ac21a6f96d3f39935d5104" kindref="member">weston_view_update_transform_enable</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref><sp/>=<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/>*matrix<sp/>=<sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a02e76479fada96d5d1f80b8530f8ea18" kindref="member">matrix</ref>;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/>*inverse<sp/>=<sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a6e78c58ca4e4f089c383ff89c68f5f8e" kindref="member">inverse</ref>;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__transform" kindref="compound">weston_transform</ref><sp/>*tform;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>surfregion;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pixman_box32_t<sp/>*surfbox;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ad81ff06883a9d4720a6b9400233ab04f" kindref="member">enabled</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>identity<sp/>matrix,<sp/>but<sp/>with<sp/>x<sp/>and<sp/>y<sp/>translation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>.<ref refid="structweston__matrix_1a82a0c24ad4a2dcdead2d84fcbc59a9ad" kindref="member">type</ref><sp/>=<sp/><ref refid="matrix_8h_1a36f1c17c5d79896d6e3072add55c8c2aa827fdf83faf73bf1af8049792f35c739" kindref="member">WESTON_MATRIX_TRANSFORM_TRANSLATE</ref>;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>.<ref refid="structweston__matrix_1a525734d347a66825ef16f69d00ab82c0" kindref="member">d</ref>[12]<sp/>=<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>.<ref refid="structweston__matrix_1a525734d347a66825ef16f69d00ab82c0" kindref="member">d</ref>[13]<sp/>=<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a1a379a971f1948d4ccc8d76d58506078" kindref="member">weston_matrix_init</ref>(<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(tform,<sp/>&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a826a16f7e32f6db912d72b515f0e4d46" kindref="member">transformation_list</ref>,<sp/><ref refid="structweston__transform_1a4ba9d647b2fd275411de8d7ba1568758" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a9c0d711b100979953c76e48a9baf868a" kindref="member">weston_matrix_multiply</ref>(<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>,<sp/>&amp;tform-&gt;<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent)</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a9c0d711b100979953c76e48a9baf868a" kindref="member">weston_matrix_multiply</ref>(<ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>,<sp/>&amp;parent-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a02e76479fada96d5d1f80b8530f8ea18" kindref="member">matrix</ref>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="matrix_8h_1a6deb2743e2b32947874410e92b8d83e7" kindref="member">weston_matrix_invert</ref>(inverse,<sp/><ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Oops,<sp/>bad<sp/>total<sp/>transformation,<sp/>not<sp/>invertible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;error:<sp/>weston_view<sp/>%p&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>transformation<sp/>not<sp/>invertible.\n&quot;</highlight><highlight class="normal">,<sp/>view);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(&amp;surfregion,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3966855a76171e76ab98d2bd8794b5d4" kindref="member">weston_view_update_transform_scissor</ref>(view,<sp/>&amp;surfregion);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfbox<sp/>=<sp/>pixman_region32_extents(&amp;surfregion);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a6d7bfa562732fc69bc391bc2d7adba0c" kindref="member">view_compute_bbox</ref>(view,<sp/>surfbox,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;surfregion);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a2ee87852507e80f9c33d1dbaa7749e1b" kindref="member">alpha</ref><sp/>==<sp/>1.0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>-&gt;<ref refid="structweston__matrix_1a82a0c24ad4a2dcdead2d84fcbc59a9ad" kindref="member">type</ref><sp/>==<sp/><ref refid="matrix_8h_1a36f1c17c5d79896d6e3072add55c8c2aa827fdf83faf73bf1af8049792f35c739" kindref="member">WESTON_MATRIX_TRANSFORM_TRANSLATE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ab587081c8482be3e8c68d6d806945aff" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_translate(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>-&gt;<ref refid="structweston__matrix_1a525734d347a66825ef16f69d00ab82c0" kindref="member">d</ref>[12],</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>-&gt;<ref refid="structweston__matrix_1a525734d347a66825ef16f69d00ab82c0" kindref="member">d</ref>[13]);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><ref refid="compositor_8c_1a8a613ccb6d7bc4a72867c81cef0a5c88" kindref="member">get_view_layer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a51c664daeb6b36d2742c3fb06d7887fa" kindref="member">parent_view</ref>)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="compositor_8c_1a8a613ccb6d7bc4a72867c81cef0a5c88" kindref="member">get_view_layer</ref>(view-&gt;<ref refid="structweston__view_1a51c664daeb6b36d2742c3fb06d7887fa" kindref="member">parent_view</ref>);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view-&gt;<ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>.<ref refid="structweston__layer__entry_1ad281f228d540b94475e9a788e646269b" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><ref refid="compositor_8c_1a9605e8abe1240aa6cbe7abdd2fc7f2be" kindref="member">weston_view_update_transform</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref><sp/>=<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1aae2b060fd6ca394b45cc79c7c3a601aa" kindref="member">dirty</ref>)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9605e8abe1240aa6cbe7abdd2fc7f2be" kindref="member">weston_view_update_transform</ref>(parent);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1aae2b060fd6ca394b45cc79c7c3a601aa" kindref="member">dirty</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3a8dd59c945611948e04e68ba09248d7" kindref="member">weston_view_damage_below</ref>(view);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transform.position<sp/>is<sp/>always<sp/>in<sp/>transformation_list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a826a16f7e32f6db912d72b515f0e4d46" kindref="member">transformation_list</ref>.next<sp/>==</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a4ba9d647b2fd275411de8d7ba1568758" kindref="member">link</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a826a16f7e32f6db912d72b515f0e4d46" kindref="member">transformation_list</ref>.prev<sp/>==</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>.<ref refid="structweston__transform_1a4ba9d647b2fd275411de8d7ba1568758" kindref="member">link</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!parent)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aed539db7d29e01bea9f9c1e6e3715a29" kindref="member">weston_view_update_transform_disable</ref>(view);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a41bf61c294ac21a6f96d3f39935d5104" kindref="member">weston_view_update_transform_enable</ref>(view)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aed539db7d29e01bea9f9c1e6e3715a29" kindref="member">weston_view_update_transform_disable</ref>(view);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer<sp/>=<sp/><ref refid="compositor_8c_1a8a613ccb6d7bc4a72867c81cef0a5c88" kindref="member">get_view_layer</ref>(view);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer)<sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_with_extents(&amp;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>,</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>,<sp/>&amp;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,<sp/>&amp;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3a8dd59c945611948e04e68ba09248d7" kindref="member">weston_view_damage_below</ref>(view);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1abe82cb82b75a6a7196ef924bb28959fc" kindref="member">weston_view_assign_output</ref>(view);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a827dae6ce67aec219d500428b1eddaf3" kindref="member">transform_signal</ref>,</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*child;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>invariant:<sp/>if<sp/>view-&gt;geometry.dirty,<sp/>then<sp/>all<sp/>views</highlight></codeline>
<codeline lineno="1601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>view-&gt;geometry.child_list<sp/>have<sp/>geometry.dirty<sp/>too.</highlight></codeline>
<codeline lineno="1602"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Corollary:<sp/>if<sp/>not<sp/>parent-&gt;geometry.dirty,<sp/>then<sp/>all<sp/>ancestors</highlight></codeline>
<codeline lineno="1603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>not<sp/>dirty.</highlight></codeline>
<codeline lineno="1604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1aae2b060fd6ca394b45cc79c7c3a601aa" kindref="member">dirty</ref>)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1aae2b060fd6ca394b45cc79c7c3a601aa" kindref="member">dirty</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(child,<sp/>&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1aa0a618d418cb2ffdd5d1eb070c5e3dd4" kindref="member">child_list</ref>,</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.parent_link)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(child);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><ref refid="compositor_8c_1a5567b014f0bf27bad49deebeb21df258" kindref="member">weston_view_to_global_fixed</ref>(struct<sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>vx,<sp/>wl_fixed_t<sp/>vy,</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/>wl_fixed_t<sp/>*<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xf,<sp/>yf;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1666f1b9cb32183712d16d893af00dae" kindref="member">weston_view_to_global_float</ref>(view,</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(vx),</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(vy),</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;xf,<sp/>&amp;yf);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref><sp/>=<sp/>wl_fixed_from_double(xf);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref><sp/>=<sp/>wl_fixed_from_double(yf);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><ref refid="compositor_8c_1a29e66a2344e0ea20637f84c0650ed90d" kindref="member">weston_view_from_global_float</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*vx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*vy)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ad81ff06883a9d4720a6b9400233ab04f" kindref="member">enabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__vector" kindref="compound">weston_vector</ref><sp/>v<sp/>=<sp/>{<sp/>{<sp/>x,<sp/>y,<sp/>0.0<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>,<sp/>1.0f<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a8798df1cafe699c91c0cc477f7524c1b" kindref="member">weston_matrix_transform</ref>(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a6e78c58ca4e4f089c383ff89c68f5f8e" kindref="member">inverse</ref>,<sp/>&amp;v);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabsf(v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3])<sp/>&lt;<sp/>1e-6)<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;warning:<sp/>numerical<sp/>instability<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;weston_view_from_global(),<sp/>divisor<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3]);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vx<sp/>=<sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]<sp/>/<sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vy<sp/>=<sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]<sp/>/<sp/>v.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vx<sp/>=<sp/>x<sp/>-<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vy<sp/>=<sp/>y<sp/>-<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y,</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*vx,<sp/>wl_fixed_t<sp/>*vy)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vxf,<sp/>vyf;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a29e66a2344e0ea20637f84c0650ed90d" kindref="member">weston_view_from_global_float</ref>(view,</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(x),</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(y),</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;vxf,<sp/>&amp;vyf);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vx<sp/>=<sp/>wl_fixed_from_double(vxf);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vy<sp/>=<sp/>wl_fixed_from_double(vyf);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><ref refid="compositor_8c_1a0e9c9a3eaa8a28e392585c3fc0a92c0f" kindref="member">weston_view_from_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/>*vx,<sp/>int32_t<sp/>*vy)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vxf,<sp/>vyf;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a29e66a2344e0ea20637f84c0650ed90d" kindref="member">weston_view_from_global_float</ref>(view,<sp/>x,<sp/>y,<sp/>&amp;vxf,<sp/>&amp;vyf);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vx<sp/>=<sp/>floorf(vxf);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vy<sp/>=<sp/>floorf(vyf);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><ref refid="compositor_8c_1a1c85f3f5502d6a8f4fed02cf23198ce0" kindref="member">weston_surface_schedule_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;output_list,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;output_mask<sp/>&amp;<sp/>(1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id))</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><ref refid="compositor_8c_1a60b2b361cc447823985669f9743e8e29" kindref="member">weston_view_schedule_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref><sp/>&amp;<sp/>(1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id))</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><ref refid="compositor_8c_1a37abee2fc874d8a6394731696eb5be5c" kindref="member">weston_surface_damage</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union_rect(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage,</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1c85f3f5502d6a8f4fed02cf23198ce0" kindref="member">weston_surface_schedule_repaint</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><ref refid="compositor_8c_1ae1df17820e004a35b62f4a923066e9fd" kindref="member">weston_view_set_position</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="1737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref><sp/>==<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref><sp/>&amp;&amp;<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref><sp/>==<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref><sp/>=<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref><sp/>=<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><ref refid="compositor_8c_1a19ed25f3efe3f373dcccd90251e05bc3" kindref="member">transform_parent_handle_parent_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view<sp/>=</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref>,</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.parent_destroy_listener);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7fe0cf860d67bd9ee79c561a95adb1d5" kindref="member">weston_view_set_transform_parent</ref>(view,<sp/>NULL);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><ref refid="compositor_8c_1a7fe0cf860d67bd9ee79c561a95adb1d5" kindref="member">weston_view_set_transform_parent</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="1760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad7af39a0da713a4c61f00c0ae3540c95" kindref="member">parent_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3495e04a1443c8f7a98e1a54cbac86b" kindref="member">parent_link</ref>);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref><sp/>=<sp/><ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad7af39a0da713a4c61f00c0ae3540c95" kindref="member">parent_destroy_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a19ed25f3efe3f373dcccd90251e05bc3" kindref="member">transform_parent_handle_parent_destroy</ref>;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>-&gt;<ref refid="structweston__view_1a2f080864caf024d69229c411f4c65f94" kindref="member">destroy_signal</ref>,</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad7af39a0da713a4c61f00c0ae3540c95" kindref="member">parent_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1aa0a618d418cb2ffdd5d1eb070c5e3dd4" kindref="member">child_list</ref>,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3495e04a1443c8f7a98e1a54cbac86b" kindref="member">parent_link</ref>);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><ref refid="compositor_8c_1a8b2efecffa6f4d76ea628be8363723d1" kindref="member">weston_view_set_mask</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(compositor-&gt;<ref refid="structweston__compositor_1a5be5c87f03fcdbc3aa7c456ebb96e4aa" kindref="member">capabilities</ref><sp/>&amp;<sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da9d3b76d6c75b519426aa5a4b8571b500" kindref="member">WESTON_CAP_VIEW_CLIP_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>not<sp/>allowed<sp/>without<sp/>capability!\n&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;view<sp/>%p<sp/>has<sp/>a<sp/>parent,<sp/>clip<sp/>forbidden!\n&quot;</highlight><highlight class="normal">,<sp/>view);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;<sp/>0<sp/>||<sp/>height<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>illegal<sp/>args<sp/>%d,<sp/>%d,<sp/>%d,<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__func__,</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>,<sp/>x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a60b2b361cc447823985669f9743e8e29" kindref="member">weston_view_schedule_repaint</ref>(view);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><ref refid="compositor_8c_1a7b5c79b554c9394f17b2d3a1fd7c5607" kindref="member">weston_view_set_mask_infinite</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a60b2b361cc447823985669f9743e8e29" kindref="member">weston_view_schedule_repaint</ref>(view);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>view<sp/>should<sp/>be<sp/>displayed</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1871"><highlight class="comment"><sp/>*<sp/>The<sp/>indicator<sp/>is<sp/>set<sp/>manually<sp/>when<sp/>assigning</highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/>*<sp/>a<sp/>view<sp/>to<sp/>a<sp/>surface.</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/>*<sp/>This<sp/>needs<sp/>reworking.<sp/>See<sp/>the<sp/>thread<sp/>starting<sp/>at:</highlight></codeline>
<codeline lineno="1875"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1876"><highlight class="comment"><sp/>*<sp/>https://lists.freedesktop.org/archives/wayland-devel/2016-June/029656.html</highlight></codeline>
<codeline lineno="1877"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><ref refid="compositor_8c_1ab6d0b425ed3ea36224d7fe3f3c5d4667" kindref="member">weston_view_is_mapped</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view-&gt;<ref refid="structweston__view_1a18d37d84392f17fc306c8410a84b1f04" kindref="member">is_mapped</ref>;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>view<sp/>is<sp/>opaque<sp/>in<sp/>specified<sp/>region</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/>*<sp/>\param<sp/>view<sp/>The<sp/>view<sp/>to<sp/>check<sp/>for<sp/>opacity.</highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/>*<sp/>\param<sp/>region<sp/>The<sp/>region<sp/>to<sp/>check<sp/>for<sp/>opacity,<sp/>in<sp/>view<sp/>coordinates.</highlight></codeline>
<codeline lineno="1888"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1889"><highlight class="comment"><sp/>*<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>view<sp/>is<sp/>opaque<sp/>in<sp/>the<sp/>specified<sp/>region,<sp/>because<sp/>view</highlight></codeline>
<codeline lineno="1890"><highlight class="comment"><sp/>*<sp/>alpha<sp/>is<sp/>1.0<sp/>and<sp/>either<sp/>the<sp/>opaque<sp/>region<sp/>set<sp/>by<sp/>the<sp/>client<sp/>contains<sp/>the</highlight></codeline>
<codeline lineno="1891"><highlight class="comment"><sp/>*<sp/>specified<sp/>region,<sp/>or<sp/>the<sp/>buffer<sp/>pixel<sp/>format<sp/>or<sp/>solid<sp/>color<sp/>is<sp/>opaque.</highlight></codeline>
<codeline lineno="1892"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><ref refid="compositor_8c_1aed7c9bb67356401511a6503c3ad79fa6" kindref="member">weston_view_is_opaque</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev,<sp/>pixman_region32_t<sp/>*region)</highlight></codeline>
<codeline lineno="1895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>r;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a2ee87852507e80f9c33d1dbaa7749e1b" kindref="member">alpha</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a739863882d20b0be0cca2be06592d82a" kindref="member">is_opaque</ref>)</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1aae2b060fd6ca394b45cc79c7c3a601aa" kindref="member">dirty</ref>)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;r);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_subtract(&amp;r,<sp/>region,<sp/>&amp;ev-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pixman_region32_not_empty(&amp;r))</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;r);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><ref refid="compositor_8c_1a9f7bccb7057b651aefb9a0c6726afefb" kindref="member">weston_view_has_valid_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1affec03529ce882666716424fd468f575" kindref="member">buffer_ref</ref>.<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><ref refid="compositor_8c_1acf5cce4094634e7b4bca357181e7cdcd" kindref="member">weston_view_matches_output_entirely</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev,</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*extents<sp/>=</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_extents(&amp;ev-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extents-&gt;x1<sp/>!=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>||</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extents-&gt;y1<sp/>!=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>||</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extents-&gt;x2<sp/>!=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref><sp/>||</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extents-&gt;y2<sp/>!=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>a<sp/>surface<sp/>has<sp/>a<sp/>view<sp/>assigned<sp/>to<sp/>it</highlight></codeline>
<codeline lineno="1955"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1956"><highlight class="comment"><sp/>*<sp/>The<sp/>indicator<sp/>is<sp/>set<sp/>manually<sp/>when<sp/>mapping</highlight></codeline>
<codeline lineno="1957"><highlight class="comment"><sp/>*<sp/>a<sp/>surface<sp/>and<sp/>creating<sp/>a<sp/>view<sp/>for<sp/>it.</highlight></codeline>
<codeline lineno="1958"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1959"><highlight class="comment"><sp/>*<sp/>This<sp/>needs<sp/>to<sp/>go.<sp/>See<sp/>the<sp/>thread<sp/>starting<sp/>at:</highlight></codeline>
<codeline lineno="1960"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1961"><highlight class="comment"><sp/>*<sp/>https://lists.freedesktop.org/archives/wayland-devel/2016-June/029656.html</highlight></codeline>
<codeline lineno="1962"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><ref refid="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;is_mapped;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><ref refid="compositor_8c_1ae414372c58d7d4d3cda6836f10f7297b" kindref="member">surface_set_size</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height)</highlight></codeline>
<codeline lineno="1972"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref><sp/>==<sp/>width<sp/>&amp;&amp;<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref><sp/>==<sp/>height)</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref><sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><ref refid="compositor_8c_1ab9e73efa632b2b2aa47c1b460f08e16f" kindref="member">weston_surface_set_size</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae414372c58d7d4d3cda6836f10f7297b" kindref="member">surface_set_size</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><ref refid="compositor_8c_1a716350c40cfa4dbdaf261c189db93fd2" kindref="member">fixed_round_up_to_int</ref>(wl_fixed_t<sp/>f)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_fixed_to_int(wl_fixed_from_int(1)<sp/>-<sp/>1<sp/>+<sp/>f);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><ref refid="compositor_8c_1ac34fa0eb65307332b99b81459efb8996" kindref="member">convert_size_by_transform_scale</ref>(int32_t<sp/>*width_out,<sp/>int32_t<sp/>*height_out,</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height,</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>,</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale)</highlight></codeline>
<codeline lineno="2004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(scale<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_NORMAL:</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_180:</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED:</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_180:</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width_out<sp/>=<sp/>width<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height_out<sp/>=<sp/>height<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_90:</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_270:</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_90:</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270:</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width_out<sp/>=<sp/>height<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height_out<sp/>=<sp/>width<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>transform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><ref refid="compositor_8c_1a849ce542b155c49dca402c5409cc949c" kindref="member">weston_surface_calculate_size_from_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>*vp<sp/>=<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac34fa0eb65307332b99b81459efb8996" kindref="member">convert_size_by_transform_scale</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer,</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer,</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>-&gt;width,</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>-&gt;height,</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" kindref="member">transform</ref>,</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><ref refid="compositor_8c_1a6ac26db8811de30a2d615fba193bc8d3" kindref="member">weston_surface_update_size</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>*vp<sp/>=<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref>,<sp/><ref refid="structweston__buffer__viewport_1a98ff5062bc1f356b8df0f17bd3d17b0d" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a98ff5062bc1f356b8df0f17bd3d17b0d" kindref="member">height</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae414372c58d7d4d3cda6836f10f7297b" kindref="member">surface_set_size</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref>,<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1a98ff5062bc1f356b8df0f17bd3d17b0d" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>!=<sp/>wl_fixed_from_int(-1))<sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>w<sp/>=<sp/><ref refid="compositor_8c_1a716350c40cfa4dbdaf261c189db93fd2" kindref="member">fixed_round_up_to_int</ref>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>h<sp/>=<sp/><ref refid="compositor_8c_1a716350c40cfa4dbdaf261c189db93fd2" kindref="member">fixed_round_up_to_int</ref>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae414372c58d7d4d3cda6836f10f7297b" kindref="member">surface_set_size</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>w<sp/>?:<sp/>1,<sp/>h<sp/>?:<sp/>1);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae414372c58d7d4d3cda6836f10f7297b" kindref="member">surface_set_size</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref>,<sp/><ref refid="structweston__buffer__viewport_1a98ff5062bc1f356b8df0f17bd3d17b0d" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><ref refid="group__compositor_1ga8e5847024d92d76171a144d15c5452da" kindref="member">weston_compositor_get_time</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time)</highlight></codeline>
<codeline lineno="2077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_gettime(CLOCK_REALTIME,<sp/>time);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><ref refid="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" kindref="member">weston_compositor_pick_view</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/>wl_fixed_t<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*vx,<sp/>wl_fixed_t<sp/>*vy)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>view_x,<sp/>view_y;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>view_ix,<sp/>view_iy;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>wl_fixed_to_int(<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>wl_fixed_to_int(<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;compositor-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/><ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pixman_region32_contains_point(</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>,<sp/>ix,<sp/>iy,<sp/>NULL))</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(view,<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>,<sp/>&amp;view_x,<sp/>&amp;view_y);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view_ix<sp/>=<sp/>wl_fixed_to_int(view_x);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view_iy<sp/>=<sp/>wl_fixed_to_int(view_y);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pixman_region32_contains_point(&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ab288fca02a260a7eb9ca4d82b5b5f8e1" kindref="member">input</ref>,</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view_ix,<sp/>view_iy,<sp/>NULL))</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!pixman_region32_contains_point(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>,</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view_ix,<sp/>view_iy,<sp/>NULL))</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vx<sp/>=<sp/>view_x;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vy<sp/>=<sp/>view_y;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vx<sp/>=<sp/>wl_fixed_from_int(-1000000);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vy<sp/>=<sp/>wl_fixed_from_int(-1000000);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><ref refid="compositor_8c_1a2dda573c5d07d16bb4ea3d12552fe684" kindref="member">weston_compositor_repick</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="2125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a1261d536f85647f94598c6892e6b5b9f" kindref="member">session_active</ref>)</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(seat,<sp/>&amp;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ab4c35ec45448163579d52c41d7df701b" kindref="member">seat_list</ref>,<sp/><ref refid="structweston__seat_1a105bb1c3da70be29d32ab90882757d18" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6de88b133f2df2089534d96a88becb8c" kindref="member">weston_seat_repick</ref>(seat);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><ref refid="compositor_8c_1af34d4b676e7ce4e41a963cd0b41c6dc8" kindref="member">weston_view_unmap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="2137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1ab6d0b425ed3ea36224d7fe3f3c5d4667" kindref="member">weston_view_is_mapped</ref>(view))</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3a8dd59c945611948e04e68ba09248d7" kindref="member">weston_view_damage_below</ref>(view);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a282f55c3bc4fcad342539921f04cc484" kindref="member">weston_view_set_output</ref>(view,<sp/>NULL);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a18d37d84392f17fc306c8410a84b1f04" kindref="member">is_mapped</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a30169d037f8e3aa397fb354f9ee3f5a5" kindref="member">weston_layer_entry_remove</ref>(&amp;view-&gt;<ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;view-&gt;<ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;view-&gt;<ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af34bc0feacb56b0c008ecc97e52f5f3c" kindref="member">weston_surface_assign_output</ref>(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>))</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(seat,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ab4c35ec45448163579d52c41d7df701b" kindref="member">seat_list</ref>,<sp/><ref refid="structweston__seat_1a105bb1c3da70be29d32ab90882757d18" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/><ref refid="input_8c_1a4d586b87353ba3d18989739666a1f7dd" kindref="member">weston_seat_get_touch</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>&amp;&amp;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>==<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5c8f2d331758909aabe3ab0a320110a" kindref="member">weston_keyboard_set_focus</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref><sp/>&amp;&amp;<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>==<sp/>view)</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3796f149723a5e49d6b176837a50d093" kindref="member">weston_pointer_clear_focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref><sp/>&amp;&amp;<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus<sp/>==<sp/>view)</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8f5d2ab8262d54999fab8f84a4a87c4f" kindref="member">weston_touch_set_focus</ref>(<ref refid="structtouch" kindref="compound">touch</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><ref refid="compositor_8c_1a80d606617df1553ec673787ebcfa2ba5" kindref="member">weston_surface_unmap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;is_mapped<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af34d4b676e7ce4e41a963cd0b41c6dc8" kindref="member">weston_view_unmap</ref>(view);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a37142b17569064055bedc351a7d7dd25" kindref="member">output</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><ref refid="compositor_8c_1a08352bf4c20b0f27d456a674c9b5db50" kindref="member">weston_surface_reset_pending_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9cfb047c81ff27e9e303e8f48d3d65ed" kindref="member">weston_surface_state_set_buffer</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending,<sp/>NULL);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.sx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.sy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.newly_attached<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><ref refid="compositor_8c_1a3b0df14d913003992656e8f791a6da9f" kindref="member">weston_view_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="2194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;view-&gt;<ref refid="structweston__view_1a2f080864caf024d69229c411f4c65f94" kindref="member">destroy_signal</ref>,<sp/>view);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_list_empty(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1aa0a618d418cb2ffdd5d1eb070c5e3dd4" kindref="member">child_list</ref>));</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1ab6d0b425ed3ea36224d7fe3f3c5d4667" kindref="member">weston_view_is_mapped</ref>(view))<sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af34d4b676e7ce4e41a963cd0b41c6dc8" kindref="member">weston_view_unmap</ref>(view);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a85713ea74ab000b63800f8d67acda7f2" kindref="member">weston_compositor_build_view_list</ref>(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;view-&gt;<ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a30169d037f8e3aa397fb354f9ee3f5a5" kindref="member">weston_layer_entry_remove</ref>(&amp;view-&gt;<ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;view-&gt;<ref refid="structweston__view_1a7f10ad4288de845f3f42609bdf617416" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7fe0cf860d67bd9ee79c561a95adb1d5" kindref="member">weston_view_set_transform_parent</ref>(view,<sp/>NULL);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a282f55c3bc4fcad342539921f04cc484" kindref="member">weston_view_set_output</ref>(view,<sp/>NULL);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;view-&gt;<ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(view);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><ref refid="compositor_8c_1aa8175b2c6f8cd4cc3f3f6006ecf7acb1" kindref="member">weston_surface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__frame__callback" kindref="compound">weston_frame_callback</ref><sp/>*cb,<sp/>*next;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev,<sp/>*nv;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint,<sp/>*next_constraint;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--<ref refid="structsurface" kindref="compound">surface</ref>-&gt;ref_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;destroy_signal,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_list_empty(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list_pending));</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_list_empty(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list));</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(ev,<sp/>nv,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views,<sp/>surface_link)</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3b0df14d913003992656e8f791a6da9f" kindref="member">weston_view_destroy</ref>(ev);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1acfaf23bfe99d132bcb56e63e80535a14" kindref="member">weston_surface_state_fini</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending);</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a46c9d30efa62b7ca5f720b1dd83ebe12" kindref="member">weston_buffer_reference</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref,<sp/>NULL);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0abe1ac1aff541e5670f35fb2db85c7d" kindref="member">weston_buffer_release_reference</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_release_ref,<sp/>NULL);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;opaque);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;input);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(cb,<sp/>next,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;frame_callback_list,<sp/><ref refid="structweston__pointer__constraint_1ab329036693caeb2778aa17f1628c6e34" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(cb-&gt;<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9e35ed3c3311c408ac495e8f6588aa94" kindref="member">weston_presentation_feedback_discard_list</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;feedback_list);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(constraint,<sp/>next_constraint,</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pointer_constraints,</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer__constraint_1ab329036693caeb2778aa17f1628c6e34" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab181ee2bacdbc99648f9b7aa14be7437" kindref="member">weston_pointer_constraint_destroy</ref>(constraint);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_clear(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;acquire_fence_fd);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><ref refid="compositor_8c_1aa12406a4681fa5f9c5b124f3c2ebacc2" kindref="member">destroy_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="2266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>resource<sp/>to<sp/>NULL,<sp/>since<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>leave<sp/>a</highlight></codeline>
<codeline lineno="2272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dangling<sp/>pointer<sp/>if<sp/>the<sp/>surface<sp/>was<sp/>refcounted<sp/>and<sp/>survives</highlight></codeline>
<codeline lineno="2273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>weston_surface_destroy()<sp/>call.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource)</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;synchronization_resource)<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;synchronization_resource,</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aa8175b2c6f8cd4cc3f3f6006ecf7acb1" kindref="member">weston_surface_destroy</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><ref refid="compositor_8c_1aa90b197708859ed4f2848c93210108e9" kindref="member">weston_buffer_destroy_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="2289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref>,<sp/><ref refid="structweston__buffer_1a35e3e49c98eaba10e328bca3223d5c79" kindref="member">destroy_listener</ref>);</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;destroy_signal,<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><ref refid="compositor_8c_1a31d4c4886f3f3d7e363a732225462faf" kindref="member">weston_buffer_from_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__buffer_1a420d98068b5cb266b9ec3ad696333cf9" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/>*listener;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listener<sp/>=<sp/>wl_resource_get_destroy_listener(resource,</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aa90b197708859ed4f2848c93210108e9" kindref="member">weston_buffer_destroy_handler</ref>);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listener)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref>,</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroy_listener);</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;resource<sp/>=<sp/>resource;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;destroy_signal);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;destroy_listener.notify<sp/>=<sp/><ref refid="compositor_8c_1aa90b197708859ed4f2848c93210108e9" kindref="member">weston_buffer_destroy_handler</ref>;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;y_inverted<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_add_destroy_listener(resource,<sp/>&amp;<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;destroy_listener);</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><ref refid="compositor_8c_1afc11707445de683f8f5a17a50efaf6b0" kindref="member">weston_buffer_reference_handle_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="2326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref><sp/>*ref<sp/>=</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref>,</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__reference_1af2127d2c5b67e2201d396ff4ac8e3b15" kindref="member">destroy_listener</ref>);</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*)data<sp/>==<sp/>ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><ref refid="compositor_8c_1a46c9d30efa62b7ca5f720b1dd83ebe12" kindref="member">weston_buffer_reference</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref><sp/>*ref,</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref><sp/>&amp;&amp;<sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>!=<sp/>ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>-&gt;<ref refid="structweston__buffer_1a349981af081cad595e13fce42b1961b6" kindref="member">busy_count</ref>--;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>-&gt;<ref refid="structweston__buffer_1a349981af081cad595e13fce42b1961b6" kindref="member">busy_count</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_resource_get_client(ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>-&gt;<ref refid="structweston__buffer_1a420d98068b5cb266b9ec3ad696333cf9" kindref="member">resource</ref>));</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_buffer_send_release(ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>-&gt;<ref refid="structweston__buffer_1a420d98068b5cb266b9ec3ad696333cf9" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;ref-&gt;<ref refid="structweston__buffer__reference_1af2127d2c5b67e2201d396ff4ac8e3b15" kindref="member">destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>&amp;&amp;<sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>!=<sp/>ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;busy_count++;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;destroy_signal,</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ref-&gt;<ref refid="structweston__buffer__reference_1af2127d2c5b67e2201d396ff4ac8e3b15" kindref="member">destroy_listener</ref>);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref-&gt;<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref><sp/>=<sp/><ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref-&gt;<ref refid="structweston__buffer__reference_1af2127d2c5b67e2201d396ff4ac8e3b15" kindref="member">destroy_listener</ref>.notify<sp/>=<sp/><ref refid="compositor_8c_1afc11707445de683f8f5a17a50efaf6b0" kindref="member">weston_buffer_reference_handle_destroy</ref>;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><ref refid="compositor_8c_1a3e33e031d0a5d63c152fd4df34fecabc" kindref="member">weston_buffer_release_reference_handle_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="2361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/>*ref<sp/>=</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref>,</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__release__reference_1a4c77bd7f6c6a01bcf827ba3fb8dd6cec" kindref="member">destroy_listener</ref>);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*)data<sp/>==<sp/>ref-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref>-&gt;<ref refid="structweston__buffer__release_1ad09915f551946199a868a7ef4a6de55c" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><ref refid="compositor_8c_1ae1b6b031617a5c703532f54ac2b5b10c" kindref="member">weston_buffer_release_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release" kindref="compound">weston_buffer_release</ref><sp/>*<ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref>)</highlight></codeline>
<codeline lineno="2372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource<sp/>=<sp/><ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref>-&gt;resource;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>release_fence_fd<sp/>=<sp/><ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref>-&gt;fence_fd;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release_fence_fd<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zwp_linux_buffer_release_v1_send_fenced_release(</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource,<sp/>release_fence_fd);</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zwp_linux_buffer_release_v1_send_immediate_release(</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><ref refid="compositor_8c_1a0abe1ac1aff541e5670f35fb2db85c7d" kindref="member">weston_buffer_release_reference</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/>*ref,</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release" kindref="compound">weston_buffer_release</ref><sp/>*<ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref>)</highlight></codeline>
<codeline lineno="2390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref><sp/>==<sp/>ref-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref>)</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref>-&gt;<ref refid="structweston__buffer__release_1a78530295221869aeaa781d91197c6237" kindref="member">ref_count</ref>--;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;ref-&gt;<ref refid="structweston__buffer__release__reference_1a4c77bd7f6c6a01bcf827ba3fb8dd6cec" kindref="member">destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref>-&gt;<ref refid="structweston__buffer__release_1a78530295221869aeaa781d91197c6237" kindref="member">ref_count</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae1b6b031617a5c703532f54ac2b5b10c" kindref="member">weston_buffer_release_destroy</ref>(ref-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref>);</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref>-&gt;ref_count++;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_add_destroy_listener(<ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref>-&gt;resource,</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ref-&gt;<ref refid="structweston__buffer__release__reference_1a4c77bd7f6c6a01bcf827ba3fb8dd6cec" kindref="member">destroy_listener</ref>);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref><sp/>=<sp/><ref refid="wayland_8c_1ab5d416a8b42cfb1af4422880a0ad8395" kindref="member">buffer_release</ref>;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref-&gt;<ref refid="structweston__buffer__release__reference_1a4c77bd7f6c6a01bcf827ba3fb8dd6cec" kindref="member">destroy_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3e33e031d0a5d63c152fd4df34fecabc" kindref="member">weston_buffer_release_reference_handle_destroy</ref>;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><ref refid="compositor_8c_1a23af340f7ae575bb87d66816c0e0ebdc" kindref="member">weston_buffer_release_move</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/>*dest,</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/>*src)</highlight></codeline>
<codeline lineno="2415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0abe1ac1aff541e5670f35fb2db85c7d" kindref="member">weston_buffer_release_reference</ref>(dest,<sp/>src-&gt;<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref>);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0abe1ac1aff541e5670f35fb2db85c7d" kindref="member">weston_buffer_release_reference</ref>(src,<sp/>NULL);</highlight></codeline>
<codeline lineno="2418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><ref refid="compositor_8c_1a9db6a27b0a2d68a347640c0d65e13896" kindref="member">weston_surface_attach</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a46c9d30efa62b7ca5f720b1dd83ebe12" kindref="member">weston_buffer_reference</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref,<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structbuffer" kindref="compound">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(<ref refid="structsurface" kindref="compound">surface</ref>))</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a80d606617df1553ec673787ebcfa2ba5" kindref="member">weston_surface_unmap</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;renderer-&gt;attach(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a849ce542b155c49dca402c5409cc949c" kindref="member">weston_surface_calculate_size_from_buffer</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9e35ed3c3311c408ac495e8f6588aa94" kindref="member">weston_presentation_feedback_discard_list</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;feedback_list);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><ref refid="group__compositor_1ga674d4dd1642c36ca73a7ddc246a4b411" kindref="member">weston_compositor_damage_all</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="2442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1gab45be972c9a7bf6c86c6ca8db03034f2" kindref="member">weston_output_damage</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><ref refid="group__output_1gab45be972c9a7bf6c86c6ca8db03034f2" kindref="member">weston_output_damage</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="2454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union(&amp;compositor-&gt;<ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>.<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>,</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;compositor-&gt;<ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>.<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>,</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><ref refid="compositor_8c_1a1a8cc3ae582c32975439217ea082b321" kindref="member">surface_flush_damage</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_shm_buffer_get(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>-&gt;resource))</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;renderer-&gt;flush_damage(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixman_region32_not_empty(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage))</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1ga3d4fa53ee35cc16bfc3e78fb964bcdd1" kindref="member">TL_POINT</ref>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor,<sp/></highlight><highlight class="stringliteral">&quot;core_flush_damage&quot;</highlight><highlight class="normal">,<sp/><ref refid="timeline_8h_1a6ed6b1dd7d330e7627d96d9f5ba67510" kindref="member">TLP_SURFACE</ref>(<ref refid="structsurface" kindref="compound">surface</ref>),</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timeline_8h_1a11f747612f1496b3fa2464323c77d153" kindref="member">TLP_OUTPUT</ref>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a37142b17569064055bedc351a7d7dd25" kindref="member">output</ref>),<sp/><ref refid="group__log_1ga54b3c5c32cc5f3527c9a3d11e0d9f54d" kindref="member">TLP_END</ref>);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_clear(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><ref refid="compositor_8c_1acb03c4841e0548b73c4c656ba2e497cf" kindref="member">view_accumulate_damage</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*opaque)</highlight></codeline>
<codeline lineno="2480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>damage;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;damage);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ad81ff06883a9d4720a6b9400233ab04f" kindref="member">enabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*extents;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extents<sp/>=<sp/>pixman_region32_extents(&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ae331801d413dd52701ded0995519419c" kindref="member">damage</ref>);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a6d7bfa562732fc69bc391bc2d7adba0c" kindref="member">view_compute_bbox</ref>(view,<sp/>extents,<sp/>&amp;damage);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;damage,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ae331801d413dd52701ded0995519419c" kindref="member">damage</ref>);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_translate(&amp;damage,</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;damage,<sp/>&amp;damage,</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_subtract(&amp;damage,<sp/>&amp;damage,<sp/>opaque);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union(&amp;view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>,</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>,<sp/>&amp;damage);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;damage);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;view-&gt;<ref refid="structweston__view_1a7f10ad4288de845f3f42609bdf617416" kindref="member">clip</ref>,<sp/>opaque);</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union(opaque,<sp/>opaque,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><ref refid="compositor_8c_1a6ba21689267a8c556a22e62d862a3dbf" kindref="member">output_accumulate_damage</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="2507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*plane;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,<sp/><ref refid="vertex-clipping_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;<ref refid="vertex-clipping_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a23c931ea0ccaf279dbbc8676c8d75d50" kindref="member">plane_list</ref>,<sp/><ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1a8ec61668668ea9f07c2590c9d9d7180b" kindref="member">clip</ref>,<sp/>&amp;<ref refid="vertex-clipping_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(ev,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/><ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref><sp/>!=<sp/><ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>)</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1acb03c4841e0548b73c4c656ba2e497cf" kindref="member">view_accumulate_damage</ref>(ev,<sp/>&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union(&amp;<ref refid="vertex-clipping_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,<sp/>&amp;<ref refid="vertex-clipping_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,<sp/>&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="vertex-clipping_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(ev,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/><ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ae3c50e07ad19c86e6d62e75353ef94ee" kindref="member">touched</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(ev,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/><ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>views<sp/>not<sp/>visible<sp/>on<sp/>the<sp/>current<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(ev-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref><sp/>&amp;<sp/>(1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id)))</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ae3c50e07ad19c86e6d62e75353ef94ee" kindref="member">touched</ref>)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ae3c50e07ad19c86e6d62e75353ef94ee" kindref="member">touched</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1a8cc3ae582c32975439217ea082b321" kindref="member">surface_flush_damage</ref>(ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>the<sp/>renderer<sp/>and<sp/>the<sp/>backend<sp/>have<sp/>seen<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="2547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>now.<sp/>If<sp/>renderer<sp/>needs<sp/>the<sp/>buffer,<sp/>it<sp/>has<sp/>its<sp/>own</highlight></codeline>
<codeline lineno="2548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reference<sp/>set.<sp/>If<sp/>the<sp/>backend<sp/>wants<sp/>to<sp/>keep<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="2549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>around<sp/>for<sp/>migrating<sp/>the<sp/>surface<sp/>into<sp/>a<sp/>non-primary<sp/>plane</highlight></codeline>
<codeline lineno="2550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>later,<sp/>keep_buffer<sp/>is<sp/>true.<sp/>Otherwise,<sp/>drop<sp/>the<sp/>core</highlight></codeline>
<codeline lineno="2551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reference<sp/>now,<sp/>and<sp/>allow<sp/>early<sp/>buffer<sp/>release.<sp/>This<sp/>enables</highlight></codeline>
<codeline lineno="2552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>clients<sp/>to<sp/>use<sp/>single-buffering.</highlight></codeline>
<codeline lineno="2553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a2a50fa49f7663968c8129721357270de" kindref="member">keep_buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a46c9d30efa62b7ca5f720b1dd83ebe12" kindref="member">weston_buffer_reference</ref>(&amp;ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1affec03529ce882666716424fd468f575" kindref="member">buffer_ref</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0abe1ac1aff541e5670f35fb2db85c7d" kindref="member">weston_buffer_release_reference</ref>(</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ad07b0407bd73441852ec1336c3b92118" kindref="member">buffer_release_ref</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><ref refid="compositor_8c_1a092f0ef14e5e1724842a8e715958cec1" kindref="member">surface_stash_subsurface_views</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(sub,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list,<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>==<sp/><ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;sub-&gt;<ref refid="structweston__subsurface_1ab93b7ffd6d26e3c4089a36dd700c7868" kindref="member">unused_views</ref>,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" kindref="member">views</ref>);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" kindref="member">views</ref>);</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a092f0ef14e5e1724842a8e715958cec1" kindref="member">surface_stash_subsurface_views</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><ref refid="compositor_8c_1a1c9ba96123930d7ece3568bb1af09df5" kindref="member">surface_free_unused_subsurface_views</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/>*nv;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(sub,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list,<sp/><ref refid="structweston__view_1ad3495e04a1443c8f7a98e1a54cbac86b" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>==<sp/><ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(view,<sp/>nv,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1ab93b7ffd6d26e3c4089a36dd700c7868" kindref="member">unused_views</ref>,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af34d4b676e7ce4e41a963cd0b41c6dc8" kindref="member">weston_view_unmap</ref><sp/>(view);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3b0df14d913003992656e8f791a6da9f" kindref="member">weston_view_destroy</ref>(view);</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1c9ba96123930d7ece3568bb1af09df5" kindref="member">surface_free_unused_subsurface_views</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><ref refid="compositor_8c_1a9e4901372e3d7fc89f4ede3f1e79f9cd" kindref="member">view_list_add_subsurface_view</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="2601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*child;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view<sp/>=<sp/>NULL,<sp/>*iv;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>))</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(iv,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1ab93b7ffd6d26e3c4089a36dd700c7868" kindref="member">unused_views</ref>,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iv-&gt;geometry.parent<sp/>==<sp/><ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>iv;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view)<sp/>{</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>it<sp/>back<sp/>in<sp/>the<sp/>surface&apos;s<sp/>list<sp/>of<sp/>views<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;view-&gt;<ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" kindref="member">views</ref>,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/><ref refid="compositor_8c_1aa7c65b03520dde2e12d5a35f444435d5" kindref="member">weston_view_create</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae1df17820e004a35b62f4a923066e9fd" kindref="member">weston_view_set_position</ref>(view,</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1a8baddc94439e6119d2caeae21756811f" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1a6b10500dc4cefdee48e5d3b4b9040f97" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7fe0cf860d67bd9ee79c561a95adb1d5" kindref="member">weston_view_set_transform_parent</ref>(view,<sp/><ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a51c664daeb6b36d2742c3fb06d7887fa" kindref="member">parent_view</ref><sp/>=<sp/><ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9605e8abe1240aa6cbe7abdd2fc7f2be" kindref="member">weston_view_update_transform</ref>(view);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a18d37d84392f17fc306c8410a84b1f04" kindref="member">is_mapped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(compositor-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>.prev,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(child,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>,<sp/><ref refid="structweston__view_1ad3495e04a1443c8f7a98e1a54cbac86b" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>==<sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(compositor-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>.prev,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9e4901372e3d7fc89f4ede3f1e79f9cd" kindref="member">view_list_add_subsurface_view</ref>(compositor,<sp/>child,<sp/>view);</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>recursively<sp/>adds<sp/>the<sp/>sub-surfaces<sp/>for<sp/>a<sp/>view,<sp/>relying<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="2645"><highlight class="comment"><sp/>*<sp/>sub-surface<sp/>order.<sp/>Thus,<sp/>if<sp/>a<sp/>client<sp/>restacks<sp/>the<sp/>sub-surfaces,<sp/>that</highlight></codeline>
<codeline lineno="2646"><highlight class="comment"><sp/>*<sp/>change<sp/>first<sp/>happens<sp/>to<sp/>the<sp/>sub-surface<sp/>list,<sp/>and<sp/>then<sp/>automatically</highlight></codeline>
<codeline lineno="2647"><highlight class="comment"><sp/>*<sp/>propagates<sp/>here.<sp/>See<sp/>weston_surface_damage_subsurfaces()<sp/>for<sp/>how<sp/>the</highlight></codeline>
<codeline lineno="2648"><highlight class="comment"><sp/>*<sp/>sub-surfaces<sp/>receive<sp/>damage<sp/>when<sp/>the<sp/>client<sp/>changes<sp/>the<sp/>state.</highlight></codeline>
<codeline lineno="2649"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><ref refid="compositor_8c_1ac0185a13039a19aeb8a792569edea2e9" kindref="member">view_list_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="2653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9605e8abe1240aa6cbe7abdd2fc7f2be" kindref="member">weston_view_update_transform</ref>(view);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(compositor-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>.prev,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(sub,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>,<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>==<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(compositor-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>.prev,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9e4901372e3d7fc89f4ede3f1e79f9cd" kindref="member">view_list_add_subsurface_view</ref>(compositor,<sp/>sub,<sp/>view);</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><ref refid="compositor_8c_1a85713ea74ab000b63800f8d67acda7f2" kindref="member">weston_compositor_build_view_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="2673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/>*tmp;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(layer,<sp/>&amp;<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a9d3d923255aac874249ee6208d012a1c" kindref="member">layer_list</ref>,<sp/><ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>,<sp/>layer_link.link)</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a092f0ef14e5e1724842a8e715958cec1" kindref="member">surface_stash_subsurface_views</ref>(view-&gt;<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(view,<sp/>tmp,<sp/>&amp;<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>,<sp/><ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;view-&gt;<ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(layer,<sp/>&amp;<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>-&gt;layer_list,<sp/><ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;layer-&gt;view_list.link,<sp/>layer_link.link)<sp/>{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac0185a13039a19aeb8a792569edea2e9" kindref="member">view_list_add</ref>(<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>,<sp/>view);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(layer,<sp/>&amp;<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a9d3d923255aac874249ee6208d012a1c" kindref="member">layer_list</ref>,<sp/><ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>,<sp/>layer_link.link)</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1c9ba96123930d7ece3568bb1af09df5" kindref="member">surface_free_unused_subsurface_views</ref>(view-&gt;<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><ref refid="compositor_8c_1a999dfbb20f771e6ed9c9410c2cb94aca" kindref="member">weston_output_take_feedback_list</ref>(struct<sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="2699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref><sp/>*<ref refid="structfeedback" kindref="compound">feedback</ref>;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;feedback_list))</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>views<sp/>must<sp/>have<sp/>the<sp/>flag<sp/>for<sp/>the<sp/>flag<sp/>to<sp/>survive.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views,<sp/>surface_link)<sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>views<sp/>that<sp/>are<sp/>not<sp/>on<sp/>this<sp/>output<sp/>at<sp/>all<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref><sp/>&amp;<sp/>(1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id))</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>&amp;=<sp/>view-&gt;<ref refid="structweston__view_1a51a7b717c3e3a9e6024cfa2bfa95ca0d" kindref="member">psf_flags</ref>;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structfeedback" kindref="compound">feedback</ref>,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;feedback_list,<sp/><ref refid="structweston__presentation__feedback_1a57cb4d2be2f4783258168d332eb5d3f8" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;psf_flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;feedback_list,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;feedback_list);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;feedback_list);</highlight></codeline>
<codeline lineno="2719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><ref refid="compositor_8c_1a2867191b08eb96f9f930169435b3fc91" kindref="member">weston_output_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*repaint_data)</highlight></codeline>
<codeline lineno="2723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__animation" kindref="compound">weston_animation</ref><sp/>*animation,<sp/>*next;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__frame__callback" kindref="compound">weston_frame_callback</ref><sp/>*cb,<sp/>*cnext;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>frame_callback_list;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>output_damage;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>frame_time_msec;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>highest_requested<sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;destroying)</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1ga3d4fa53ee35cc16bfc3e78fb964bcdd1" kindref="member">TL_POINT</ref>(ec,<sp/></highlight><highlight class="stringliteral">&quot;core_repaint_begin&quot;</highlight><highlight class="normal">,<sp/><ref refid="timeline_8h_1a11f747612f1496b3fa2464323c77d153" kindref="member">TLP_OUTPUT</ref>(<ref refid="structoutput" kindref="compound">output</ref>),<sp/><ref refid="group__log_1ga54b3c5c32cc5f3527c9a3d11e0d9f54d" kindref="member">TLP_END</ref>);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rebuild<sp/>the<sp/>surface<sp/>list<sp/>and<sp/>update<sp/>surface<sp/>transforms<sp/>up<sp/>front.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a85713ea74ab000b63800f8d67acda7f2" kindref="member">weston_compositor_build_view_list</ref>(ec);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>highest<sp/>protection<sp/>desired<sp/>for<sp/>an<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(ev,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a0fbe47c63b1a9a07b10d5c9074841c2e" kindref="member">output_mask</ref><sp/>&amp;<sp/>(1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id))<sp/>{</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>desired_protection<sp/>of<sp/>the<sp/>output<sp/>should<sp/>be<sp/>the</highlight></codeline>
<codeline lineno="2747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>maximum<sp/>of<sp/>the<sp/>desired_protection<sp/>of<sp/>the<sp/>surfaces,</highlight></codeline>
<codeline lineno="2748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>are<sp/>displayed<sp/>on<sp/>that<sp/>output,<sp/>to<sp/>avoid</highlight></codeline>
<codeline lineno="2749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reducing<sp/>the<sp/>protection<sp/>for<sp/>existing<sp/>surfaces.</highlight></codeline>
<codeline lineno="2750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a64f9fe73b0da889194bbfee96e0aa69e" kindref="member">desired_protection</ref><sp/>&gt;<sp/>highest_requested)</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_requested<sp/>=</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a64f9fe73b0da889194bbfee96e0aa69e" kindref="member">desired_protection</ref>;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;desired_protection<sp/>=<sp/>highest_requested;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;assign_planes<sp/>&amp;&amp;<sp/>!<ref refid="structoutput" kindref="compound">output</ref>-&gt;disable_planes)<sp/>{</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;assign_planes(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>repaint_data);</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(ev,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a6c1656484b6903667a3b4add28c5863e" kindref="member">weston_view_move_to_plane</ref>(ev,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>);</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="structweston__view_1a51a7b717c3e3a9e6024cfa2bfa95ca0d" kindref="member">psf_flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;frame_callback_list);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(ev,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>This<sp/>operation<sp/>is<sp/>safe<sp/>to<sp/>do<sp/>multiple<sp/>times<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="2771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>same<sp/>surface.</highlight></codeline>
<codeline lineno="2772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ae8d290fdb242cb764120c95fe33c3f58" kindref="member">output</ref><sp/>==<sp/><ref refid="structoutput" kindref="compound">output</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;frame_callback_list,</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1afc7c31a38f39e63d09d2df93bb00af8d" kindref="member">frame_callback_list</ref>);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1afc7c31a38f39e63d09d2df93bb00af8d" kindref="member">frame_callback_list</ref>);</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a999dfbb20f771e6ed9c9410c2cb94aca" kindref="member">weston_output_take_feedback_list</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>ev-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a6ba21689267a8c556a22e62d862a3dbf" kindref="member">output_accumulate_damage</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;output_damage);</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;output_damage,</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>.<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region);</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_subtract(&amp;output_damage,</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;output_damage,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>.<ref refid="structweston__plane_1a8ec61668668ea9f07c2590c9d9d7180b" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;dirty)</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7885b07813c43dba107948b93948ffc0" kindref="member">weston_output_update_matrix</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;output_damage,<sp/>repaint_data);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;output_damage);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_needed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>=<sp/>REPAINT_AWAITING_COMPLETION;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2dda573c5d07d16bb4ea3d12552fe684" kindref="member">weston_compositor_repick</ref>(ec);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_time_msec<sp/>=<sp/>timespec_to_msec(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;frame_time);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(cb,<sp/>cnext,<sp/>&amp;frame_callback_list,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_callback_send_done(cb-&gt;<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref>,<sp/>frame_time_msec);</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(cb-&gt;<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(animation,<sp/>next,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;animation_list,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animation-&gt;<ref refid="structweston__animation_1aa38ca8483d827a04f0c0acba60106e68" kindref="member">frame_counter</ref>++;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animation-&gt;<ref refid="structweston__animation_1a2a8f689eadd9303701877f6ffb15bd21" kindref="member">frame</ref>(animation,<sp/><ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;frame_time);</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1ga3d4fa53ee35cc16bfc3e78fb964bcdd1" kindref="member">TL_POINT</ref>(ec,<sp/></highlight><highlight class="stringliteral">&quot;core_repaint_posted&quot;</highlight><highlight class="normal">,<sp/><ref refid="timeline_8h_1a11f747612f1496b3fa2464323c77d153" kindref="member">TLP_OUTPUT</ref>(<ref refid="structoutput" kindref="compound">output</ref>),<sp/><ref refid="group__log_1ga54b3c5c32cc5f3527c9a3d11e0d9f54d" kindref="member">TLP_END</ref>);</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><ref refid="compositor_8c_1a8d755040e2f527edf3a8e58103a869f3" kindref="member">weston_output_schedule_repaint_reset</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="2822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>=<sp/>REPAINT_NOT_SCHEDULED;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1ga3d4fa53ee35cc16bfc3e78fb964bcdd1" kindref="member">TL_POINT</ref>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor,<sp/></highlight><highlight class="stringliteral">&quot;core_repaint_exit_loop&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timeline_8h_1a11f747612f1496b3fa2464323c77d153" kindref="member">TLP_OUTPUT</ref>(<ref refid="structoutput" kindref="compound">output</ref>),<sp/><ref refid="group__log_1ga54b3c5c32cc5f3527c9a3d11e0d9f54d" kindref="member">TLP_END</ref>);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><ref refid="compositor_8c_1ac7c1af243e29d2397f591a16b9989a80" kindref="member">weston_output_maybe_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*now,</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*repaint_data)</highlight></codeline>
<codeline lineno="2831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>msec_to_repaint;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>not<sp/>ready<sp/>yet;<sp/>come<sp/>back<sp/>to<sp/>make<sp/>a<sp/>decision<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>!=<sp/>REPAINT_SCHEDULED)</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msec_to_repaint<sp/>=<sp/>timespec_sub_to_msec(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,<sp/>now);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msec_to_repaint<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we&apos;re<sp/>sleeping,<sp/>drop<sp/>the<sp/>repaint<sp/>machinery<sp/>entirely;<sp/>we<sp/>will</highlight></codeline>
<codeline lineno="2845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>explicitly<sp/>repaint<sp/>all<sp/>outputs<sp/>when<sp/>we<sp/>come<sp/>back.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>==<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" kindref="member">WESTON_COMPOSITOR_SLEEPING</ref><sp/>||</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>==<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" kindref="member">WESTON_COMPOSITOR_OFFSCREEN</ref>)</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>actually<sp/>need<sp/>to<sp/>repaint<sp/>this<sp/>output;<sp/>drop<sp/>it<sp/>from</highlight></codeline>
<codeline lineno="2851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>repaint<sp/>until<sp/>something<sp/>causes<sp/>damage.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_needed)</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>repaint<sp/>fails,<sp/>we<sp/>aren&apos;t<sp/>going<sp/>to<sp/>get<sp/>weston_output_finish_frame</highlight></codeline>
<codeline lineno="2856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>trigger<sp/>a<sp/>new<sp/>repaint,<sp/>so<sp/>drop<sp/>it<sp/>from<sp/>repaint<sp/>and<sp/>hope</highlight></codeline>
<codeline lineno="2857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>something<sp/>schedules<sp/>a<sp/>successful<sp/>repaint<sp/>later.<sp/>As<sp/>repainting<sp/>may</highlight></codeline>
<codeline lineno="2858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>take<sp/>some<sp/>time,<sp/>re-read<sp/>our<sp/>clock<sp/>as<sp/>a<sp/>courtesy<sp/>to<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="2859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="compositor_8c_1a2867191b08eb96f9f930169435b3fc91" kindref="member">weston_output_repaint</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>repaint_data);</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" kindref="member">weston_compositor_read_presentation_clock</ref>(compositor,<sp/>now);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repainted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a8d755040e2f527edf3a8e58103a869f3" kindref="member">weston_output_schedule_repaint_reset</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><ref refid="compositor_8c_1a74b7a85b9664e8c61dcaf16efeac7c18" kindref="member">output_repaint_timer_arm</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="2875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_should_repaint<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>now;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>msec_to_next<sp/>=<sp/>INT64_MAX;</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" kindref="member">weston_compositor_read_presentation_clock</ref>(compositor,<sp/>&amp;now);</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;compositor-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>msec_to_this;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>!=<sp/>REPAINT_SCHEDULED)</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msec_to_this<sp/>=<sp/>timespec_sub_to_msec(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;now);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!any_should_repaint<sp/>||<sp/>msec_to_this<sp/>&lt;<sp/>msec_to_next)</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msec_to_next<sp/>=<sp/>msec_to_this;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_should_repaint<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!any_should_repaint)</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Even<sp/>if<sp/>we<sp/>should<sp/>repaint<sp/>immediately,<sp/>add<sp/>the<sp/>minimum<sp/>1<sp/>ms<sp/>delay.</highlight></codeline>
<codeline lineno="2901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>a<sp/>workaround<sp/>to<sp/>allow<sp/>coalescing<sp/>multiple<sp/>output<sp/>repaints</highlight></codeline>
<codeline lineno="2902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>particularly<sp/>from<sp/>weston_output_finish_frame()</highlight></codeline>
<codeline lineno="2903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>into<sp/>the<sp/>same<sp/>call,<sp/>which<sp/>would<sp/>not<sp/>happen<sp/>if<sp/>we<sp/>called</highlight></codeline>
<codeline lineno="2904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output_repaint_timer_handler()<sp/>directly.</highlight></codeline>
<codeline lineno="2905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msec_to_next<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msec_to_next<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_timer_update(compositor-&gt;<ref refid="structweston__compositor_1a18bd4b791afdf479323c96c85f5b6750" kindref="member">repaint_timer</ref>,<sp/>msec_to_next);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><ref refid="compositor_8c_1acc76702d769aa1e1bffb35feded7fdd4" kindref="member">output_repaint_timer_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="2914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>now;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*repaint_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" kindref="member">weston_compositor_read_presentation_clock</ref>(compositor,<sp/>&amp;now);</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1afb6d3bf67f2a115cc9e0db0786c8392a" kindref="member">last_repaint_start</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1ad0f91de4f685058cd13c886eb46b8f8d" kindref="member">repaint_begin</ref>)</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaint_data<sp/>=<sp/>compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1ad0f91de4f685058cd13c886eb46b8f8d" kindref="member">repaint_begin</ref>(compositor);</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;compositor-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="compositor_8c_1ac7c1af243e29d2397f591a16b9989a80" kindref="member">weston_output_maybe_repaint</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;now,<sp/>repaint_data);</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1ad776a53eef26b638742e2f64457d2e46" kindref="member">repaint_flush</ref>)</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1ad776a53eef26b638742e2f64457d2e46" kindref="member">repaint_flush</ref>(compositor,</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaint_data);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1a35f2c4c71714d56861ebc7b8486f6287" kindref="member">repaint_cancel</ref>)</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1a35f2c4c71714d56861ebc7b8486f6287" kindref="member">repaint_cancel</ref>(compositor,</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaint_data);</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;compositor-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;repainted)</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a8d755040e2f527edf3a8e58103a869f3" kindref="member">weston_output_schedule_repaint_reset</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;compositor-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/>link)</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repainted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a74b7a85b9664e8c61dcaf16efeac7c18" kindref="member">output_repaint_timer_arm</ref>(compositor);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><ref refid="compositor_8c_1ae796c3933dd7408dbd276248cc2f585f" kindref="member">convert_presentation_time_now</ref>(struct<sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*presentation_stamp,</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*presentation_now,</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clockid_t<sp/>target_clock)</highlight></codeline>
<codeline lineno="2976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>target_now<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>target_stamp;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>delta_ns;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;presentation_clock<sp/>==<sp/>target_clock)</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*presentation_stamp;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_gettime(target_clock,<sp/>&amp;target_now);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_ns<sp/>=<sp/>timespec_sub_to_nsec(presentation_stamp,<sp/>presentation_now);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_add_nsec(&amp;target_stamp,<sp/>&amp;target_now,<sp/>delta_ns);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_stamp;</highlight></codeline>
<codeline lineno="2989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><ref refid="group__output_1ga0f26c6ea66cf6683814ed60baf2a04c9" kindref="member">weston_output_finish_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*stamp,</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>presented_flags)</highlight></codeline>
<codeline lineno="2998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>refresh_nsec;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>now;</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>vblank_monotonic;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>msec_rel;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>==<sp/>REPAINT_AWAITING_COMPLETION);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stamp<sp/>||<sp/>(presented_flags<sp/>&amp;<sp/><ref refid="libweston_8h_1ac57ab20ccb8a4f9f66d9d2f9bb5500d0" kindref="member">WP_PRESENTATION_FEEDBACK_INVALID</ref>));</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" kindref="member">weston_compositor_read_presentation_clock</ref>(compositor,<sp/>&amp;now);</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>haven&apos;t<sp/>been<sp/>supplied<sp/>any<sp/>timestamp<sp/>at<sp/>all,<sp/>we<sp/>don&apos;t<sp/>have<sp/>a</highlight></codeline>
<codeline lineno="3011"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>timebase<sp/>to<sp/>work<sp/>against,<sp/>so<sp/>any<sp/>delay<sp/>just<sp/>wastes<sp/>time.<sp/>Push<sp/>a</highlight></codeline>
<codeline lineno="3012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>repaint<sp/>as<sp/>soon<sp/>as<sp/>possible<sp/>so<sp/>we<sp/>can<sp/>get<sp/>on<sp/>with<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stamp)<sp/>{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vblank_monotonic<sp/>=<sp/><ref refid="compositor_8c_1ae796c3933dd7408dbd276248cc2f585f" kindref="member">convert_presentation_time_now</ref>(compositor,</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamp,<sp/>&amp;now,</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLOCK_MONOTONIC);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1ga3d4fa53ee35cc16bfc3e78fb964bcdd1" kindref="member">TL_POINT</ref>(compositor,<sp/></highlight><highlight class="stringliteral">&quot;core_repaint_finished&quot;</highlight><highlight class="normal">,<sp/><ref refid="timeline_8h_1a11f747612f1496b3fa2464323c77d153" kindref="member">TLP_OUTPUT</ref>(<ref refid="structoutput" kindref="compound">output</ref>),</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timeline_8h_1a03182ad6a1638c52490302369b5c448e" kindref="member">TLP_VBLANK</ref>(&amp;vblank_monotonic),<sp/><ref refid="group__log_1ga54b3c5c32cc5f3527c9a3d11e0d9f54d" kindref="member">TLP_END</ref>);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refresh_nsec<sp/>=<sp/>millihz_to_nsec(<ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;refresh);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9ed5c3db4ada6f1dd62f7464a7d8aec9" kindref="member">weston_presentation_feedback_present_list</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;feedback_list,</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>,<sp/>refresh_nsec,<sp/>stamp,</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;msc,</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>presented_flags);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;frame_time<sp/>=<sp/>*stamp;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_add_nsec(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,<sp/>stamp,<sp/>refresh_nsec);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_add_msec(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-compositor-&gt;<ref refid="structweston__compositor_1aebdb50c57184889bb82a75433ec5bb74" kindref="member">repaint_msec</ref>);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msec_rel<sp/>=<sp/>timespec_sub_to_msec(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,<sp/>&amp;now);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msec_rel<sp/>&lt;<sp/>-1000<sp/>||<sp/>msec_rel<sp/>&gt;<sp/>1000)<sp/>{</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>warned;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!warned)</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>computed<sp/>repaint<sp/>delay<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;insane:<sp/>%lld<sp/>msec\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>msec_rel);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Called<sp/>from<sp/>restart_repaint_loop<sp/>and<sp/>restart<sp/>happens<sp/>already<sp/>after</highlight></codeline>
<codeline lineno="3049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>deadline<sp/>given<sp/>by<sp/>repaint_msec?<sp/>In<sp/>that<sp/>case<sp/>we<sp/>delay<sp/>until</highlight></codeline>
<codeline lineno="3050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>deadline<sp/>of<sp/>the<sp/>next<sp/>frame,<sp/>to<sp/>give<sp/>clients<sp/>a<sp/>more<sp/>predictable</highlight></codeline>
<codeline lineno="3051"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>timing<sp/>of<sp/>the<sp/>repaint<sp/>cycle<sp/>to<sp/>lock<sp/>on.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(presented_flags<sp/>==<sp/><ref refid="libweston_8h_1ac57ab20ccb8a4f9f66d9d2f9bb5500d0" kindref="member">WP_PRESENTATION_FEEDBACK_INVALID</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msec_rel<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(timespec_sub_to_nsec(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,<sp/>&amp;now)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_add_nsec(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint,</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refresh_nsec);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal">out:</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>=<sp/>REPAINT_SCHEDULED;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a74b7a85b9664e8c61dcaf16efeac7c18" kindref="member">output_repaint_timer_arm</ref>(compositor);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"></highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><ref refid="compositor_8c_1acf4bda3e3d5108f93f239e4631ef3d23" kindref="member">idle_repaint</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="3068"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>==<sp/><ref refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a3650939da1d9263a0feb674509245a6b" kindref="member">REPAINT_BEGIN_FROM_IDLE</ref>);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>=<sp/><ref refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a8b90d343f622f9496714a9c77a0cf052" kindref="member">REPAINT_AWAITING_COMPLETION</ref>;</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;idle_repaint_source<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;start_repaint_loop(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a8d755040e2f527edf3a8e58103a869f3" kindref="member">weston_output_schedule_repaint_reset</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="3078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><ref refid="compositor_8c_1adcf675a1f1ac2cea92e8ca52900b89c4" kindref="member">weston_layer_entry_insert</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/>*list,</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/>*entry)</highlight></codeline>
<codeline lineno="3083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;list-&gt;<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>,<sp/>&amp;entry-&gt;<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="structweston__layer__entry_1ad281f228d540b94475e9a788e646269b" kindref="member">layer</ref><sp/>=<sp/>list-&gt;<ref refid="structweston__layer__entry_1ad281f228d540b94475e9a788e646269b" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="3086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><ref refid="compositor_8c_1a30169d037f8e3aa397fb354f9ee3f5a5" kindref="member">weston_layer_entry_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/>*entry)</highlight></codeline>
<codeline lineno="3090"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;entry-&gt;<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;entry-&gt;<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="structweston__layer__entry_1ad281f228d540b94475e9a788e646269b" kindref="member">layer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><ref refid="compositor_8c_1ab4294fb27b3079ee70660a0975d3e0e5" kindref="member">weston_layer_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer,</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="3105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref><sp/>=<sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;layer-&gt;<ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;layer-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>.<ref refid="structweston__layer__entry_1ad281f228d540b94475e9a788e646269b" kindref="member">layer</ref><sp/>=<sp/>layer;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aa94f16fd96514709edcd9b4a0163378c" kindref="member">weston_layer_set_mask_infinite</ref>(layer);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><ref refid="compositor_8c_1a736341961367a84eac0b635b94eefc61" kindref="member">weston_layer_set_position</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer,</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5c" kindref="member">weston_layer_position</ref><sp/>position)</highlight></codeline>
<codeline lineno="3124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*below;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;layer-&gt;<ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>layer_list<sp/>is<sp/>ordered<sp/>from<sp/>top<sp/>to<sp/>bottom,<sp/>the<sp/>last<sp/>layer<sp/>being<sp/>the</highlight></codeline>
<codeline lineno="3130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>background<sp/>with<sp/>the<sp/>smallest<sp/>position<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a8561a3d6a0d717894ae8110cc18e8487" kindref="member">position</ref><sp/>=<sp/><ref refid="structweston__layer_1a8561a3d6a0d717894ae8110cc18e8487" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_reverse(below,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a9d3d923255aac874249ee6208d012a1c" kindref="member">layer_list</ref>,<sp/><ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(below-&gt;<ref refid="structweston__layer_1a8561a3d6a0d717894ae8110cc18e8487" kindref="member">position</ref><sp/>&gt;=<sp/>layer-&gt;<ref refid="structweston__layer_1a8561a3d6a0d717894ae8110cc18e8487" kindref="member">position</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;below-&gt;<ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;layer-&gt;<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a9d3d923255aac874249ee6208d012a1c" kindref="member">layer_list</ref>,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><ref refid="compositor_8c_1aeea455f7de4acc7dda325e8dda148caa" kindref="member">weston_layer_unset_position</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer)</highlight></codeline>
<codeline lineno="3149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;layer-&gt;<ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;layer-&gt;<ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><ref refid="compositor_8c_1a3bad282ec84d83635ede2e78f0861f6c" kindref="member">weston_layer_set_mask</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer,</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="3157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.x1<sp/>=<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.x2<sp/>=<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref><sp/>+<sp/>width;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.y1<sp/>=<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.y2<sp/>=<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref><sp/>+<sp/>height;</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>,<sp/><ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><ref refid="compositor_8c_1aa94f16fd96514709edcd9b4a0163378c" kindref="member">weston_layer_set_mask_infinite</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer)</highlight></codeline>
<codeline lineno="3172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.x1<sp/>=<sp/>INT32_MIN;</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.x2<sp/>=<sp/>INT32_MAX;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.y1<sp/>=<sp/>INT32_MIN;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.y2<sp/>=<sp/>INT32_MAX;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>,<sp/><ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><ref refid="compositor_8c_1aa3710db18821fd6bb0226c49e22de3f9" kindref="member">weston_layer_mask_is_infinite</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer)</highlight></codeline>
<codeline lineno="3187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.x1<sp/>==<sp/>INT32_MIN<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.y1<sp/>==<sp/>INT32_MIN<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.x2<sp/>==<sp/>INT32_MAX<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.y2<sp/>==<sp/>INT32_MAX;</highlight></codeline>
<codeline lineno="3192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="3199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_loop<sp/>*loop;</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>==<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" kindref="member">WESTON_COMPOSITOR_SLEEPING</ref><sp/>||</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>==<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" kindref="member">WESTON_COMPOSITOR_OFFSCREEN</ref>)</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_needed)</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1ga3d4fa53ee35cc16bfc3e78fb964bcdd1" kindref="member">TL_POINT</ref>(compositor,<sp/></highlight><highlight class="stringliteral">&quot;core_repaint_req&quot;</highlight><highlight class="normal">,<sp/><ref refid="timeline_8h_1a11f747612f1496b3fa2464323c77d153" kindref="member">TLP_OUTPUT</ref>(<ref refid="structoutput" kindref="compound">output</ref>),<sp/><ref refid="group__log_1ga54b3c5c32cc5f3527c9a3d11e0d9f54d" kindref="member">TLP_END</ref>);</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>wl_display_get_event_loop(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_needed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>already<sp/>have<sp/>a<sp/>repaint<sp/>scheduled<sp/>for<sp/>our<sp/>idle<sp/>handler,</highlight></codeline>
<codeline lineno="3214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>no<sp/>need<sp/>to<sp/>set<sp/>it<sp/>again.<sp/>If<sp/>the<sp/>repaint<sp/>has<sp/>been<sp/>called<sp/>but</highlight></codeline>
<codeline lineno="3215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>not<sp/>finished,<sp/>then<sp/>weston_output_finish_frame()<sp/>will<sp/>notice</highlight></codeline>
<codeline lineno="3216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>a<sp/>repaint<sp/>is<sp/>needed<sp/>and<sp/>schedule<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>!=<sp/>REPAINT_NOT_SCHEDULED)</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>=<sp/>REPAINT_BEGIN_FROM_IDLE;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;idle_repaint_source);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;idle_repaint_source<sp/>=<sp/>wl_event_loop_add_idle(loop,<sp/><ref refid="compositor_8c_1acf4bda3e3d5108f93f239e4631ef3d23" kindref="member">idle_repaint</ref>,</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1ga3d4fa53ee35cc16bfc3e78fb964bcdd1" kindref="member">TL_POINT</ref>(compositor,<sp/></highlight><highlight class="stringliteral">&quot;core_repaint_enter_loop&quot;</highlight><highlight class="normal">,<sp/><ref refid="timeline_8h_1a11f747612f1496b3fa2464323c77d153" kindref="member">TLP_OUTPUT</ref>(<ref refid="structoutput" kindref="compound">output</ref>),<sp/><ref refid="group__log_1ga54b3c5c32cc5f3527c9a3d11e0d9f54d" kindref="member">TLP_END</ref>);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><ref refid="group__compositor_1ga8477eedbbb0660db00b0c1be93c913db" kindref="member">weston_compositor_schedule_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="3232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><ref refid="compositor_8c_1a5a0d1ef05488f5cda9db52851384fd3f" kindref="member">surface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="3241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><ref refid="compositor_8c_1ac8ce9129dec4b98443594b1530e74850" kindref="member">surface_attach</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*buffer_resource,<sp/>int32_t<sp/>sx,<sp/>int32_t<sp/>sy)</highlight></codeline>
<codeline lineno="3249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer_resource)<sp/>{</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/><ref refid="compositor_8c_1a31d4c4886f3f3d7e363a732225462faf" kindref="member">weston_buffer_from_resource</ref>(buffer_resource);</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attach,<sp/>attach,<sp/>without<sp/>commit<sp/>in<sp/>between<sp/>does<sp/>not<sp/>send</highlight></codeline>
<codeline lineno="3262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wl_buffer.release.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9cfb047c81ff27e9e303e8f48d3d65ed" kindref="member">weston_surface_state_set_buffer</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending,<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.sx<sp/>=<sp/>sx;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.sy<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.newly_attached<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><ref refid="compositor_8c_1a917d497af6f3b46cff8b8e945788c467" kindref="member">surface_damage</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__buffer_1a420d98068b5cb266b9ec3ad696333cf9" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/><ref refid="structweston__buffer_1a208f9607af5722a2f8130e77b2856801" kindref="member">width</ref>,<sp/>int32_t<sp/><ref refid="structweston__buffer_1a2ad81a0be5ad2a32696f10936f3123fb" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="3274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref><sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union_rect(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.damage_surface,</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.damage_surface,</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/><ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,<sp/><ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="3283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><ref refid="compositor_8c_1a7944a85d6240001e4a6d6a28c2095e1e" kindref="member">surface_damage_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/><ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,<sp/>int32_t<sp/><ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="3289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref><sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union_rect(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.damage_buffer,</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.damage_buffer,</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/><ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,<sp/><ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><ref refid="compositor_8c_1af9c12b9946237a2be9cdef08b4c35a6d" kindref="member">destroy_frame_callback</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="3302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__frame__callback" kindref="compound">weston_frame_callback</ref><sp/>*cb<sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;cb-&gt;<ref refid="structweston__frame__callback_1a3ab6028e919e5d0710aabc6168f9405c" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cb);</highlight></codeline>
<codeline lineno="3307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><ref refid="compositor_8c_1a912761f200744a8f0573d81b54b90567" kindref="member">surface_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref>,<sp/>uint32_t<sp/>callback)</highlight></codeline>
<codeline lineno="3312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__frame__callback" kindref="compound">weston_frame_callback</ref><sp/>*cb;</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*cb);</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref><sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_callback_interface,<sp/>1,</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback);</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb-&gt;<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cb);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(cb-&gt;<ref refid="structweston__frame__callback_1adcfb7cc579c10ffba2faf9181dac3a2d" kindref="member">resource</ref>,<sp/>NULL,<sp/>cb,</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af9c12b9946237a2be9cdef08b4c35a6d" kindref="member">destroy_frame_callback</ref>);</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.frame_callback_list.prev,<sp/>&amp;cb-&gt;<ref refid="structweston__frame__callback_1a3ab6028e919e5d0710aabc6168f9405c" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><ref refid="compositor_8c_1abc6fd4a4b0ba02c3d33c4460e83448d1" kindref="member">surface_set_opaque_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*region_resource)</highlight></codeline>
<codeline lineno="3340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(region_resource)<sp/>{</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>wl_resource_get_user_data(region_resource);</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.opaque,</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region);</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_clear(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.opaque);</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><ref refid="compositor_8c_1a0aa233677ade41ddddb66e3c2d3abac6" kindref="member">surface_set_input_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*region_resource)</highlight></codeline>
<codeline lineno="3357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(region_resource)<sp/>{</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>wl_resource_get_user_data(region_resource);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.input,</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.input);</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1416f09293d589dc99655700e0a72b53" kindref="member">region_init_infinite</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.input);</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Cause<sp/>damage<sp/>to<sp/>this<sp/>sub-surface<sp/>and<sp/>all<sp/>its<sp/>children.</highlight></codeline>
<codeline lineno="3372"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3373"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>useful<sp/>when<sp/>there<sp/>are<sp/>state<sp/>changes<sp/>that<sp/>need<sp/>an<sp/>implicit</highlight></codeline>
<codeline lineno="3374"><highlight class="comment"><sp/>*<sp/>damage,<sp/>e.g.<sp/>a<sp/>z-order<sp/>change.</highlight></codeline>
<codeline lineno="3375"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><ref refid="compositor_8c_1a411b1a124400a8cb7c32743969d392fd" kindref="member">weston_surface_damage_subsurfaces</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="3378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*child;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a37abee2fc874d8a6394731696eb5be5c" kindref="member">weston_surface_damage</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a94645d1d81a3ed9addee4ac8eaac8972" kindref="member">reordered</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(child,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>,<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>)</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child<sp/>!=<sp/>sub)</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a411b1a124400a8cb7c32743969d392fd" kindref="member">weston_surface_damage_subsurfaces</ref>(child);</highlight></codeline>
<codeline lineno="3387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><ref refid="compositor_8c_1a20cee2086988cfd1aa0b14a3193d152e" kindref="member">weston_surface_commit_subsurface_order</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="3391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_reverse(sub,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list_pending,</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>);</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>);</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1a94645d1d81a3ed9addee4ac8eaac8972" kindref="member">reordered</ref>)</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a411b1a124400a8cb7c32743969d392fd" kindref="member">weston_surface_damage_subsurfaces</ref>(sub);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><ref refid="compositor_8c_1a2c7580fd16e1524e7a78e0a7da90df65" kindref="member">weston_surface_build_buffer_matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/>*matrix)</highlight></codeline>
<codeline lineno="3407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>*vp<sp/>=<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>,<sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>,<sp/>dest_width,<sp/>dest_height;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a1a379a971f1948d4ccc8d76d58506078" kindref="member">weston_matrix_init</ref>(matrix);</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>==<sp/>wl_fixed_from_int(-1))<sp/>{</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer;</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>=<sp/>wl_fixed_to_double(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref><sp/>=<sp/>wl_fixed_to_double(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_width<sp/>=<sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>;</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_height<sp/>=<sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_width<sp/>=<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_height<sp/>=<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1a98ff5062bc1f356b8df0f17bd3d17b0d" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"></highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>!=<sp/>dest_width<sp/>||<sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref><sp/>!=<sp/>dest_height)</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1ae66be97d5f6b1aa202cf48c3c1f3a0e1" kindref="member">weston_matrix_scale</ref>(matrix,</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>/<sp/>dest_width,</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref><sp/>/<sp/>dest_height,<sp/>1);</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>!=<sp/>wl_fixed_from_int(-1))</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(matrix,</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a1b8c86e76e559b39c5c2f02dd4202265" kindref="member">src_x</ref>),</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" kindref="member">src_y</ref>),</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" kindref="member">transform</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED:</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_90:</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_180:</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270:</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1ae66be97d5f6b1aa202cf48c3c1f3a0e1" kindref="member">weston_matrix_scale</ref>(matrix,<sp/>-1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(matrix,</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" kindref="member">transform</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_NORMAL:</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED:</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_90:</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_90:</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a0fbcd18f6763c13802bf214a68f11b5d" kindref="member">weston_matrix_rotate_xy</ref>(matrix,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(matrix,</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer,<sp/>0);</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_180:</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_180:</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a0fbcd18f6763c13802bf214a68f11b5d" kindref="member">weston_matrix_rotate_xy</ref>(matrix,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(matrix,</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer,</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer,<sp/>0);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_270:</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270:</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a0fbcd18f6763c13802bf214a68f11b5d" kindref="member">weston_matrix_rotate_xy</ref>(matrix,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(matrix,</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1ae66be97d5f6b1aa202cf48c3c1f3a0e1" kindref="member">weston_matrix_scale</ref>(matrix,<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" kindref="member">scale</ref>,<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" kindref="member">scale</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><ref refid="compositor_8c_1ae8dd0a644496b82ef4bf964a31ef4912" kindref="member">fixed_sum_gt</ref>(wl_fixed_t<sp/>a,<sp/>wl_fixed_t<sp/>b,<sp/>wl_fixed_t<sp/>c)</highlight></codeline>
<codeline lineno="3485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int64_t)a<sp/>+<sp/>(int64_t)b<sp/>&gt;<sp/>(int64_t)c;</highlight></codeline>
<codeline lineno="3487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"></highlight></codeline>
<codeline lineno="3489"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><ref refid="compositor_8c_1a432a707b8a97876547d05d64b3354202" kindref="member">weston_surface_is_pending_viewport_source_valid</ref>(</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="3492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/>*pend<sp/>=<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending;</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>*vp<sp/>=<sp/>&amp;pend-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>;</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_from_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_from_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>w;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>h;</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>viewport<sp/>source<sp/>rect<sp/>is<sp/>not<sp/>set,<sp/>it<sp/>is<sp/>always<sp/>ok.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref><sp/>==<sp/>wl_fixed_from_int(-1))</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pend-&gt;<ref refid="structweston__surface__state_1a6597f745d7ffcd424e8cdaffce3cafb2" kindref="member">newly_attached</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pend-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac34fa0eb65307332b99b81459efb8996" kindref="member">convert_size_by_transform_scale</ref>(&amp;width_from_buffer,</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;height_from_buffer,</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pend-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>-&gt;<ref refid="structweston__buffer_1a208f9607af5722a2f8130e77b2856801" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pend-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>-&gt;<ref refid="structweston__buffer_1a2ad81a0be5ad2a32696f10936f3123fb" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" kindref="member">transform</ref>,</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>buffer:<sp/>viewport<sp/>is<sp/>irrelevant.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_from_buffer<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;width_from_buffer;</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_from_buffer<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;height_from_buffer;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert((width_from_buffer<sp/>==<sp/>0)<sp/>==<sp/>(height_from_buffer<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(width_from_buffer<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>height_from_buffer<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>buffer:<sp/>viewport<sp/>is<sp/>irrelevant.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width_from_buffer<sp/>==<sp/>0<sp/>||<sp/>height_from_buffer<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>checks<sp/>for<sp/>wl_fixed_from_int()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width_from_buffer<sp/>&gt;<sp/>wl_fixed_to_int(INT32_MAX))</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height_from_buffer<sp/>&gt;<sp/>wl_fixed_to_int(INT32_MAX))</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>wl_fixed_from_int(width_from_buffer);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>wl_fixed_from_int(height_from_buffer);</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1ae8dd0a644496b82ef4bf964a31ef4912" kindref="member">fixed_sum_gt</ref>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a1b8c86e76e559b39c5c2f02dd4202265" kindref="member">src_x</ref>,<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>,<sp/>w))</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1ae8dd0a644496b82ef4bf964a31ef4912" kindref="member">fixed_sum_gt</ref>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" kindref="member">src_y</ref>,<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>,<sp/>h))</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><ref refid="compositor_8c_1ad01b7a89f9a4c724b06e9f1a1f05fb36" kindref="member">fixed_is_integer</ref>(wl_fixed_t<sp/>v)</highlight></codeline>
<codeline lineno="3547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>&amp;<sp/>0xff)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><ref refid="compositor_8c_1ab239fc2e3bf80e7cd50225e989c1a19c" kindref="member">weston_surface_is_pending_viewport_dst_size_int</ref>(</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="3554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>*vp<sp/>=</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>vp-&gt;<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>.<ref refid="structweston__buffer__viewport_1a98ff5062bc1f356b8df0f17bd3d17b0d" kindref="member">height</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="compositor_8c_1ad01b7a89f9a4c724b06e9f1a1f05fb36" kindref="member">fixed_is_integer</ref>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad01b7a89f9a4c724b06e9f1a1f05fb36" kindref="member">fixed_is_integer</ref>(vp-&gt;<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>.<ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>);</highlight></codeline>
<codeline lineno="3565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Translate<sp/>pending<sp/>damage<sp/>in<sp/>buffer<sp/>co-ordinates<sp/>to<sp/>surface</highlight></codeline>
<codeline lineno="3568"><highlight class="comment"><sp/>*<sp/>co-ordinates<sp/>and<sp/>union<sp/>it<sp/>with<sp/>a<sp/>pixman_region32_t.</highlight></codeline>
<codeline lineno="3569"><highlight class="comment"><sp/>*<sp/>This<sp/>should<sp/>only<sp/>be<sp/>called<sp/>after<sp/>the<sp/>buffer<sp/>is<sp/>attached.</highlight></codeline>
<codeline lineno="3570"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><ref refid="compositor_8c_1a7f9ab53322e7c4360d112df3a38bd4f4" kindref="member">apply_damage_buffer</ref>(pixman_region32_t<sp/>*dest,</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/>*state)</highlight></codeline>
<codeline lineno="3575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.damage_buffer<sp/>needs<sp/>to<sp/>be<sp/>clipped<sp/>to<sp/>the<sp/>buffer,</highlight></codeline>
<codeline lineno="3579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>translated<sp/>into<sp/>surface<sp/>co-ordinates<sp/>and<sp/>unioned<sp/>with</highlight></codeline>
<codeline lineno="3580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>any<sp/>other<sp/>surface<sp/>damage.</highlight></codeline>
<codeline lineno="3581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>None<sp/>of<sp/>this<sp/>makes<sp/>sense<sp/>if<sp/>there<sp/>is<sp/>no<sp/>buffer<sp/>though.</highlight></codeline>
<codeline lineno="3582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>&amp;&amp;<sp/>pixman_region32_not_empty(&amp;state-&gt;<ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>))<sp/>{</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>buffer_damage;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect_rect(&amp;state-&gt;<ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>,</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>,</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;width,</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;height);</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;buffer_damage);</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a69d6ae1e2501bc0b76f563edadc212d1" kindref="member">weston_matrix_transform_region</ref>(&amp;buffer_damage,</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_to_surface_matrix,</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>);</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union(dest,<sp/>dest,<sp/>&amp;buffer_damage);</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;buffer_damage);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>should<sp/>clear<sp/>this<sp/>on<sp/>commit<sp/>even<sp/>if<sp/>there<sp/>was<sp/>no<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_clear(&amp;state-&gt;<ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>);</highlight></codeline>
<codeline lineno="3599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><ref refid="compositor_8c_1ab082e54ee88811e676e3e932e2820da4" kindref="member">weston_surface_set_desired_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>protection)</highlight></codeline>
<codeline lineno="3604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;desired_protection<sp/>==<sp/>protection)</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;desired_protection<sp/>=<sp/>protection;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a37abee2fc874d8a6394731696eb5be5c" kindref="member">weston_surface_damage</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><ref refid="compositor_8c_1aed71d5b5c095ee7fc682f0d3429206b6" kindref="member">weston_surface_set_protection_mode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208" kindref="member">weston_surface_protection_mode</ref><sp/>p_mode)</highlight></codeline>
<codeline lineno="3614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;content_protection;</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;protection_mode<sp/>=<sp/>p_mode;</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(psurface,<sp/>&amp;cp-&gt;<ref refid="structcontent__protection_1a8e39824cc2b131956732d99ddbd27e4a" kindref="member">protected_list</ref>,<sp/><ref refid="structprotected__surface_1aa40b1e3218e17c8c140de83036091348" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!psurface<sp/>||<sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref><sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1aa8e2bb41742f074cbbdcf2967965f3ad" kindref="member">weston_protected_surface_send_event</ref>(psurface,</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;current_protection);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><ref refid="compositor_8c_1ad420490981468499323960dbd05bf335" kindref="member">weston_surface_commit_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/>*state)</highlight></codeline>
<codeline lineno="3630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>;</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_buffer_transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_buffer_scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wp_viewport.set_source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wp_viewport.set_destination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_viewport<sp/>=<sp/>state-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.attach<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structweston__surface__state_1a6597f745d7ffcd424e8cdaffce3cafb2" kindref="member">newly_attached</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zwp_surface_synchronization_v1.set_acquire_fence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_move(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;acquire_fence_fd,</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a6d57cd58b8c29333b246883193786774" kindref="member">acquire_fence_fd</ref>);</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zwp_surface_synchronization_v1.get_release<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a23af340f7ae575bb87d66816c0e0ebdc" kindref="member">weston_buffer_release_move</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_release_ref,</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a38c0835d8fcdd6d883bc2685aae7402d" kindref="member">buffer_release_ref</ref>);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9db6a27b0a2d68a347640c0d65e13896" kindref="member">weston_surface_attach</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>state-&gt;<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9cfb047c81ff27e9e303e8f48d3d65ed" kindref="member">weston_surface_state_set_buffer</ref>(state,<sp/>NULL);</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(state-&gt;<ref refid="structweston__surface__state_1a6d57cd58b8c29333b246883193786774" kindref="member">acquire_fence_fd</ref><sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(state-&gt;<ref refid="structweston__surface__state_1a38c0835d8fcdd6d883bc2685aae7402d" kindref="member">buffer_release_ref</ref>.<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c7580fd16e1524e7a78e0a7da90df65" kindref="member">weston_surface_build_buffer_matrix</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;surface_to_buffer_matrix);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a6deb2743e2b32947874410e92b8d83e7" kindref="member">weston_matrix_invert</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_to_surface_matrix,</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;surface_to_buffer_matrix);</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structweston__surface__state_1a6597f745d7ffcd424e8cdaffce3cafb2" kindref="member">newly_attached</ref><sp/>||<sp/>state-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1a90026f4dae947712c1963459d7ef8cfa" kindref="member">changed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a6ac26db8811de30a2d615fba193bc8d3" kindref="member">weston_surface_update_size</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed)</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>state-&gt;<ref refid="structweston__surface__state_1a251b246e8b6677da69fa03421bcc8d26" kindref="member">sx</ref>,<sp/>state-&gt;<ref refid="structweston__surface__state_1aee475073e8434bca501ab79d3bbdeb2d" kindref="member">sy</ref>);</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a251b246e8b6677da69fa03421bcc8d26" kindref="member">sx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1aee475073e8434bca501ab79d3bbdeb2d" kindref="member">sy</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a6597f745d7ffcd424e8cdaffce3cafb2" kindref="member">newly_attached</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1a90026f4dae947712c1963459d7ef8cfa" kindref="member">changed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.damage<sp/>and<sp/>wl_surface.damage_buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixman_region32_not_empty(&amp;state-&gt;<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>)<sp/>||</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_not_empty(&amp;state-&gt;<ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>))</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1ga3d4fa53ee35cc16bfc3e78fb964bcdd1" kindref="member">TL_POINT</ref>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor,<sp/></highlight><highlight class="stringliteral">&quot;core_commit_damage&quot;</highlight><highlight class="normal">,<sp/><ref refid="timeline_8h_1a6ed6b1dd7d330e7627d96d9f5ba67510" kindref="member">TLP_SURFACE</ref>(<ref refid="structsurface" kindref="compound">surface</ref>),<sp/><ref refid="group__log_1ga54b3c5c32cc5f3527c9a3d11e0d9f54d" kindref="member">TLP_END</ref>);</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage,</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>);</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7f9ab53322e7c4360d112df3a38bd4f4" kindref="member">apply_damage_buffer</ref>(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage,<sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/>state);</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect_rect(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;damage,</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_clear(&amp;state-&gt;<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>);</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_opaque_region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect_rect(&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,<sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1ac7e80149394ec6a71d4b3a34551eb982" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pixman_region32_equal(&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;opaque))<sp/>{</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;opaque,<sp/>&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_input_region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect_rect(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;input,<sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a3ec88c1ba535b2ba4e38dc9a2eb97a32" kindref="member">input</ref>,</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;frame_callback_list,</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a9e10cab51077c11e29ffbdb2bf4e3a59" kindref="member">frame_callback_list</ref>);</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;state-&gt;<ref refid="structweston__surface__state_1a9e10cab51077c11e29ffbdb2bf4e3a59" kindref="member">frame_callback_list</ref>);</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:</highlight></codeline>
<codeline lineno="3707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>What<sp/>should<sp/>happen<sp/>with<sp/>a<sp/>feedback<sp/>request,<sp/>if<sp/>there</highlight></codeline>
<codeline lineno="3708"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>no<sp/>wl_buffer<sp/>attached<sp/>for<sp/>this<sp/>commit?</highlight></codeline>
<codeline lineno="3709"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>presentation.feedback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;feedback_list,</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;<ref refid="structweston__surface__state_1a86d5bea2884539ddaa34e0995bf90ccf" kindref="member">feedback_list</ref>);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;state-&gt;<ref refid="structweston__surface__state_1a86d5bea2884539ddaa34e0995bf90ccf" kindref="member">feedback_list</ref>);</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>weston_protected_surface.enforced/relaxed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;protection_mode<sp/>!=<sp/>state-&gt;<ref refid="structweston__surface__state_1a2c8ab81f6bccd6fad2dec8bb13045d96" kindref="member">protection_mode</ref>)</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aed71d5b5c095ee7fc682f0d3429206b6" kindref="member">weston_surface_set_protection_mode</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structweston__surface__state_1a2c8ab81f6bccd6fad2dec8bb13045d96" kindref="member">protection_mode</ref>);</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>weston_protected_surface.set_type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ab082e54ee88811e676e3e932e2820da4" kindref="member">weston_surface_set_desired_protection</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>state-&gt;<ref refid="structweston__surface__state_1aa7cb0c5d15edb989d03c635046a5e923" kindref="member">desired_protection</ref>);</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;commit_signal,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><ref refid="compositor_8c_1a7281214dbf2a86a822ae3365f2523296" kindref="member">weston_surface_commit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="3729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad420490981468499323960dbd05bf335" kindref="member">weston_surface_commit_state</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending);</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a20cee2086988cfd1aa0b14a3193d152e" kindref="member">weston_surface_commit_subsurface_order</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1c85f3f5502d6a8f4fed02cf23198ce0" kindref="member">weston_surface_schedule_repaint</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><ref refid="compositor_8c_1a5af8c47c66e28f6b48930c21947c2449" kindref="member">weston_subsurface_commit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub);</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><ref refid="compositor_8c_1a531fdc54e36e70d1837deea4cda0b8f6" kindref="member">weston_subsurface_parent_commit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parent_is_synchronized);</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><ref refid="compositor_8c_1a5ec3b2813076e104865ea284bc42ec43" kindref="member">surface_commit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="3746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=<sp/><ref refid="compositor_8c_1ae73f9f170b78a4645e3033dd8ae4681c" kindref="member">weston_surface_to_subsurface</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1a432a707b8a97876547d05d64b3354202" kindref="member">weston_surface_is_pending_viewport_source_valid</ref>(<ref refid="structsurface" kindref="compound">surface</ref>))<sp/>{</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource);</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource,</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WP_VIEWPORT_ERROR_OUT_OF_BUFFER,</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%d<sp/>has<sp/>viewport<sp/>source<sp/>outside<sp/>buffer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>));</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1ab239fc2e3bf80e7cd50225e989c1a19c" kindref="member">weston_surface_is_pending_viewport_dst_size_int</ref>(<ref refid="structsurface" kindref="compound">surface</ref>))<sp/>{</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource);</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource,</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WP_VIEWPORT_ERROR_BAD_SIZE,</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%d<sp/>viewport<sp/>dst<sp/>size<sp/>not<sp/>integer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>));</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.acquire_fence_fd<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;synchronization_resource);</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_clear(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.acquire_fence_fd);</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;synchronization_resource,</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZWP_LINUX_SURFACE_SYNCHRONIZATION_V1_ERROR_NO_BUFFER,</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%&quot;</highlight><highlight class="normal">PRIu32</highlight><highlight class="stringliteral">&quot;<sp/>no<sp/>buffer<sp/>for<sp/>synchronization&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>));</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>support<sp/>fences<sp/>for<sp/>both<sp/>wp_linux_dmabuf<sp/>and<sp/>opaque<sp/>EGL</highlight></codeline>
<codeline lineno="3783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>buffers,<sp/>as<sp/>mandated<sp/>by<sp/>minor<sp/>version<sp/>2<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="3784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>zwp_linux_explicit_synchronization_v1<sp/>protocol.<sp/>Since</highlight></codeline>
<codeline lineno="3785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>renderers<sp/>that<sp/>support<sp/>fences<sp/>currently<sp/>only<sp/>support<sp/>these</highlight></codeline>
<codeline lineno="3786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>two<sp/>buffer<sp/>types<sp/>plus<sp/>SHM<sp/>buffers,<sp/>we<sp/>can<sp/>just<sp/>check<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="3787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>SHM<sp/>buffer<sp/>case<sp/>here.</highlight></codeline>
<codeline lineno="3788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_shm_buffer_get(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>-&gt;resource))<sp/>{</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_clear(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.acquire_fence_fd);</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;synchronization_resource,</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZWP_LINUX_SURFACE_SYNCHRONIZATION_V1_ERROR_UNSUPPORTED_BUFFER,</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%&quot;</highlight><highlight class="normal">PRIu32</highlight><highlight class="stringliteral">&quot;<sp/>unsupported<sp/>buffer<sp/>for<sp/>synchronization&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>));</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_release_ref.buffer_release<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;synchronization_resource);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;synchronization_resource,</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZWP_LINUX_SURFACE_SYNCHRONIZATION_V1_ERROR_NO_BUFFER,</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%&quot;</highlight><highlight class="normal">PRIu32</highlight><highlight class="stringliteral">&quot;<sp/>no<sp/>buffer<sp/>for<sp/>synchronization&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>));</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub)<sp/>{</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5af8c47c66e28f6b48930c21947c2449" kindref="member">weston_subsurface_commit</ref>(sub);</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7281214dbf2a86a822ae3365f2523296" kindref="member">weston_surface_commit</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(sub,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list,<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a531fdc54e36e70d1837deea4cda0b8f6" kindref="member">weston_subsurface_parent_commit</ref>(sub,<sp/>0);</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><ref refid="compositor_8c_1aeb511e6b049fc0a49ae4924c963c7579" kindref="member">surface_set_buffer_transform</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>transform)</highlight></codeline>
<codeline lineno="3826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>wl_output.transform<sp/>grows<sp/>more<sp/>members<sp/>this<sp/>will<sp/>need<sp/>to<sp/>be<sp/>updated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform<sp/>&lt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform<sp/>&gt;<sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270)<sp/>{</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SURFACE_ERROR_INVALID_TRANSFORM,</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;buffer<sp/>transform<sp/>must<sp/>be<sp/>a<sp/>valid<sp/>transform<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(&apos;%d&apos;<sp/>specified)&quot;</highlight><highlight class="normal">,<sp/>transform);</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.transform<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><ref refid="compositor_8c_1a92648370f41ad171aa68e2a6f1520b5f" kindref="member">surface_set_buffer_scale</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale)</highlight></codeline>
<codeline lineno="3847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SURFACE_ERROR_INVALID_SCALE,</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;buffer<sp/>scale<sp/>must<sp/>be<sp/>at<sp/>least<sp/>one<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(&apos;%d&apos;<sp/>specified)&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.scale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_surface_interface<sp/><ref refid="compositor_8c_1aa73bd2f1cea7f00bf17a2133d62f3683" kindref="member">surface_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5a0d1ef05488f5cda9db52851384fd3f" kindref="member">surface_destroy</ref>,</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac8ce9129dec4b98443594b1530e74850" kindref="member">surface_attach</ref>,</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a917d497af6f3b46cff8b8e945788c467" kindref="member">surface_damage</ref>,</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a912761f200744a8f0573d81b54b90567" kindref="member">surface_frame</ref>,</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1abc6fd4a4b0ba02c3d33c4460e83448d1" kindref="member">surface_set_opaque_region</ref>,</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0aa233677ade41ddddb66e3c2d3abac6" kindref="member">surface_set_input_region</ref>,</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5ec3b2813076e104865ea284bc42ec43" kindref="member">surface_commit</ref>,</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aeb511e6b049fc0a49ae4924c963c7579" kindref="member">surface_set_buffer_transform</ref>,</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a92648370f41ad171aa68e2a6f1520b5f" kindref="member">surface_set_buffer_scale</ref>,</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7944a85d6240001e4a6d6a28c2095e1e" kindref="member">surface_damage_buffer</ref></highlight></codeline>
<codeline lineno="3873"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><ref refid="compositor_8c_1a5b8dd407ac0c279b1c696563ebf3690b" kindref="member">compositor_create_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/><ref refid="compositor_8c_1a1e3347a74e72ecb0aa7617dbf89b76fb" kindref="member">weston_surface_create</ref>(ec);</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource<sp/>=</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_surface_interface,</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_version(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aa8175b2c6f8cd4cc3f3f6006ecf7acb1" kindref="member">weston_surface_destroy</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource,<sp/>&amp;<ref refid="compositor_8c_1aa73bd2f1cea7f00bf17a2133d62f3683" kindref="member">surface_interface</ref>,</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="compositor_8c_1aa12406a4681fa5f9c5b124f3c2ebacc2" kindref="member">destroy_surface</ref>);</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;ec-&gt;<ref refid="structweston__compositor_1af145ea36a816ec78391cef574c216aa0" kindref="member">create_surface_signal</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><ref refid="compositor_8c_1aa81b1bfad86911e3fd69ef1335a1621c" kindref="member">destroy_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="3904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region);</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="3909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"></highlight></codeline>
<codeline lineno="3911"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><ref refid="compositor_8c_1a0e1f8e67c4a1f114a7a876c6c0efdfad" kindref="member">region_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="3913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><ref refid="compositor_8c_1ad29282af488305858933033bce359267" kindref="member">region_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height)</highlight></codeline>
<codeline lineno="3920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"></highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union_rect(&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region,<sp/>&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region,</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="3925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><ref refid="compositor_8c_1af03567984ff8cd0573c50fb1141500af" kindref="member">region_subtract</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height)</highlight></codeline>
<codeline lineno="3930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>rect;</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(&amp;rect,<sp/>x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_subtract(&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region,<sp/>&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region,<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;rect);</highlight></codeline>
<codeline lineno="3937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_region_interface<sp/><ref refid="compositor_8c_1a86526f54f154d09c2cbff99e15cfb496" kindref="member">region_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0e1f8e67c4a1f114a7a876c6c0efdfad" kindref="member">region_destroy</ref>,</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad29282af488305858933033bce359267" kindref="member">region_add</ref>,</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af03567984ff8cd0573c50fb1141500af" kindref="member">region_subtract</ref></highlight></codeline>
<codeline lineno="3943"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><ref refid="compositor_8c_1a33f445c7eec125220a7659c5338d0ba6" kindref="member">compositor_create_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region);</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;resource<sp/>=</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_region_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;resource,<sp/>&amp;<ref refid="compositor_8c_1a86526f54f154d09c2cbff99e15cfb496" kindref="member">region_interface</ref>,</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>,<sp/><ref refid="compositor_8c_1aa81b1bfad86911e3fd69ef1335a1621c" kindref="member">destroy_region</ref>);</highlight></codeline>
<codeline lineno="3968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_compositor_interface<sp/><ref refid="compositor_8c_1afbcfe7c24900dddd75fca580763d76d5" kindref="member">compositor_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5b8dd407ac0c279b1c696563ebf3690b" kindref="member">compositor_create_surface</ref>,</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a33f445c7eec125220a7659c5338d0ba6" kindref="member">compositor_create_region</ref></highlight></codeline>
<codeline lineno="3973"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><ref refid="compositor_8c_1a9f0d2063744a806235268b9adb2d93d2" kindref="member">weston_subsurface_commit_from_cache</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="3977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad420490981468499323960dbd05bf335" kindref="member">weston_surface_commit_state</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>);</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a46c9d30efa62b7ca5f720b1dd83ebe12" kindref="member">weston_buffer_reference</ref>(&amp;sub-&gt;<ref refid="structweston__subsurface_1ae5bd19834250980fc6455cc87015c999" kindref="member">cached_buffer_ref</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a20cee2086988cfd1aa0b14a3193d152e" kindref="member">weston_surface_commit_subsurface_order</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1c85f3f5502d6a8f4fed02cf23198ce0" kindref="member">weston_surface_schedule_repaint</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ada2212b09abac159f4e883c022600bba" kindref="member">has_cached_data</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><ref refid="compositor_8c_1a28c45634b3c0827f4f9b1def8ae64a6b" kindref="member">weston_subsurface_commit_to_cache</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="3992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>this<sp/>commit<sp/>would<sp/>cause<sp/>the<sp/>surface<sp/>to<sp/>move<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="3997"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>attach(dx,<sp/>dy)<sp/>parameters,<sp/>the<sp/>old<sp/>damage<sp/>region<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="3998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>translated<sp/>to<sp/>correspond<sp/>to<sp/>the<sp/>new<sp/>surface<sp/>coordinate<sp/>system</highlight></codeline>
<codeline lineno="3999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>origin.</highlight></codeline>
<codeline lineno="4000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_translate(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>,</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.sx,<sp/>-<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.sy);</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>,</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>,</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.damage_surface);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_clear(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.damage_surface);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"></highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.newly_attached)<sp/>{</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a6597f745d7ffcd424e8cdaffce3cafb2" kindref="member">newly_attached</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9cfb047c81ff27e9e303e8f48d3d65ed" kindref="member">weston_surface_state_set_buffer</ref>(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>,</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a46c9d30efa62b7ca5f720b1dd83ebe12" kindref="member">weston_buffer_reference</ref>(&amp;sub-&gt;<ref refid="structweston__subsurface_1ae5bd19834250980fc6455cc87015c999" kindref="member">cached_buffer_ref</ref>,</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9e35ed3c3311c408ac495e8f6588aa94" kindref="member">weston_presentation_feedback_discard_list</ref>(</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a86d5bea2884539ddaa34e0995bf90ccf" kindref="member">feedback_list</ref>);</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zwp_surface_synchronization_v1.set_acquire_fence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_move(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a6d57cd58b8c29333b246883193786774" kindref="member">acquire_fence_fd</ref>,</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.acquire_fence_fd);</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zwp_surface_synchronization_v1.get_release<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a23af340f7ae575bb87d66816c0e0ebdc" kindref="member">weston_buffer_release_move</ref>(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a38c0835d8fcdd6d883bc2685aae7402d" kindref="member">buffer_release_ref</ref>,</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_release_ref);</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1aa7cb0c5d15edb989d03c635046a5e923" kindref="member">desired_protection</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.desired_protection;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a2c8ab81f6bccd6fad2dec8bb13045d96" kindref="member">protection_mode</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.protection_mode;</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.acquire_fence_fd<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_release_ref.buffer_release<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a251b246e8b6677da69fa03421bcc8d26" kindref="member">sx</ref><sp/>+=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.sx;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1aee475073e8434bca501ab79d3bbdeb2d" kindref="member">sy</ref><sp/>+=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.sy;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"></highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7f9ab53322e7c4360d112df3a38bd4f4" kindref="member">apply_damage_buffer</ref>(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1a90026f4dae947712c1963459d7ef8cfa" kindref="member">changed</ref><sp/>|=</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref><sp/>=</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>.<ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.surface;</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a08352bf4c20b0f27d456a674c9b5db50" kindref="member">weston_surface_reset_pending_buffer</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1ac7e80149394ec6a71d4b3a34551eb982" kindref="member">opaque</ref>,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.opaque);</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a3ec88c1ba535b2ba4e38dc9a2eb97a32" kindref="member">input</ref>,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.input);</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"></highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a9e10cab51077c11e29ffbdb2bf4e3a59" kindref="member">frame_callback_list</ref>,</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.frame_callback_list);</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.frame_callback_list);</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>.<ref refid="structweston__surface__state_1a86d5bea2884539ddaa34e0995bf90ccf" kindref="member">feedback_list</ref>,</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.feedback_list);</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.feedback_list);</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ada2212b09abac159f4e883c022600bba" kindref="member">has_cached_data</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><ref refid="compositor_8c_1a85761db04b1070b833ecddedd45aecfe" kindref="member">weston_subsurface_is_synchronized</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="4058"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sub)<sp/>{</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1a36e1633bc4e3b2fe7a0fe37cb092e3e3" kindref="member">synchronized</ref>)</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub<sp/>=<sp/><ref refid="compositor_8c_1ae73f9f170b78a4645e3033dd8ae4681c" kindref="member">weston_surface_to_subsurface</ref>(sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"></highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><ref refid="compositor_8c_1a5af8c47c66e28f6b48930c21947c2449" kindref="member">weston_subsurface_commit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="4074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*tmp;</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recursive<sp/>check<sp/>for<sp/>effectively<sp/>synchronized.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a85761db04b1070b833ecddedd45aecfe" kindref="member">weston_subsurface_is_synchronized</ref>(sub))<sp/>{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a28c45634b3c0827f4f9b1def8ae64a6b" kindref="member">weston_subsurface_commit_to_cache</ref>(sub);</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1ada2212b09abac159f4e883c022600bba" kindref="member">has_cached_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flush<sp/>accumulated<sp/>state<sp/>from<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a28c45634b3c0827f4f9b1def8ae64a6b" kindref="member">weston_subsurface_commit_to_cache</ref>(sub);</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9f0d2063744a806235268b9adb2d93d2" kindref="member">weston_subsurface_commit_from_cache</ref>(sub);</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7281214dbf2a86a822ae3365f2523296" kindref="member">weston_surface_commit</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(tmp,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list,<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a531fdc54e36e70d1837deea4cda0b8f6" kindref="member">weston_subsurface_parent_commit</ref>(tmp,<sp/>0);</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"></highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><ref refid="compositor_8c_1a49d0e26e11bad0d3cad50a1931c6773c" kindref="member">weston_subsurface_synchronized_commit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="4099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*tmp;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>From<sp/>now<sp/>on,<sp/>commit_from_cache<sp/>the<sp/>whole<sp/>sub-tree,<sp/>regardless<sp/>of</highlight></codeline>
<codeline lineno="4104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>synchronized<sp/>mode<sp/>of<sp/>each<sp/>child.<sp/>This<sp/>sub-surface<sp/>or<sp/>some</highlight></codeline>
<codeline lineno="4105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>its<sp/>ancestors<sp/>were<sp/>synchronized,<sp/>so<sp/>we<sp/>are<sp/>synchronized</highlight></codeline>
<codeline lineno="4106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>all<sp/>the<sp/>way<sp/>down.</highlight></codeline>
<codeline lineno="4107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4108"><highlight class="normal"></highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1ada2212b09abac159f4e883c022600bba" kindref="member">has_cached_data</ref>)</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9f0d2063744a806235268b9adb2d93d2" kindref="member">weston_subsurface_commit_from_cache</ref>(sub);</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(tmp,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list,<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a531fdc54e36e70d1837deea4cda0b8f6" kindref="member">weston_subsurface_parent_commit</ref>(tmp,<sp/>1);</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><ref refid="compositor_8c_1a531fdc54e36e70d1837deea4cda0b8f6" kindref="member">weston_subsurface_parent_commit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parent_is_synchronized)</highlight></codeline>
<codeline lineno="4121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1aab177c8d03af1da2a85c620a9025f3cd" kindref="member">set</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" kindref="member">views</ref>,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae1df17820e004a35b62f4a923066e9fd" kindref="member">weston_view_set_position</ref>(view,</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1a8baddc94439e6119d2caeae21756811f" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1a6b10500dc4cefdee48e5d3b4b9040f97" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"></highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1aab177c8d03af1da2a85c620a9025f3cd" kindref="member">set</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_is_synchronized<sp/>||<sp/>sub-&gt;<ref refid="structweston__subsurface_1a36e1633bc4e3b2fe7a0fe37cb092e3e3" kindref="member">synchronized</ref>)</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a49d0e26e11bad0d3cad50a1931c6773c" kindref="member">weston_subsurface_synchronized_commit</ref>(sub);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><ref refid="compositor_8c_1a1b51a4a75ae0b401248907493275a06a" kindref="member">subsurface_get_label</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="4138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(buf,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;sub-surface&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><ref refid="compositor_8c_1afb1ab3e1f12ba225f738e88dad91eafa" kindref="member">subsurface_committed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>int32_t<sp/>dx,<sp/>int32_t<sp/>dy)</highlight></codeline>
<codeline lineno="4144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"></highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae1df17820e004a35b62f4a923066e9fd" kindref="member">weston_view_set_position</ref>(view,</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref><sp/>+<sp/>dx,</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref><sp/>+<sp/>dy);</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"></highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>to<sp/>check<sp/>parent<sp/>mappedness,<sp/>because<sp/>if<sp/>parent<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="4153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mapped,<sp/>parent<sp/>is<sp/>not<sp/>in<sp/>a<sp/>visible<sp/>layer,<sp/>so<sp/>this<sp/>sub-surface</highlight></codeline>
<codeline lineno="4154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>not<sp/>be<sp/>drawn<sp/>either.</highlight></codeline>
<codeline lineno="4155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"></highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(<ref refid="structsurface" kindref="compound">surface</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;is_mapped<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cannot<sp/>call<sp/>weston_view_update_transform(),</highlight></codeline>
<codeline lineno="4161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>because<sp/>that<sp/>would<sp/>call<sp/>it<sp/>also<sp/>for<sp/>the<sp/>parent<sp/>surface,</highlight></codeline>
<codeline lineno="4162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>which<sp/>might<sp/>not<sp/>be<sp/>mapped<sp/>yet.<sp/>That<sp/>would<sp/>lead<sp/>to</highlight></codeline>
<codeline lineno="4163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>inconsistent<sp/>state,<sp/>where<sp/>the<sp/>window<sp/>could<sp/>never<sp/>be</highlight></codeline>
<codeline lineno="4164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mapped.</highlight></codeline>
<codeline lineno="4165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Instead<sp/>just<sp/>force<sp/>the<sp/>is_mapped<sp/>flag<sp/>on,<sp/>to<sp/>make</highlight></codeline>
<codeline lineno="4167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>weston_surface_is_mapped()<sp/>return<sp/>true,<sp/>so<sp/>that<sp/>when<sp/>the</highlight></codeline>
<codeline lineno="4168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>parent<sp/>surface<sp/>does<sp/>get<sp/>mapped,<sp/>this<sp/>one<sp/>will<sp/>get</highlight></codeline>
<codeline lineno="4169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>included,<sp/>too.<sp/>See<sp/>view_list_add().</highlight></codeline>
<codeline lineno="4170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><ref refid="compositor_8c_1ae73f9f170b78a4645e3033dd8ae4681c" kindref="member">weston_surface_to_subsurface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="4176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed<sp/>==<sp/><ref refid="compositor_8c_1afb1ab3e1f12ba225f738e88dad91eafa" kindref="member">subsurface_committed</ref>)</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed_private;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"></highlight></codeline>
<codeline lineno="4183"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><ref refid="compositor_8c_1a8868325c450a7c04cd3e1cfec22b7104" kindref="member">weston_surface_get_main_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="4185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref><sp/>&amp;&amp;<sp/>(sub<sp/>=<sp/><ref refid="compositor_8c_1ae73f9f170b78a4645e3033dd8ae4681c" kindref="member">weston_surface_to_subsurface</ref>(<ref refid="structsurface" kindref="compound">surface</ref>)))</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"></highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="4192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><ref refid="compositor_8c_1a77ddbc1401698987792d00d6e7e3407d" kindref="member">weston_surface_set_role</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*role_name,</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*error_resource,</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>error_code)</highlight></codeline>
<codeline lineno="4199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(role_name);</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;role_name<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;role_name<sp/>==<sp/>role_name<sp/>||</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;role_name,<sp/>role_name)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;role_name<sp/>=<sp/>role_name;</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"></highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"></highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(error_resource,<sp/>error_code,</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>assign<sp/>role<sp/>%s<sp/>to<sp/>wl_surface@%d,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>already<sp/>has<sp/>role<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>role_name,</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource),</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;role_name);</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><ref refid="compositor_8c_1a0ece5eb3f051d927072a77f531cd2a56" kindref="member">weston_surface_get_role</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="4221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;role_name;</highlight></codeline>
<codeline lineno="4223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"></highlight></codeline>
<codeline lineno="4225"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><ref refid="compositor_8c_1a15415df8115e81631c8dae987b7ef40c" kindref="member">weston_surface_set_label_func</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*desc)(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*,</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="4229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;get_label<sp/>=<sp/>desc;</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1gabfcf8e012be0cc478dd901ca59ad3721" kindref="member">weston_timeline_refresh_subscription_objects</ref>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor,</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="4233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"></highlight></codeline>
<codeline lineno="4249"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><ref refid="compositor_8c_1af05cf4ebc640cb40915253335538b4cb" kindref="member">weston_surface_get_content_size</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height)</highlight></codeline>
<codeline lineno="4252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__renderer" kindref="compound">weston_renderer</ref><sp/>*rer<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;renderer;</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rer-&gt;<ref refid="structweston__renderer_1a5354db09e69ed5743a59f7ed80fd6bc0" kindref="member">surface_get_content_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rer-&gt;<ref refid="structweston__renderer_1a5354db09e69ed5743a59f7ed80fd6bc0" kindref="member">surface_get_content_size</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="4262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4270"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__geometry" kindref="compound">weston_geometry</ref></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><ref refid="compositor_8c_1a4a639f0bac3d1fb3f0c464ea0e6f79e6" kindref="member">weston_surface_get_bounding_box</ref>(struct<sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="4272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>region;</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*box;</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*subsurface;</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(&amp;region,</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(subsurface,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;subsurface_list,<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>)</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_union_rect(&amp;region,<sp/>&amp;region,</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsurface-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1a8baddc94439e6119d2caeae21756811f" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsurface-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1a6b10500dc4cefdee48e5d3b4b9040f97" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsurface-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsurface-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"></highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>=<sp/>pixman_region32_extents(&amp;region);</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__geometry" kindref="compound">weston_geometry</ref><sp/>geometry<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structweston__geometry_1a70c1074a2c225fec12152def41939a5d" kindref="member">x</ref><sp/>=<sp/>box-&gt;x1,</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>box-&gt;y1,</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.width<sp/>=<sp/>box-&gt;x2<sp/>-<sp/>box-&gt;x1,</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.height<sp/>=<sp/>box-&gt;y2<sp/>-<sp/>box-&gt;y1,</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"></highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;region);</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>geometry;</highlight></codeline>
<codeline lineno="4299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"></highlight></codeline>
<codeline lineno="4342"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><ref refid="compositor_8c_1a353f17fe827e1c25b87e7e964e8d9892" kindref="member">weston_surface_copy_content</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_y,</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__geometry_1a477e159bfa1399930d7554834bca0578" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__geometry_1afaa61c8f08bcea5f12fec0bf38a91a86" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="4347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__renderer" kindref="compound">weston_renderer</ref><sp/>*rer<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;renderer;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cw,<sp/>ch;</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytespp<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>PIXMAN_a8b8g8r8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rer-&gt;<ref refid="structweston__renderer_1afcc57b0d929767f57e20b9e5d68f9dee" kindref="member">surface_copy_content</ref>)</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af05cf4ebc640cb40915253335538b4cb" kindref="member">weston_surface_get_content_size</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>&amp;cw,<sp/>&amp;ch);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"></highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_x<sp/>&lt;<sp/>0<sp/>||<sp/>src_y<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;=<sp/>0<sp/>||<sp/>height<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_x<sp/>+<sp/>width<sp/>&gt;<sp/>cw<sp/>||<sp/>src_y<sp/>+<sp/>height<sp/>&gt;<sp/>ch)</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>*<sp/>bytespp<sp/>*<sp/>height<sp/>&gt;<sp/>size)</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"></highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rer-&gt;<ref refid="structweston__renderer_1afcc57b0d929767f57e20b9e5d68f9dee" kindref="member">surface_copy_content</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>target,<sp/>size,</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_x,<sp/>src_y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="4371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><ref refid="compositor_8c_1a0e10bc8d2d20e78143885c1599042d56" kindref="member">subsurface_set_position</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,<sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y)</highlight></codeline>
<codeline lineno="4376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"></highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub)</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1a8baddc94439e6119d2caeae21756811f" kindref="member">x</ref><sp/>=<sp/><ref refid="structweston__subsurface_1a8baddc94439e6119d2caeae21756811f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1a6b10500dc4cefdee48e5d3b4b9040f97" kindref="member">y</ref><sp/>=<sp/><ref refid="structweston__subsurface_1a6b10500dc4cefdee48e5d3b4b9040f97" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>.<ref refid="structweston__subsurface_1aab177c8d03af1da2a85c620a9025f3cd" kindref="member">set</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight></codeline>
<codeline lineno="4387"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><ref refid="compositor_8c_1a252fb05c3938d932cc7433c6bd8d33f0" kindref="member">subsurface_find_sibling</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="4390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*parent<sp/>=<sp/>sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sibling;</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"></highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(sibling,<sp/>&amp;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>,<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sibling-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>==<sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>&amp;&amp;<sp/>sibling<sp/>!=<sp/>sub)</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sibling;</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"></highlight></codeline>
<codeline lineno="4402"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><ref refid="compositor_8c_1a98bd70f506eda7d4a47290c1fa57564a" kindref="member">subsurface_sibling_check</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*request)</highlight></codeline>
<codeline lineno="4406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sibling;</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling<sp/>=<sp/><ref refid="compositor_8c_1a252fb05c3938d932cc7433c6bd8d33f0" kindref="member">subsurface_find_sibling</ref>(sub,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sibling)<sp/>{</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(sub-&gt;<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SUBSURFACE_ERROR_BAD_SURFACE,</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>wl_surface@%d<sp/>is<sp/>not<sp/>a<sp/>parent<sp/>or<sp/>sibling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request,<sp/>wl_resource_get_id(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource));</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sibling-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref><sp/>==<sp/>sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sibling;</highlight></codeline>
<codeline lineno="4421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><ref refid="compositor_8c_1a64e1434908dd85ef1717819989240c83" kindref="member">subsurface_place_above</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*sibling_resource)</highlight></codeline>
<codeline lineno="4427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(sibling_resource);</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sibling;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub)</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling<sp/>=<sp/><ref refid="compositor_8c_1a98bd70f506eda7d4a47290c1fa57564a" kindref="member">subsurface_sibling_check</ref>(sub,<sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="stringliteral">&quot;place_above&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sibling)</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"></highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(sibling-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>.prev,</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>);</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a94645d1d81a3ed9addee4ac8eaac8972" kindref="member">reordered</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><ref refid="compositor_8c_1a7b32361590a91215ce7c0f9fa2e1a440" kindref="member">subsurface_place_below</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*sibling_resource)</highlight></codeline>
<codeline lineno="4451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(sibling_resource);</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sibling;</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub)</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling<sp/>=<sp/><ref refid="compositor_8c_1a98bd70f506eda7d4a47290c1fa57564a" kindref="member">subsurface_sibling_check</ref>(sub,<sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="stringliteral">&quot;place_below&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sibling)</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>);</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;sibling-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>,</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>);</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"></highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a94645d1d81a3ed9addee4ac8eaac8972" kindref="member">reordered</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><ref refid="compositor_8c_1ab74225d716446e5743e6f01d364b1224" kindref="member">subsurface_set_sync</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub)</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a36e1633bc4e3b2fe7a0fe37cb092e3e3" kindref="member">synchronized</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><ref refid="compositor_8c_1adcb4bc5ecd26b791655f2522edc15fdf" kindref="member">subsurface_set_desync</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub<sp/>&amp;&amp;<sp/>sub-&gt;<ref refid="structweston__subsurface_1a36e1633bc4e3b2fe7a0fe37cb092e3e3" kindref="member">synchronized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a36e1633bc4e3b2fe7a0fe37cb092e3e3" kindref="member">synchronized</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>sub<sp/>became<sp/>effectively<sp/>desynchronized,<sp/>flush.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1a85761db04b1070b833ecddedd45aecfe" kindref="member">weston_subsurface_is_synchronized</ref>(sub))</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a49d0e26e11bad0d3cad50a1931c6773c" kindref="member">weston_subsurface_synchronized_commit</ref>(sub);</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><ref refid="compositor_8c_1a18e348e2a4a8ba61593acb2ac2b55d99" kindref="member">weston_subsurface_unlink_parent</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="4496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>);</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>);</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a544441f90ccc084214e61c221777d1ea" kindref="member">parent_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><ref refid="compositor_8c_1aabe0b5dbc4ede8ba5ee5512700e29280" kindref="member">weston_subsurface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><ref refid="compositor_8c_1a8faf846f7827d029521b1b56e2e42753" kindref="member">subsurface_handle_surface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="4508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref>,</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__subsurface_1a515361851e2ddd888abb466e3c242836" kindref="member">surface_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(data<sp/>==<sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"></highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>protocol<sp/>object<sp/>(wl_resource)<sp/>is<sp/>left<sp/>inert.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(sub-&gt;<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aabe0b5dbc4ede8ba5ee5512700e29280" kindref="member">weston_subsurface_destroy</ref>(sub);</highlight></codeline>
<codeline lineno="4519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><ref refid="compositor_8c_1a408f361bce4435744da760f988151e8b" kindref="member">subsurface_handle_parent_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="4523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref>,</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__subsurface_1a544441f90ccc084214e61c221777d1ea" kindref="member">parent_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(data<sp/>==<sp/>sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>!=<sp/>sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>))</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a80d606617df1553ec673787ebcfa2ba5" kindref="member">weston_surface_unmap</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a18e348e2a4a8ba61593acb2ac2b55d99" kindref="member">weston_subsurface_unlink_parent</ref>(sub);</highlight></codeline>
<codeline lineno="4534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"></highlight></codeline>
<codeline lineno="4536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><ref refid="compositor_8c_1ad1f7477e1113a6f6f4890cd82bbaf0bb" kindref="member">subsurface_resource_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub<sp/>=<sp/>wl_resource_get_user_data(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub)</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1aabe0b5dbc4ede8ba5ee5512700e29280" kindref="member">weston_subsurface_destroy</ref>(sub);</highlight></codeline>
<codeline lineno="4543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><ref refid="compositor_8c_1a594ac6116fb205e27731b270a2833c9c" kindref="member">subsurface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"></highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><ref refid="compositor_8c_1a9331354bd8e5e7e63055d107ac24fbf6" kindref="member">weston_subsurface_link_parent</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="4554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref><sp/>=<sp/><ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a544441f90ccc084214e61c221777d1ea" kindref="member">parent_destroy_listener</ref>.notify<sp/>=<sp/><ref refid="compositor_8c_1a408f361bce4435744da760f988151e8b" kindref="member">subsurface_handle_parent_destroy</ref>;</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>-&gt;<ref refid="structweston__surface_1ac6cffe8c4761faf4eafa539dd508b570" kindref="member">destroy_signal</ref>,</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a544441f90ccc084214e61c221777d1ea" kindref="member">parent_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"></highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>);</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>-&gt;<ref refid="structweston__surface_1a51fd08490515915c37188ce1cd9b7b98" kindref="member">subsurface_list_pending</ref>,</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>);</highlight></codeline>
<codeline lineno="4563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><ref refid="compositor_8c_1a705baeb759c43d415fb583237c4099d4" kindref="member">weston_subsurface_link_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="4568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref><sp/>=<sp/><ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a515361851e2ddd888abb466e3c242836" kindref="member">surface_destroy_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a8faf846f7827d029521b1b56e2e42753" kindref="member">subsurface_handle_surface_destroy</ref>;</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;destroy_signal,</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a515361851e2ddd888abb466e3c242836" kindref="member">surface_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"></highlight></codeline>
<codeline lineno="4576"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><ref refid="compositor_8c_1aabe0b5dbc4ede8ba5ee5512700e29280" kindref="member">weston_subsurface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="4578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/>*next;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"></highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="compositor_8c_1ae73f9f170b78a4645e3033dd8ae4681c" kindref="member">weston_surface_to_subsurface</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>)<sp/>==<sp/>sub);</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sub-&gt;<ref refid="structweston__subsurface_1a544441f90ccc084214e61c221777d1ea" kindref="member">parent_destroy_listener</ref>.notify<sp/>==</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a408f361bce4435744da760f988151e8b" kindref="member">subsurface_handle_parent_destroy</ref>);</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(view,<sp/>next,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" kindref="member">views</ref>,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af34d4b676e7ce4e41a963cd0b41c6dc8" kindref="member">weston_view_unmap</ref>(view);</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3b0df14d913003992656e8f791a6da9f" kindref="member">weston_view_destroy</ref>(view);</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a18e348e2a4a8ba61593acb2ac2b55d99" kindref="member">weston_subsurface_unlink_parent</ref>(sub);</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"></highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1acfaf23bfe99d132bcb56e63e80535a14" kindref="member">weston_surface_state_fini</ref>(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>);</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a46c9d30efa62b7ca5f720b1dd83ebe12" kindref="member">weston_buffer_reference</ref>(&amp;sub-&gt;<ref refid="structweston__subsurface_1ae5bd19834250980fc6455cc87015c999" kindref="member">cached_buffer_ref</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1acbbe30b40326bd82d7765a1c8a2f7cf9" kindref="member">committed</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a8252a976b6e444f98377e6a51fc62154" kindref="member">committed_private</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a15415df8115e81631c8dae987b7ef40c" kindref="member">weston_surface_set_label_func</ref>(sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>dummy<sp/>weston_subsurface<sp/>for<sp/>the<sp/>parent<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sub-&gt;<ref refid="structweston__subsurface_1a544441f90ccc084214e61c221777d1ea" kindref="member">parent_destroy_listener</ref>.notify<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>);</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>);</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"></highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;sub-&gt;<ref refid="structweston__subsurface_1a515361851e2ddd888abb466e3c242836" kindref="member">surface_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(sub);</highlight></codeline>
<codeline lineno="4611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"></highlight></codeline>
<codeline lineno="4613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_subsurface_interface<sp/><ref refid="compositor_8c_1ab88ac65f920154b20f6492c1850981c0" kindref="member">subsurface_implementation</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a594ac6116fb205e27731b270a2833c9c" kindref="member">subsurface_destroy</ref>,</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0e10bc8d2d20e78143885c1599042d56" kindref="member">subsurface_set_position</ref>,</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a64e1434908dd85ef1717819989240c83" kindref="member">subsurface_place_above</ref>,</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7b32361590a91215ce7c0f9fa2e1a440" kindref="member">subsurface_place_below</ref>,</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ab74225d716446e5743e6f01d364b1224" kindref="member">subsurface_set_sync</ref>,</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1adcb4bc5ecd26b791655f2522edc15fdf" kindref="member">subsurface_set_desync</ref></highlight></codeline>
<codeline lineno="4620"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><ref refid="compositor_8c_1aba7e8f914e858130b418607d6ba0e927" kindref="member">weston_subsurface_create</ref>(uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="4625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>wl_resource_get_client(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*sub);</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"></highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;sub-&gt;<ref refid="structweston__subsurface_1ab93b7ffd6d26e3c4089a36dd700c7868" kindref="member">unused_views</ref>);</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"></highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref><sp/>=</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_subsurface_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub-&gt;<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(sub);</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(sub-&gt;<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="compositor_8c_1ab88ac65f920154b20f6492c1850981c0" kindref="member">subsurface_implementation</ref>,</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,<sp/><ref refid="compositor_8c_1ad1f7477e1113a6f6f4890cd82bbaf0bb" kindref="member">subsurface_resource_destroy</ref>);</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a705baeb759c43d415fb583237c4099d4" kindref="member">weston_subsurface_link_surface</ref>(sub,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9331354bd8e5e7e63055d107ac24fbf6" kindref="member">weston_subsurface_link_parent</ref>(sub,<sp/>parent);</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4c31d06dcae13b2f9aa2ba0acd2b6a16" kindref="member">weston_surface_state_init</ref>(&amp;sub-&gt;<ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>);</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1ae5bd19834250980fc6455cc87015c999" kindref="member">cached_buffer_ref</ref>.<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a36e1633bc4e3b2fe7a0fe37cb092e3e3" kindref="member">synchronized</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub;</highlight></codeline>
<codeline lineno="4652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>dummy<sp/>subsurface<sp/>for<sp/>having<sp/>the<sp/>parent<sp/>itself<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="4655"><highlight class="comment"><sp/>*<sp/>sub-surface<sp/>lists.<sp/>Makes<sp/>stacking<sp/>order<sp/>manipulation<sp/>easy.</highlight></codeline>
<codeline lineno="4656"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><ref refid="compositor_8c_1a24be0342da422ccfb092a615cc34f8a3" kindref="member">weston_subsurface_create_for_parent</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="4659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"></highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*sub);</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"></highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a705baeb759c43d415fb583237c4099d4" kindref="member">weston_subsurface_link_surface</ref>(sub,<sp/><ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref><sp/>=<sp/><ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>);</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>-&gt;<ref refid="structweston__surface_1a51fd08490515915c37188ce1cd9b7b98" kindref="member">subsurface_list_pending</ref>,</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>);</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><ref refid="compositor_8c_1a482ff084752a55a1452da0dd635847a9" kindref="member">subcompositor_get_subsurface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource,</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*parent_resource)</highlight></codeline>
<codeline lineno="4681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(surface_resource);</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*parent<sp/>=</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(parent_resource);</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>where[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;get_subsurface:<sp/>wl_subsurface@&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"></highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref><sp/>==<sp/><ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SUBCOMPOSITOR_ERROR_BAD_SURFACE,</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s%d:<sp/>wl_surface@%d<sp/>cannot<sp/>be<sp/>its<sp/>own<sp/>parent&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>wl_resource_get_id(surface_resource));</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1ae73f9f170b78a4645e3033dd8ae4681c" kindref="member">weston_surface_to_subsurface</ref>(<ref refid="structsurface" kindref="compound">surface</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SUBCOMPOSITOR_ERROR_BAD_SURFACE,</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s%d:<sp/>wl_surface@%d<sp/>is<sp/>already<sp/>a<sp/>sub-surface&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>wl_resource_get_id(surface_resource));</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a77ddbc1401698987792d00d6e7e3407d" kindref="member">weston_surface_set_role</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wl_subsurface&quot;</highlight><highlight class="normal">,<sp/><ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SUBCOMPOSITOR_ERROR_BAD_SURFACE)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"></highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a8868325c450a7c04cd3e1cfec22b7104" kindref="member">weston_surface_get_main_surface</ref>(<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>)<sp/>==<sp/><ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SUBCOMPOSITOR_ERROR_BAD_SURFACE,</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s%d:<sp/>wl_surface@%d<sp/>is<sp/>an<sp/>ancestor<sp/>of<sp/>parent&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>wl_resource_get_id(surface_resource));</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>the<sp/>parent<sp/>is<sp/>in<sp/>its<sp/>own<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1a24be0342da422ccfb092a615cc34f8a3" kindref="member">weston_subsurface_create_for_parent</ref>(<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub<sp/>=<sp/><ref refid="compositor_8c_1aba7e8f914e858130b418607d6ba0e927" kindref="member">weston_subsurface_create</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub)<sp/>{</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed<sp/>=<sp/><ref refid="compositor_8c_1afb1ab3e1f12ba225f738e88dad91eafa" kindref="member">subsurface_committed</ref>;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed_private<sp/>=<sp/>sub;</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a15415df8115e81631c8dae987b7ef40c" kindref="member">weston_surface_set_label_func</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="compositor_8c_1a1b51a4a75ae0b401248907493275a06a" kindref="member">subsurface_get_label</ref>);</highlight></codeline>
<codeline lineno="4734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"></highlight></codeline>
<codeline lineno="4736"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><ref refid="compositor_8c_1a57855c7af38a10c0d2b79e38eca07029" kindref="member">subcompositor_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_subcompositor_interface<sp/><ref refid="compositor_8c_1ac78dc71c34c71109a0e006e329e7ba48" kindref="member">subcompositor_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a57855c7af38a10c0d2b79e38eca07029" kindref="member">subcompositor_destroy</ref>,</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a482ff084752a55a1452da0dd635847a9" kindref="member">subcompositor_get_subsurface</ref></highlight></codeline>
<codeline lineno="4745"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"></highlight></codeline>
<codeline lineno="4747"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><ref refid="compositor_8c_1ab8fded79b16d0a14a2b21cd8dfeb5901" kindref="member">bind_subcompositor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_subcompositor_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="compositor_8c_1ac78dc71c34c71109a0e006e329e7ba48" kindref="member">subcompositor_interface</ref>,</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor,<sp/>NULL);</highlight></codeline>
<codeline lineno="4762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"></highlight></codeline>
<codeline lineno="4769"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><ref refid="compositor_8c_1a7d36f815ecf064d9757684440667d74b" kindref="member">weston_compositor_dpms</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3" kindref="member">dpms_enum</ref><sp/>state)</highlight></codeline>
<codeline lineno="4772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"></highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;set_dpms)</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;set_dpms(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>state);</highlight></codeline>
<codeline lineno="4778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"></highlight></codeline>
<codeline lineno="4792"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="4794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>old_state<sp/>=<sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>state<sp/>needs<sp/>to<sp/>be<sp/>changed<sp/>before<sp/>emitting<sp/>the<sp/>wake</highlight></codeline>
<codeline lineno="4798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>signal<sp/>because<sp/>that<sp/>may<sp/>try<sp/>to<sp/>schedule<sp/>a<sp/>repaint<sp/>which</highlight></codeline>
<codeline lineno="4799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>not<sp/>work<sp/>if<sp/>the<sp/>compositor<sp/>is<sp/>still<sp/>sleeping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>=<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad3408c9425d98ee7990dbdd19ddf6377" kindref="member">WESTON_COMPOSITOR_ACTIVE</ref>;</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"></highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(old_state)<sp/>{</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" kindref="member">WESTON_COMPOSITOR_SLEEPING</ref>:</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad98fb56bd57616678d00cc1fef844267" kindref="member">WESTON_COMPOSITOR_IDLE</ref>:</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" kindref="member">WESTON_COMPOSITOR_OFFSCREEN</ref>:</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7d36f815ecf064d9757684440667d74b" kindref="member">weston_compositor_dpms</ref>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,<sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ad1b8db0fe08ab29dbaa695396cb1c637" kindref="member">WESTON_DPMS_ON</ref>);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a56bf6876b62efff1f6de4247973e4147" kindref="member">wake_signal</ref>,<sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_timer_update(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ab553646b778cf32b1956852f5b9cdcb4" kindref="member">idle_source</ref>,</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ab8688167325c7fd781a3725cbf23faaa" kindref="member">idle_time</ref><sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight></codeline>
<codeline lineno="4826"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><ref refid="group__compositor_1gabbeb356dd9688004330df598b514a27c" kindref="member">weston_compositor_offscreen</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="4828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" kindref="member">WESTON_COMPOSITOR_OFFSCREEN</ref>:</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" kindref="member">WESTON_COMPOSITOR_SLEEPING</ref>:</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>=<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" kindref="member">WESTON_COMPOSITOR_OFFSCREEN</ref>;</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_timer_update(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ab553646b778cf32b1956852f5b9cdcb4" kindref="member">idle_source</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4851"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><ref refid="group__compositor_1ga0d01f39e15e169b13384be82bb05370d" kindref="member">weston_compositor_sleep</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="4853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>==<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" kindref="member">WESTON_COMPOSITOR_SLEEPING</ref>)</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_timer_update(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ab553646b778cf32b1956852f5b9cdcb4" kindref="member">idle_source</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>=<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" kindref="member">WESTON_COMPOSITOR_SLEEPING</ref>;</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7d36f815ecf064d9757684440667d74b" kindref="member">weston_compositor_dpms</ref>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,<sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3a3f1ea2fc87236eee5e7a9dc3c00f80a3" kindref="member">WESTON_DPMS_OFF</ref>);</highlight></codeline>
<codeline lineno="4860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><ref refid="compositor_8c_1aaa64c25507c0562733cb9a0204c41fdc" kindref="member">idle_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="4876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"></highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1a5044af245cac705c327f2122805a3469" kindref="member">idle_inhibit</ref>)</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>=<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad98fb56bd57616678d00cc1fef844267" kindref="member">WESTON_COMPOSITOR_IDLE</ref>;</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;compositor-&gt;<ref refid="structweston__compositor_1ad0a0e9d1055742e7ddb9d35007e77a6a" kindref="member">idle_signal</ref>,<sp/>compositor);</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"></highlight></codeline>
<codeline lineno="4888"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><ref refid="compositor_8c_1ab52c880548e2277a5d370b343d782cde" kindref="member">weston_plane_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*plane,</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y)</highlight></codeline>
<codeline lineno="4892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;plane-&gt;<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>);</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;plane-&gt;<ref refid="structweston__plane_1a8ec61668668ea9f07c2590c9d9d7180b" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane-&gt;<ref refid="structweston__plane_1ac2537d80979eca0253ae246469f9122c" kindref="member">x</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane-&gt;<ref refid="structweston__plane_1aa44631ee41fa6a3eff42d5602e673a22" kindref="member">y</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane-&gt;<ref refid="structweston__plane_1a1052bfc9c27c5bc65ced418f895f2942" kindref="member">compositor</ref><sp/>=<sp/>ec;</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>link<sp/>so<sp/>that<sp/>the<sp/>call<sp/>to<sp/>wl_list_remove()<sp/>when<sp/>releasing</highlight></codeline>
<codeline lineno="4900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>plane<sp/>without<sp/>ever<sp/>stacking<sp/>doesn&apos;t<sp/>lead<sp/>to<sp/>a<sp/>crash<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;plane-&gt;<ref refid="structweston__plane_1afe11266c30708df9f38d0e44cd661941" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="4902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"></highlight></codeline>
<codeline lineno="4904"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><ref refid="compositor_8c_1afdee68639f6f9af1a195ee4892afcce6" kindref="member">weston_plane_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*plane)</highlight></codeline>
<codeline lineno="4906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"></highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1a8ec61668668ea9f07c2590c9d9d7180b" kindref="member">clip</ref>);</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"></highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1a1052bfc9c27c5bc65ced418f895f2942" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/><ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref><sp/>==<sp/><ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>)</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"></highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1afe11266c30708df9f38d0e44cd661941" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="4918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"></highlight></codeline>
<codeline lineno="4923"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><ref refid="group__compositor_1gac0da9a90074155e609e2f5845cbf25fc" kindref="member">weston_compositor_stack_plane</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>,</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*above)</highlight></codeline>
<codeline lineno="4927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(above)</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(above-&gt;<ref refid="structweston__plane_1afe11266c30708df9f38d0e44cd661941" kindref="member">link</ref>.prev,<sp/>&amp;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1afe11266c30708df9f38d0e44cd661941" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;ec-&gt;<ref refid="structweston__compositor_1a23c931ea0ccaf279dbbc8676c8d75d50" kindref="member">plane_list</ref>,<sp/>&amp;<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>-&gt;<ref refid="structweston__plane_1afe11266c30708df9f38d0e44cd661941" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="4932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"></highlight></codeline>
<codeline lineno="4934"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><ref refid="compositor_8c_1ac0cb28d2d906827fe74fd564f5d295c9" kindref="member">output_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="4936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="4938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"></highlight></codeline>
<codeline lineno="4940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_output_interface<sp/><ref refid="compositor_8c_1aec80d874d744f8e9ceef99cd23999319" kindref="member">output_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac0cb28d2d906827fe74fd564f5d295c9" kindref="member">output_release</ref>,</highlight></codeline>
<codeline lineno="4942"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"></highlight></codeline>
<codeline lineno="4944"><highlight class="normal"></highlight></codeline>
<codeline lineno="4945"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="compositor_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="4946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="4948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><ref refid="compositor_8c_1a1671db7d67d73ce968cb2d6c5dc602e0" kindref="member">bind_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>*mode;</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"></highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_output_interface,</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"></highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;head-&gt;<ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>,<sp/>wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="compositor_8c_1aec80d874d744f8e9ceef99cd23999319" kindref="member">output_interface</ref>,<sp/>head,</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>);</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_geometry(resource,</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a53134128fbaec8ce32777943668231fa" kindref="member">mm_width</ref>,</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a70fd6da38752dc11c9d9b81bd07629c1" kindref="member">mm_height</ref>,</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a563a35c7295b88be527aaaa9773e7d46" kindref="member">subpixel</ref>,</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref>,<sp/>head-&gt;<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform);</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>&gt;=<sp/>WL_OUTPUT_SCALE_SINCE_VERSION)</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_scale(resource,</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale);</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each<sp/>(mode,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;mode_list,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_mode(resource,</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode-&gt;<ref refid="structweston__mode_1a3486025f88d5d3a8f8a4fb6a047fd16c" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode-&gt;<ref refid="structweston__mode_1aea5fb418a59b04da33ae6907309fea4e" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode-&gt;<ref refid="structweston__mode_1a54e031b141b63ff2479b784bfc6f021e" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode-&gt;<ref refid="structweston__mode_1a604805ee46663105f12b659d88f80da8" kindref="member">refresh</ref>);</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>&gt;=<sp/>WL_OUTPUT_DONE_SINCE_VERSION)</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_done(resource);</highlight></codeline>
<codeline lineno="4993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"></highlight></codeline>
<codeline lineno="4995"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><ref refid="compositor_8c_1a0040a314b962fe31b3713f756aef192a" kindref="member">weston_head_add_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="4997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a9262a2db007977965902bd71329b844e" kindref="member">global</ref><sp/>=<sp/>wl_global_create(head-&gt;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wl_output_interface,<sp/>3,</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head,<sp/><ref refid="compositor_8c_1a1671db7d67d73ce968cb2d6c5dc602e0" kindref="member">bind_output</ref>);</highlight></codeline>
<codeline lineno="5001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"></highlight></codeline>
<codeline lineno="5009"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><ref refid="compositor_8c_1a6c9611470b87c980708d481413c3e2ed" kindref="member">weston_head_remove_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5011"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource,<sp/>*tmp;</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1a9262a2db007977965902bd71329b844e" kindref="member">global</ref>)</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_global_destroy(head-&gt;<ref refid="structweston__head_1a9262a2db007977965902bd71329b844e" kindref="member">global</ref>);</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a9262a2db007977965902bd71329b844e" kindref="member">global</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"></highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each_safe(resource,<sp/>tmp,<sp/>&amp;head-&gt;<ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>(resource);</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_destructor(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"></highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;head-&gt;<ref refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" kindref="member">xdg_output_resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>sufficient<sp/>to<sp/>unset<sp/>the<sp/>destructor,<sp/>then<sp/>the<sp/>list<sp/>elements</highlight></codeline>
<codeline lineno="5026"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>won&apos;t<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="5027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_destructor(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;head-&gt;<ref refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" kindref="member">xdg_output_resource_list</ref>);</highlight></codeline>
<codeline lineno="5031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><ref refid="group__head_1ga09a7ecebc209197f9691e09a4c8a3c8b" kindref="member">weston_head_from_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="5043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_resource_instance_of(resource,<sp/>&amp;wl_output_interface,</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="compositor_8c_1aec80d874d744f8e9ceef99cd23999319" kindref="member">output_interface</ref>));</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"></highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="5048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"></highlight></codeline>
<codeline lineno="5063"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><ref refid="group__head_1gab458db3cc734c39f07222a72cfca7bfe" kindref="member">weston_head_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="5065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>some<sp/>(in)sane<sp/>defaults<sp/>which<sp/>can<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="5067"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>checking<sp/>if<sp/>an<sp/>output<sp/>was<sp/>properly<sp/>configured</highlight></codeline>
<codeline lineno="5068"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(head,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*head);</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"></highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;head-&gt;<ref refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" kindref="member">compositor_link</ref>);</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;head-&gt;<ref refid="structweston__head_1a24f85e976741d62ea2ad01bb7d4e671b" kindref="member">destroy_signal</ref>);</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;head-&gt;<ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>);</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;head-&gt;<ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>);</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;head-&gt;<ref refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" kindref="member">xdg_output_resource_list</ref>);</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref><sp/>=<sp/>strdup(<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1ac0b673f5c060a68425b275a8b96a17f7" kindref="member">current_protection</ref><sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="5078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"></highlight></codeline>
<codeline lineno="5094"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><ref refid="group__output_1gac664a86e8af03efbb0bcdd7795941826" kindref="member">weston_output_emit_heads_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="5096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor-&gt;output_heads_changed_signal,</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"></highlight></codeline>
<codeline lineno="5102"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><ref refid="compositor_8c_1a87485b6d14e938f80a345fc5190d017d" kindref="member">weston_compositor_call_heads_changed</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="5104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"></highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" kindref="member">heads_changed_source</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"></highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a09a2bfe7cc2442ae9afe49fe4819a8c6" kindref="member">heads_changed_signal</ref>,<sp/><ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a154cc4c320f1d35ecb9886f2b68b6e27" kindref="member">head_list</ref>,<sp/><ref refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" kindref="member">compositor_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref><sp/>&amp;&amp;<sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>-&gt;<ref refid="structweston__output_1ac5845e364925e00ffec20d517d4371ed" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1gac664a86e8af03efbb0bcdd7795941826" kindref="member">weston_output_emit_heads_changed</ref>(head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"></highlight></codeline>
<codeline lineno="5125"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><ref refid="group__compositor_1gae456afce819647679741443d15cd82cb" kindref="member">weston_compositor_schedule_heads_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="5127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_loop<sp/>*loop;</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"></highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" kindref="member">heads_changed_source</ref>)</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>wl_display_get_event_loop(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" kindref="member">heads_changed_source</ref><sp/>=<sp/>wl_event_loop_add_idle(loop,</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a87485b6d14e938f80a345fc5190d017d" kindref="member">weston_compositor_call_heads_changed</ref>,<sp/>compositor);</highlight></codeline>
<codeline lineno="5136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><ref refid="group__compositor_1ga9cc453a480c9083e2b15d974f0c9d61e" kindref="member">weston_compositor_add_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_list_empty(&amp;head-&gt;<ref refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" kindref="member">compositor_link</ref>));</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(head-&gt;<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"></highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(compositor-&gt;<ref refid="structweston__compositor_1a154cc4c320f1d35ecb9886f2b68b6e27" kindref="member">head_list</ref>.prev,<sp/>&amp;head-&gt;<ref refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" kindref="member">compositor_link</ref>);</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref><sp/>=<sp/>compositor;</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1gae456afce819647679741443d15cd82cb" kindref="member">weston_compositor_schedule_heads_changed</ref>(compositor);</highlight></codeline>
<codeline lineno="5159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"></highlight></codeline>
<codeline lineno="5177"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><ref refid="group__compositor_1gaaf5629bbdce30062a548444c7df59205" kindref="member">weston_compositor_add_heads_changed_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener)</highlight></codeline>
<codeline lineno="5180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;compositor-&gt;<ref refid="structweston__compositor_1a09a2bfe7cc2442ae9afe49fe4819a8c6" kindref="member">heads_changed_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="5182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><ref refid="group__compositor_1ga23fa98d05ed6886179c337931ae8a407" kindref="member">weston_compositor_iterate_heads</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="5209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*list<sp/>=<sp/>&amp;compositor-&gt;<ref refid="structweston__compositor_1a154cc4c320f1d35ecb9886f2b68b6e27" kindref="member">head_list</ref>;</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*node;</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(compositor);</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!iter<sp/>||<sp/>iter-&gt;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref><sp/>==<sp/>compositor);</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter)</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>iter-&gt;<ref refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" kindref="member">compositor_link</ref>.next;</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>list-&gt;next;</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"></highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(node);</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!iter<sp/>||<sp/>node<sp/>!=<sp/>&amp;iter-&gt;<ref refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" kindref="member">compositor_link</ref>);</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"></highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>list)</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>container_of(node,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref>,<sp/>compositor_link);</highlight></codeline>
<codeline lineno="5228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"></highlight></codeline>
<codeline lineno="5252"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><ref refid="group__output_1gaabbac16a3b4715c19d3f69b521e89750" kindref="member">weston_output_iterate_heads</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="5255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*list<sp/>=<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list;</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*node;</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"></highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!iter<sp/>||<sp/>iter-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref><sp/>==<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"></highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter)</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>iter-&gt;<ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>.next;</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>list-&gt;next;</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"></highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(node);</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!iter<sp/>||<sp/>node<sp/>!=<sp/>&amp;iter-&gt;<ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>);</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"></highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>list)</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"></highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>container_of(node,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref>,<sp/>output_link);</highlight></codeline>
<codeline lineno="5274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"></highlight></codeline>
<codeline lineno="5295"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><ref refid="group__output_1ga4e31a4f40995c5c80cca21775d15a15a" kindref="member">weston_output_attach_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*head_names;</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"></highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;head-&gt;<ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>))</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"></highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;attach_head)<sp/>{</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;attach_head(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>head)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list))<sp/>{</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>support<sp/>for<sp/>clones<sp/>in<sp/>the<sp/>legacy<sp/>path.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"></highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref><sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list.prev,<sp/>&amp;head-&gt;<ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>);</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"></highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled)<sp/>{</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0040a314b962fe31b3713f756aef192a" kindref="member">weston_head_add_global</ref>(head);</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"></highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_names<sp/>=<sp/><ref refid="group__output_1ga42eb945978c9fc4207fab33dd5e46be1" kindref="member">weston_output_create_heads_string</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Output<sp/>&apos;%s&apos;<sp/>updated<sp/>to<sp/>have<sp/>head(s)<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name,<sp/>head_names);</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head_names);</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"></highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1gac664a86e8af03efbb0bcdd7795941826" kindref="member">weston_output_emit_heads_changed</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"></highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"></highlight></codeline>
<codeline lineno="5341"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><ref refid="group__head_1gac5cc5415250a9aa4f830af252b72a666" kindref="member">weston_head_detach</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*head_names;</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"></highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;head-&gt;<ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>);</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;head-&gt;<ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>);</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"></highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"></highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;detach_head)</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;detach_head(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>head);</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"></highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled)<sp/>{</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a6c9611470b87c980708d481413c3e2ed" kindref="member">weston_head_remove_global</ref>(head);</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"></highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list))<sp/>{</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Output<sp/>&apos;%s&apos;<sp/>no<sp/>heads<sp/>left,<sp/>disabling.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name);</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1gad86b73873e740780e6a1b4b7ad7b7e2b" kindref="member">weston_output_disable</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_names<sp/>=<sp/><ref refid="group__output_1ga42eb945978c9fc4207fab33dd5e46be1" kindref="member">weston_output_create_heads_string</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Output<sp/>&apos;%s&apos;<sp/>updated<sp/>to<sp/>have<sp/>head(s)<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name,<sp/>head_names);</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head_names);</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"></highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1gac664a86e8af03efbb0bcdd7795941826" kindref="member">weston_output_emit_heads_changed</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"></highlight></codeline>
<codeline lineno="5385"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><ref refid="group__head_1ga620a43a89a9f4045689f5f7bddeaa533" kindref="member">weston_head_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;head-&gt;<ref refid="structweston__head_1a24f85e976741d62ea2ad01bb7d4e671b" kindref="member">destroy_signal</ref>,<sp/>head);</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"></highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__head_1gac5cc5415250a9aa4f830af252b72a666" kindref="member">weston_head_detach</ref>(head);</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"></highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head-&gt;<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref>);</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head-&gt;<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head-&gt;<ref refid="structweston__head_1ac0caa1ebd8d85bf3a03fe4570ecbfc7f" kindref="member">serial_number</ref>);</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head-&gt;<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"></highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;head-&gt;<ref refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" kindref="member">compositor_link</ref>);</highlight></codeline>
<codeline lineno="5398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"></highlight></codeline>
<codeline lineno="5400"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><ref refid="compositor_8c_1a5e9c9f5852d7e6ceacf306a825839a79" kindref="member">weston_head_set_device_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1adc383408494e7e17f37d660c7ba6bcee" kindref="member">device_changed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"></highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1gae456afce819647679741443d15cd82cb" kindref="member">weston_compositor_schedule_heads_changed</ref>(head-&gt;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="5407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"></highlight></codeline>
<codeline lineno="5410"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><ref refid="compositor_8c_1a5895bebb65c3adf73ba2f4f7529fdb4d" kindref="member">str_null_eq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b)</highlight></codeline>
<codeline lineno="5412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a<sp/>&amp;&amp;<sp/>!b)</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"></highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!!a<sp/>!=<sp/>!!b)</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"></highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(a,<sp/>b)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="5420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"></highlight></codeline>
<codeline lineno="5437"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><ref refid="group__head_1gad1dbb9d1e8023b3c1587b2a15d1ee550" kindref="member">weston_head_set_monitor_strings</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*make,</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*model,</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*serialno)</highlight></codeline>
<codeline lineno="5442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a5895bebb65c3adf73ba2f4f7529fdb4d" kindref="member">str_null_eq</ref>(head-&gt;<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref>,<sp/>make)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5895bebb65c3adf73ba2f4f7529fdb4d" kindref="member">str_null_eq</ref>(head-&gt;<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref>,<sp/>model)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5895bebb65c3adf73ba2f4f7529fdb4d" kindref="member">str_null_eq</ref>(head-&gt;<ref refid="structweston__head_1ac0caa1ebd8d85bf3a03fe4570ecbfc7f" kindref="member">serial_number</ref>,<sp/>serialno))</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"></highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head-&gt;<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref>);</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head-&gt;<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head-&gt;<ref refid="structweston__head_1ac0caa1ebd8d85bf3a03fe4570ecbfc7f" kindref="member">serial_number</ref>);</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"></highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref><sp/>=<sp/>make<sp/>?<sp/>strdup(make)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref><sp/>=<sp/>model<sp/>?<sp/>strdup(model)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1ac0caa1ebd8d85bf3a03fe4570ecbfc7f" kindref="member">serial_number</ref><sp/>=<sp/>serialno<sp/>?<sp/>strdup(serialno)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"></highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5e9c9f5852d7e6ceacf306a825839a79" kindref="member">weston_head_set_device_changed</ref>(head);</highlight></codeline>
<codeline lineno="5457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"></highlight></codeline>
<codeline lineno="5467"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><ref refid="group__head_1ga0ec29ead0db5f04159e9b69a889713b9" kindref="member">weston_head_set_non_desktop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_desktop)</highlight></codeline>
<codeline lineno="5469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1a52f05b229e95b48234fc5529960ff9b3" kindref="member">non_desktop</ref><sp/>==<sp/>non_desktop)</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"></highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a52f05b229e95b48234fc5529960ff9b3" kindref="member">non_desktop</ref><sp/>=<sp/>non_desktop;</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"></highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5e9c9f5852d7e6ceacf306a825839a79" kindref="member">weston_head_set_device_changed</ref>(head);</highlight></codeline>
<codeline lineno="5476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><ref refid="group__head_1ga0af29bbbf4c6d09c82bbac58286c656a" kindref="member">weston_head_set_transform</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,<sp/>uint32_t<sp/><ref refid="structweston__output_1ab92c885dbfd2781d4ada5dbc568140f8" kindref="member">transform</ref>)</highlight></codeline>
<codeline lineno="5490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" kindref="member">transform</ref><sp/>==<sp/><ref refid="structweston__output_1ab92c885dbfd2781d4ada5dbc568140f8" kindref="member">transform</ref>)</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"></highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" kindref="member">transform</ref><sp/>=<sp/><ref refid="structweston__output_1ab92c885dbfd2781d4ada5dbc568140f8" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"></highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5e9c9f5852d7e6ceacf306a825839a79" kindref="member">weston_head_set_device_changed</ref>(head);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"></highlight></codeline>
<codeline lineno="5511"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><ref refid="group__head_1ga453bc787c6868e53371866de3f4db622" kindref="member">weston_head_set_physical_size</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>mm_width,<sp/>int32_t<sp/>mm_height)</highlight></codeline>
<codeline lineno="5514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1a53134128fbaec8ce32777943668231fa" kindref="member">mm_width</ref><sp/>==<sp/>mm_width<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a70fd6da38752dc11c9d9b81bd07629c1" kindref="member">mm_height</ref><sp/>==<sp/>mm_height)</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"></highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a53134128fbaec8ce32777943668231fa" kindref="member">mm_width</ref><sp/>=<sp/>mm_width;</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a70fd6da38752dc11c9d9b81bd07629c1" kindref="member">mm_height</ref><sp/>=<sp/>mm_height;</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"></highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5e9c9f5852d7e6ceacf306a825839a79" kindref="member">weston_head_set_device_changed</ref>(head);</highlight></codeline>
<codeline lineno="5523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"></highlight></codeline>
<codeline lineno="5541"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><ref refid="group__head_1gab4123b993477c318d4c87d782b6e4b51" kindref="member">weston_head_set_subpixel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_output_subpixel<sp/>sp)</highlight></codeline>
<codeline lineno="5544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1a563a35c7295b88be527aaaa9773e7d46" kindref="member">subpixel</ref><sp/>==<sp/>sp)</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"></highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a563a35c7295b88be527aaaa9773e7d46" kindref="member">subpixel</ref><sp/>=<sp/>sp;</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"></highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5e9c9f5852d7e6ceacf306a825839a79" kindref="member">weston_head_set_device_changed</ref>(head);</highlight></codeline>
<codeline lineno="5551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"></highlight></codeline>
<codeline lineno="5565"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><ref refid="group__head_1ga4ece2c0a2966224ebece0b092a6a9883" kindref="member">weston_head_set_internal</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a11cd90ab6330f808b8950c8cfa53befc" kindref="member">connection_internal</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"></highlight></codeline>
<codeline lineno="5591"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><ref refid="group__head_1ga522efc0ba8ba4ce81c0ac4c1cf197f5a" kindref="member">weston_head_set_connection_status</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connected)</highlight></codeline>
<codeline lineno="5593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1a2cb7768507f3445476c99cefaac39a2a" kindref="member">connected</ref><sp/>==<sp/>connected)</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"></highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a2cb7768507f3445476c99cefaac39a2a" kindref="member">connected</ref><sp/>=<sp/>connected;</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"></highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5e9c9f5852d7e6ceacf306a825839a79" kindref="member">weston_head_set_device_changed</ref>(head);</highlight></codeline>
<codeline lineno="5600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"></highlight></codeline>
<codeline lineno="5602"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><ref refid="compositor_8c_1a888123607202b7d3715f8dd68e9ce079" kindref="member">weston_output_compute_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="5604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>op_protection;</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>op_protection_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*wc<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"></highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/>output_link)<sp/>{</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!op_protection_valid)<sp/>{</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_protection<sp/>=<sp/>head-&gt;<ref refid="structweston__head_1ac0b673f5c060a68425b275a8b96a17f7" kindref="member">current_protection</ref>;</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_protection_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1ac0b673f5c060a68425b275a8b96a17f7" kindref="member">current_protection</ref><sp/>&lt;<sp/>op_protection)</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_protection<sp/>=<sp/>head-&gt;<ref refid="structweston__head_1ac0b673f5c060a68425b275a8b96a17f7" kindref="member">current_protection</ref>;</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"></highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!op_protection_valid)</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_protection<sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"></highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;current_protection<sp/>!=<sp/>op_protection)<sp/>{</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_protection<sp/>=<sp/>op_protection;</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1gab45be972c9a7bf6c86c6ca8db03034f2" kindref="member">weston_output_damage</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac6277c99f8902551d05f429293eba72d" kindref="member">weston_schedule_surface_protection_update</ref>(wc);</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"></highlight></codeline>
<codeline lineno="5629"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><ref refid="compositor_8c_1ad857cfe1c11b72be724989f35dbb2d5a" kindref="member">weston_head_set_content_protection_status</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>status)</highlight></codeline>
<codeline lineno="5632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1ac0b673f5c060a68425b275a8b96a17f7" kindref="member">current_protection</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a888123607202b7d3715f8dd68e9ce079" kindref="member">weston_output_compute_protection</ref>(head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="5636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"></highlight></codeline>
<codeline lineno="5652"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><ref refid="group__head_1gad0da27f9a2e98faf8aecf84704935440" kindref="member">weston_head_is_connected</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head-&gt;<ref refid="structweston__head_1a2cb7768507f3445476c99cefaac39a2a" kindref="member">connected</ref>;</highlight></codeline>
<codeline lineno="5656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"></highlight></codeline>
<codeline lineno="5670"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><ref refid="group__head_1ga8d49a887b440265b363a5075fefff343" kindref="member">weston_head_is_enabled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"></highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>-&gt;<ref refid="structweston__output_1ac5845e364925e00ffec20d517d4371ed" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="5677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"></highlight></codeline>
<codeline lineno="5694"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><ref refid="group__head_1ga8166b9178e0d63360ebe4bd1a3d9466b" kindref="member">weston_head_is_device_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head-&gt;<ref refid="structweston__head_1adc383408494e7e17f37d660c7ba6bcee" kindref="member">device_changed</ref>;</highlight></codeline>
<codeline lineno="5698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"></highlight></codeline>
<codeline lineno="5710"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><ref refid="group__head_1gaf349968c812aa4496e3afd9e2a550ce8" kindref="member">weston_head_is_non_desktop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head-&gt;<ref refid="structweston__head_1a52f05b229e95b48234fc5529960ff9b3" kindref="member">non_desktop</ref>;</highlight></codeline>
<codeline lineno="5714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"></highlight></codeline>
<codeline lineno="5727"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><ref refid="group__head_1ga4f891068162ad3c11b7c971dcf7087d6" kindref="member">weston_head_reset_device_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1adc383408494e7e17f37d660c7ba6bcee" kindref="member">device_changed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"></highlight></codeline>
<codeline lineno="5743"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><ref refid="group__head_1gadc2cacc63e1e08fa67962fd1379dd085" kindref="member">weston_head_get_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head-&gt;<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="5747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"></highlight></codeline>
<codeline lineno="5755"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><ref refid="group__head_1gaa421449fe0fad20bece74a1359e9dea7" kindref="member">weston_head_get_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="5759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"></highlight></codeline>
<codeline lineno="5773"><highlight class="normal">WL_EXPORT<sp/>uint32_t</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><ref refid="group__head_1ga2be199d2caef16d084aa4aa56434f0ef" kindref="member">weston_head_get_transform</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="5775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head-&gt;<ref refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="5777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"></highlight></codeline>
<codeline lineno="5797"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><ref refid="group__head_1gacb1d8713745a3e871acad1bdb129d720" kindref="member">weston_head_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener)</highlight></codeline>
<codeline lineno="5800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;head-&gt;<ref refid="structweston__head_1a24f85e976741d62ea2ad01bb7d4e671b" kindref="member">destroy_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="5802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"></highlight></codeline>
<codeline lineno="5817"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/>*</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><ref refid="group__head_1ga523c746a6ae0d5457e5696b903c1508d" kindref="member">weston_head_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_notify_func_t<sp/>notify)</highlight></codeline>
<codeline lineno="5820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_signal_get(&amp;head-&gt;<ref refid="structweston__head_1a24f85e976741d62ea2ad01bb7d4e671b" kindref="member">destroy_signal</ref>,<sp/>notify);</highlight></codeline>
<codeline lineno="5822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Move<sp/>other<sp/>outputs<sp/>when<sp/>one<sp/>is<sp/>resized<sp/>so<sp/>the<sp/>space<sp/>remains<sp/>contiguous.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5825"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><ref refid="compositor_8c_1ad1d1cfd09469f19cf86f0c4fdd43e76f" kindref="member">weston_compositor_reflow_outputs</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*resized_output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta_width)</highlight></codeline>
<codeline lineno="5828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start_resizing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"></highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!delta_width)</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"></highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref><sp/>==<sp/>resized_output)<sp/>{</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_resizing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"></highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_resizing)<sp/>{</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1ga1e29336a58385636b0d2c213eaddbac1" kindref="member">weston_output_move</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+<sp/>delta_width,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;dirty<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"></highlight></codeline>
<codeline lineno="5863"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><ref refid="compositor_8c_1a8d4a3039ba1a23bfe713131cf3b7cd5a" kindref="member">weston_output_region_from_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>)</highlight></codeline>
<codeline lineno="5866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;zoom.active)<sp/>{</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a69d6ae1e2501bc0b76f563edadc212d1" kindref="member">weston_matrix_transform_region</ref>(<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/><ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_translate(<ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a6edea0da779eae3aca7dd73800591528" kindref="member">weston_transformed_region</ref>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform,</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale,</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>,<sp/><ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"></highlight></codeline>
<codeline lineno="5878"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><ref refid="compositor_8c_1a7885b07813c43dba107948b93948ffc0" kindref="member">weston_output_update_matrix</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="5880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>magnification;</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"></highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a1a379a971f1948d4ccc8d76d58506078" kindref="member">weston_matrix_init</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix);</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"></highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;zoom.active)<sp/>{</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magnification<sp/>=<sp/>1<sp/>/<sp/>(1<sp/>-<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;zoom.spring_z.current);</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zoom_8c_1a28dd8782c78da83f36a046f2c24535e8" kindref="member">weston_output_update_zoom</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;zoom.trans_x,</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;zoom.trans_y,<sp/>0);</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1ae66be97d5f6b1aa202cf48c3c1f3a0e1" kindref="member">weston_matrix_scale</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>magnification,</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magnification,<sp/>1.0);</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"></highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;transform)<sp/>{</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED:</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_90:</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_180:</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270:</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1ae66be97d5f6b1aa202cf48c3c1f3a0e1" kindref="member">weston_matrix_scale</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>-1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"></highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;transform)<sp/>{</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_NORMAL:</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED:</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_90:</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_90:</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a0fbcd18f6763c13802bf214a68f11b5d" kindref="member">weston_matrix_rotate_xy</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_180:</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_180:</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a0fbcd18f6763c13802bf214a68f11b5d" kindref="member">weston_matrix_rotate_xy</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_270:</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270:</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a11705753750edc192cfd0861fdfb5b8a" kindref="member">weston_matrix_translate</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>0,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a0fbcd18f6763c13802bf214a68f11b5d" kindref="member">weston_matrix_rotate_xy</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"></highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1ae66be97d5f6b1aa202cf48c3c1f3a0e1" kindref="member">weston_matrix_scale</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix,</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale,</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale,<sp/>1);</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"></highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;dirty<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"></highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a6deb2743e2b32947874410e92b8d83e7" kindref="member">weston_matrix_invert</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;inverse_matrix,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;matrix);</highlight></codeline>
<codeline lineno="5936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"></highlight></codeline>
<codeline lineno="5938"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><ref refid="compositor_8c_1a3853d7f753575c4feb9c1f8ed1255157" kindref="member">weston_output_transform_scale_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/>uint32_t<sp/><ref refid="structweston__output_1ab92c885dbfd2781d4ada5dbc568140f8" kindref="member">transform</ref>,<sp/>uint32_t<sp/><ref refid="structweston__output_1a081b529f1e5f884677bde123cc7a9de3" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="5940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform<sp/>=<sp/><ref refid="structweston__output_1ab92c885dbfd2781d4ada5dbc568140f8" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;native_scale<sp/>=<sp/><ref refid="structweston__output_1a081b529f1e5f884677bde123cc7a9de3" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_scale<sp/>=<sp/><ref refid="structweston__output_1a081b529f1e5f884677bde123cc7a9de3" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"></highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac34fa0eb65307332b99b81459efb8996" kindref="member">convert_size_by_transform_scale</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1ab92c885dbfd2781d4ada5dbc568140f8" kindref="member">transform</ref>,<sp/><ref refid="structweston__output_1a081b529f1e5f884677bde123cc7a9de3" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="5949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"></highlight></codeline>
<codeline lineno="5951"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><ref refid="compositor_8c_1ad023069a2b5f2fc41dc15c035e2602f3" kindref="member">weston_output_init_geometry</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="5953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>=<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>=<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"></highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region);</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region,<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="5961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"></highlight></codeline>
<codeline lineno="5966"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><ref refid="group__output_1ga1e29336a58385636b0d2c213eaddbac1" kindref="member">weston_output_move</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="5968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ver;</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"></highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;move_x<sp/>=<sp/>x<sp/>-<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;move_y<sp/>=<sp/>y<sp/>-<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="5975"><highlight class="normal"></highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;move_x<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;move_y<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"></highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad023069a2b5f2fc41dc15c035e2602f3" kindref="member">weston_output_init_geometry</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"></highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;dirty<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"></highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>views<sp/>on<sp/>this<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor-&gt;output_moved_signal,<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Notify<sp/>clients<sp/>of<sp/>the<sp/>change<sp/>for<sp/>output<sp/>position.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/>output_link)<sp/>{</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;head-&gt;<ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_geometry(resource,</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a53134128fbaec8ce32777943668231fa" kindref="member">mm_width</ref>,</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a70fd6da38752dc11c9d9b81bd07629c1" kindref="member">mm_height</ref>,</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a563a35c7295b88be527aaaa9773e7d46" kindref="member">subpixel</ref>,</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref>,</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform);</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"></highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver<sp/>=<sp/>wl_resource_get_version(resource);</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ver<sp/>&gt;=<sp/>WL_OUTPUT_DONE_SINCE_VERSION)</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_done(resource);</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"></highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;head-&gt;<ref refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" kindref="member">xdg_output_resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_logical_position(resource,</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_done(resource);</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"></highlight></codeline>
<codeline lineno="6027"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><ref refid="compositor_8c_1a40168272ce3900f82ea1c3d368a8bd98" kindref="member">weston_compositor_add_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/>*next;</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"></highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled);</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"></highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>we<sp/>haven&apos;t<sp/>reached<sp/>the<sp/>limit<sp/>of<sp/>32<sp/>available<sp/>output<sp/>IDs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ffs(~<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a5f4e57922615e82919d0d73283425782" kindref="member">output_id_pool</ref>)<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"></highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invert<sp/>the<sp/>output<sp/>id<sp/>pool<sp/>and<sp/>look<sp/>for<sp/>the<sp/>lowest<sp/>numbered</highlight></codeline>
<codeline lineno="6040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>switch<sp/>(the<sp/>least<sp/>significant<sp/>bit).<sp/><sp/>Take<sp/>that<sp/>bit&apos;s<sp/>position</highlight></codeline>
<codeline lineno="6041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>as<sp/>our<sp/>ID,<sp/>and<sp/>mark<sp/>it<sp/>used<sp/>in<sp/>the<sp/>compositor&apos;s<sp/>output_id_pool.</highlight></codeline>
<codeline lineno="6042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id<sp/>=<sp/>ffs(~<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a5f4e57922615e82919d0d73283425782" kindref="member">output_id_pool</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a5f4e57922615e82919d0d73283425782" kindref="member">output_id_pool</ref><sp/>|=<sp/>1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id;</highlight></codeline>
<codeline lineno="6045"><highlight class="normal"></highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>.prev,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"></highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>)</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0040a314b962fe31b3713f756aef192a" kindref="member">weston_head_add_global</ref>(head);</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"></highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a02dee1be3d004bb90e665aebef5bae5a" kindref="member">output_created_signal</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"></highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(view,<sp/>next,<sp/>&amp;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/>link)</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(view);</highlight></codeline>
<codeline lineno="6057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"></highlight></codeline>
<codeline lineno="6074"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><ref refid="group__output_1gaa6ff5fff6210e59ee443c89fd4941082" kindref="member">weston_output_transform_coordinate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>device_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>device_y,</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y)</highlight></codeline>
<codeline lineno="6078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__vector" kindref="compound">weston_vector</ref><sp/>p<sp/>=<sp/>{<sp/>{</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device_x,</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device_y,</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"></highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matrix_8h_1a8798df1cafe699c91c0cc477f7524c1b" kindref="member">weston_matrix_transform</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;inverse_matrix,<sp/>&amp;p);</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"></highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>p.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[0]<sp/>/<sp/>p.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>p.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[1]<sp/>/<sp/>p.<ref refid="structweston__vector_1af55e9e0affe6cdee57a6ae499424fede" kindref="member">f</ref>[3];</highlight></codeline>
<codeline lineno="6089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"></highlight></codeline>
<codeline lineno="6118"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><ref refid="group__compositor_1ga794fc39a73df6dca432c753825ef2a1b" kindref="member">weston_compositor_remove_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"></highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;destroying);</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled);</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref><sp/>&amp;<sp/>(1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id))</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1abe82cb82b75a6a7196ef924bb28959fc" kindref="member">weston_view_assign_output</ref>(view);</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"></highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9e35ed3c3311c408ac495e8f6588aa94" kindref="member">weston_presentation_feedback_discard_list</ref>(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;feedback_list);</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"></highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad1d1cfd09469f19cf86f0c4fdd43e76f" kindref="member">weston_compositor_reflow_outputs</ref>(<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>,<sp/>-<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="6136"><highlight class="normal"></highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1aa4d5b4d134294d69e1ed01d24df78b4e" kindref="member">pending_output_list</ref>.prev,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6140"><highlight class="normal"></highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ab1912e258bec64ce232b91caa3e54363" kindref="member">output_destroyed_signal</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;destroy_signal,<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"></highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>)</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a6c9611470b87c980708d481413c3e2ed" kindref="member">weston_head_remove_global</ref>(head);</highlight></codeline>
<codeline lineno="6146"><highlight class="normal"></highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a5f4e57922615e82919d0d73283425782" kindref="member">output_id_pool</ref><sp/>&amp;=<sp/>~(1u<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id);</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id<sp/>=<sp/>0xffffffff;<sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"></highlight></codeline>
<codeline lineno="6161"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><ref refid="group__output_1gaf55cb7ce87a56e9284c9860ed8e56cb4" kindref="member">weston_output_set_scale</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale)</highlight></codeline>
<codeline lineno="6164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can<sp/>only<sp/>set<sp/>scale<sp/>on<sp/>a<sp/>disabled<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled);</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>only<sp/>want<sp/>to<sp/>set<sp/>scale<sp/>once<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"></highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref><sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="6172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"></highlight></codeline>
<codeline lineno="6185"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><ref refid="group__output_1ga11bebd6791c64fbf449251f74e3254bf" kindref="member">weston_output_set_transform</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" kindref="member">transform</ref>)</highlight></codeline>
<codeline lineno="6188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>ev;</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat;</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>old_region;</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_x,<sp/>mid_y;</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ver;</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"></highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled<sp/>&amp;&amp;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform<sp/>==<sp/>UINT32_MAX)<sp/>{</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform<sp/>=<sp/><ref refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"></highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3853d7f753575c4feb9c1f8ed1255157" kindref="member">weston_output_transform_scale_init</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/><ref refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" kindref="member">transform</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"></highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;old_region);</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;old_region,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"></highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad023069a2b5f2fc41dc15c035e2602f3" kindref="member">weston_output_init_geometry</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"></highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;dirty<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"></highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Notify<sp/>clients<sp/>of<sp/>the<sp/>change<sp/>for<sp/>output<sp/>transform.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;head-&gt;<ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_geometry(resource,</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a53134128fbaec8ce32777943668231fa" kindref="member">mm_width</ref>,</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a70fd6da38752dc11c9d9b81bd07629c1" kindref="member">mm_height</ref>,</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a563a35c7295b88be527aaaa9773e7d46" kindref="member">subpixel</ref>,</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref>,</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform);</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"></highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver<sp/>=<sp/>wl_resource_get_version(resource);</highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ver<sp/>&gt;=<sp/>WL_OUTPUT_DONE_SINCE_VERSION)</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_send_done(resource);</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;head-&gt;<ref refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" kindref="member">xdg_output_resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_logical_position(resource,</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_logical_size(resource,</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_done(resource);</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"></highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>must<sp/>ensure<sp/>that<sp/>pointers<sp/>are<sp/>inside<sp/>output,<sp/>otherwise<sp/>they<sp/>disappear<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid_x<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid_y<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"></highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev.mask<sp/>=<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a84c6d5ae05c3d2b0778a27a28751c181" kindref="member">WESTON_POINTER_MOTION_ABS</ref>;</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev.<ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref><sp/>=<sp/>wl_fixed_to_double(wl_fixed_from_int(mid_x));</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev.<ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref><sp/>=<sp/>wl_fixed_to_double(wl_fixed_from_int(mid_y));</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(seat,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor-&gt;seat_list,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"></highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref><sp/>&amp;&amp;<sp/>pixman_region32_contains_point(&amp;old_region,</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>),</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL))</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab9f43265a9a88c5b2b3a1f23fdc6329b" kindref="member">weston_pointer_move</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>&amp;ev);</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"></highlight></codeline>
<codeline lineno="6276"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><ref refid="group__output_1ga524b14e04e1478ab2ebe168b97cda322" kindref="member">weston_output_set_renderer_shadow_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"></highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled);</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"></highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1a5be5c87f03fcdbc3aa7c456ebb96e4aa" kindref="member">capabilities</ref><sp/>&amp;<sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da1b1e29ae46171ce404f460103204ce98" kindref="member">WESTON_CAP_COLOR_OPS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;use_renderer_shadow_buffer<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"></highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"></highlight></codeline>
<codeline lineno="6307"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><ref refid="group__output_1gaeb6468e3cabf74cba4030400f1907799" kindref="member">weston_output_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="6311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor<sp/>=<sp/>compositor;</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;destroying<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name<sp/>=<sp/>strdup(name);</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;user_destroy_signal);</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;desired_protection<sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;allow_protection<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"></highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list);</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"></highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>some<sp/>(in)sane<sp/>defaults<sp/>which<sp/>can<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="6324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>checking<sp/>if<sp/>an<sp/>output<sp/>was<sp/>properly<sp/>configured</highlight></codeline>
<codeline lineno="6325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>use<sp/>-1<sp/>on<sp/>uint32_t<sp/>and<sp/>0<sp/>is<sp/>valid<sp/>enum<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform<sp/>=<sp/>UINT32_MAX;</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"></highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region);</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;mode_list);</highlight></codeline>
<codeline lineno="6332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"></highlight></codeline>
<codeline lineno="6344"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><ref refid="group__compositor_1ga3bf54722d538ec9410a82d1242a84958" kindref="member">weston_compositor_add_pending_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="6347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;disable);</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enable);</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"></highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(compositor-&gt;<ref refid="structweston__compositor_1aa4d5b4d134294d69e1ed01d24df78b4e" kindref="member">pending_output_list</ref>.prev,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="6353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"></highlight></codeline>
<codeline lineno="6361"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><ref refid="group__output_1ga42eb945978c9fc4207fab33dd5e46be1" kindref="member">weston_output_create_heads_string</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sep<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"></highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>open_memstream(&amp;str,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fp)</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"></highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>sep,<sp/>head-&gt;<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sep<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"></highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="6381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6382"><highlight class="normal"></highlight></codeline>
<codeline lineno="6418"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><ref refid="group__output_1ga80c54aa6f93b50afc216bb6ab9c97575" kindref="member">weston_output_enable</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*c<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*iterator;</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*head_names;</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0,<sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"></highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled)<sp/>{</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>attempt<sp/>to<sp/>enable<sp/>an<sp/>enabled<sp/>output<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name);</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"></highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list))<sp/>{</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>cannot<sp/>enable<sp/>output<sp/>&apos;%s&apos;<sp/>without<sp/>heads.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name);</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"></highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;mode_list)<sp/>||<sp/>!<ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode)<sp/>{</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>video<sp/>mode<sp/>for<sp/>output<sp/>&apos;%s&apos;.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name);</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"></highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(head-&gt;<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref>);</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(head-&gt;<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"></highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>=<sp/>container_of(c-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>.prev,</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref>,<sp/>link);</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"></highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;c-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>))</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>iterator-&gt;<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref><sp/>+<sp/>iterator-&gt;<ref refid="structweston__output_1afe369b7cd5025ff87f9b8ccfaa1b7a17" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"></highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>the<sp/>scale<sp/>is<sp/>set<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"></highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>transform<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;transform<sp/>!=<sp/>UINT32_MAX);</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"></highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;dirty<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;original_scale<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"></highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;frame_signal);</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;destroy_signal);</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"></highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3853d7f753575c4feb9c1f8ed1255157" kindref="member">weston_output_transform_scale_init</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;transform,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1a470be4b2527eb40684c830312131a1a7" kindref="member">weston_output_init_zoom</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"></highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ad023069a2b5f2fc41dc15c035e2602f3" kindref="member">weston_output_init_geometry</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1gab45be972c9a7bf6c86c6ca8db03034f2" kindref="member">weston_output_damage</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"></highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;animation_list);</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;feedback_list);</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"></highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>output<sp/>(set<sp/>up<sp/>the<sp/>crtc<sp/>or<sp/>create<sp/>a</highlight></codeline>
<codeline lineno="6480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>window<sp/>representing<sp/>the<sp/>output,<sp/>set<sp/>up<sp/>the</highlight></codeline>
<codeline lineno="6481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>renderer,<sp/>etc)</highlight></codeline>
<codeline lineno="6482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enable(<ref refid="structoutput" kindref="compound">output</ref>)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Enabling<sp/>output<sp/>\&quot;%s\&quot;<sp/>failed.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name);</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"></highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a40168272ce3900f82ea1c3d368a8bd98" kindref="member">weston_compositor_add_output</ref>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor,<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"></highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_names<sp/>=<sp/><ref refid="group__output_1ga42eb945978c9fc4207fab33dd5e46be1" kindref="member">weston_output_create_heads_string</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Output<sp/>&apos;%s&apos;<sp/>enabled<sp/>with<sp/>head(s)<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name,<sp/>head_names);</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(head_names);</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"></highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6497"><highlight class="normal"></highlight></codeline>
<codeline lineno="6526"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><ref refid="group__output_1gad86b73873e740780e6a1b4b7ad7b7e2b" kindref="member">weston_output_disable</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>we<sp/>rename<sp/>this?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;destroying<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"></highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>is<sp/>called<sp/>unconditionally<sp/>also<sp/>for<sp/>not-enabled<sp/>outputs,</highlight></codeline>
<codeline lineno="6533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>because<sp/>at<sp/>compositor<sp/>start-up,<sp/>if<sp/>there<sp/>is<sp/>an<sp/>output<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="6534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>already<sp/>on<sp/>but<sp/>the<sp/>compositor<sp/>wants<sp/>to<sp/>turn<sp/>it<sp/>off,<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="6535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>forward<sp/>the<sp/>turn-off<sp/>to<sp/>the<sp/>backend<sp/>so<sp/>it<sp/>knows<sp/>to<sp/>do<sp/>it.</highlight></codeline>
<codeline lineno="6536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>backend<sp/>cannot<sp/>initially<sp/>turn<sp/>off<sp/>everything,<sp/>because<sp/>it</highlight></codeline>
<codeline lineno="6537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>would<sp/>cause<sp/>unnecessary<sp/>mode-sets<sp/>for<sp/>all<sp/>outputs<sp/>the<sp/>compositor</highlight></codeline>
<codeline lineno="6538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wants<sp/>to<sp/>be<sp/>on.</highlight></codeline>
<codeline lineno="6539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;disable(<ref refid="structoutput" kindref="compound">output</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6542"><highlight class="normal"></highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled)</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga794fc39a73df6dca432c753825ef2a1b" kindref="member">weston_compositor_remove_output</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6545"><highlight class="normal"></highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;destroying<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"></highlight></codeline>
<codeline lineno="6558"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><ref refid="group__compositor_1gae835d9bf9af471b041a588778a774db2" kindref="member">weston_compositor_flush_heads_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="6560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" kindref="member">heads_changed_source</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_remove(<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" kindref="member">heads_changed_source</ref>);</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a87485b6d14e938f80a345fc5190d017d" kindref="member">weston_compositor_call_heads_changed</ref>(<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"></highlight></codeline>
<codeline lineno="6586"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><ref refid="group__output_1ga76ab2121852bb7a085ac23abaac35bdd" kindref="member">weston_output_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener)</highlight></codeline>
<codeline lineno="6589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;user_destroy_signal,<sp/>listener);</highlight></codeline>
<codeline lineno="6591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"></highlight></codeline>
<codeline lineno="6606"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/>*</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><ref refid="group__output_1ga0678ba130cd10a2c92720a2decfe7aeb" kindref="member">weston_output_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_notify_func_t<sp/>notify)</highlight></codeline>
<codeline lineno="6609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_signal_get(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;user_destroy_signal,<sp/>notify);</highlight></codeline>
<codeline lineno="6611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"></highlight></codeline>
<codeline lineno="6625"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><ref refid="group__output_1ga4f2b78dfe24872b341fccb812d1e9473" kindref="member">weston_output_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,<sp/>*tmp;</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"></highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;destroying<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"></highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;user_destroy_signal,<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"></highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;idle_repaint_source)</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_remove(<ref refid="structoutput" kindref="compound">output</ref>-&gt;idle_repaint_source);</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"></highlight></codeline>
<codeline lineno="6637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled)</highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga794fc39a73df6dca432c753825ef2a1b" kindref="member">weston_compositor_remove_output</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"></highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region);</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"></highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(head,<sp/>tmp,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>)</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__head_1gac5cc5415250a9aa4f830af252b72a666" kindref="member">weston_head_detach</ref>(head);</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"></highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structoutput" kindref="compound">output</ref>-&gt;name);</highlight></codeline>
<codeline lineno="6647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"></highlight></codeline>
<codeline lineno="6657"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><ref refid="group__compositor_1ga2a4277e31b2ef83535ad5ace9cb61488" kindref="member">weston_compositor_find_output_by_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="6660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"></highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<ref refid="structoutput" kindref="compound">output</ref>-&gt;name,<sp/><ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"></highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1aa4d5b4d134294d69e1ed01d24df78b4e" kindref="member">pending_output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<ref refid="structoutput" kindref="compound">output</ref>-&gt;name,<sp/><ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="6670"><highlight class="normal"></highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"></highlight></codeline>
<codeline lineno="6687"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*</highlight></codeline>
<codeline lineno="6688"><highlight class="normal"><ref refid="group__compositor_1gafee0c9120b6d2ffcdbf3d7cae5837975" kindref="member">weston_compositor_create_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="6689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="6690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1a970510821a8f44ac83e8af147b2dbccb" kindref="member">create_output</ref>);</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"></highlight></codeline>
<codeline lineno="6693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__compositor_1ga2a4277e31b2ef83535ad5ace9cb61488" kindref="member">weston_compositor_find_output_by_name</ref>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,<sp/><ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>))<sp/>{</highlight></codeline>
<codeline lineno="6694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>attempted<sp/>to<sp/>create<sp/>an<sp/>output<sp/>with<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duplicate<sp/>name<sp/>&apos;%s&apos;.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"></highlight></codeline>
<codeline lineno="6699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1a970510821a8f44ac83e8af147b2dbccb" kindref="member">create_output</ref>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,<sp/><ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="6700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"></highlight></codeline>
<codeline lineno="6716"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><ref refid="group__compositor_1gadc6c426dbd044667d0d1f5ec7ec47ae0" kindref="member">weston_compositor_create_output_with_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head)</highlight></codeline>
<codeline lineno="6719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"></highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/><ref refid="group__compositor_1gafee0c9120b6d2ffcdbf3d7cae5837975" kindref="member">weston_compositor_create_output</ref>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,<sp/>head-&gt;<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"></highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__output_1ga4e31a4f40995c5c80cca21775d15a15a" kindref="member">weston_output_attach_head</ref>(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>head)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__output_1ga44dae09ae8bbdb6e8b6574e2bd407c5b" kindref="member">weston_output_destroy</ref>(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"></highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="6732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6733"><highlight class="normal"></highlight></codeline>
<codeline lineno="6746"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6747"><highlight class="normal"><ref refid="group__output_1ga44dae09ae8bbdb6e8b6574e2bd407c5b" kindref="member">weston_output_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;destroy(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="6750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"></highlight></codeline>
<codeline lineno="6762"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><ref refid="group__output_1gaf0756dca4563d0814c75d534c51a7ecc" kindref="member">weston_output_get_first_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="6764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list))</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"></highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>container_of(<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list.next,</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref>,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>);</highlight></codeline>
<codeline lineno="6770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"></highlight></codeline>
<codeline lineno="6782"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><ref refid="compositor_8c_1a25906f3a587580e6a9541dd7d301b626" kindref="member">weston_output_allow_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_protection)</highlight></codeline>
<codeline lineno="6785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;allow_protection<sp/>=<sp/>allow_protection;</highlight></codeline>
<codeline lineno="6787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"></highlight></codeline>
<codeline lineno="6789"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><ref refid="compositor_8c_1ab2082b5532a7c8324da7d39ef3673875" kindref="member">xdg_output_unlist</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="6791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="6793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"></highlight></codeline>
<codeline lineno="6795"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><ref refid="compositor_8c_1a9ba515976004a333e4a3316c87df1640" kindref="member">xdg_output_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="6797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="6799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"></highlight></codeline>
<codeline lineno="6801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zxdg_output_v1_interface<sp/><ref refid="compositor_8c_1a9befc30be02a740021a20ac1727b467f" kindref="member">xdg_output_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9ba515976004a333e4a3316c87df1640" kindref="member">xdg_output_destroy</ref></highlight></codeline>
<codeline lineno="6803"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"></highlight></codeline>
<codeline lineno="6805"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><ref refid="compositor_8c_1a12068091b6fa2576537299a107f14708" kindref="member">xdg_output_manager_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="6808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="6810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"></highlight></codeline>
<codeline lineno="6812"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><ref refid="compositor_8c_1a7cf6a9bbfcc7bac3fd0fa5ed30c193b2" kindref="member">xdg_output_manager_get_xdg_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*manager,</highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*output_resource)</highlight></codeline>
<codeline lineno="6817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version<sp/>=<sp/>wl_resource_get_version(manager);</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head<sp/>=<sp/>wl_resource_get_user_data(output_resource);</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>head-&gt;<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"></highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;zxdg_output_v1_interface,</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6829"><highlight class="normal"></highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;head-&gt;<ref refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" kindref="member">xdg_output_resource_list</ref>,</highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="6832"><highlight class="normal"></highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="compositor_8c_1a9befc30be02a740021a20ac1727b467f" kindref="member">xdg_output_interface</ref>,</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="compositor_8c_1ab2082b5532a7c8324da7d39ef3673875" kindref="member">xdg_output_unlist</ref>);</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"></highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_logical_position(resource,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_logical_size(resource,</highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>&gt;=<sp/>ZXDG_OUTPUT_V1_NAME_SINCE_VERSION)</highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_name(resource,<sp/>head-&gt;<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"></highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zxdg_output_v1_send_done(resource);</highlight></codeline>
<codeline lineno="6844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6845"><highlight class="normal"></highlight></codeline>
<codeline lineno="6846"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zxdg_output_manager_v1_interface<sp/><ref refid="compositor_8c_1a16938f1fb13be1f7d8c9cc005586a714" kindref="member">xdg_output_manager_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a12068091b6fa2576537299a107f14708" kindref="member">xdg_output_manager_destroy</ref>,</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7cf6a9bbfcc7bac3fd0fa5ed30c193b2" kindref="member">xdg_output_manager_get_xdg_output</ref></highlight></codeline>
<codeline lineno="6849"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"></highlight></codeline>
<codeline lineno="6851"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><ref refid="compositor_8c_1a0b34e2cffc5ee1646f798a4ad50d8132" kindref="member">bind_xdg_output_manager</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"></highlight></codeline>
<codeline lineno="6857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;zxdg_output_manager_v1_interface,</highlight></codeline>
<codeline lineno="6858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"></highlight></codeline>
<codeline lineno="6864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="compositor_8c_1a16938f1fb13be1f7d8c9cc005586a714" kindref="member">xdg_output_manager_interface</ref>,</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="6866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"></highlight></codeline>
<codeline lineno="6868"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><ref refid="compositor_8c_1abd81170672c94f1f7a5a534fec6e54fc" kindref="member">destroy_viewport</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="6870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"></highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6876"><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.src_width<sp/>=</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_int(-1);</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.surface.<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"></highlight></codeline>
<codeline lineno="6884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><ref refid="compositor_8c_1a880c557ac9d14d1a3da29a2ad863d013" kindref="member">viewport_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="6886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="6887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="6889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6890"><highlight class="normal"></highlight></codeline>
<codeline lineno="6891"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6892"><highlight class="normal"><ref refid="compositor_8c_1a22290c89b2399b62ccdb697585d8c8ae" kindref="member">viewport_set_source</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="6893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="6894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>src_x,</highlight></codeline>
<codeline lineno="6895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>src_y,</highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>src_width,</highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>src_height)</highlight></codeline>
<codeline lineno="6898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="6901"><highlight class="normal"></highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="6904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WP_VIEWPORT_ERROR_NO_SURFACE,</highlight></codeline>
<codeline lineno="6905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface<sp/>for<sp/>this<sp/>viewport<sp/>is<sp/>no<sp/>longer<sp/>exists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6908"><highlight class="normal"></highlight></codeline>
<codeline lineno="6909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource<sp/>==<sp/><ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="6910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="6911"><highlight class="normal"></highlight></codeline>
<codeline lineno="6912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_width<sp/>==<sp/>wl_fixed_from_int(-1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_height<sp/>==<sp/>wl_fixed_from_int(-1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_x<sp/>==<sp/>wl_fixed_from_int(-1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_y<sp/>==<sp/>wl_fixed_from_int(-1))<sp/>{</highlight></codeline>
<codeline lineno="6916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unset<sp/>source<sp/>rect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.src_width<sp/>=</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_int(-1);</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6922"><highlight class="normal"></highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_width<sp/>&lt;=<sp/>0<sp/>||<sp/>src_height<sp/>&lt;=<sp/>0<sp/>||<sp/>src_x<sp/>&lt;<sp/>0<sp/>||<sp/>src_y<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="6925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WP_VIEWPORT_ERROR_BAD_VALUE,</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%d<sp/>viewport<sp/>source<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;w=%f<sp/>&lt;=<sp/>0,<sp/>h=%f<sp/>&lt;=<sp/>0,<sp/>x=%f<sp/>&lt;<sp/>0,<sp/>or<sp/>y=%f<sp/>&lt;<sp/>0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource),</highlight></codeline>
<codeline lineno="6929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(src_width),</highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(src_height),</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(src_x),</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(src_y));</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"></highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.src_x<sp/>=<sp/>src_x;</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.src_y<sp/>=<sp/>src_y;</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.src_width<sp/>=<sp/>src_width;</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>.src_height<sp/>=<sp/>src_height;</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"></highlight></codeline>
<codeline lineno="6943"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6944"><highlight class="normal"><ref refid="compositor_8c_1af5946cc45776e2bb021818a0ee0f89e6" kindref="member">viewport_set_destination</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>dst_width,</highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>dst_height)</highlight></codeline>
<codeline lineno="6948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="6950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="6951"><highlight class="normal"></highlight></codeline>
<codeline lineno="6952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WP_VIEWPORT_ERROR_NO_SURFACE,</highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface<sp/>for<sp/>this<sp/>viewport<sp/>no<sp/>longer<sp/>exists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"></highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource<sp/>==<sp/><ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"></highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_width<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>dst_height<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unset<sp/>destination<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.surface.<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"></highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_width<sp/>&lt;=<sp/>0<sp/>||<sp/>dst_height<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WP_VIEWPORT_ERROR_BAD_VALUE,</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;destination<sp/>size<sp/>must<sp/>be<sp/>positive<sp/>(%dx%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_width,<sp/>dst_height);</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6975"><highlight class="normal"></highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.surface.<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref><sp/>=<sp/>dst_width;</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.surface.<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref><sp/>=<sp/>dst_height;</highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.buffer_viewport.changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"></highlight></codeline>
<codeline lineno="6981"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_viewport_interface<sp/><ref refid="compositor_8c_1a95a6d6f014e466d0d2e9d978266cfbfe" kindref="member">viewport_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a880c557ac9d14d1a3da29a2ad863d013" kindref="member">viewport_destroy</ref>,</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a22290c89b2399b62ccdb697585d8c8ae" kindref="member">viewport_set_source</ref>,</highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1af5946cc45776e2bb021818a0ee0f89e6" kindref="member">viewport_set_destination</ref></highlight></codeline>
<codeline lineno="6985"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6986"><highlight class="normal"></highlight></codeline>
<codeline lineno="6987"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><ref refid="compositor_8c_1a4866b48d79d522905b444456b1008fd9" kindref="member">viewporter_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="6990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="6992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"></highlight></codeline>
<codeline lineno="6994"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><ref refid="compositor_8c_1a8e694fc99050a6bcf0a292cf6c6ade49" kindref="member">viewporter_get_viewport</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*viewporter,</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource)</highlight></codeline>
<codeline lineno="6999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version<sp/>=<sp/>wl_resource_get_version(viewporter);</highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(surface_resource);</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"></highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource)<sp/>{</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(viewporter,</highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WP_VIEWPORTER_ERROR_VIEWPORT_EXISTS,</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>viewport<sp/>for<sp/>that<sp/>surface<sp/>already<sp/>exists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"></highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wp_viewport_interface,</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7018"><highlight class="normal"></highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="compositor_8c_1a95a6d6f014e466d0d2e9d978266cfbfe" kindref="member">viewport_interface</ref>,</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="compositor_8c_1abd81170672c94f1f7a5a534fec6e54fc" kindref="member">destroy_viewport</ref>);</highlight></codeline>
<codeline lineno="7021"><highlight class="normal"></highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;viewport_resource<sp/>=<sp/>resource;</highlight></codeline>
<codeline lineno="7023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7024"><highlight class="normal"></highlight></codeline>
<codeline lineno="7025"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_viewporter_interface<sp/><ref refid="compositor_8c_1ac95e339b9003e6d994bb0b5277190c94" kindref="member">viewporter_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4866b48d79d522905b444456b1008fd9" kindref="member">viewporter_destroy</ref>,</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a8e694fc99050a6bcf0a292cf6c6ade49" kindref="member">viewporter_get_viewport</ref></highlight></codeline>
<codeline lineno="7028"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"></highlight></codeline>
<codeline lineno="7030"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7031"><highlight class="normal"><ref refid="compositor_8c_1a1f3e7a9e31035d88a63ec0d719fbf31f" kindref="member">bind_viewporter</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"></highlight></codeline>
<codeline lineno="7036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wp_viewporter_interface,</highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"></highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="compositor_8c_1ac95e339b9003e6d994bb0b5277190c94" kindref="member">viewporter_interface</ref>,</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="7045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"></highlight></codeline>
<codeline lineno="7047"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7048"><highlight class="normal"><ref refid="compositor_8c_1adc1e5ea031c0f18d0b9656c82e9d9ea5" kindref="member">destroy_presentation_feedback</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*feedback_resource)</highlight></codeline>
<codeline lineno="7049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref><sp/>*<ref refid="structfeedback" kindref="compound">feedback</ref>;</highlight></codeline>
<codeline lineno="7051"><highlight class="normal"></highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfeedback" kindref="compound">feedback</ref><sp/>=<sp/>wl_resource_get_user_data(feedback_resource);</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"></highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;link);</highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structfeedback" kindref="compound">feedback</ref>);</highlight></codeline>
<codeline lineno="7056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"></highlight></codeline>
<codeline lineno="7058"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7059"><highlight class="normal"><ref refid="compositor_8c_1a7cbe15dfcaeedbf13974990ba3180316" kindref="member">presentation_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__presentation__feedback_1a64f0bfce27f6fc6438da533274186ea6" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="7060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structweston__presentation__feedback_1a64f0bfce27f6fc6438da533274186ea6" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="7062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"></highlight></codeline>
<codeline lineno="7064"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><ref refid="compositor_8c_1a3c4d41b60377ef8140fddb73b2ac6400" kindref="member">presentation_feedback</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*presentation_resource,</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource,</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>callback)</highlight></codeline>
<codeline lineno="7069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__presentation__feedback" kindref="compound">weston_presentation_feedback</ref><sp/>*<ref refid="structfeedback" kindref="compound">feedback</ref>;</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"></highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(surface_resource);</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"></highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfeedback" kindref="compound">feedback</ref><sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structfeedback" kindref="compound">feedback</ref>);</highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structfeedback" kindref="compound">feedback</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_calloc;</highlight></codeline>
<codeline lineno="7078"><highlight class="normal"></highlight></codeline>
<codeline lineno="7079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wp_presentation_feedback_interface,</highlight></codeline>
<codeline lineno="7081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>callback);</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource)</highlight></codeline>
<codeline lineno="7083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_create;</highlight></codeline>
<codeline lineno="7084"><highlight class="normal"></highlight></codeline>
<codeline lineno="7085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;resource,<sp/>NULL,<sp/><ref refid="structfeedback" kindref="compound">feedback</ref>,</highlight></codeline>
<codeline lineno="7086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1adc1e5ea031c0f18d0b9656c82e9d9ea5" kindref="member">destroy_presentation_feedback</ref>);</highlight></codeline>
<codeline lineno="7087"><highlight class="normal"></highlight></codeline>
<codeline lineno="7088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pending.feedback_list,<sp/>&amp;<ref refid="structfeedback" kindref="compound">feedback</ref>-&gt;link);</highlight></codeline>
<codeline lineno="7089"><highlight class="normal"></highlight></codeline>
<codeline lineno="7090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7091"><highlight class="normal"></highlight></codeline>
<codeline lineno="7092"><highlight class="normal">err_create:</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structfeedback" kindref="compound">feedback</ref>);</highlight></codeline>
<codeline lineno="7094"><highlight class="normal"></highlight></codeline>
<codeline lineno="7095"><highlight class="normal">err_calloc:</highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="7097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"></highlight></codeline>
<codeline lineno="7099"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_presentation_interface<sp/><ref refid="compositor_8c_1a1dc37b108afa890e4ee284df7b543040" kindref="member">presentation_implementation</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a7cbe15dfcaeedbf13974990ba3180316" kindref="member">presentation_destroy</ref>,</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3c4d41b60377ef8140fddb73b2ac6400" kindref="member">presentation_feedback</ref></highlight></codeline>
<codeline lineno="7102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"></highlight></codeline>
<codeline lineno="7104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><ref refid="compositor_8c_1ae4de3049c82f4b9d03e1c7a4a25ba9a2" kindref="member">bind_presentation</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"></highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wp_presentation_interface,</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"></highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="compositor_8c_1a1dc37b108afa890e4ee284df7b543040" kindref="member">presentation_implementation</ref>,</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor,<sp/>NULL);</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp_presentation_send_clock_id(resource,<sp/>compositor-&gt;<ref refid="structweston__compositor_1a1c71e925911663d02d441842a5793e91" kindref="member">presentation_clock</ref>);</highlight></codeline>
<codeline lineno="7121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"></highlight></codeline>
<codeline lineno="7123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><ref refid="compositor_8c_1a32f49c76a582b17a1bf32145f3ea92b5" kindref="member">compositor_bind</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"></highlight></codeline>
<codeline lineno="7130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_compositor_interface,</highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7136"><highlight class="normal"></highlight></codeline>
<codeline lineno="7137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="compositor_8c_1afbcfe7c24900dddd75fca580763d76d5" kindref="member">compositor_interface</ref>,</highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor,<sp/>NULL);</highlight></codeline>
<codeline lineno="7139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7140"><highlight class="normal"></highlight></codeline>
<codeline lineno="7141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"><ref refid="compositor_8c_1ae5e7ea266b6890182083372ff590d6be" kindref="member">output_repaint_status_text</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="7143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status)<sp/>{</highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REPAINT_NOT_SCHEDULED:</highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;no<sp/>repaint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REPAINT_BEGIN_FROM_IDLE:</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;start_repaint_loop<sp/>scheduled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REPAINT_SCHEDULED:</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;repaint<sp/>scheduled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REPAINT_AWAITING_COMPLETION:</highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;awaiting<sp/>completion&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"></highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!</highlight><highlight class="stringliteral">&quot;output_repaint_status_text<sp/>missing<sp/>enum&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7158"><highlight class="normal"></highlight></codeline>
<codeline lineno="7159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><ref refid="compositor_8c_1a1a9942d8e9c924958c273e7c6c381d0e" kindref="member">debug_scene_view_print_buffer</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="7161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1affec03529ce882666716424fd468f575" kindref="member">buffer_ref</ref>.<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_shm_buffer<sp/>*shm;</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref><sp/>*dmabuf;</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpixel__format__info" kindref="compound">pixel_format_info</ref><sp/>*pixel_info<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7166"><highlight class="normal"></highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structbuffer" kindref="compound">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\t[buffer<sp/>not<sp/>available]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7171"><highlight class="normal"></highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shm<sp/>=<sp/>wl_shm_buffer_get(<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shm)<sp/>{</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>_format<sp/>=<sp/>wl_shm_buffer_get_format(shm);</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel_info<sp/>=<sp/><ref refid="pixel-formats_8c_1a00dfcd50a33b42c87fe2958fcc70ecaf" kindref="member">pixel_format_get_info_shm</ref>(_format);</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\tSHM<sp/>buffer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\t\tformat:<sp/>0x%lx<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>_format,</highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel_info<sp/>?<sp/>pixel_info-&gt;<ref refid="structpixel__format__info_1a3324befd6757b555dbb5954467fb4cc6" kindref="member">drm_format_name</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"></highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmabuf<sp/>=<sp/><ref refid="linux-dmabuf_8c_1aaac1c91887b3308aa22157b10ef77a3f" kindref="member">linux_dmabuf_buffer_get</ref>(<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf)<sp/>{</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel_info<sp/>=<sp/><ref refid="pixel-formats_8c_1a0cce9d576c08deb3593d8059f7796059" kindref="member">pixel_format_get_info</ref>(dmabuf-&gt;<ref refid="structlinux__dmabuf__buffer_1a4e22fa2d24152b8a952e2814fe58c76c" kindref="member">attributes</ref>.<ref refid="structdmabuf__attributes_1a164a1a414225914d63e4976fe70c3d9d" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\tdmabuf<sp/>buffer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\t\tformat:<sp/>0x%lx<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>dmabuf-&gt;<ref refid="structlinux__dmabuf__buffer_1a4e22fa2d24152b8a952e2814fe58c76c" kindref="member">attributes</ref>.<ref refid="structdmabuf__attributes_1a164a1a414225914d63e4976fe70c3d9d" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel_info<sp/>?<sp/>pixel_info-&gt;<ref refid="structpixel__format__info_1a3324befd6757b555dbb5954467fb4cc6" kindref="member">drm_format_name</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\t\tmodifier:<sp/>0x%llx\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>dmabuf-&gt;<ref refid="structlinux__dmabuf__buffer_1a4e22fa2d24152b8a952e2814fe58c76c" kindref="member">attributes</ref>.<ref refid="structdmabuf__attributes_1ab6e328e4c0816fd48290c701e9510744" kindref="member">modifier</ref>[0]);</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7194"><highlight class="normal"></highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\tEGL<sp/>buffer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"></highlight></codeline>
<codeline lineno="7198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7199"><highlight class="normal"><ref refid="compositor_8c_1a5d400b2046e40cca8f7c688e8148448d" kindref="member">debug_scene_view_print</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>view_idx)</highlight></codeline>
<codeline lineno="7200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="7202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>desc[512];</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*box;</highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>surface_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_t<sp/>pid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7207"><highlight class="normal"></highlight></codeline>
<codeline lineno="7208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource<sp/>=<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="7210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_get_credentials(wl_resource_get_client(resource),</highlight></codeline>
<codeline lineno="7211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pid,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="7212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_id<sp/>=<sp/>wl_resource_get_id(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="7213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7214"><highlight class="normal"></highlight></codeline>
<codeline lineno="7215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ad4d4d818ede7bc46eeed7119176863e8" kindref="member">get_label</ref><sp/>||</highlight></codeline>
<codeline lineno="7216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ad4d4d818ede7bc46eeed7119176863e8" kindref="member">get_label</ref>(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>,<sp/>desc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(desc))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="7217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(desc,<sp/></highlight><highlight class="stringliteral">&quot;[no<sp/>description<sp/>available]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\tView<sp/>%d<sp/>(role<sp/>%s,<sp/>PID<sp/>%d,<sp/>surface<sp/>ID<sp/>%u,<sp/>%s,<sp/>%p):\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view_idx,<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a9e7e22587531e6ead13ef1513105c182" kindref="member">role_name</ref>,<sp/>pid,<sp/>surface_id,</highlight></codeline>
<codeline lineno="7221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc,<sp/>view);</highlight></codeline>
<codeline lineno="7222"><highlight class="normal"></highlight></codeline>
<codeline lineno="7223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>=<sp/>pixman_region32_extents(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>);</highlight></codeline>
<codeline lineno="7224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\tposition:<sp/>(%d,<sp/>%d)<sp/>-&gt;<sp/>(%d,<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;x1,<sp/>box-&gt;y1,<sp/>box-&gt;x2,<sp/>box-&gt;y2);</highlight></codeline>
<codeline lineno="7226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>=<sp/>pixman_region32_extents(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>);</highlight></codeline>
<codeline lineno="7227"><highlight class="normal"></highlight></codeline>
<codeline lineno="7228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1aed7c9bb67356401511a6503c3ad79fa6" kindref="member">weston_view_is_opaque</ref>(view,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>))<sp/>{</highlight></codeline>
<codeline lineno="7229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\t[fully<sp/>opaque]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pixman_region32_not_empty(&amp;view-&gt;<ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>.<ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>))<sp/>{</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\t[not<sp/>opaque]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\t[opaque:<sp/>(%d,<sp/>%d)<sp/>-&gt;<sp/>(%d,<sp/>%d)]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;x1,<sp/>box-&gt;y1,<sp/>box-&gt;x2,<sp/>box-&gt;y2);</highlight></codeline>
<codeline lineno="7235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7236"><highlight class="normal"></highlight></codeline>
<codeline lineno="7237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a2ee87852507e80f9c33d1dbaa7749e1b" kindref="member">alpha</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\talpha:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>view-&gt;<ref refid="structweston__view_1a2ee87852507e80f9c33d1dbaa7749e1b" kindref="member">alpha</ref>);</highlight></codeline>
<codeline lineno="7239"><highlight class="normal"></highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first_output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\toutputs:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(view-&gt;<ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id)))</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%s%d<sp/>(%s)%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(first_output)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name,</highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(view-&gt;<ref refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" kindref="member">output</ref><sp/>==<sp/><ref refid="structoutput" kindref="compound">output</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(primary)&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_output<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t\t[no<sp/>outputs]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"></highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"></highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1a9942d8e9c924958c273e7c6c381d0e" kindref="member">debug_scene_view_print_buffer</ref>(fp,<sp/>view);</highlight></codeline>
<codeline lineno="7259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"></highlight></codeline>
<codeline lineno="7261"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><ref refid="compositor_8c_1a8c486ef70efdebbe07c34efe41709645" kindref="member">debug_scene_view_print_tree</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*view_idx)</highlight></codeline>
<codeline lineno="7264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>*sub;</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev;</highlight></codeline>
<codeline lineno="7267"><highlight class="normal"></highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>print<sp/>the<sp/>view<sp/>first,<sp/>then<sp/>we<sp/>recursively<sp/>go<sp/>on<sp/>printing</highlight></codeline>
<codeline lineno="7270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sub-surfaces.<sp/>We<sp/>bail<sp/>out<sp/>once<sp/>no<sp/>more<sp/>sub-surfaces<sp/>are<sp/>available.</highlight></codeline>
<codeline lineno="7271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5d400b2046e40cca8f7c688e8148448d" kindref="member">debug_scene_view_print</ref>(fp,<sp/>view,<sp/>*view_idx);</highlight></codeline>
<codeline lineno="7273"><highlight class="normal"></highlight></codeline>
<codeline lineno="7274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>more<sp/>sub-surfaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>))</highlight></codeline>
<codeline lineno="7276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7277"><highlight class="normal"></highlight></codeline>
<codeline lineno="7278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(sub,<sp/>&amp;view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>,<sp/><ref refid="structweston__view_1ad3495e04a1443c8f7a98e1a54cbac86b" kindref="member">parent_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(ev,<sp/>&amp;sub-&gt;<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" kindref="member">views</ref>,<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>print<sp/>the<sp/>child<sp/>views<sp/>of<sp/>the<sp/>current<sp/>view<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="structweston__view_1a51c664daeb6b36d2742c3fb06d7887fa" kindref="member">parent_view</ref><sp/>!=<sp/>view)</highlight></codeline>
<codeline lineno="7282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7283"><highlight class="normal"></highlight></codeline>
<codeline lineno="7284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*view_idx)++;</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a8c486ef70efdebbe07c34efe41709645" kindref="member">debug_scene_view_print_tree</ref>(ev,<sp/>fp,<sp/>view_idx);</highlight></codeline>
<codeline lineno="7286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7289"><highlight class="normal"></highlight></codeline>
<codeline lineno="7296"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><ref refid="group__compositor_1ga4fa96710c12bf0aee8935872bc1c7437" kindref="member">weston_compositor_print_scene_graph</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec)</highlight></codeline>
<codeline lineno="7298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer;</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>now;</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layer_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ret;</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"></highlight></codeline>
<codeline lineno="7308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>open_memstream(&amp;ret,<sp/>&amp;len);</highlight></codeline>
<codeline lineno="7309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(fp);</highlight></codeline>
<codeline lineno="7310"><highlight class="normal"></highlight></codeline>
<codeline lineno="7311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" kindref="member">weston_compositor_read_presentation_clock</ref>(ec,<sp/>&amp;now);</highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Weston<sp/>scene<sp/>graph<sp/>at<sp/>%ld.%09ld:\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now.tv_sec,<sp/>now.tv_nsec);</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"></highlight></codeline>
<codeline lineno="7315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head;</highlight></codeline>
<codeline lineno="7317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>head_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"></highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>%d<sp/>(%s):\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;id,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;name);</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structoutput" kindref="compound">output</ref>-&gt;enabled);</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"></highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\tposition:<sp/>(%d,<sp/>%d)<sp/>-&gt;<sp/>(%d,<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="7324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="7325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\tmode:<sp/>%dx%d@%.3fHz\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="7328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;current_mode-&gt;refresh<sp/>/<sp/>1000.0);</highlight></codeline>
<codeline lineno="7330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\tscale:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="7331"><highlight class="normal"></highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\trepaint<sp/>status:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae5e7ea266b6890182083372ff590d6be" kindref="member">output_repaint_status_text</ref>(<ref refid="structoutput" kindref="compound">output</ref>));</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;repaint_status<sp/>==<sp/>REPAINT_SCHEDULED)</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\tnext<sp/>repaint:<sp/>%ld.%09ld\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint.tv_sec,</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;next_repaint.tv_nsec);</highlight></codeline>
<codeline lineno="7338"><highlight class="normal"></highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(head,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;head_list,<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\tHead<sp/>%d<sp/>(%s):<sp/>%sconnected\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_idx++,<sp/>head-&gt;<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head-&gt;<ref refid="structweston__head_1a2cb7768507f3445476c99cefaac39a2a" kindref="member">connected</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"></highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"></highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(layer,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a9d3d923255aac874249ee6208d012a1c" kindref="member">layer_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>view_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"></highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Layer<sp/>%d<sp/>(pos<sp/>0x%lx):\n&quot;</highlight><highlight class="normal">,<sp/>layer_idx++,</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>layer-&gt;<ref refid="structweston__layer_1a8561a3d6a0d717894ae8110cc18e8487" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"></highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1aa3710db18821fd6bb0226c49e22de3f9" kindref="member">weston_layer_mask_is_infinite</ref>(layer))<sp/>{</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t[mask:<sp/>(%d,<sp/>%d)<sp/>-&gt;<sp/>(%d,%d)]\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.x1,<sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.y1,</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.x2,<sp/>layer-&gt;<ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>.y2);</highlight></codeline>
<codeline lineno="7359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7360"><highlight class="normal"></highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(view,<sp/>&amp;layer-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>,<sp/><ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a8c486ef70efdebbe07c34efe41709645" kindref="member">debug_scene_view_print_tree</ref>(view,<sp/>fp,<sp/>&amp;view_idx);</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view_idx++;</highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"></highlight></codeline>
<codeline lineno="7366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;layer-&gt;<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>))</highlight></codeline>
<codeline lineno="7367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\t[no<sp/>views]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7368"><highlight class="normal"></highlight></codeline>
<codeline lineno="7369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7371"><highlight class="normal"></highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>fclose(fp);</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(err<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"></highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="7376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7377"><highlight class="normal"></highlight></codeline>
<codeline lineno="7383"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7384"><highlight class="normal"><ref refid="compositor_8c_1a2c78c515f84e121a200b18bbd59fe007" kindref="member">debug_scene_graph_cb</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__log__subscription" kindref="compound">weston_log_subscription</ref><sp/>*sub,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="7385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="7387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/><ref refid="group__compositor_1ga4fa96710c12bf0aee8935872bc1c7437" kindref="member">weston_compositor_print_scene_graph</ref>(ec);</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"></highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1gabefb2ce138700919fa8e07e848939ee1" kindref="member">weston_log_subscription_printf</ref>(sub,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log_1gaff6911aac86ddf3ef624010d61630dea" kindref="member">weston_log_subscription_complete</ref>(sub);</highlight></codeline>
<codeline lineno="7392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7393"><highlight class="normal"></highlight></codeline>
<codeline lineno="7407"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><ref refid="group__compositor_1gaa92b2b7d2b73302bf143e1c3245045f0" kindref="member">weston_compositor_get_test_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec)</highlight></codeline>
<codeline lineno="7409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ec-&gt;<ref refid="structweston__compositor_1a90cacc8c057f29e53566637f6dfa3fad" kindref="member">test_data</ref>.<ref refid="structweston__testsuite__data_1a3e98fc4477e2625ad566232842b54621" kindref="member">test_private_data</ref>;</highlight></codeline>
<codeline lineno="7411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7412"><highlight class="normal"></highlight></codeline>
<codeline lineno="7426"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><ref refid="group__compositor_1ga081445a62197fac7bcbeeab449261373" kindref="member">weston_compositor_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__log__context" kindref="compound">weston_log_context</ref><sp/>*log_ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__compositor_1a21f2b4d090a79fff8da494ee2774cef6" kindref="member">user_data</ref>,</highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__testsuite__data" kindref="compound">weston_testsuite_data</ref><sp/>*<ref refid="vertex-clip-test_8c_1a6115133101abda4c59ea992ce2982aeb" kindref="member">test_data</ref>)</highlight></codeline>
<codeline lineno="7430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec;</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_loop<sp/>*loop;</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"></highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!log_ctx)</highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"></highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*ec);</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ec)</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"></highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="vertex-clip-test_8c_1a6115133101abda4c59ea992ce2982aeb" kindref="member">test_data</ref>)</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a90cacc8c057f29e53566637f6dfa3fad" kindref="member">test_data</ref><sp/>=<sp/>*<ref refid="vertex-clip-test_8c_1a6115133101abda4c59ea992ce2982aeb" kindref="member">test_data</ref>;</highlight></codeline>
<codeline lineno="7443"><highlight class="normal"></highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1aa3f5874da7035c9d98b75a88a68fa4ca" kindref="member">weston_log_ctx</ref><sp/>=<sp/>log_ctx;</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref><sp/>=<sp/>display;</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a21f2b4d090a79fff8da494ee2774cef6" kindref="member">user_data</ref><sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="7447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a2c143f1cc8d4f174db0fb3ef76a03d20" kindref="member">destroy_signal</ref>);</highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1af145ea36a816ec78391cef574c216aa0" kindref="member">create_surface_signal</ref>);</highlight></codeline>
<codeline lineno="7449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a952d2d5dad528b120372c5cd95e46dad" kindref="member">activate_signal</ref>);</highlight></codeline>
<codeline lineno="7450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a827dae6ce67aec219d500428b1eddaf3" kindref="member">transform_signal</ref>);</highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a798aed078c7671946fa4c6a5e0ecc111" kindref="member">kill_signal</ref>);</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1ad0a0e9d1055742e7ddb9d35007e77a6a" kindref="member">idle_signal</ref>);</highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a56bf6876b62efff1f6de4247973e4147" kindref="member">wake_signal</ref>);</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a414a46edb9a0238a0f8d390cb69a3509" kindref="member">show_input_panel_signal</ref>);</highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1af55878b6f2a64f3d2f40826151088b62" kindref="member">hide_input_panel_signal</ref>);</highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1aa84ea0c71118fc80e0422bbc539bdec0" kindref="member">update_input_panel_signal</ref>);</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a4c1ce59b05fd209548f06c0dcf7c14e2" kindref="member">seat_created_signal</ref>);</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a02dee1be3d004bb90e665aebef5bae5a" kindref="member">output_created_signal</ref>);</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1ab1912e258bec64ce232b91caa3e54363" kindref="member">output_destroyed_signal</ref>);</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1ace8526d2c738b726c11666b3ef137973" kindref="member">output_moved_signal</ref>);</highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a0d4092bb81afcabc46e564b47b197e3a" kindref="member">output_resized_signal</ref>);</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a09a2bfe7cc2442ae9afe49fe4819a8c6" kindref="member">heads_changed_signal</ref>);</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1adc89a6a44aa577d05bddc16bdf44b926" kindref="member">output_heads_changed_signal</ref>);</highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a6e62e13d73c89d00ef3c7788ea4ddd83" kindref="member">session_signal</ref>);</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a1261d536f85647f94598c6892e6b5b9f" kindref="member">session_active</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7466"><highlight class="normal"></highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a5f4e57922615e82919d0d73283425782" kindref="member">output_id_pool</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1aebdb50c57184889bb82a75433ec5bb74" kindref="member">repaint_msec</ref><sp/>=<sp/><ref refid="compositor_8c_1a0584d6a834326cf77fb5fbe467c6470e" kindref="member">DEFAULT_REPAINT_WINDOW</ref>;</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"></highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1ae4926a7915767362658139b652fe0237" kindref="member">activate_serial</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"></highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref><sp/>=<sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"></highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a42ad71eeccc5497d3667cca8e38f39f8" kindref="member">content_protection</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"></highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_global_create(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,<sp/>&amp;wl_compositor_interface,<sp/>4,</highlight></codeline>
<codeline lineno="7477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec,<sp/><ref refid="compositor_8c_1a32f49c76a582b17a1bf32145f3ea92b5" kindref="member">compositor_bind</ref>))</highlight></codeline>
<codeline lineno="7478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="7479"><highlight class="normal"></highlight></codeline>
<codeline lineno="7480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_global_create(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,<sp/>&amp;wl_subcompositor_interface,<sp/>1,</highlight></codeline>
<codeline lineno="7481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec,<sp/><ref refid="compositor_8c_1ab8fded79b16d0a14a2b21cd8dfeb5901" kindref="member">bind_subcompositor</ref>))</highlight></codeline>
<codeline lineno="7482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="7483"><highlight class="normal"></highlight></codeline>
<codeline lineno="7484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_global_create(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,<sp/>&amp;wp_viewporter_interface,<sp/>1,</highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec,<sp/><ref refid="compositor_8c_1a1f3e7a9e31035d88a63ec0d719fbf31f" kindref="member">bind_viewporter</ref>))</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="7487"><highlight class="normal"></highlight></codeline>
<codeline lineno="7488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_global_create(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,<sp/>&amp;zxdg_output_manager_v1_interface,<sp/>2,</highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec,<sp/><ref refid="compositor_8c_1a0b34e2cffc5ee1646f798a4ad50d8132" kindref="member">bind_xdg_output_manager</ref>))</highlight></codeline>
<codeline lineno="7490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="7491"><highlight class="normal"></highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_global_create(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,<sp/>&amp;wp_presentation_interface,<sp/>1,</highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec,<sp/><ref refid="compositor_8c_1ae4de3049c82f4b9d03e1c7a4a25ba9a2" kindref="member">bind_presentation</ref>))</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"></highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a7d55cac3425ac3f6641a05922142266e" kindref="member">weston_input_init</ref>(ec)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"></highlight></codeline>
<codeline lineno="7499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>);</highlight></codeline>
<codeline lineno="7500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a23c931ea0ccaf279dbbc8676c8d75d50" kindref="member">plane_list</ref>);</highlight></codeline>
<codeline lineno="7501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a9d3d923255aac874249ee6208d012a1c" kindref="member">layer_list</ref>);</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1ab4c35ec45448163579d52c41d7df701b" kindref="member">seat_list</ref>);</highlight></codeline>
<codeline lineno="7503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1aa4d5b4d134294d69e1ed01d24df78b4e" kindref="member">pending_output_list</ref>);</highlight></codeline>
<codeline lineno="7504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>);</highlight></codeline>
<codeline lineno="7505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a154cc4c320f1d35ecb9886f2b68b6e27" kindref="member">head_list</ref>);</highlight></codeline>
<codeline lineno="7506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1aecb5f1570118d8d5be93a9cbfba801a8" kindref="member">key_binding_list</ref>);</highlight></codeline>
<codeline lineno="7507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1ae104a342fa491e915b59b0588f78adb8" kindref="member">modifier_binding_list</ref>);</highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1ac93a122178ceea1b99d8c7c8c37e9831" kindref="member">button_binding_list</ref>);</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1adbb5488a5e90fed2c76ed9b655df48db" kindref="member">touch_binding_list</ref>);</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a8ce64080f33197bdc4ef63ba85d5e7c3" kindref="member">axis_binding_list</ref>);</highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1ad5dbb2c4d3f94f4006a8002aa45d7d51" kindref="member">debug_binding_list</ref>);</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"></highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;ec-&gt;<ref refid="structweston__compositor_1a971594f6ff5050e72c298a17fb88f177" kindref="member">plugin_api_list</ref>);</highlight></codeline>
<codeline lineno="7514"><highlight class="normal"></highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ab52c880548e2277a5d370b343d782cde" kindref="member">weston_plane_init</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>,<sp/>ec,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1gac0da9a90074155e609e2f5845cbf25fc" kindref="member">weston_compositor_stack_plane</ref>(ec,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="7517"><highlight class="normal"></highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data-device_8c_1a867e6f129361c764207679236de8d604" kindref="member">wl_data_device_manager_init</ref>(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"></highlight></codeline>
<codeline lineno="7520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_display_init_shm(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="7521"><highlight class="normal"></highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>wl_display_get_event_loop(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1ab553646b778cf32b1956852f5b9cdcb4" kindref="member">idle_source</ref><sp/>=<sp/>wl_event_loop_add_timer(loop,<sp/><ref refid="compositor_8c_1aaa64c25507c0562733cb9a0204c41fdc" kindref="member">idle_handler</ref>,<sp/>ec);</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a18bd4b791afdf479323c96c85f5b6750" kindref="member">repaint_timer</ref><sp/>=</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_loop_add_timer(loop,<sp/><ref refid="compositor_8c_1acc76702d769aa1e1bffb35feded7fdd4" kindref="member">output_repaint_timer_handler</ref>,</highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec);</highlight></codeline>
<codeline lineno="7527"><highlight class="normal"></highlight></codeline>
<codeline lineno="7528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ab4294fb27b3079ee70660a0975d3e0e5" kindref="member">weston_layer_init</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1a4726d887fd6b31d6c71f76275715c286" kindref="member">fade_layer</ref>,<sp/>ec);</highlight></codeline>
<codeline lineno="7529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ab4294fb27b3079ee70660a0975d3e0e5" kindref="member">weston_layer_init</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1a232bc7c0608ea7161cb5d8cfca6e9a82" kindref="member">cursor_layer</ref>,<sp/>ec);</highlight></codeline>
<codeline lineno="7530"><highlight class="normal"></highlight></codeline>
<codeline lineno="7531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a736341961367a84eac0b635b94eefc61" kindref="member">weston_layer_set_position</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1a4726d887fd6b31d6c71f76275715c286" kindref="member">fade_layer</ref>,<sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca5c4a827bef388f0a31360726786789e7" kindref="member">WESTON_LAYER_POSITION_FADE</ref>);</highlight></codeline>
<codeline lineno="7532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a736341961367a84eac0b635b94eefc61" kindref="member">weston_layer_set_position</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1a232bc7c0608ea7161cb5d8cfca6e9a82" kindref="member">cursor_layer</ref>,</highlight></codeline>
<codeline lineno="7533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca2e219337cfe0fa85a6e5c70fc269fd93" kindref="member">WESTON_LAYER_POSITION_CURSOR</ref>);</highlight></codeline>
<codeline lineno="7534"><highlight class="normal"></highlight></codeline>
<codeline lineno="7535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a6487d84ea5397f7a97e5bbd5b2a36ee8" kindref="member">debug_scene</ref><sp/>=</highlight></codeline>
<codeline lineno="7536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__compositor_1ae4682c6463d20cedae4215dff64d91c7" kindref="member">weston_compositor_add_log_scope</ref>(ec,<sp/></highlight><highlight class="stringliteral">&quot;scene-graph&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Scene<sp/>graph<sp/>details\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a2c78c515f84e121a200b18bbd59fe007" kindref="member">debug_scene_graph_cb</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="7539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec);</highlight></codeline>
<codeline lineno="7540"><highlight class="normal"></highlight></codeline>
<codeline lineno="7541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1adfcfd084e55976891e8a742c3c2490af" kindref="member">timeline</ref><sp/>=</highlight></codeline>
<codeline lineno="7542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__compositor_1ae4682c6463d20cedae4215dff64d91c7" kindref="member">weston_compositor_add_log_scope</ref>(ec,<sp/></highlight><highlight class="stringliteral">&quot;timeline&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Timeline<sp/>event<sp/>points\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__internal-log_1gaf645b896b2c3a18fb2b1ffb060d46551" kindref="member">weston_timeline_create_subscription</ref>,</highlight></codeline>
<codeline lineno="7545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__internal-log_1ga250932e6f6394c2de70b3ecb209e04b9" kindref="member">weston_timeline_destroy_subscription</ref>,</highlight></codeline>
<codeline lineno="7546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec);</highlight></codeline>
<codeline lineno="7547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ec;</highlight></codeline>
<codeline lineno="7548"><highlight class="normal"></highlight></codeline>
<codeline lineno="7549"><highlight class="normal">fail:</highlight></codeline>
<codeline lineno="7550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ec);</highlight></codeline>
<codeline lineno="7551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7553"><highlight class="normal"></highlight></codeline>
<codeline lineno="7557"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><ref refid="group__compositor_1gacc91a9f77baf1c72d967471bade09cb3" kindref="member">weston_compositor_shutdown</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec)</highlight></codeline>
<codeline lineno="7559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/>*next;</highlight></codeline>
<codeline lineno="7561"><highlight class="normal"></highlight></codeline>
<codeline lineno="7562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_remove(ec-&gt;<ref refid="structweston__compositor_1ab553646b778cf32b1956852f5b9cdcb4" kindref="member">idle_source</ref>);</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"></highlight></codeline>
<codeline lineno="7564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Destroy<sp/>all<sp/>outputs<sp/>associated<sp/>with<sp/>this<sp/>compositor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>next,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="7566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;destroy(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="7567"><highlight class="normal"></highlight></codeline>
<codeline lineno="7568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Destroy<sp/>all<sp/>pending<sp/>outputs<sp/>associated<sp/>with<sp/>this<sp/>compositor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>next,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1aa4d5b4d134294d69e1ed01d24df78b4e" kindref="member">pending_output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="7570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;destroy(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="7571"><highlight class="normal"></highlight></codeline>
<codeline lineno="7572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ec-&gt;<ref refid="structweston__compositor_1adfa35d8b6ef4bac08ccecbbd37acb81d" kindref="member">renderer</ref>)</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1adfa35d8b6ef4bac08ccecbbd37acb81d" kindref="member">renderer</ref>-&gt;<ref refid="structweston__renderer_1ae0cf2b9ed74efb4f619b4b5e2b84d9fd" kindref="member">destroy</ref>(ec);</highlight></codeline>
<codeline lineno="7574"><highlight class="normal"></highlight></codeline>
<codeline lineno="7575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a87fd816827f096a6c11339f71043874b" kindref="member">weston_binding_list_destroy_all</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1aecb5f1570118d8d5be93a9cbfba801a8" kindref="member">key_binding_list</ref>);</highlight></codeline>
<codeline lineno="7576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a87fd816827f096a6c11339f71043874b" kindref="member">weston_binding_list_destroy_all</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1ae104a342fa491e915b59b0588f78adb8" kindref="member">modifier_binding_list</ref>);</highlight></codeline>
<codeline lineno="7577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a87fd816827f096a6c11339f71043874b" kindref="member">weston_binding_list_destroy_all</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1ac93a122178ceea1b99d8c7c8c37e9831" kindref="member">button_binding_list</ref>);</highlight></codeline>
<codeline lineno="7578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a87fd816827f096a6c11339f71043874b" kindref="member">weston_binding_list_destroy_all</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1adbb5488a5e90fed2c76ed9b655df48db" kindref="member">touch_binding_list</ref>);</highlight></codeline>
<codeline lineno="7579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a87fd816827f096a6c11339f71043874b" kindref="member">weston_binding_list_destroy_all</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1a8ce64080f33197bdc4ef63ba85d5e7c3" kindref="member">axis_binding_list</ref>);</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a87fd816827f096a6c11339f71043874b" kindref="member">weston_binding_list_destroy_all</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1ad5dbb2c4d3f94f4006a8002aa45d7d51" kindref="member">debug_binding_list</ref>);</highlight></codeline>
<codeline lineno="7581"><highlight class="normal"></highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1afdee68639f6f9af1a195ee4892afcce6" kindref="member">weston_plane_release</ref>(&amp;ec-&gt;<ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>);</highlight></codeline>
<codeline lineno="7583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"></highlight></codeline>
<codeline lineno="7588"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7589"><highlight class="normal"><ref refid="group__compositor_1ga6299e93b80dfd70bd2c9c1603417f940" kindref="member">weston_compositor_exit_with_code</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="7590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit_code)</highlight></codeline>
<codeline lineno="7591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a1fa6ab0d71bc8d7d605ac607faa9552f" kindref="member">exit_code</ref><sp/>==<sp/>EXIT_SUCCESS)</highlight></codeline>
<codeline lineno="7593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a1fa6ab0d71bc8d7d605ac607faa9552f" kindref="member">exit_code</ref><sp/>=<sp/>exit_code;</highlight></codeline>
<codeline lineno="7594"><highlight class="normal"></highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1gaf4e53253ff94f741ee4a04e7e52e302f" kindref="member">weston_compositor_exit</ref>(<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="7596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7597"><highlight class="normal"></highlight></codeline>
<codeline lineno="7601"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7602"><highlight class="normal"><ref refid="group__compositor_1gad227efb7ecb34f771ad93dc86fdb5bcf" kindref="member">weston_compositor_set_default_pointer_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="7603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>*interface)</highlight></codeline>
<codeline lineno="7604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat;</highlight></codeline>
<codeline lineno="7606"><highlight class="normal"></highlight></codeline>
<codeline lineno="7607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1afb8c36f1ea6c3a7b5898771c60127ed9" kindref="member">default_pointer_grab</ref><sp/>=<sp/>interface;</highlight></codeline>
<codeline lineno="7608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(seat,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1ab4c35ec45448163579d52c41d7df701b" kindref="member">seat_list</ref>,<sp/><ref refid="structweston__seat_1a105bb1c3da70be29d32ab90882757d18" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="7610"><highlight class="normal"></highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1a2f5a2d6428c3ed7e10464a53314e5c" kindref="member">weston_pointer_set_default_grab</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>interface);</highlight></codeline>
<codeline lineno="7613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7615"><highlight class="normal"></highlight></codeline>
<codeline lineno="7619"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><ref refid="group__compositor_1gabaca768863a217e3c5fa4d7519676a9a" kindref="member">weston_compositor_set_presentation_clock</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="7621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clockid_t<sp/>clk_id)</highlight></codeline>
<codeline lineno="7622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>ts;</highlight></codeline>
<codeline lineno="7624"><highlight class="normal"></highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clock_gettime(clk_id,<sp/>&amp;ts)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"></highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a1c71e925911663d02d441842a5793e91" kindref="member">presentation_clock</ref><sp/>=<sp/>clk_id;</highlight></codeline>
<codeline lineno="7629"><highlight class="normal"></highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"></highlight></codeline>
<codeline lineno="7638"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7639"><highlight class="normal"><ref refid="group__compositor_1gaab7e6328af752385d84c17b9eebddf74" kindref="member">weston_compositor_set_presentation_clock_software</ref>(</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="7641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>order<sp/>of<sp/>preference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clockid_t<sp/>clocks[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLOCK_MONOTONIC_RAW,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>jumps,<sp/>no<sp/>crawling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLOCK_MONOTONIC_COARSE,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>jumps,<sp/>may<sp/>crawl,<sp/>fast<sp/>&amp;<sp/>coarse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLOCK_MONOTONIC,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>jumps,<sp/>may<sp/>crawl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLOCK_REALTIME_COARSE,<sp/><sp/></highlight><highlight class="comment">/*<sp/>may<sp/>jump<sp/>and<sp/>crawl,<sp/>fast<sp/>&amp;<sp/>coarse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLOCK_REALTIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>may<sp/>jump<sp/>and<sp/>crawl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"></highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ARRAY_LENGTH(clocks);<sp/>i++)</highlight></codeline>
<codeline lineno="7653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__compositor_1gabaca768863a217e3c5fa4d7519676a9a" kindref="member">weston_compositor_set_presentation_clock</ref>(compositor,</highlight></codeline>
<codeline lineno="7654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clocks[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7656"><highlight class="normal"></highlight></codeline>
<codeline lineno="7657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>suitable<sp/>presentation<sp/>clock<sp/>available.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7658"><highlight class="normal"></highlight></codeline>
<codeline lineno="7659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7661"><highlight class="normal"></highlight></codeline>
<codeline lineno="7676"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><ref refid="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" kindref="member">weston_compositor_read_presentation_clock</ref>(</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*ts)</highlight></codeline>
<codeline lineno="7680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>warned;</highlight></codeline>
<codeline lineno="7682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="7683"><highlight class="normal"></highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>clock_gettime(compositor-&gt;<ref refid="structweston__compositor_1a1c71e925911663d02d441842a5793e91" kindref="member">presentation_clock</ref>,<sp/>ts);</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts-&gt;tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts-&gt;tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7688"><highlight class="normal"></highlight></codeline>
<codeline lineno="7689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!warned)</highlight></codeline>
<codeline lineno="7690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>failure<sp/>to<sp/>read<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>presentation<sp/>clock<sp/>%#x:<sp/>&apos;%s&apos;<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a1c71e925911663d02d441842a5793e91" kindref="member">presentation_clock</ref>,</highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(errno),<sp/>errno);</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7697"><highlight class="normal"></highlight></codeline>
<codeline lineno="7714"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><ref refid="group__compositor_1ga321e3fcf45c3aa5f8d5280691f6232c3" kindref="member">weston_compositor_import_dmabuf</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="7717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__renderer" kindref="compound">weston_renderer</ref><sp/>*renderer;</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"></highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer<sp/>=<sp/>compositor-&gt;<ref refid="structweston__compositor_1adfa35d8b6ef4bac08ccecbbd37acb81d" kindref="member">renderer</ref>;</highlight></codeline>
<codeline lineno="7721"><highlight class="normal"></highlight></codeline>
<codeline lineno="7722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(renderer-&gt;<ref refid="structweston__renderer_1a5999bb29493d522ddcff40318e677e2d" kindref="member">import_dmabuf</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"></highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>renderer-&gt;<ref refid="structweston__renderer_1a5999bb29493d522ddcff40318e677e2d" kindref="member">import_dmabuf</ref>(compositor,<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="7726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"></highlight></codeline>
<codeline lineno="7728"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><ref refid="compositor_8c_1a3694816c632e1265384ed06f9a0bfab0" kindref="member">weston_compositor_dmabuf_can_scanout</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="7731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__backend" kindref="compound">weston_backend</ref><sp/>*backend<sp/>=<sp/>compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>;</highlight></codeline>
<codeline lineno="7733"><highlight class="normal"></highlight></codeline>
<codeline lineno="7734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backend-&gt;<ref refid="structweston__backend_1a4b5d8d7d9af46a393c24510e6423e8e3" kindref="member">can_scanout_dmabuf</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7736"><highlight class="normal"></highlight></codeline>
<codeline lineno="7737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backend-&gt;<ref refid="structweston__backend_1a4b5d8d7d9af46a393c24510e6423e8e3" kindref="member">can_scanout_dmabuf</ref>(compositor,<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="7738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7739"><highlight class="normal"></highlight></codeline>
<codeline lineno="7740"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7741"><highlight class="normal"><ref refid="compositor_8c_1a727f0b7833b706014790d029ba86684c" kindref="member">weston_version</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*major,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*minor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*micro)</highlight></codeline>
<codeline lineno="7742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*major<sp/>=<sp/>WESTON_VERSION_MAJOR;</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*minor<sp/>=<sp/>WESTON_VERSION_MINOR;</highlight></codeline>
<codeline lineno="7745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*micro<sp/>=<sp/>WESTON_VERSION_MICRO;</highlight></codeline>
<codeline lineno="7746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7747"><highlight class="normal"></highlight></codeline>
<codeline lineno="7762"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7763"><highlight class="normal"><ref refid="compositor_8c_1a1f6a9e6a6915ff39ee0f7dfca47bed95" kindref="member">weston_module_path_from_env</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>path_len)</highlight></codeline>
<codeline lineno="7764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mapping<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;WESTON_MODULE_MAP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end;</highlight></codeline>
<codeline lineno="7767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_len<sp/>=<sp/>strlen(name);</highlight></codeline>
<codeline lineno="7768"><highlight class="normal"></highlight></codeline>
<codeline lineno="7769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mapping)</highlight></codeline>
<codeline lineno="7770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7771"><highlight class="normal"></highlight></codeline>
<codeline lineno="7772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>mapping<sp/>+<sp/>strlen(mapping);</highlight></codeline>
<codeline lineno="7773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mapping<sp/>&lt;<sp/>end<sp/>&amp;&amp;<sp/>*mapping)<sp/>{</highlight></codeline>
<codeline lineno="7774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/>*next;</highlight></codeline>
<codeline lineno="7775"><highlight class="normal"></highlight></codeline>
<codeline lineno="7776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>early<sp/>out:<sp/>impossibly<sp/>short<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>-<sp/>mapping<sp/>&lt;<sp/>name_len<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="7778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7779"><highlight class="normal"></highlight></codeline>
<codeline lineno="7780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/>&amp;mapping[name_len<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="7781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>strchrnul(mapping,<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7782"><highlight class="normal"></highlight></codeline>
<codeline lineno="7783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(mapping,<sp/>name,<sp/>name_len)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="7784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping[name_len]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="7785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_len<sp/>=<sp/>next<sp/>-<sp/>filename;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>trailing<sp/>NUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_len<sp/>&gt;=<sp/>path_len)</highlight></codeline>
<codeline lineno="7787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(path,<sp/>filename,<sp/>file_len);</highlight></codeline>
<codeline lineno="7789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path[file_len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_len;</highlight></codeline>
<codeline lineno="7791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7792"><highlight class="normal"></highlight></codeline>
<codeline lineno="7793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping<sp/>=<sp/>next<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7795"><highlight class="normal"></highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"></highlight></codeline>
<codeline lineno="7799"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><ref refid="compositor_8c_1a1cf9686b2a6a6764e8197fdbb473607f" kindref="member">weston_load_module</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*entrypoint)</highlight></codeline>
<codeline lineno="7801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[PATH_MAX];</highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*module,<sp/>*init;</highlight></codeline>
<codeline lineno="7804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"></highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7808"><highlight class="normal"></highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="7810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="compositor_8c_1a1f6a9e6a6915ff39ee0f7dfca47bed95" kindref="member">weston_module_path_from_env</ref>(name,<sp/>path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>path);</highlight></codeline>
<codeline lineno="7811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>path,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LIBWESTON_MODULEDIR,<sp/>name);</highlight></codeline>
<codeline lineno="7814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>path,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="7816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7817"><highlight class="normal"></highlight></codeline>
<codeline lineno="7818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>snprintf<sp/>returns<sp/>the<sp/>length<sp/>of<sp/>the<sp/>string<sp/>it<sp/>would&apos;ve<sp/>written,</highlight></codeline>
<codeline lineno="7819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>_excluding_<sp/>the<sp/>NUL<sp/>byte.<sp/>So<sp/>even<sp/>being<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of</highlight></codeline>
<codeline lineno="7820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>our<sp/>buffer<sp/>is<sp/>an<sp/>error<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>path)</highlight></codeline>
<codeline lineno="7822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7823"><highlight class="normal"></highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>=<sp/>dlopen(path,<sp/>RTLD_NOW<sp/>|<sp/>RTLD_NOLOAD);</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module)<sp/>{</highlight></codeline>
<codeline lineno="7826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Module<sp/>&apos;%s&apos;<sp/>already<sp/>loaded\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="7827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>module<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="7829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>=<sp/>dlopen(path,<sp/>RTLD_NOW);</highlight></codeline>
<codeline lineno="7830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!module)<sp/>{</highlight></codeline>
<codeline lineno="7831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>module:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>dlerror());</highlight></codeline>
<codeline lineno="7832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7835"><highlight class="normal"></highlight></codeline>
<codeline lineno="7836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init<sp/>=<sp/>dlsym(module,<sp/>entrypoint);</highlight></codeline>
<codeline lineno="7837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init)<sp/>{</highlight></codeline>
<codeline lineno="7838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>lookup<sp/>init<sp/>function:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>dlerror());</highlight></codeline>
<codeline lineno="7839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlclose(module);</highlight></codeline>
<codeline lineno="7840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7842"><highlight class="normal"></highlight></codeline>
<codeline lineno="7843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>init;</highlight></codeline>
<codeline lineno="7844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7845"><highlight class="normal"></highlight></codeline>
<codeline lineno="7869"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7870"><highlight class="normal"><ref refid="compositor_8c_1a91193ce4a068dee9a1cf248a81a049bc" kindref="member">weston_compositor_add_destroy_listener_once</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="7871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_notify_func_t<sp/>destroy_handler)</highlight></codeline>
<codeline lineno="7873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_signal_get(&amp;compositor-&gt;<ref refid="structweston__compositor_1a2c143f1cc8d4f174db0fb3ef76a03d20" kindref="member">destroy_signal</ref>,<sp/>destroy_handler))</highlight></codeline>
<codeline lineno="7875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7876"><highlight class="normal"></highlight></codeline>
<codeline lineno="7877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listener-&gt;notify<sp/>=<sp/>destroy_handler;</highlight></codeline>
<codeline lineno="7878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;compositor-&gt;<ref refid="structweston__compositor_1a2c143f1cc8d4f174db0fb3ef76a03d20" kindref="member">destroy_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"></highlight></codeline>
<codeline lineno="7890"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><ref refid="group__compositor_1ga4f29f61ed5f73015798a14bdabb73dcc" kindref="member">weston_compositor_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="7892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prevent<sp/>further<sp/>rendering<sp/>while<sp/>shutting<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref><sp/>=<sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" kindref="member">WESTON_COMPOSITOR_OFFSCREEN</ref>;</highlight></codeline>
<codeline lineno="7895"><highlight class="normal"></highlight></codeline>
<codeline lineno="7896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;compositor-&gt;<ref refid="structweston__compositor_1a2c143f1cc8d4f174db0fb3ef76a03d20" kindref="member">destroy_signal</ref>,<sp/>compositor);</highlight></codeline>
<codeline lineno="7897"><highlight class="normal"></highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a624242cb87819b26602d5b14cb0392ca" kindref="member">weston_compositor_xkb_destroy</ref>(compositor);</highlight></codeline>
<codeline lineno="7899"><highlight class="normal"></highlight></codeline>
<codeline lineno="7900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>)</highlight></codeline>
<codeline lineno="7901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>-&gt;<ref refid="structweston__backend_1ab02a21b1de2672ebac93c9ba509d6ee9" kindref="member">destroy</ref>(compositor);</highlight></codeline>
<codeline lineno="7902"><highlight class="normal"></highlight></codeline>
<codeline lineno="7903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>backend<sp/>is<sp/>responsible<sp/>for<sp/>destroying<sp/>the<sp/>heads.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_list_empty(&amp;compositor-&gt;<ref refid="structweston__compositor_1a154cc4c320f1d35ecb9886f2b68b6e27" kindref="member">head_list</ref>));</highlight></codeline>
<codeline lineno="7905"><highlight class="normal"></highlight></codeline>
<codeline lineno="7906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="plugin-registry_8c_1a1b26e2b1714defb1357ad9d4c717bb76" kindref="member">weston_plugin_api_destroy_list</ref>(compositor);</highlight></codeline>
<codeline lineno="7907"><highlight class="normal"></highlight></codeline>
<codeline lineno="7908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" kindref="member">heads_changed_source</ref>)</highlight></codeline>
<codeline lineno="7909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_remove(compositor-&gt;<ref refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" kindref="member">heads_changed_source</ref>);</highlight></codeline>
<codeline lineno="7910"><highlight class="normal"></highlight></codeline>
<codeline lineno="7911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1a32ad399b7e203a9ad0a5a11cdd0711ce" kindref="member">weston_log_scope_destroy</ref>(compositor-&gt;<ref refid="structweston__compositor_1a6487d84ea5397f7a97e5bbd5b2a36ee8" kindref="member">debug_scene</ref>);</highlight></codeline>
<codeline lineno="7912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a6487d84ea5397f7a97e5bbd5b2a36ee8" kindref="member">debug_scene</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7913"><highlight class="normal"></highlight></codeline>
<codeline lineno="7914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1a32ad399b7e203a9ad0a5a11cdd0711ce" kindref="member">weston_log_scope_destroy</ref>(compositor-&gt;<ref refid="structweston__compositor_1adfcfd084e55976891e8a742c3c2490af" kindref="member">timeline</ref>);</highlight></codeline>
<codeline lineno="7915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1adfcfd084e55976891e8a742c3c2490af" kindref="member">timeline</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7916"><highlight class="normal"></highlight></codeline>
<codeline lineno="7917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(compositor);</highlight></codeline>
<codeline lineno="7918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7919"><highlight class="normal"></highlight></codeline>
<codeline lineno="7930"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7931"><highlight class="normal"><ref refid="group__compositor_1gaf4e53253ff94f741ee4a04e7e52e302f" kindref="member">weston_compositor_exit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="7932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1ae3996cfb4ee9b4cf1947c09156e94325" kindref="member">exit</ref>(compositor);</highlight></codeline>
<codeline lineno="7934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7935"><highlight class="normal"></highlight></codeline>
<codeline lineno="7943"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="7944"><highlight class="normal"><ref refid="group__compositor_1gaaecdc50a0ea2aebbf36a22db50e62385" kindref="member">weston_compositor_get_user_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="7945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compositor-&gt;<ref refid="structweston__compositor_1a21f2b4d090a79fff8da494ee2774cef6" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="7947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7948"><highlight class="normal"></highlight></codeline>
<codeline lineno="7949"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="compositor_8c_1acc40172637b56f2ac467c5c6692f0126" kindref="member">backend_map</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="7950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a62a6d338e4bbfd69283bcecd0c4146d3" kindref="member">WESTON_BACKEND_DRM</ref>]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;drm-backend.so&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a89d4a284bb5b45264384b20211a49dd4" kindref="member">WESTON_BACKEND_FBDEV</ref>]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fbdev-backend.so&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a27dd7bf7e18276a1bcdc28f659f22813" kindref="member">WESTON_BACKEND_HEADLESS</ref>]<sp/>=<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;headless-backend.so&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a7dde123c05411479dcb853cfbab3bf19" kindref="member">WESTON_BACKEND_RDP</ref>]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rdp-backend.so&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a5ca3bb9d37a3b99dc829aa823a1f5e7f" kindref="member">WESTON_BACKEND_WAYLAND</ref>]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wayland-backend.so&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a3b8188668bc350c2614b4f0b8d400edd" kindref="member">WESTON_BACKEND_X11</ref>]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;x11-backend.so&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7956"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7957"><highlight class="normal"></highlight></codeline>
<codeline lineno="7972"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7973"><highlight class="normal"><ref refid="group__compositor_1ga14405f588f9880d19e0764af6243e5ef" kindref="member">weston_compositor_load_backend</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="7974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036" kindref="member">weston_compositor_backend</ref><sp/>backend,</highlight></codeline>
<codeline lineno="7975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__backend__config" kindref="compound">weston_backend_config</ref><sp/>*config_base)</highlight></codeline>
<codeline lineno="7976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*backend_init)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*c,</highlight></codeline>
<codeline lineno="7978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__backend__config" kindref="compound">weston_backend_config</ref><sp/>*config_base);</highlight></codeline>
<codeline lineno="7979"><highlight class="normal"></highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>attempt<sp/>to<sp/>load<sp/>a<sp/>backend<sp/>when<sp/>one<sp/>is<sp/>already<sp/>loaded\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7984"><highlight class="normal"></highlight></codeline>
<codeline lineno="7985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backend<sp/>&gt;=<sp/>ARRAY_LENGTH(<ref refid="compositor_8c_1acc40172637b56f2ac467c5c6692f0126" kindref="member">backend_map</ref>))</highlight></codeline>
<codeline lineno="7986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7987"><highlight class="normal"></highlight></codeline>
<codeline lineno="7988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_init<sp/>=<sp/><ref refid="compositor_8c_1a1cf9686b2a6a6764e8197fdbb473607f" kindref="member">weston_load_module</ref>(<ref refid="compositor_8c_1acc40172637b56f2ac467c5c6692f0126" kindref="member">backend_map</ref>[backend],<sp/></highlight><highlight class="stringliteral">&quot;weston_backend_init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!backend_init)</highlight></codeline>
<codeline lineno="7990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7991"><highlight class="normal"></highlight></codeline>
<codeline lineno="7992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backend_init(compositor,<sp/>config_base)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="7993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7996"><highlight class="normal"></highlight></codeline>
<codeline lineno="7997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7999"><highlight class="normal"></highlight></codeline>
<codeline lineno="8003"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8004"><highlight class="normal"><ref refid="group__compositor_1gac6e898461759aedc521674d927c4f433" kindref="member">weston_compositor_load_xwayland</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="8005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*module_init)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="8007"><highlight class="normal"></highlight></codeline>
<codeline lineno="8008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module_init<sp/>=<sp/><ref refid="compositor_8c_1a1cf9686b2a6a6764e8197fdbb473607f" kindref="member">weston_load_module</ref>(</highlight><highlight class="stringliteral">&quot;xwayland.so&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;weston_module_init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!module_init)</highlight></codeline>
<codeline lineno="8010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module_init(compositor)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="8012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="8014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8015"><highlight class="normal"></highlight></codeline>
<codeline lineno="8031"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8032"><highlight class="normal"><ref refid="compositor_8c_1aed6929d897784a5d5538aca4aaf7d4cd" kindref="member">weston_buffer_send_server_error</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,</highlight></codeline>
<codeline lineno="8033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="8034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="8036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*display_resource;</highlight></codeline>
<codeline lineno="8037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>id;</highlight></codeline>
<codeline lineno="8038"><highlight class="normal"></highlight></codeline>
<codeline lineno="8039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="8040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>wl_resource_get_id(<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="8041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>wl_resource_get_client(<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="8042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display_resource<sp/>=<sp/>wl_client_get_object(<ref refid="structclient" kindref="compound">client</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="8043"><highlight class="normal"></highlight></codeline>
<codeline lineno="8044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(display_resource);</highlight></codeline>
<codeline lineno="8045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(display_resource,</highlight></codeline>
<codeline lineno="8046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="8047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;server<sp/>error<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_buffer@%u:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="8049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8050"><highlight class="normal"></highlight></codeline>
<codeline lineno="8051"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8052"><highlight class="normal"><ref refid="compositor_8c_1a2b2ea3608297a59698d168b47e7d4072" kindref="member">weston_output_disable_planes_incr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="8053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;disable_planes++;</highlight></codeline>
<codeline lineno="8055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>disable_planes<sp/>changes<sp/>from<sp/>0<sp/>to<sp/>non-zero,<sp/>it<sp/>means<sp/>some<sp/>type<sp/>of</highlight></codeline>
<codeline lineno="8057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>recording<sp/>of<sp/>content<sp/>has<sp/>started,<sp/>and<sp/>therefore<sp/>protection<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="8058"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>protected<sp/>surfaces<sp/>must<sp/>be<sp/>updated<sp/>to<sp/>avoid<sp/>the<sp/>recording<sp/>of</highlight></codeline>
<codeline lineno="8059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>protected<sp/>content.</highlight></codeline>
<codeline lineno="8060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;disable_planes<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="8062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac6277c99f8902551d05f429293eba72d" kindref="member">weston_schedule_surface_protection_update</ref>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor);</highlight></codeline>
<codeline lineno="8063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8064"><highlight class="normal"></highlight></codeline>
<codeline lineno="8065"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8066"><highlight class="normal"><ref refid="compositor_8c_1abc5d5ea39a8242825a8a617805027997" kindref="member">weston_output_disable_planes_decr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="8067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;disable_planes--;</highlight></codeline>
<codeline lineno="8069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8070"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>disable_planes<sp/>changes<sp/>from<sp/>non-zero<sp/>to<sp/>0,<sp/>it<sp/>means<sp/>no<sp/>content</highlight></codeline>
<codeline lineno="8071"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>recording<sp/>is<sp/>going<sp/>on<sp/>any<sp/>more,<sp/>and<sp/>the<sp/>protected<sp/>and<sp/>surfaces<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="8072"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>shown<sp/>without<sp/>any<sp/>apprehensions<sp/>about<sp/>content<sp/>being<sp/>recorded.</highlight></codeline>
<codeline lineno="8073"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;disable_planes<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="8075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ac6277c99f8902551d05f429293eba72d" kindref="member">weston_schedule_surface_protection_update</ref>(<ref refid="structoutput" kindref="compound">output</ref>-&gt;compositor);</highlight></codeline>
<codeline lineno="8076"><highlight class="normal"></highlight></codeline>
<codeline lineno="8077"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/libweston/compositor.c"/>
  </compounddef>
</doxygen>
