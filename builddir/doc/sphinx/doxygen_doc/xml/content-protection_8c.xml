<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="content-protection_8c" kind="file" language="C++">
    <compoundname>content-protection.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="libweston_8h" local="no">libweston/libweston.h</includes>
    <includes refid="weston-log_8h" local="no">libweston/weston-log.h</includes>
    <includes refid="libweston-internal_8h" local="yes">libweston-internal.h</includes>
    <includes local="yes">weston-content-protection-server-protocol.h</includes>
    <includes local="yes">shared/helpers.h</includes>
    <includes local="yes">shared/timespec-util.h</includes>
    <incdepgraph>
      <node id="10">
        <label>stdbool.h</label>
      </node>
      <node id="18">
        <label>stdarg.h</label>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/libweston/content-protection.c</label>
        <link refid="content-protection_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>weston-content-protection-server-protocol.h</label>
      </node>
      <node id="9">
        <label>libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>libweston/weston-log.h</label>
        <link refid="weston-log_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>wayland-server.h</label>
      </node>
      <node id="13">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="22">
        <label>shared/helpers.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="6">
        <label>signal.h</label>
      </node>
      <node id="16">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>time.h</label>
      </node>
      <node id="15">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="12">
        <label>pixman.h</label>
      </node>
      <node id="20">
        <label>libweston-internal.h</label>
        <link refid="libweston-internal_8h"/>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="23">
        <label>shared/timespec-util.h</label>
      </node>
      <node id="19">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="content-protection_8c_1a5b1a574abdde863f06f8bb34fb3d711e" prot="public" static="no">
        <name>content_protection_log</name>
        <param><defname>cp</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="structweston__log__scope_1ab8df80c01a6b256dee3d6a873b21ad05" kindref="member">weston_log_scope_printf</ref>((cp)-&gt;debug, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="40" column="9" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="content-protection_8c_1a09004ed049574eba05f245274d0a80dd" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char* const content_type_name[]</definition>
        <argsstring>[]</argsstring>
        <name>content_type_name</name>
        <initializer>= {
	[WESTON_PROTECTED_SURFACE_TYPE_UNPROTECTED] = &quot;UNPROTECTED&quot;,
	[WESTON_PROTECTED_SURFACE_TYPE_HDCP_0] = &quot;TYPE-0&quot;,
	[WESTON_PROTECTED_SURFACE_TYPE_HDCP_1] = &quot;TYPE-1&quot;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="43" column="26" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="content-protection_8c_1ab7d4d95f854b2e468b341aff0765d66a" prot="public" static="yes" mutable="no">
        <type>const struct weston_protected_surface_interface</type>
        <definition>const struct weston_protected_surface_interface protected_surface_implementation</definition>
        <argsstring></argsstring>
        <name>protected_surface_implementation</name>
        <initializer>= {
	<ref refid="content-protection_8c_1a51ee71c58e1f85d38c0f9cee502a72f9" kindref="member">protected_surface_destroy</ref>,
	<ref refid="content-protection_8c_1adc1cab9d3cc71cc5543ae6cc19e4e36f" kindref="member">set_type</ref>,
	<ref refid="content-protection_8c_1a2cf6d95e8487081a9c88328ebc4624fc" kindref="member">set_enforce_mode</ref>,
	<ref refid="content-protection_8c_1a28328e3907b5b4d13da54241e2ed0d4f" kindref="member">set_relax_mode</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="153" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="content-protection_8c_1a9595243f0b1c561c70a9a52d10003e8d" prot="public" static="yes" mutable="no">
        <type>const struct weston_content_protection_interface</type>
        <definition>const struct weston_content_protection_interface content_protection_implementation</definition>
        <argsstring></argsstring>
        <name>content_protection_implementation</name>
        <initializer>= {
	<ref refid="content-protection_8c_1ad0050f5728354fb003cdbfc71f378d77" kindref="member">destroy_protection</ref>,
	<ref refid="content-protection_8c_1ad3678d0546721ba753a6c6be638448f7" kindref="member">get_protection</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="286" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="292" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="content-protection_8c_1aa8e2bb41742f074cbbdcf2967965f3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_protected_surface_send_event</definition>
        <argsstring>(struct protected_surface *psurface, enum weston_hdcp_protection protection)</argsstring>
        <name>weston_protected_surface_send_event</name>
        <param>
          <type>struct <ref refid="structprotected__surface" kindref="compound">protected_surface</ref> *</type>
          <declname>psurface</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref></type>
          <declname>protection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="50" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="50" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1adc1cab9d3cc71cc5543ae6cc19e4e36f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_type</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, enum weston_protected_surface_type content_type)</argsstring>
        <name>set_type</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>enum weston_protected_surface_type</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="75" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="75" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1a51ee71c58e1f85d38c0f9cee502a72f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void protected_surface_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>protected_surface_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="110" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="110" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1a2cf6d95e8487081a9c88328ebc4624fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_enforce_mode</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>set_enforce_mode</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="121" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="121" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1a28328e3907b5b4d13da54241e2ed0d4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_relax_mode</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>set_relax_mode</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="153" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="153" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1a4785aabf038ef5489c3976391cfde322" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cp_destroy_listener</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>cp_destroy_listener</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="182" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="182" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1ad194601409e754bb2dfa1f9cedc678cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_protected_surface</definition>
        <argsstring>(struct protected_surface *psurface)</argsstring>
        <name>free_protected_surface</name>
        <param>
          <type>struct <ref refid="structprotected__surface" kindref="compound">protected_surface</ref> *</type>
          <declname>psurface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="197" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="197" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1a674285ef2e62f4cf3b012b171f62d731" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_destroyed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>surface_destroyed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="207" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="207" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1a8189704e8ff580f6e321599a12031c1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_protected_surface</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_protected_surface</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="217" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="217" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1ad3678d0546721ba753a6c6be638448f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_protection</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *cp_resource, uint32_t id, struct wl_resource *surface_resource)</argsstring>
        <name>get_protection</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>cp_resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="228" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="228" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1ad0050f5728354fb003cdbfc71f378d77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_protection</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *cp_resource)</argsstring>
        <name>destroy_protection</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>cp_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="286" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1aabeb6eac43e206597f052b306d33256c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_weston_content_protection</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_weston_content_protection</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="298" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="298" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="content-protection_8c_1a551f7585a5eae5a200b0b142ccee16af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_enable_content_protection</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_enable_content_protection</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/content-protection.c" line="325" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="325" bodyend="347"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2019<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="libweston_8h" kindref="compound">libweston/libweston.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="weston-log_8h" kindref="compound">libweston/weston-log.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libweston-internal_8h" kindref="compound">libweston-internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;weston-content-protection-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/helpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/timespec-util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>content_protection_log(cp,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_log_scope_printf((cp)-&gt;debug,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="content-protection_8c_1a09004ed049574eba05f245274d0a80dd" kindref="member">content_type_name</ref><sp/>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[WESTON_PROTECTED_SURFACE_TYPE_UNPROTECTED]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UNPROTECTED&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[WESTON_PROTECTED_SURFACE_TYPE_HDCP_0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TYPE-0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[WESTON_PROTECTED_SURFACE_TYPE_HDCP_1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TYPE-1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="content-protection_8c_1aa8e2bb41742f074cbbdcf2967965f3ad" kindref="member">weston_protected_surface_send_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>protection)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*p_resource;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>weston_protected_surface_type<sp/>protection_type;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*surface_resource;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_resource<sp/>=<sp/>psurface-&gt;<ref refid="structprotected__surface_1a6402de58375bd915ca8a28b6e0c02f3b" kindref="member">protection_resource</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p_resource)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>event<sp/>to<sp/>be<sp/>sent<sp/>to<sp/>client,<sp/>in<sp/>case<sp/>of<sp/>enforced<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a2a8174daa5c86a0d2bae73d4cbf7a676" kindref="member">protection_mode</ref><sp/>==<sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208aa5df7c201a76deb656b1e70da4268a54" kindref="member">WESTON_SURFACE_PROTECTION_MODE_ENFORCED</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protection_type<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>weston_protected_surface_type)<sp/>protection;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_protected_surface_send_status(p_resource,<sp/>protection_type);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>psurface-&gt;<ref refid="structprotected__surface_1a457cc1d9588fd2d69429d434874bc28e" kindref="member">cp_backptr</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_resource<sp/>=<sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a5b1a574abdde863f06f8bb34fb3d711e" kindref="member">content_protection_log</ref>(cp,<sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%&quot;</highlight><highlight class="normal">PRIu32</highlight><highlight class="stringliteral">&quot;<sp/>Protection<sp/>type<sp/>set<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(surface_resource),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a09004ed049574eba05f245274d0a80dd" kindref="member">content_type_name</ref>[protection_type]);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="content-protection_8c_1adc1cab9d3cc71cc5543ae6cc19e4e36f" kindref="member">set_type</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>weston_protected_surface_type<sp/>content_type)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>weston_cp;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*surface_resource;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!psurface)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>psurface-&gt;<ref refid="structprotected__surface_1a457cc1d9588fd2d69429d434874bc28e" kindref="member">cp_backptr</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_resource<sp/>=<sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(content_type<sp/>&lt;<sp/>WESTON_PROTECTED_SURFACE_TYPE_UNPROTECTED<sp/>||</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>content_type<sp/>&gt;<sp/>WESTON_PROTECTED_SURFACE_TYPE_HDCP_1)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WESTON_PROTECTED_SURFACE_ERROR_INVALID_TYPE,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%&quot;</highlight><highlight class="normal">PRIu32</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>content-type<sp/>%d<sp/>for<sp/>request:set_type\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(surface_resource),<sp/>content_type);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a5b1a574abdde863f06f8bb34fb3d711e" kindref="member">content_protection_log</ref>(cp,<sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%&quot;</highlight><highlight class="normal">PRIu32</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>content-type<sp/>%d<sp/>for<sp/>request:set_type\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(surface_resource),<sp/>content_type);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a5b1a574abdde863f06f8bb34fb3d711e" kindref="member">content_protection_log</ref>(cp,<sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%&quot;</highlight><highlight class="normal">PRIu32</highlight><highlight class="stringliteral">&quot;<sp/>Request:<sp/>Enable<sp/>Content-Protection<sp/>Type:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(surface_resource),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a09004ed049574eba05f245274d0a80dd" kindref="member">content_type_name</ref>[content_type]);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_cp<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref>)<sp/>content_type;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a308d5d1f9b1a3d2043a60be0cd806842" kindref="member">pending</ref>.<ref refid="structweston__surface__state_1aa7cb0c5d15edb989d03c635046a5e923" kindref="member">desired_protection</ref><sp/>=<sp/>weston_cp;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="content-protection_8c_1a51ee71c58e1f85d38c0f9cee502a72f9" kindref="member">protected_surface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!psurface)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a308d5d1f9b1a3d2043a60be0cd806842" kindref="member">pending</ref>.<ref refid="structweston__surface__state_1aa7cb0c5d15edb989d03c635046a5e923" kindref="member">desired_protection</ref><sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="content-protection_8c_1a2cf6d95e8487081a9c88328ebc4624fc" kindref="member">set_enforce_mode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Enforce<sp/>Censored-Visibility.<sp/>Compositor<sp/>censors<sp/>the<sp/>protected</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>surface<sp/>on<sp/>an<sp/>unsecured<sp/>output.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>case<sp/>of<sp/>a<sp/>surface,<sp/>being<sp/>shown<sp/>on<sp/>an<sp/>unprotected<sp/>output,<sp/>the</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>compositor<sp/>hides<sp/>the<sp/>surface,<sp/>not<sp/>allowing<sp/>it<sp/>to<sp/>be<sp/>displayed<sp/>on</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>unprotected<sp/>output,<sp/>without<sp/>bothering<sp/>the<sp/>client.<sp/>No<sp/>difference</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>the<sp/>protected<sp/>outputs.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>member<sp/>&apos;protection_mode&apos;<sp/>is<sp/>&quot;double-buffered&quot;,<sp/>so<sp/>setting<sp/>it<sp/>in</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>pending_state<sp/>will<sp/>cause<sp/>the<sp/>setting<sp/>of<sp/>the<sp/>corresponding</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&apos;protection_mode&apos;<sp/>in<sp/>weston_surface,<sp/>after<sp/>the<sp/>commit.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>sets<sp/>the<sp/>&apos;protection_mode&apos;<sp/>of<sp/>the<sp/>weston_surface_state</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>&apos;enfoced&apos;.<sp/>The<sp/>renderers<sp/>inspect<sp/>the<sp/>flag<sp/>and<sp/>compare<sp/>the</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>desired_protection<sp/>of<sp/>the<sp/>surface,<sp/>to<sp/>the<sp/>current_protection<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output,<sp/>based<sp/>on<sp/>that<sp/>the<sp/>real<sp/>surface<sp/>or<sp/>a<sp/>place-holder<sp/>content,</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(e.g.<sp/>solid<sp/>color)<sp/>are<sp/>shown.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!psurface)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a308d5d1f9b1a3d2043a60be0cd806842" kindref="member">pending</ref>.<ref refid="structweston__surface__state_1a2c8ab81f6bccd6fad2dec8bb13045d96" kindref="member">protection_mode</ref><sp/>=</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208aa5df7c201a76deb656b1e70da4268a54" kindref="member">WESTON_SURFACE_PROTECTION_MODE_ENFORCED</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="content-protection_8c_1a28328e3907b5b4d13da54241e2ed0d4f" kindref="member">set_relax_mode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Relaxed<sp/>mode.<sp/>By<sp/>default<sp/>this<sp/>mode<sp/>will<sp/>be<sp/>activated.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>case<sp/>of<sp/>a<sp/>surface,<sp/>being<sp/>shown<sp/>in<sp/>unprotected<sp/>output,</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>compositor<sp/>just<sp/>sends<sp/>the<sp/>event<sp/>for<sp/>protection<sp/>status<sp/>changed.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>On<sp/>setting<sp/>the<sp/>relaxed<sp/>mode,<sp/>the<sp/>&apos;protection_mode&apos;<sp/>member<sp/>is<sp/>queued</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>set<sp/>to<sp/>&apos;relax&apos;<sp/>from<sp/>the<sp/>existing<sp/>&apos;enforce&apos;<sp/>mode.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!psurface)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a308d5d1f9b1a3d2043a60be0cd806842" kindref="member">pending</ref>.<ref refid="structweston__surface__state_1a2c8ab81f6bccd6fad2dec8bb13045d96" kindref="member">protection_mode</ref><sp/>=</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208ab0feceb730258d0d17f95c9570f69934" kindref="member">WESTON_SURFACE_PROTECTION_MODE_RELAXED</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_protected_surface_interface<sp/><ref refid="content-protection_8c_1ab7d4d95f854b2e468b341aff0765d66a" kindref="member">protected_surface_implementation</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a51ee71c58e1f85d38c0f9cee502a72f9" kindref="member">protected_surface_destroy</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1adc1cab9d3cc71cc5543ae6cc19e4e36f" kindref="member">set_type</ref>,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a2cf6d95e8487081a9c88328ebc4624fc" kindref="member">set_enforce_mode</ref>,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a28328e3907b5b4d13da54241e2ed0d4f" kindref="member">set_relax_mode</ref>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="content-protection_8c_1a4785aabf038ef5489c3976391cfde322" kindref="member">cp_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcontent__protection" kindref="compound">content_protection</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcontent__protection_1aaf17187dbaffba4b496a61255aaed109" kindref="member">destroy_listener</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;cp-&gt;<ref refid="structcontent__protection_1aaf17187dbaffba4b496a61255aaed109" kindref="member">destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;cp-&gt;<ref refid="structcontent__protection_1a8e39824cc2b131956732d99ddbd27e4a" kindref="member">protected_list</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1a32ad399b7e203a9ad0a5a11cdd0711ce" kindref="member">weston_log_scope_destroy</ref>(cp-&gt;<ref refid="structcontent__protection_1a85a7247299b8af09797c3e2af20cd92e" kindref="member">debug</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp-&gt;<ref refid="structcontent__protection_1a85a7247299b8af09797c3e2af20cd92e" kindref="member">debug</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp-&gt;<ref refid="structcontent__protection_1acdaf51b0f4db5fb0c0d9dcf9b8ab7cfe" kindref="member">surface_protection_update</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cp);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="content-protection_8c_1ad194601409e754bb2dfa1f9cedc678cd" kindref="member">free_protected_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a308d5d1f9b1a3d2043a60be0cd806842" kindref="member">pending</ref>.<ref refid="structweston__surface__state_1aa7cb0c5d15edb989d03c635046a5e923" kindref="member">desired_protection</ref><sp/>=<sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(psurface-&gt;<ref refid="structprotected__surface_1a6402de58375bd915ca8a28b6e0c02f3b" kindref="member">protection_resource</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;psurface-&gt;<ref refid="structprotected__surface_1a570b892f3f2e0ce6db1812215f81417c" kindref="member">surface_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;psurface-&gt;<ref refid="structprotected__surface_1aa40b1e3218e17c8c140de83036091348" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(psurface);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="content-protection_8c_1a674285ef2e62f4cf3b012b171f62d731" kindref="member">surface_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface<sp/>=<sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structprotected__surface" kindref="compound">protected_surface</ref>,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structprotected__surface_1a570b892f3f2e0ce6db1812215f81417c" kindref="member">surface_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1ad194601409e754bb2dfa1f9cedc678cd" kindref="member">free_protected_surface</ref>(psurface);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="content-protection_8c_1a8189704e8ff580f6e321599a12031c1e" kindref="member">destroy_protected_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!psurface)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1ad194601409e754bb2dfa1f9cedc678cd" kindref="member">free_protected_surface</ref>(psurface);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="content-protection_8c_1ad3678d0546721ba753a6c6be638448f7" kindref="member">get_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*cp_resource,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/>*listener;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(surface_resource);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>wl_resource_get_user_data(cp_resource);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(cp);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Check<sp/>if<sp/>this<sp/>client<sp/>has<sp/>a<sp/>corresponding<sp/>protected-surface</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listener<sp/>=<sp/>wl_resource_get_destroy_listener(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a674285ef2e62f4cf3b012b171f62d731" kindref="member">surface_destroyed</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listener)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(cp_resource,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WESTON_CONTENT_PROTECTION_ERROR_SURFACE_EXISTS,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wl_surface@%&quot;</highlight><highlight class="normal">PRIu32</highlight><highlight class="stringliteral">&quot;<sp/>Protection<sp/>already<sp/>exists&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_id(surface_resource));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structprotected__surface" kindref="compound">protected_surface</ref>));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!psurface)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1a457cc1d9588fd2d69429d434874bc28e" kindref="member">cp_backptr</ref><sp/>=<sp/>cp;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;weston_protected_surface_interface,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!resource)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(psurface);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;cp-&gt;<ref refid="structcontent__protection_1a8e39824cc2b131956732d99ddbd27e4a" kindref="member">protected_list</ref>,<sp/>&amp;psurface-&gt;<ref refid="structprotected__surface_1aa40b1e3218e17c8c140de83036091348" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="content-protection_8c_1ab7d4d95f854b2e468b341aff0765d66a" kindref="member">protected_surface_implementation</ref>,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1a8189704e8ff580f6e321599a12031c1e" kindref="member">destroy_protected_surface</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1a6402de58375bd915ca8a28b6e0c02f3b" kindref="member">protection_resource</ref><sp/>=<sp/>resource;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1a570b892f3f2e0ce6db1812215f81417c" kindref="member">surface_destroy_listener</ref>.notify<sp/>=<sp/><ref refid="content-protection_8c_1a674285ef2e62f4cf3b012b171f62d731" kindref="member">surface_destroyed</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_add_destroy_listener(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;psurface-&gt;<ref refid="structprotected__surface_1a570b892f3f2e0ce6db1812215f81417c" kindref="member">surface_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1aa8e2bb41742f074cbbdcf2967965f3ad" kindref="member">weston_protected_surface_send_event</ref>(psurface,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psurface-&gt;<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a2a8f981bbb213440de831fdf1fdd46da" kindref="member">current_protection</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="content-protection_8c_1ad0050f5728354fb003cdbfc71f378d77" kindref="member">destroy_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*cp_resource)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(cp_resource);</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_content_protection_interface<sp/><ref refid="content-protection_8c_1a9595243f0b1c561c70a9a52d10003e8d" kindref="member">content_protection_implementation</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1ad0050f5728354fb003cdbfc71f378d77" kindref="member">destroy_protection</ref>,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1ad3678d0546721ba753a6c6be638448f7" kindref="member">get_protection</ref>,</highlight></codeline>
<codeline lineno="295"><highlight class="normal">};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="content-protection_8c_1aabeb6eac43e206597f052b306d33256c" kindref="member">bind_weston_content_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;weston_content_protection_interface,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!resource)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="content-protection_8c_1a9595243f0b1c561c70a9a52d10003e8d" kindref="member">content_protection_implementation</ref>,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp,<sp/>NULL);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Advertise<sp/>the<sp/>content-protection<sp/>support.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>Calling<sp/>this<sp/>function<sp/>sets<sp/>up<sp/>the<sp/>content-protection<sp/>support<sp/>via<sp/>HDCP.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>This<sp/>exposes<sp/>the<sp/>global<sp/>interface,<sp/>visible<sp/>to<sp/>the<sp/>client,<sp/>enabling<sp/>them<sp/>to</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>request<sp/>for<sp/>content-protection<sp/>for<sp/>their<sp/>surfaces<sp/>according<sp/>to<sp/>the<sp/>type<sp/>of</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>content.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><ref refid="content-protection_8c_1a551f7585a5eae5a200b0b142ccee16af" kindref="member">weston_compositor_enable_content_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*cp;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*cp));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp-&gt;<ref refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" kindref="member">compositor</ref><sp/>=<sp/><ref refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a42ad71eeccc5497d3667cca8e38f39f8" kindref="member">content_protection</ref><sp/>=<sp/>cp;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;cp-&gt;<ref refid="structcontent__protection_1a8e39824cc2b131956732d99ddbd27e4a" kindref="member">protected_list</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_global_create(<ref refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;weston_content_protection_interface,<sp/>1,<sp/>cp,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="content-protection_8c_1aabeb6eac43e206597f052b306d33256c" kindref="member">bind_weston_content_protection</ref>)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp-&gt;<ref refid="structcontent__protection_1aaf17187dbaffba4b496a61255aaed109" kindref="member">destroy_listener</ref>.notify<sp/>=<sp/><ref refid="content-protection_8c_1a4785aabf038ef5489c3976391cfde322" kindref="member">cp_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a2c143f1cc8d4f174db0fb3ef76a03d20" kindref="member">destroy_signal</ref>,<sp/>&amp;cp-&gt;<ref refid="structcontent__protection_1aaf17187dbaffba4b496a61255aaed109" kindref="member">destroy_listener</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp-&gt;<ref refid="structcontent__protection_1a85a7247299b8af09797c3e2af20cd92e" kindref="member">debug</ref><sp/>=<sp/><ref refid="structweston__compositor_1ae4682c6463d20cedae4215dff64d91c7" kindref="member">weston_compositor_add_log_scope</ref>(<ref refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" kindref="member">compositor</ref>,<sp/></highlight><highlight class="stringliteral">&quot;content-protection-debug&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;debug-logs<sp/>for<sp/>content-protection&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/libweston/content-protection.c"/>
  </compounddef>
</doxygen>
