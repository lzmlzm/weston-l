<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="input_8c" kind="file" language="C++">
    <compoundname>input.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">values.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="yes">shared/helpers.h</includes>
    <includes local="yes">shared/os-compatibility.h</includes>
    <includes local="yes">shared/timespec-util.h</includes>
    <includes refid="libweston_8h" local="no">libweston/libweston.h</includes>
    <includes refid="backend_8h" local="yes">backend.h</includes>
    <includes refid="libweston-internal_8h" local="yes">libweston-internal.h</includes>
    <includes local="yes">relative-pointer-unstable-v1-server-protocol.h</includes>
    <includes local="yes">pointer-constraints-unstable-v1-server-protocol.h</includes>
    <includes local="yes">input-timestamps-unstable-v1-server-protocol.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="17">
        <label>libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/libweston/input.c</label>
        <link refid="input_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>sys/mman.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="21">
        <label>wayland-server.h</label>
      </node>
      <node id="20">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="13">
        <label>errno.h</label>
      </node>
      <node id="11">
        <label>fcntl.h</label>
      </node>
      <node id="15">
        <label>shared/os-compatibility.h</label>
      </node>
      <node id="10">
        <label>values.h</label>
      </node>
      <node id="14">
        <label>shared/helpers.h</label>
      </node>
      <node id="12">
        <label>limits.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="27">
        <label>pointer-constraints-unstable-v1-server-protocol.h</label>
      </node>
      <node id="9">
        <label>unistd.h</label>
      </node>
      <node id="23">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>time.h</label>
      </node>
      <node id="22">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="19">
        <label>pixman.h</label>
      </node>
      <node id="26">
        <label>relative-pointer-unstable-v1-server-protocol.h</label>
      </node>
      <node id="25">
        <label>libweston-internal.h</label>
        <link refid="libweston-internal_8h"/>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="16">
        <label>shared/timespec-util.h</label>
      </node>
      <node id="24">
        <label>backend.h</label>
        <link refid="backend_8h"/>
      </node>
      <node id="28">
        <label>input-timestamps-unstable-v1-server-protocol.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structvec2d" prot="public">vec2d</innerclass>
    <innerclass refid="structline" prot="public">line</innerclass>
    <innerclass refid="structborder" prot="public">border</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="input_8c_1aa865376fa9d99769c57603e462dee3e3" prot="public" static="no" strong="no">
        <type></type>
        <name>pointer_constraint_type</name>
        <enumvalue id="input_8c_1aa865376fa9d99769c57603e462dee3e3a4e795eaad3d7c6a15a7497a1ab8ccbb8" prot="public">
          <name>POINTER_CONSTRAINT_TYPE_LOCK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8c_1aa865376fa9d99769c57603e462dee3e3a5bdf810a5c747165edb552cfcc035ef6" prot="public">
          <name>POINTER_CONSTRAINT_TYPE_CONFINE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="52" column="29" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="enum" id="input_8c_1a72f8824b411d1122a2dfb88206ef9748" prot="public" static="no" strong="no">
        <type></type>
        <name>motion_direction</name>
        <enumvalue id="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" prot="public">
          <name>MOTION_DIRECTION_POSITIVE_X</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8c_1a72f8824b411d1122a2dfb88206ef9748ace65161e5ee8e0af79a41e7877d41ee8" prot="public">
          <name>MOTION_DIRECTION_NEGATIVE_X</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" prot="public">
          <name>MOTION_DIRECTION_POSITIVE_Y</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8c_1a72f8824b411d1122a2dfb88206ef9748abc10445b528675ce0651b4ec508eb86a" prot="public">
          <name>MOTION_DIRECTION_NEGATIVE_Y</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="57" column="22" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="57" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="input_8c_1ad38e7c6caef6001fd4182c96338bb845" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref></type>
        <definition>const struct weston_pointer_grab_interface default_pointer_grab_interface</definition>
        <argsstring></argsstring>
        <name>default_pointer_grab_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a5abca7d7a299d7c364c955adcebea3cb" kindref="member">default_grab_pointer_focus</ref>,
	<ref refid="input_8c_1a998d8a6fe21a1d70274509df6b46a6bf" kindref="member">default_grab_pointer_motion</ref>,
	<ref refid="input_8c_1a3052d2d094f810c4a084de3d8242432b" kindref="member">default_grab_pointer_button</ref>,
	<ref refid="input_8c_1a7cd67f2ee89fff5404d37a269edf2c18" kindref="member">default_grab_pointer_axis</ref>,
	<ref refid="input_8c_1a67035952a0574bd3d7df24d58f250ebe" kindref="member">default_grab_pointer_axis_source</ref>,
	<ref refid="input_8c_1a213120aaf578428f1755e756cdc9d923" kindref="member">default_grab_pointer_frame</ref>,
	<ref refid="input_8c_1aab0bd65ec1a3229486e373eee5965a0b" kindref="member">default_grab_pointer_cancel</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="770" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a1e4eb0bff00e5f315642582db8d97e56" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structweston__touch__grab__interface" kindref="compound">weston_touch_grab_interface</ref></type>
        <definition>const struct weston_touch_grab_interface default_touch_grab_interface</definition>
        <argsstring></argsstring>
        <name>default_touch_grab_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a8c3ece2669ade3ffaaace4f7eb1ab830" kindref="member">default_grab_touch_down</ref>,
	<ref refid="input_8c_1a1acfec4bd309363d7a3521d4f5264fa0" kindref="member">default_grab_touch_up</ref>,
	<ref refid="input_8c_1a88be333e8b19f460bf59ca47261319a0" kindref="member">default_grab_touch_motion</ref>,
	<ref refid="input_8c_1a2a7a91bc785e7fca187262b8feb392be" kindref="member">default_grab_touch_frame</ref>,
	<ref refid="input_8c_1a71182987ee31bdbf7758be4cc0e11fd4" kindref="member">default_grab_touch_cancel</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="966" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1aa4113372db172daea8464be85b796e3e" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structweston__keyboard__grab__interface" kindref="compound">weston_keyboard_grab_interface</ref></type>
        <definition>const struct weston_keyboard_grab_interface default_keyboard_grab_interface</definition>
        <argsstring></argsstring>
        <name>default_keyboard_grab_interface</name>
        <initializer>= {
	<ref refid="input_8c_1adc4a44b7e9292607bbe1876ebfdb3416" kindref="member">default_grab_keyboard_key</ref>,
	<ref refid="input_8c_1a20dd882320955f26b611c05a776e9c3b" kindref="member">default_grab_keyboard_modifiers</ref>,
	<ref refid="input_8c_1a0419acb297ce28fdc1d3ddda6ee724a0" kindref="member">default_grab_keyboard_cancel</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1165" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a386ee38eb0ea8bd348c82d6e2fcc052e" prot="public" static="yes" mutable="no">
        <type>const struct wl_pointer_interface</type>
        <definition>const struct wl_pointer_interface pointer_interface</definition>
        <argsstring></argsstring>
        <name>pointer_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a76d8cafc1477bd537d98292142d173d3" kindref="member">pointer_set_cursor</ref>,
	<ref refid="input_8c_1a4a78f49db731474e7045a6bad6b8ddc5" kindref="member">pointer_release</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2759" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1ab5c29d5d7f64b2e2c8450088f5f8a035" prot="public" static="yes" mutable="no">
        <type>const struct wl_keyboard_interface</type>
        <definition>const struct wl_keyboard_interface keyboard_interface</definition>
        <argsstring></argsstring>
        <name>keyboard_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a6744b635b9e89b59c40a45f48616a7d9" kindref="member">keyboard_release</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2842" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2847" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a5d8eed55e64230ef2f43c677788be466" prot="public" static="yes" mutable="no">
        <type>const struct wl_touch_interface</type>
        <definition>const struct wl_touch_interface touch_interface</definition>
        <argsstring></argsstring>
        <name>touch_interface</name>
        <initializer>= {
	<ref refid="input_8c_1ae422683c11233661a51a76541993ed6b" kindref="member">touch_release</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2935" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2940" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a2099b7222e4d917dc21853cac9b3d408" prot="public" static="yes" mutable="no">
        <type>const struct wl_seat_interface</type>
        <definition>const struct wl_seat_interface seat_interface</definition>
        <argsstring></argsstring>
        <name>seat_interface</name>
        <initializer>= {
	<ref refid="input_8c_1aa976a7fdd4346cd10a550d4604bae82f" kindref="member">seat_get_pointer</ref>,
	<ref refid="input_8c_1ac2987a4288e5faa3f6ab7352e75a9e89" kindref="member">seat_get_keyboard</ref>,
	<ref refid="input_8c_1a666e631cb2e4b6afece1ba81c922263f" kindref="member">seat_get_touch</ref>,
	<ref refid="input_8c_1ab66919f56e16c052e5976f807944d9c2" kindref="member">seat_release</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2987" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2992" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a57269f1574a23b04f3156c972b196f7d" prot="public" static="yes" mutable="no">
        <type>const struct zwp_relative_pointer_v1_interface</type>
        <definition>const struct zwp_relative_pointer_v1_interface relative_pointer_interface</definition>
        <argsstring></argsstring>
        <name>relative_pointer_interface</name>
        <initializer>= {
	<ref refid="input_8c_1ad47886ac59ecd19e06f0ecad52456582" kindref="member">relative_pointer_destroy</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3025" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3031" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1aecc02d2eeea304ca6003efeedb4391d9" prot="public" static="yes" mutable="no">
        <type>const struct zwp_relative_pointer_manager_v1_interface</type>
        <definition>const struct zwp_relative_pointer_manager_v1_interface relative_pointer_manager</definition>
        <argsstring></argsstring>
        <name>relative_pointer_manager</name>
        <initializer>= {
	<ref refid="input_8c_1ae5f963d183090a7e03d01741e6c51a34" kindref="member">relative_pointer_manager_destroy</ref>,
	<ref refid="input_8c_1a240768008f0b478a7fa2e7bc9ab5e432" kindref="member">relative_pointer_manager_get_relative_pointer</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3043" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3073" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a12ed31fcd5fca9404f09b7bce49ef20b" prot="public" static="yes" mutable="no">
        <type>const struct zwp_locked_pointer_v1_interface</type>
        <definition>static const struct zwp_locked_pointer_v1_interface locked_pointer_interface</definition>
        <argsstring></argsstring>
        <name>locked_pointer_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a567e864026d94c20ea80dda6f23ed354" kindref="member">locked_pointer_destroy</ref>,
	<ref refid="input_8c_1ae47b8c096a93b8837a86ed55205c256f" kindref="member">locked_pointer_set_cursor_position_hint</ref>,
	<ref refid="input_8c_1a2535946d2001d4462daf31f86a0a821e" kindref="member">locked_pointer_set_region</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3511" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a0cdd83341db6850c0dbb8a826eaaa7c2" prot="public" static="yes" mutable="no">
        <type>const struct zwp_confined_pointer_v1_interface</type>
        <definition>static const struct zwp_confined_pointer_v1_interface confined_pointer_interface</definition>
        <argsstring></argsstring>
        <name>confined_pointer_interface</name>
        <initializer>= {
	<ref refid="input_8c_1ad4d340a99f12e5378e5c523687e2a460" kindref="member">confined_pointer_destroy</ref>,
	<ref refid="input_8c_1a793c0ecdfa8221e1e7cab56a6d0135bf" kindref="member">confined_pointer_set_region</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3511" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1ace86975fb49050b2cc12435fd50709fd" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref></type>
        <definition>const struct weston_pointer_grab_interface locked_pointer_grab_interface</definition>
        <argsstring></argsstring>
        <name>locked_pointer_grab_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a15c0c29937e579e0227df6db20c24457" kindref="member">locked_pointer_grab_pointer_focus</ref>,
	<ref refid="input_8c_1ab01999adefdff40e6385f45a426a44ad" kindref="member">locked_pointer_grab_pointer_motion</ref>,
	<ref refid="input_8c_1ac6d7a969a927ca30769749d119764fa8" kindref="member">locked_pointer_grab_pointer_button</ref>,
	<ref refid="input_8c_1acee67c7beada1e3b933022aefe4711e4" kindref="member">locked_pointer_grab_pointer_axis</ref>,
	<ref refid="input_8c_1a4a8bdb820161ed591087c98a821f1503" kindref="member">locked_pointer_grab_pointer_axis_source</ref>,
	<ref refid="input_8c_1a70ad2215203cfe677a41365daef7a48c" kindref="member">locked_pointer_grab_pointer_frame</ref>,
	<ref refid="input_8c_1ad061019bd860c9f8e1a8dd66f21d08bd" kindref="member">locked_pointer_grab_pointer_cancel</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3797" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a7ef04b737041daa130a0ccf8509b06b4" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref></type>
        <definition>const struct weston_pointer_grab_interface confined_pointer_grab_interface</definition>
        <argsstring></argsstring>
        <name>confined_pointer_grab_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a4d106419b72ae403a51249878d7c1e69" kindref="member">confined_pointer_grab_pointer_focus</ref>,
	<ref refid="input_8c_1a944cbb72aaa491589260a70d821e42d0" kindref="member">confined_pointer_grab_pointer_motion</ref>,
	<ref refid="input_8c_1a2a0c226424eeca51a3ba373e3793abe0" kindref="member">confined_pointer_grab_pointer_button</ref>,
	<ref refid="input_8c_1aa0cc365a324516686e819d65c6e21449" kindref="member">confined_pointer_grab_pointer_axis</ref>,
	<ref refid="input_8c_1ad2186cb26c1168cbfcd84d6ce97f9cb5" kindref="member">confined_pointer_grab_pointer_axis_source</ref>,
	<ref refid="input_8c_1a91fbe5870a36f825d819a2464621fd9d" kindref="member">confined_pointer_grab_pointer_frame</ref>,
	<ref refid="input_8c_1abd57826773712ca20aee6731f0208b7e" kindref="member">confined_pointer_grab_pointer_cancel</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4810" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a35133392e11448243a2e219a602f4eef" prot="public" static="yes" mutable="no">
        <type>const struct zwp_pointer_constraints_v1_interface</type>
        <definition>const struct zwp_pointer_constraints_v1_interface pointer_constraints_interface</definition>
        <argsstring></argsstring>
        <name>pointer_constraints_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a753fe7cd4982edd5e4ef85c1ffda0baa" kindref="member">pointer_constraints_destroy</ref>,
	<ref refid="input_8c_1afc2105a7e101b552ab478909fd475df5" kindref="member">pointer_constraints_lock_pointer</ref>,
	<ref refid="input_8c_1aa9b3b4f52355f2c28b708df4f4501642" kindref="member">pointer_constraints_confine_pointer</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4865" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4885" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1a14b06629165f6ec84a8db6941ce35270" prot="public" static="yes" mutable="no">
        <type>const struct zwp_input_timestamps_v1_interface</type>
        <definition>const struct zwp_input_timestamps_v1_interface input_timestamps_interface</definition>
        <argsstring></argsstring>
        <name>input_timestamps_interface</name>
        <initializer>= {
	<ref refid="input-timestamps-helper_8h_1afde6c34b0a97e726dab733d1815c056d" kindref="member">input_timestamps_destroy</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4906" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4913" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8c_1ac672ad4b3f0ee0c4dd5607feeb109e9d" prot="public" static="yes" mutable="no">
        <type>const struct zwp_input_timestamps_manager_v1_interface</type>
        <definition>const struct zwp_input_timestamps_manager_v1_interface input_timestamps_manager_interface</definition>
        <argsstring></argsstring>
        <name>input_timestamps_manager_interface</name>
        <initializer>= {
	<ref refid="input_8c_1a8931804fccd7026f1972048b181017ce" kindref="member">input_timestamps_manager_destroy</ref>,
	<ref refid="input_8c_1a6099c9369757ce67780e52f832702676" kindref="member">input_timestamps_manager_get_keyboard_timestamps</ref>,
	<ref refid="input_8c_1ae63d1f9191ba53f7c496724e13311efc" kindref="member">input_timestamps_manager_get_pointer_timestamps</ref>,
	<ref refid="input_8c_1a02a59b9dc18f1a3581115c28626c04d8" kindref="member">input_timestamps_manager_get_touch_timestamps</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4987" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="5017" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="input_8c_1ab6e3b03423f5c77343adb86d3d824c13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void maybe_warp_confined_pointer</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>maybe_warp_confined_pointer</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4689" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4689" bodyend="4738" declfile="/home/lzm/Wayland/weston/libweston/input.c" declline="79" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1af0fea9467f1694ae88a2fbc5dd999480" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void empty_region</definition>
        <argsstring>(pixman_region32_t *region)</argsstring>
        <name>empty_region</name>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="82" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a1416f09293d589dc99655700e0a72b53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void region_init_infinite</definition>
        <argsstring>(pixman_region32_t *region)</argsstring>
        <name>region_init_infinite</name>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="89" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aabf6affda3185123d25e61747abfa482" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_timestamp</definition>
        <argsstring>(struct wl_resource *resource, const struct timespec *time)</argsstring>
        <name>send_timestamp</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="96" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="96" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac241c686812a364212f2615e0418398b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_timestamps_for_input_resource</definition>
        <argsstring>(struct wl_resource *input_resource, struct wl_list *list, const struct timespec *time)</argsstring>
        <name>send_timestamps_for_input_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>input_resource</declname>
        </param>
        <param>
          <type>struct wl_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="107" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ababbba9b54cc982f49cb6f150b0a7e4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void remove_input_resource_from_timestamps</definition>
        <argsstring>(struct wl_resource *input_resource, struct wl_list *list)</argsstring>
        <name>remove_input_resource_from_timestamps</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>input_resource</declname>
        </param>
        <param>
          <type>struct wl_list *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="120" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="120" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab636d1e6d0bc7f2204c8f1f80cb47e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
        <definition>struct weston_touch_device* weston_touch_create_touch_device</definition>
        <argsstring>(struct weston_touch *touch, const char *syspath, void *backend_data, const struct weston_touch_device_ops *ops)</argsstring>
        <name>weston_touch_create_touch_device</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>syspath</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>backend_data</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__touch__device__ops" kindref="compound">weston_touch_device_ops</ref> *</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Register a touchscreen input device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <ref refid="structweston__touch" kindref="compound">weston_touch</ref> that identifies the seat. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syspath</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique device name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend private data if necessary. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ops</parametername>
</parameternamelist>
<parameterdescription>
<para>Calibration operations, or NULL for not able to run calibration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New touch device, or NULL on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="140" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="140" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa6762c2cc7031bbfe61074d8b0d90191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_device_destroy</definition>
        <argsstring>(struct weston_touch_device *device)</argsstring>
        <name>weston_touch_device_destroy</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Destroy the touch device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="178" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="178" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a93ffbebf74d038e66d41b7189d304e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_touch_device_can_calibrate</definition>
        <argsstring>(struct weston_touch_device *device)</argsstring>
        <name>weston_touch_device_can_calibrate</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Is it possible to run calibration on this touch device? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="188" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aeb999acbb110377ba4a1818522c8bbf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref></type>
        <definition>static enum weston_touch_mode weston_touch_device_get_mode</definition>
        <argsstring>(struct weston_touch_device *device)</argsstring>
        <name>weston_touch_device_get_mode</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="188" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4c43fffbd16768544b7cccc00c0ea4fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref> *</type>
        <definition>static struct weston_pointer_client* weston_pointer_client_create</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>weston_pointer_client_create</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="200" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="200" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a9321bb26eeb6ae9e20a57343aba5579f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_client_destroy</definition>
        <argsstring>(struct weston_pointer_client *pointer_client)</argsstring>
        <name>weston_pointer_client_destroy</name>
        <param>
          <type>struct <ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref> *</type>
          <declname>pointer_client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="216" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="216" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a67dcea554780a0683c8eb66c2dab89db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool weston_pointer_client_is_empty</definition>
        <argsstring>(struct weston_pointer_client *pointer_client)</argsstring>
        <name>weston_pointer_client_is_empty</name>
        <param>
          <type>struct <ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref> *</type>
          <declname>pointer_client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="235" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="235" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aee3835bbcd4ba01823d27c1644e347e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref> *</type>
        <definition>static struct weston_pointer_client* weston_pointer_get_pointer_client</definition>
        <argsstring>(struct weston_pointer *pointer, struct wl_client *client)</argsstring>
        <name>weston_pointer_get_pointer_client</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="242" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="242" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a150a22aa9fe883468ca6635683f8f735" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref> *</type>
        <definition>static struct weston_pointer_client* weston_pointer_ensure_pointer_client</definition>
        <argsstring>(struct weston_pointer *pointer, struct wl_client *client)</argsstring>
        <name>weston_pointer_ensure_pointer_client</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="256" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="256" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1af39a0a194fe6b9a7e41a82618ed68143" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_cleanup_pointer_client</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_client *pointer_client)</argsstring>
        <name>weston_pointer_cleanup_pointer_client</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref> *</type>
          <declname>pointer_client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="278" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="278" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a8bc4dc292fd4b34ca53770b9c96a4c09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void unbind_pointer_client_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>unbind_pointer_client_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="290" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="290" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1abc7611c7625fe7037be956da53b4104f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void unbind_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>unbind_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="308" column="13" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa60e7771b5a23d6e81355f69f62123c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_motion_to_abs</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_motion_event *event, wl_fixed_t *x, wl_fixed_t *y)</argsstring>
        <name>weston_pointer_motion_to_abs</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="314" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="314" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a9da0b228823c3607b889346f99b2d59c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool weston_pointer_motion_to_rel</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_motion_event *event, double *dx, double *dy, double *dx_unaccel, double *dy_unaccel)</argsstring>
        <name>weston_pointer_motion_to_rel</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dx_unaccel</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dy_unaccel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="331" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="331" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6de88b133f2df2089534d96a88becb8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_repick</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_repick</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="357" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="357" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a16652173a65db126512fe2dd510873e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_idle_inhibit</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_idle_inhibit</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="368" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="368" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac9515552f97ec2926c9681f8f0e7e6dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_idle_release</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_idle_release</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="375" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="375" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a27323ed15b4d1ab13da02536f6aa8c29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_focus_view_destroyed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>pointer_focus_view_destroyed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="382" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="382" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a3586e637ad940f664dbf6cd526fbd885" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_focus_resource_destroyed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>pointer_focus_resource_destroyed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="392" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="392" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6605f3f74f47487f6a303ca0b4646ba9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void keyboard_focus_resource_destroyed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>keyboard_focus_resource_destroyed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="402" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="402" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a611b2a166b543bc42726ab4e5f9b92fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_focus_view_destroyed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>touch_focus_view_destroyed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="412" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="412" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aaafa6a3638395421b5eba885fff86332" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_focus_resource_destroyed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>touch_focus_resource_destroyed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="422" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="422" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a2efc9cad7767209a7a3a0980c6ffae72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void move_resources</definition>
        <argsstring>(struct wl_list *destination, struct wl_list *source)</argsstring>
        <name>move_resources</name>
        <param>
          <type>struct wl_list *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>struct wl_list *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="432" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="432" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a5310cddfcc3182e2c975c3b92920a4e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void move_resources_for_client</definition>
        <argsstring>(struct wl_list *destination, struct wl_list *source, struct wl_client *client)</argsstring>
        <name>move_resources_for_client</name>
        <param>
          <type>struct wl_list *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>struct wl_list *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="439" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="439" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a5abca7d7a299d7c364c955adcebea3cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_pointer_focus</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>default_grab_pointer_focus</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="454" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="454" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a53cffb54e97d763ba736c3f6145244a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_send_relative_motion</definition>
        <argsstring>(struct weston_pointer *pointer, const struct timespec *time, struct weston_pointer_motion_event *event)</argsstring>
        <name>pointer_send_relative_motion</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="472" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="472" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1abcb80f71889ae0e261e46573c44acbb9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_send_motion</definition>
        <argsstring>(struct weston_pointer *pointer, const struct timespec *time, wl_fixed_t sx, wl_fixed_t sy)</argsstring>
        <name>pointer_send_motion</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="511" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="511" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab26fbd79ff4d88d30d6b79396677aa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_motion</definition>
        <argsstring>(struct weston_pointer *pointer, const struct timespec *time, struct weston_pointer_motion_event *event)</argsstring>
        <name>weston_pointer_send_motion</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="533" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="533" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a998d8a6fe21a1d70274509df6b46a6bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_pointer_motion</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, struct weston_pointer_motion_event *event)</argsstring>
        <name>default_grab_pointer_motion</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="558" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="558" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa5739d335835aa75c34d497491d57ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_pointer_has_focus_resource</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_has_focus_resource</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Check if the pointer has focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to check for focused resources. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not this pointer has focused resources </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="571" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="571" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1acff4837ae0f91d176b516b195aee7947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_button</definition>
        <argsstring>(struct weston_pointer *pointer, const struct timespec *time, uint32_t button, enum wl_pointer_button_state state)</argsstring>
        <name>weston_pointer_send_button</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>enum wl_pointer_button_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Send wl_pointer.button events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer where the button events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>The button value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state enum value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_pointer.button event with the passed parameters. The focused resources are the wl_pointer resources of the client which currently has the surface with pointer focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="594" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="594" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a3052d2d094f810c4a084de3d8242432b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_pointer_button</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, uint32_t button, enum wl_pointer_button_state state)</argsstring>
        <name>default_grab_pointer_button</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>enum wl_pointer_button_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="619" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="619" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ad395050e7ec12082c2ee18c9ff42dda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_axis</definition>
        <argsstring>(struct weston_pointer *pointer, const struct timespec *time, struct weston_pointer_axis_event *event)</argsstring>
        <name>weston_pointer_send_axis</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Send wl_pointer.axis events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer where the axis events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_pointer.axis event with the passed parameters. The focused resources are the wl_pointer resources of the client which currently has the surface with pointer focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="651" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="651" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a70f2579a25e836fc05a631986bfac65b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_axis_source</definition>
        <argsstring>(struct weston_pointer *pointer, enum wl_pointer_axis_source source)</argsstring>
        <name>weston_pointer_send_axis_source</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>enum wl_pointer_axis_source</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Send wl_pointer.axis_source events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer where the axis_source events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis_source enum value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_pointer.axis_source event with the passed parameter. The focused resources are the wl_pointer resources of the client which currently has the surface with pointer focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="699" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="699" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae0281a474ed7f8a0e941673f79de6230" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_send_frame</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>pointer_send_frame</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="718" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="718" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a2bb5b53363fe73ab8a6b0f52e5415ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_frame</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_send_frame</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Send wl_pointer.frame events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer where the frame events originates from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_pointer.frame event. The focused resources are the wl_pointer resources of the client which currently has the surface with pointer focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="735" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="735" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a7cd67f2ee89fff5404d37a269edf2c18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_pointer_axis</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, struct weston_pointer_axis_event *event)</argsstring>
        <name>default_grab_pointer_axis</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="749" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="749" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a67035952a0574bd3d7df24d58f250ebe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_pointer_axis_source</definition>
        <argsstring>(struct weston_pointer_grab *grab, enum wl_pointer_axis_source source)</argsstring>
        <name>default_grab_pointer_axis_source</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>enum wl_pointer_axis_source</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="757" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="757" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a213120aaf578428f1755e756cdc9d923" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_pointer_frame</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>default_grab_pointer_frame</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="764" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="764" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aab0bd65ec1a3229486e373eee5965a0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_pointer_cancel</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>default_grab_pointer_cancel</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="770" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="770" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4363722f2a5c5b613d8eb7f313549dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_touch_has_focus_resource</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_has_focus_resource</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
<para>Check if the touch has focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch to check for focused resources. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not this touch has focused resources </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="791" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="791" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a1d70791ddcb4629a7846232e26d4fa68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_send_down</definition>
        <argsstring>(struct weston_touch *touch, const struct timespec *time, int touch_id, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>weston_touch_send_down</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Send wl_touch.down events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch where the down events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>touch_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch_id value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_touch.down event with the passed parameters. The focused resources are the wl_touch resources of the client which currently has the surface with touch focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="815" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="815" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a8c3ece2669ade3ffaaace4f7eb1ab830" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_touch_down</definition>
        <argsstring>(struct weston_touch_grab *grab, const struct timespec *time, int touch_id, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>default_grab_touch_down</name>
        <param>
          <type>struct <ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="844" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="844" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae22c7a42c191767f1151fe6d01d56738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_send_up</definition>
        <argsstring>(struct weston_touch *touch, const struct timespec *time, int touch_id)</argsstring>
        <name>weston_touch_send_up</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <briefdescription>
<para>Send wl_touch.up events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch where the up events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>touch_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch_id value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_touch.up event with the passed parameters. The focused resources are the wl_touch resources of the client which currently has the surface with touch focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="862" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="862" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a1acfec4bd309363d7a3521d4f5264fa0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_touch_up</definition>
        <argsstring>(struct weston_touch_grab *grab, const struct timespec *time, int touch_id)</argsstring>
        <name>default_grab_touch_up</name>
        <param>
          <type>struct <ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="886" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="886" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a64f6ad901561897ff571a30c85bd20b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_send_motion</definition>
        <argsstring>(struct weston_touch *touch, const struct timespec *time, int touch_id, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>weston_touch_send_motion</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Send wl_touch.motion events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch where the motion events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>touch_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch_id value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_touch.motion event with the passed parameters. The focused resources are the wl_touch resources of the client which currently has the surface with touch focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="905" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="905" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a88be333e8b19f460bf59ca47261319a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_touch_motion</definition>
        <argsstring>(struct weston_touch_grab *grab, const struct timespec *time, int touch_id, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>default_grab_touch_motion</name>
        <param>
          <type>struct <ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="931" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="931" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4af7b368ba26d19f767eb08aedf7d5de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_send_frame</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_send_frame</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
<para>Send wl_touch.frame events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch where the frame events originates from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_touch.frame event. The focused resources are the wl_touch resources of the client which currently has the surface with touch focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="948" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="948" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a2a7a91bc785e7fca187262b8feb392be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_touch_frame</definition>
        <argsstring>(struct weston_touch_grab *grab)</argsstring>
        <name>default_grab_touch_frame</name>
        <param>
          <type>struct <ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="960" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="960" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a71182987ee31bdbf7758be4cc0e11fd4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_touch_cancel</definition>
        <argsstring>(struct weston_touch_grab *grab)</argsstring>
        <name>default_grab_touch_cancel</name>
        <param>
          <type>struct <ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="966" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="966" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab4324e1d9a1be4e0dee7f37b59dee41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_keyboard_has_focus_resource</definition>
        <argsstring>(struct weston_keyboard *keyboard)</argsstring>
        <name>weston_keyboard_has_focus_resource</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
<para>Check if the keyboard has focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyboard to check for focused resources. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not this keyboard has focused resources </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="984" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="984" bodyend="993"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a0c9aac811e3a283a2a6819403d86fd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_send_key</definition>
        <argsstring>(struct weston_keyboard *keyboard, const struct timespec *time, uint32_t key, enum wl_keyboard_key_state state)</argsstring>
        <name>weston_keyboard_send_key</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum wl_keyboard_key_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Send wl_keyboard.key events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyboard where the key events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state enum value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_keyboard.key event with the passed parameters. The focused resources are the wl_keyboard resources of the client which currently has the surface with keyboard focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1007" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1007" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1adc4a44b7e9292607bbe1876ebfdb3416" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_keyboard_key</definition>
        <argsstring>(struct weston_keyboard_grab *grab, const struct timespec *time, uint32_t key, uint32_t state)</argsstring>
        <name>default_grab_keyboard_key</name>
        <param>
          <type>struct <ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1032" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1032" bodyend="1037"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a743f6b5a33a0587944b3cf5180545cab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_modifiers_to_resource</definition>
        <argsstring>(struct weston_keyboard *keyboard, struct wl_resource *resource, uint32_t serial)</argsstring>
        <name>send_modifiers_to_resource</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1040" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1040" bodyend="1050"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a274f7c7fa91b5b2637a5695d957ab3dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_modifiers_to_client_in_list</definition>
        <argsstring>(struct wl_client *client, struct wl_list *list, uint32_t serial, struct weston_keyboard *keyboard)</argsstring>
        <name>send_modifiers_to_client_in_list</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1053" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1053" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aaa7257a914ff88914cc8e8eab010b7bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref> *</type>
        <definition>static struct weston_pointer_client* find_pointer_client_for_surface</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_surface *surface)</argsstring>
        <name>find_pointer_client_for_surface</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1069" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1069" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a94436365f4f1a38667aba53185928f31" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref> *</type>
        <definition>static struct weston_pointer_client* find_pointer_client_for_view</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_view *view)</argsstring>
        <name>find_pointer_client_for_view</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1085" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1085" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4f210316e65ae148d81804c02648ad4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct wl_resource *</type>
        <definition>static struct wl_resource* find_resource_for_surface</definition>
        <argsstring>(struct wl_list *list, struct weston_surface *surface)</argsstring>
        <name>find_resource_for_surface</name>
        <param>
          <type>struct wl_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1094" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1094" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab0649f15a4018a435162fe7d2bff1582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_send_modifiers</definition>
        <argsstring>(struct weston_keyboard *keyboard, uint32_t serial, uint32_t mods_depressed, uint32_t mods_latched, uint32_t mods_locked, uint32_t group)</argsstring>
        <name>weston_keyboard_send_modifiers</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_depressed</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_latched</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_locked</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Send wl_keyboard.modifiers events to focused resources and pointer focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyboard where the modifiers events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>The serial of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mods_depressed</parametername>
</parameternamelist>
<parameterdescription>
<para>The mods_depressed value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mods_latched</parametername>
</parameternamelist>
<parameterdescription>
<para>The mods_latched value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mods_locked</parametername>
</parameternamelist>
<parameterdescription>
<para>The mods_locked value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>The group value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_keyboard.modifiers event with the passed parameters. The focused resources are the wl_keyboard resources of the client which currently has the surface with keyboard focus. This also sends wl_keyboard.modifiers events to the wl_keyboard resources of the client having pointer focus (if different from the keyboard focus client). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1122" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1122" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a20dd882320955f26b611c05a776e9c3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_keyboard_modifiers</definition>
        <argsstring>(struct weston_keyboard_grab *grab, uint32_t serial, uint32_t mods_depressed, uint32_t mods_latched, uint32_t mods_locked, uint32_t group)</argsstring>
        <name>default_grab_keyboard_modifiers</name>
        <param>
          <type>struct <ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_depressed</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_latched</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_locked</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1155" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1155" bodyend="1162"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a0419acb297ce28fdc1d3ddda6ee724a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_grab_keyboard_cancel</definition>
        <argsstring>(struct weston_keyboard_grab *grab)</argsstring>
        <name>default_grab_keyboard_cancel</name>
        <param>
          <type>struct <ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1165" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1165" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a1e3b27c20c9932892ad2a29a47bbbb24" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_unmap_sprite</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>pointer_unmap_sprite</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1177" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1177" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac647342442ccc05afd1c1c1d5402c52b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_sprite_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>pointer_handle_sprite_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1193" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1193" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1af9f342d9ab953c757c6c5dd86159ab9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_reset_state</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_reset_state</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1203" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1203" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aeed361cdb743075816104915091212d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_handle_output_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>weston_pointer_handle_output_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Verify if the pointer is in a valid position and move it if it isn&apos;t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1741" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1741" bodyend="1780" declfile="/home/lzm/Wayland/weston/libweston/input.c" declline="1209" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1afee0bcc0fa4f06f429c8012bc2dcf0fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
        <definition>static struct weston_pointer* weston_pointer_create</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_pointer_create</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1212" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1212" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a159d30af69d470066e352de407440014" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_destroy</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_destroy</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1251" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1251" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a1a2f5a2d6428c3ed7e10464a53314e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_set_default_grab</definition>
        <argsstring>(struct weston_pointer *pointer, const struct weston_pointer_grab_interface *interface)</argsstring>
        <name>weston_pointer_set_default_grab</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1274" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1274" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a076fad97e8b005388847b2dd9b6339c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
        <definition>static struct weston_keyboard* weston_keyboard_create</definition>
        <argsstring>(void)</argsstring>
        <name>weston_keyboard_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1285" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1285" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae58676c71d357045aae4617416f1281b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_xkb_info_destroy</definition>
        <argsstring>(struct weston_xkb_info *xkb_info)</argsstring>
        <name>weston_xkb_info_destroy</name>
        <param>
          <type>struct <ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref> *</type>
          <declname>xkb_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3119" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3119" bodyend="3128" declfile="/home/lzm/Wayland/weston/libweston/input.c" declline="1308" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a5a59b68e63dd8818845a12c1a9a2995e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_keyboard_destroy</definition>
        <argsstring>(struct weston_keyboard *keyboard)</argsstring>
        <name>weston_keyboard_destroy</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1311" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1311" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a80b97eed061608712716f3b9673fb212" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_touch_reset_state</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_reset_state</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1338" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1338" bodyend="1341"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aaf46510eb5337f76a83c0cc07d331fdd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
        <definition>static struct weston_touch* weston_touch_create</definition>
        <argsstring>(void)</argsstring>
        <name>weston_touch_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1344" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1344" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a0e41c3d72f75b61d33af3babbc6ca4be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_touch_destroy</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_destroy</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1369" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1369" bodyend="1389"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a714754a5c067ab8a07822e4395ac4f17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_send_updated_caps</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>seat_send_updated_caps</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1392" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1392" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a3796f149723a5e49d6b176837a50d093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_clear_focus</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_clear_focus</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Clear the pointer focus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to clear focus for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This can be used to unset pointer focus and set the co-ordinates to the arbitrary values we use for the no focus case.</para>
<para>There&apos;s no requirement to use this function. For example, passing the results of a <ref refid="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" kindref="member">weston_compositor_pick_view()</ref> directly to <ref refid="input_8c_1a4f683d449ac87d60d5e0205d966917c0" kindref="member">weston_pointer_set_focus()</ref> will do the right thing when no view is found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1423" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1423" bodyend="1428"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4f683d449ac87d60d5e0205d966917c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_set_focus</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_view *view, wl_fixed_t sx, wl_fixed_t sy)</argsstring>
        <name>weston_pointer_set_focus</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1431" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1431" bodyend="1510"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a779557e0900a4e0868335c30c39edb64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_enter_to_resource_list</definition>
        <argsstring>(struct wl_list *list, struct weston_keyboard *keyboard, struct weston_surface *surface, uint32_t serial)</argsstring>
        <name>send_enter_to_resource_list</name>
        <param>
          <type>struct wl_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1513" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1513" bodyend="1526"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac5c8f2d331758909aabe3ab0a320110a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_set_focus</definition>
        <argsstring>(struct weston_keyboard *keyboard, struct weston_surface *surface)</argsstring>
        <name>weston_keyboard_set_focus</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1529" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1529" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac25cae7db3ca9ae3e35b98dbcb4fdd78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_start_grab</definition>
        <argsstring>(struct weston_keyboard *keyboard, struct weston_keyboard_grab *grab)</argsstring>
        <name>weston_keyboard_start_grab</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1591" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1591" bodyend="1596"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a8d1afdec8c569cf3fdbde5b1cd4b6513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_end_grab</definition>
        <argsstring>(struct weston_keyboard *keyboard)</argsstring>
        <name>weston_keyboard_end_grab</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1599" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1599" bodyend="1602"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a3abbb42b9ce77717241e818ddbeaec72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_keyboard_cancel_grab</definition>
        <argsstring>(struct weston_keyboard *keyboard)</argsstring>
        <name>weston_keyboard_cancel_grab</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1605" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1605" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a1ba15fe33ad21e716157d11ef4b95bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_start_grab</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_grab *grab)</argsstring>
        <name>weston_pointer_start_grab</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1611" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1611" bodyend="1617"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae5aa08a5ae051943a460449fac42b8a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_end_grab</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_end_grab</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1620" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1620" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a2f515f99d9e3c105bf4ad49c98820da0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_cancel_grab</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_cancel_grab</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1627" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1627" bodyend="1630"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a1b4054b056e841dca16cb8aaf85268c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_start_grab</definition>
        <argsstring>(struct weston_touch *touch, struct weston_touch_grab *grab)</argsstring>
        <name>weston_touch_start_grab</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1633" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1633" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1adc5de1147c1ce233bb09f113f8c7ba8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_end_grab</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_end_grab</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1640" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1640" bodyend="1643"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1acf3fb720c963c7189e0a458bd55b7855" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_touch_cancel_grab</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_cancel_grab</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1646" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1646" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a3706790f1bcbadb89e0b25ee926e48ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_clamp_for_output</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_output *output, wl_fixed_t *fx, wl_fixed_t *fy)</argsstring>
        <name>weston_pointer_clamp_for_output</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>fy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1652" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1652" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a9d7987594807f912e2d98f1ca1e4237b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_clamp</definition>
        <argsstring>(struct weston_pointer *pointer, wl_fixed_t *fx, wl_fixed_t *fy)</argsstring>
        <name>weston_pointer_clamp</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>fy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1674" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1674" bodyend="1701"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aeb8e8b9ad7255c9e9a5e217e876ec30c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_move_to</definition>
        <argsstring>(struct weston_pointer *pointer, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>weston_pointer_move_to</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1704" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1704" bodyend="1726"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab9f43265a9a88c5b2b3a1f23fdc6329b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_move</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_motion_event *event)</argsstring>
        <name>weston_pointer_move</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1729" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1729" bodyend="1736"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a035ebbdf329d3837736d585ae77eb2ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_motion</definition>
        <argsstring>(struct weston_seat *seat, const struct timespec *time, struct weston_pointer_motion_event *event)</argsstring>
        <name>notify_motion</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1783" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1783" bodyend="1792"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6028b85ecba47ddb42c33f70cb7ee42a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void run_modifier_bindings</definition>
        <argsstring>(struct weston_seat *seat, uint32_t old, uint32_t new)</argsstring>
        <name>run_modifier_bindings</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>old</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>new</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1795" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1795" bodyend="1828"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac4e9ced5099c0e1a1b776b7e245b8128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_motion_absolute</definition>
        <argsstring>(struct weston_seat *seat, const struct timespec *time, double x, double y)</argsstring>
        <name>notify_motion_absolute</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1831" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1831" bodyend="1847"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6c65d9c0b887242e084c96d160cbb721" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int peek_next_activate_serial</definition>
        <argsstring>(struct weston_compositor *c)</argsstring>
        <name>peek_next_activate_serial</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1850" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1850" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a2a90e2b5b12e5a15da58fc00ec626eab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void inc_activate_serial</definition>
        <argsstring>(struct weston_compositor *c)</argsstring>
        <name>inc_activate_serial</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1858" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1858" bodyend="1861"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a55b0b308f8ca8dfe27622277eafabacd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_activate</definition>
        <argsstring>(struct weston_view *view, struct weston_seat *seat, uint32_t flags)</argsstring>
        <name>weston_view_activate</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1864" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1864" bodyend="1876"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a341d3b175076e06fad2e432288b0bb7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_button</definition>
        <argsstring>(struct weston_seat *seat, const struct timespec *time, int32_t button, enum wl_pointer_button_state state)</argsstring>
        <name>notify_button</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>enum wl_pointer_button_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1879" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1879" bodyend="1907"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a46f42be4885b59c6a4395201f9acb9dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_axis</definition>
        <argsstring>(struct weston_seat *seat, const struct timespec *time, struct weston_pointer_axis_event *event)</argsstring>
        <name>notify_axis</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1910" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1910" bodyend="1923"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a740a3ad0ea196742af5da58be3a77572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_axis_source</definition>
        <argsstring>(struct weston_seat *seat, uint32_t source)</argsstring>
        <name>notify_axis_source</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1926" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1926" bodyend="1934"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a58338cc09053bfbc6635127cd9e1b3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_pointer_frame</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>notify_pointer_frame</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1937" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1937" bodyend="1945"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4be3758a0a5e28a2c83577c0ebd3fba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_keyboard_set_locks</definition>
        <argsstring>(struct weston_keyboard *keyboard, uint32_t mask, uint32_t value)</argsstring>
        <name>weston_keyboard_set_locks</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1948" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1948" bodyend="1993"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aae75251c5c98be717a0513bed342264c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_modifiers</definition>
        <argsstring>(struct weston_seat *seat, uint32_t serial)</argsstring>
        <name>notify_modifiers</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="1996" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1996" bodyend="2064"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a29b237fd00406206e0df60cce121c997" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void update_modifier_state</definition>
        <argsstring>(struct weston_seat *seat, uint32_t serial, uint32_t key, enum wl_keyboard_key_state state)</argsstring>
        <name>update_modifier_state</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum wl_keyboard_key_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2067" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2067" bodyend="2083"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1adee16da18d2931849cb3581a3555f40e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_send_keymap</definition>
        <argsstring>(struct weston_keyboard *kbd, struct wl_resource *resource)</argsstring>
        <name>weston_keyboard_send_keymap</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>kbd</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2086" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2086" bodyend="2113"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a77116eaa76efe5e3bbecebfcc4ac5f06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_modifiers</definition>
        <argsstring>(struct wl_resource *resource, uint32_t serial, struct weston_keyboard *keyboard)</argsstring>
        <name>send_modifiers</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2116" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2116" bodyend="2123"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a81d5d15190a33d2c4d7ebf25f4858f0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref> *</type>
        <definition>static struct weston_xkb_info * weston_xkb_info_create</definition>
        <argsstring>(struct xkb_keymap *keymap)</argsstring>
        <name>weston_xkb_info_create</name>
        <param>
          <type>struct xkb_keymap *</type>
          <declname>keymap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3145" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3145" bodyend="3203" declfile="/home/lzm/Wayland/weston/libweston/input.c" declline="2126" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a239417694c3d84500896626f49e84843" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void update_keymap</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>update_keymap</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2129" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2129" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aef2cf9bf595febf9a1e448096797f937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_key</definition>
        <argsstring>(struct weston_seat *seat, const struct timespec *time, uint32_t key, enum wl_keyboard_key_state state, enum weston_key_state_update update_state)</argsstring>
        <name>notify_key</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum wl_keyboard_key_state</type>
          <declname>state</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51" kindref="member">weston_key_state_update</ref></type>
          <declname>update_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2188" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2188" bodyend="2243"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4d4a279d6db370615901cc52452b545f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_pointer_focus</definition>
        <argsstring>(struct weston_seat *seat, struct weston_output *output, double x, double y)</argsstring>
        <name>notify_pointer_focus</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2246" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2246" bodyend="2259"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a03c35105941f4d1670eac2a1a09b413d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_device_saved_kbd_focus</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>destroy_device_saved_kbd_focus</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2262" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2262" bodyend="2270"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a3c6bf42d3db7275d5d21e7c471fb66b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_keyboard_focus_in</definition>
        <argsstring>(struct weston_seat *seat, struct wl_array *keys, enum weston_key_state_update update_state)</argsstring>
        <name>notify_keyboard_focus_in</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct wl_array *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51" kindref="member">weston_key_state_update</ref></type>
          <declname>update_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2273" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2273" bodyend="2294"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1af129a8798b5e9e4c417ea356d086761f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_keyboard_focus_out</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>notify_keyboard_focus_out</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2297" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2297" bodyend="2326"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a8f5d2ab8262d54999fab8f84a4a87c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_set_focus</definition>
        <argsstring>(struct weston_touch *touch, struct weston_view *view)</argsstring>
        <name>weston_touch_set_focus</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2329" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2329" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4a6228e98bdd815d94bf2e45d14c58e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void process_touch_normal</definition>
        <argsstring>(struct weston_touch_device *device, const struct timespec *time, int touch_id, double double_x, double double_y, int touch_type)</argsstring>
        <name>process_touch_normal</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>double_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>double_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2371" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2371" bodyend="2433"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1abfc8d5fe86bb6841822ae86496cad315" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref></type>
        <definition>static enum weston_touch_mode get_next_touch_mode</definition>
        <argsstring>(enum weston_touch_mode from)</argsstring>
        <name>get_next_touch_mode</name>
        <param>
          <type>enum <ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref></type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2371" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2436" bodyend="2451"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac5f7cdefa6f42ce7babca1289a1bab8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_compositor_update_touch_mode</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_update_touch_mode</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Global touch mode update. </para>
        </briefdescription>
        <detaileddescription>
<para>If no seat has a touch down and the compositor is in a PREP touch mode, set the compositor to the goal touch mode.</para>
<para>Calls calibrator if touch mode changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2461" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2461" bodyend="2481"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab0b95770a5e0b0ba87ee3a3646c64b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_set_touch_mode_normal</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_set_touch_mode_normal</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Start transition to normal touch event handling. </para>
        </briefdescription>
        <detaileddescription>
<para>The touch event mode changes when all touches on all touch devices have been lifted. If no touches are currently down, the transition is immediate.</para>
<para><simplesect kind="see"><para><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2491" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2491" bodyend="2506"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aca9dc3aa1b251cafd259642fbea8e119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_set_touch_mode_calib</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_set_touch_mode_calib</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Start transition to calibrator touch event handling. </para>
        </briefdescription>
        <detaileddescription>
<para>The touch event mode changes when all touches on all touch devices have been lifted. If no touches are currently down, the transition is immediate.</para>
<para><simplesect kind="see"><para><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2516" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2516" bodyend="2532"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a9664bca52bbe38ccd9ae24b1cba4a04a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_touch_normalized</definition>
        <argsstring>(struct weston_touch_device *device, const struct timespec *time, int touch_id, double x, double y, const struct weston_point2d_device_normalized *norm, int touch_type)</argsstring>
        <name>notify_touch_normalized</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__point2d__device__normalized" kindref="compound">weston_point2d_device_normalized</ref> *</type>
          <declname>norm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_type</declname>
        </param>
        <briefdescription>
<para>Feed in touch down, motion, and up events, calibratable device. </para>
        </briefdescription>
        <detaileddescription>
<para>It assumes always the correct cycle sequence until it gets here: touch_down → touch_update → ... → touch_update → touch_end. The driver is responsible for sending along such order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The physical device that generated the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The event timestamp. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>touch_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID for the touch point of this event (multi-touch). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate in compositor global space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate in compositor global space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norm</parametername>
</parameternamelist>
<parameterdescription>
<para>Normalized device X, Y coordinates in calibration space, or NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>touch_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Either WL_TOUCH_DOWN, WL_TOUCH_UP, or WL_TOUCH_MOTION.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Coordinates double_x and double_y are used for normal operation.</para>
<para>Coordinates norm are only used for touch device calibration. If and only if the <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> does not support calibrating, norm must be NULL.</para>
<para>The calibration space is the normalized coordinate space [0.0, 1.0]×[0.0, 1.0] of the <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref>. This is assumed to map to the similar normalized coordinate space of the associated <ref refid="structweston__output" kindref="compound">weston_output</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2559" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2559" bodyend="2613"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a446dcf07765cfcd5a4202532caa33a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_touch_frame</definition>
        <argsstring>(struct weston_touch_device *device)</argsstring>
        <name>notify_touch_frame</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2616" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2616" bodyend="2633"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a66bfa64e68570bd446d75208fa8f31b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_touch_cancel</definition>
        <argsstring>(struct weston_touch_device *device)</argsstring>
        <name>notify_touch_cancel</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2636" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2636" bodyend="2653"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1add032e223a5663d5d7ba5b80c90832bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pointer_cursor_surface_get_label</definition>
        <argsstring>(struct weston_surface *surface, char *buf, size_t len)</argsstring>
        <name>pointer_cursor_surface_get_label</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2656" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2656" bodyend="2660"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a9a3e7fe1e7a58012e6a7e8b7c6a58fb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_cursor_surface_committed</definition>
        <argsstring>(struct weston_surface *es, int32_t dx, int32_t dy)</argsstring>
        <name>pointer_cursor_surface_committed</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>es</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2663" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2663" bodyend="2692"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a76d8cafc1477bd537d98292142d173d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_set_cursor</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t serial, struct wl_resource *surface_resource, int32_t x, int32_t y)</argsstring>
        <name>pointer_set_cursor</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2695" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2695" bodyend="2756"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4a78f49db731474e7045a6bad6b8ddc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_release</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>pointer_release</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2759" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2759" bodyend="2762"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa976a7fdd4346cd10a550d4604bae82f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_get_pointer</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id)</argsstring>
        <name>seat_get_pointer</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2770" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2770" bodyend="2826"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a52b68929490586f62b695434af8c3ae4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_keyboard_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_keyboard_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2829" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2829" bodyend="2839"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6744b635b9e89b59c40a45f48616a7d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void keyboard_release</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>keyboard_release</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2842" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2842" bodyend="2845"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac2987a4288e5faa3f6ab7352e75a9e89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_get_keyboard</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id)</argsstring>
        <name>seat_get_keyboard</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2852" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2852" bodyend="2919"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae3ec58fe87b9ea35ef484621e17eb9df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_touch_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_touch_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2922" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2922" bodyend="2932"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae422683c11233661a51a76541993ed6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_release</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>touch_release</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2935" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2935" bodyend="2938"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a666e631cb2e4b6afece1ba81c922263f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_get_touch</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id)</argsstring>
        <name>seat_get_touch</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2945" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2945" bodyend="2984"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab66919f56e16c052e5976f807944d9c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_release</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>seat_release</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="2987" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2987" bodyend="2990"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa85815b4f91e45d70b684911439a9824" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_seat</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_seat</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3000" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3000" bodyend="3022"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ad47886ac59ecd19e06f0ecad52456582" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void relative_pointer_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>relative_pointer_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3025" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3025" bodyend="3029"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae5f963d183090a7e03d01741e6c51a34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void relative_pointer_manager_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>relative_pointer_manager_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3036" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3036" bodyend="3040"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a240768008f0b478a7fa2e7bc9ab5e432" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void relative_pointer_manager_get_relative_pointer</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, struct wl_resource *pointer_resource)</argsstring>
        <name>relative_pointer_manager_get_relative_pointer</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>pointer_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3043" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3043" bodyend="3071"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1af8d72305401b3576fd7b105419a55b55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_relative_pointer_manager</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_relative_pointer_manager</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3079" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3079" bodyend="3092"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a9f979dcc0b012fa585f4393d774fe053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_set_xkb_rule_names</definition>
        <argsstring>(struct weston_compositor *ec, struct xkb_rule_names *names)</argsstring>
        <name>weston_compositor_set_xkb_rule_names</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>struct xkb_rule_names *</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3095" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3095" bodyend="3116"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a624242cb87819b26602d5b14cb0392ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_xkb_destroy</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_xkb_destroy</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3131" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3131" bodyend="3142"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1add2436b2aa237b41ec428f9f53f5350d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int weston_compositor_build_global_keymap</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_build_global_keymap</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3206" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3206" bodyend="3232"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a2fdbc776f3b6ac9b03828f05d9b01ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_update_keymap</definition>
        <argsstring>(struct weston_seat *seat, struct xkb_keymap *keymap)</argsstring>
        <name>weston_seat_update_keymap</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct xkb_keymap *</type>
          <declname>keymap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3235" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3235" bodyend="3247"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6ee7365931e5b81e995c640d1bf158e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_seat_init_keyboard</definition>
        <argsstring>(struct weston_seat *seat, struct xkb_keymap *keymap)</argsstring>
        <name>weston_seat_init_keyboard</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct xkb_keymap *</type>
          <declname>keymap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3250" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3250" bodyend="3300"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a945ada43625733a73cf3e94928a11a1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_keyboard_reset_state</definition>
        <argsstring>(struct weston_keyboard *keyboard)</argsstring>
        <name>weston_keyboard_reset_state</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3303" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3303" bodyend="3319"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1adc5a8c2cbe300f6f0be4c17241c1f779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_release_keyboard</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_release_keyboard</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3322" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3322" bodyend="3332"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a0f241f297507f22da6465509d03c9f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_init_pointer</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_init_pointer</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3335" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3335" bodyend="3355"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a9be3e32a8ef28ef2011c1b084494a18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_release_pointer</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_release_pointer</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3358" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3358" bodyend="3378"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a04b3f51a81712517ce6ed5a71adf6c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_init_touch</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_init_touch</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3381" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3381" bodyend="3401"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a5d6a767a8449fe1bd7ebe9aeaf199ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_release_touch</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_release_touch</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3404" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3404" bodyend="3413"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a8e69f6e66263be7757aadcc5f1528f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_init</definition>
        <argsstring>(struct weston_seat *seat, struct weston_compositor *ec, const char *seat_name)</argsstring>
        <name>weston_seat_init</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>seat_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3416" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3416" bodyend="3441"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4f4636b5443315bd1415369ed427d14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_release</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_release</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3444" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3444" bodyend="3476"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6986418ab4ad62064fab60802cedf99d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
        <definition>struct weston_keyboard* weston_seat_get_keyboard</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_get_keyboard</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
<para>Get a seat&apos;s keyboard pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The seat&apos;s keyboard pointer, or NULL if no keyboard is present</para>
</simplesect>
The keyboard pointer for a seat isn&apos;t freed when all keyboards are removed, so it should only be used when the seat&apos;s keyboard_device_count is greater than zero. This function does that test and only returns a pointer when a keyboard is present. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3489" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3489" bodyend="3498"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a19c472e9c28557a525fac4d8b783edab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
        <definition>struct weston_pointer* weston_seat_get_pointer</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_get_pointer</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
<para>Get a seat&apos;s pointer pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The seat&apos;s pointer pointer, or NULL if no pointer device is present</para>
</simplesect>
The pointer pointer for a seat isn&apos;t freed when all mice are removed, so it should only be used when the seat&apos;s pointer_device_count is greater than zero. This function does that test and only returns a pointer when a pointing device is present. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3511" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3511" bodyend="3520"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4cd05a686ad743270dd715e4041bf4e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3" kindref="member">pointer_constraint_type</ref></type>
        <definition>static enum pointer_constraint_type pointer_constraint_get_type</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>pointer_constraint_get_type</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3511" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3526" bodyend="3540"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a8437d8a6beab807c4cb5d8b8765c7e68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraint_notify_activated</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>pointer_constraint_notify_activated</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3543" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3543" bodyend="3555"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aec9a947870c53a2feadc7996ad547a58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraint_notify_deactivated</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>pointer_constraint_notify_deactivated</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3558" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3558" bodyend="3570"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6b0effb9fcaa26160b9b2db2ee2913ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
        <definition>static struct weston_pointer_constraint* get_pointer_constraint_for_pointer</definition>
        <argsstring>(struct weston_surface *surface, struct weston_pointer *pointer)</argsstring>
        <name>get_pointer_constraint_for_pointer</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3573" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3573" bodyend="3584"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4d586b87353ba3d18989739666a1f7dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
        <definition>struct weston_touch* weston_seat_get_touch</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_get_touch</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
<para>Get a seat&apos;s touch pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The seat&apos;s touch pointer, or NULL if no touch device is present</para>
</simplesect>
The touch pointer for a seat isn&apos;t freed when all touch devices are removed, so it should only be used when the seat&apos;s touch_device_count is greater than zero. This function does that test and only returns a pointer when a touch device is present. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3597" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3597" bodyend="3606"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a46e90691191fd2cdc9fab021d6238829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_set_keyboard_focus</definition>
        <argsstring>(struct weston_seat *seat, struct weston_surface *surface)</argsstring>
        <name>weston_seat_set_keyboard_focus</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>Sets the keyboard focus to the given surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>the surface to focus on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3614" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3614" bodyend="3633"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1abbe71a9c3a531a5dcc00b0593f90562c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void enable_pointer_constraint</definition>
        <argsstring>(struct weston_pointer_constraint *constraint, struct weston_view *view)</argsstring>
        <name>enable_pointer_constraint</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3636" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3636" bodyend="3645"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6c2a0bb09e2fcd7591902845d9564cae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_pointer_constraint_enabled</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>is_pointer_constraint_enabled</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3648" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3648" bodyend="3651"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6fa9f153c6ac7300527740b0eaca1340" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_constraint_disable</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>weston_pointer_constraint_disable</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3654" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3654" bodyend="3659"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab181ee2bacdbc99648f9b7aa14be7437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_constraint_destroy</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>weston_pointer_constraint_destroy</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3662" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3662" bodyend="3676"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6a2931d2a078a5ca98a2cc6469e397e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void disable_pointer_constraint</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>disable_pointer_constraint</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3679" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3679" bodyend="3689"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aeade43e6372bce448cb344c58099ec4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_within_constraint_region</definition>
        <argsstring>(struct weston_pointer_constraint *constraint, wl_fixed_t sx, wl_fixed_t sy)</argsstring>
        <name>is_within_constraint_region</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3692" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3692" bodyend="3710"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a82e3d73d65540b5e1de0484938c63e95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void maybe_enable_pointer_constraint</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>maybe_enable_pointer_constraint</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3713" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3713" bodyend="3751"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a15c0c29937e579e0227df6db20c24457" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_grab_pointer_focus</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>locked_pointer_grab_pointer_focus</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3754" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3754" bodyend="3756"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab01999adefdff40e6385f45a426a44ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_grab_pointer_motion</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, struct weston_pointer_motion_event *event)</argsstring>
        <name>locked_pointer_grab_pointer_motion</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3759" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3759" bodyend="3764"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac6d7a969a927ca30769749d119764fa8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_grab_pointer_button</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, uint32_t button, uint32_t state_w)</argsstring>
        <name>locked_pointer_grab_pointer_button</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3767" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3767" bodyend="3773"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1acee67c7beada1e3b933022aefe4711e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_grab_pointer_axis</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, struct weston_pointer_axis_event *event)</argsstring>
        <name>locked_pointer_grab_pointer_axis</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3776" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3776" bodyend="3781"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4a8bdb820161ed591087c98a821f1503" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_grab_pointer_axis_source</definition>
        <argsstring>(struct weston_pointer_grab *grab, uint32_t source)</argsstring>
        <name>locked_pointer_grab_pointer_axis_source</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3784" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3784" bodyend="3788"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a70ad2215203cfe677a41365daef7a48c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_grab_pointer_frame</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>locked_pointer_grab_pointer_frame</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3791" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3791" bodyend="3794"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ad061019bd860c9f8e1a8dd66f21d08bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_grab_pointer_cancel</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>locked_pointer_grab_pointer_cancel</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3797" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3797" bodyend="3803"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a22bc7866b0795c7e41ca63c1192e5af1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraint_constrain_resource_destroyed</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>pointer_constraint_constrain_resource_destroyed</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3817" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3817" bodyend="3826"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a7c02acd935340653669d8117b035c8db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraint_surface_activate</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>pointer_constraint_surface_activate</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3829" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3829" bodyend="3852"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a596c0eda6a481dd2692661405620dc84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraint_pointer_destroyed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>pointer_constraint_pointer_destroyed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3855" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3855" bodyend="3862"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa97383840d83390c301e0e19a47190a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraint_surface_destroyed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>pointer_constraint_surface_destroyed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3865" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3865" bodyend="3872"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a06415cd2732049b74d66f919f10756d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraint_surface_committed</definition>
        <argsstring>(struct wl_listener *listener, void *data)</argsstring>
        <name>pointer_constraint_surface_committed</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3875" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3875" bodyend="3901"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aab54f16282a7ad71c44044f4cbeb71d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
        <definition>static struct weston_pointer_constraint* weston_pointer_constraint_create</definition>
        <argsstring>(struct weston_surface *surface, struct weston_pointer *pointer, struct weston_region *region, enum zwp_pointer_constraints_v1_lifetime lifetime, struct wl_resource *cr, const struct weston_pointer_grab_interface *grab_interface)</argsstring>
        <name>weston_pointer_constraint_create</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__region" kindref="compound">weston_region</ref> *</type>
          <declname>region</declname>
        </param>
        <param>
          <type>enum zwp_pointer_constraints_v1_lifetime</type>
          <declname>lifetime</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref> *</type>
          <declname>grab_interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3904" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3904" bodyend="3952"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a0392e07832c9be3646efdefe84294d41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_pointer_constraint</definition>
        <argsstring>(struct wl_resource *pointer_constraints_resource, uint32_t id, struct weston_surface *surface, struct weston_pointer *pointer, struct weston_region *region, enum zwp_pointer_constraints_v1_lifetime lifetime, const struct wl_interface *interface, const void *implementation, const struct weston_pointer_grab_interface *grab_interface)</argsstring>
        <name>init_pointer_constraint</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>pointer_constraints_resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__region" kindref="compound">weston_region</ref> *</type>
          <declname>region</declname>
        </param>
        <param>
          <type>enum zwp_pointer_constraints_v1_lifetime</type>
          <declname>lifetime</declname>
        </param>
        <param>
          <type>const struct wl_interface *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>implementation</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref> *</type>
          <declname>grab_interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="3955" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3955" bodyend="4002"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a753fe7cd4982edd5e4ef85c1ffda0baa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraints_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>pointer_constraints_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4005" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4005" bodyend="4009"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a567e864026d94c20ea80dda6f23ed354" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>locked_pointer_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4012" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4012" bodyend="4030"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae47b8c096a93b8837a86ed55205c256f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_set_cursor_position_hint</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, wl_fixed_t surface_x, wl_fixed_t surface_y)</argsstring>
        <name>locked_pointer_set_cursor_position_hint</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>surface_x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>surface_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4033" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4033" bodyend="4051"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a2535946d2001d4462daf31f86a0a821e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void locked_pointer_set_region</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *region_resource)</argsstring>
        <name>locked_pointer_set_region</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>region_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4054" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4054" bodyend="4074"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1afc2105a7e101b552ab478909fd475df5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraints_lock_pointer</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, struct wl_resource *surface_resource, struct wl_resource *pointer_resource, struct wl_resource *region_resource, uint32_t lifetime)</argsstring>
        <name>pointer_constraints_lock_pointer</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>pointer_resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>region_resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4084" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4084" bodyend="4102"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4d106419b72ae403a51249878d7c1e69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_grab_pointer_focus</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>confined_pointer_grab_pointer_focus</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4105" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4105" bodyend="4107"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a1a2fe693960b18850f0182972a6a38db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double vec2d_cross_product</definition>
        <argsstring>(struct vec2d a, struct vec2d b)</argsstring>
        <name>vec2d_cross_product</name>
        <param>
          <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4110" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4110" bodyend="4113"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6ee08342b14c631b7942be5d9d37feb5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
        <definition>static struct vec2d vec2d_add</definition>
        <argsstring>(struct vec2d a, struct vec2d b)</argsstring>
        <name>vec2d_add</name>
        <param>
          <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4110" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4116" bodyend="4122"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a42b3fc9cb436a3eab8984cb4bf519a27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
        <definition>static struct vec2d vec2d_subtract</definition>
        <argsstring>(struct vec2d a, struct vec2d b)</argsstring>
        <name>vec2d_subtract</name>
        <param>
          <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4110" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4125" bodyend="4131"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a567e4bd193502c49e84e5d7a372345cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
        <definition>static struct vec2d vec2d_multiply_constant</definition>
        <argsstring>(double c, struct vec2d a)</argsstring>
        <name>vec2d_multiply_constant</name>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <param>
          <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4110" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4134" bodyend="4140"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a4870a5ee84d700f027f962f93a969641" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lines_intersect</definition>
        <argsstring>(struct line *line1, struct line *line2, struct vec2d *intersection)</argsstring>
        <name>lines_intersect</name>
        <param>
          <type>struct <ref refid="structline" kindref="compound">line</ref> *</type>
          <declname>line1</declname>
        </param>
        <param>
          <type>struct <ref refid="structline" kindref="compound">line</ref> *</type>
          <declname>line2</declname>
        </param>
        <param>
          <type>struct <ref refid="structvec2d" kindref="compound">vec2d</ref> *</type>
          <declname>intersection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4143" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4143" bodyend="4190"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structborder" kindref="compound">border</ref> *</type>
        <definition>static struct border* add_border</definition>
        <argsstring>(struct wl_array *array, double x1, double y1, double x2, double y2, enum motion_direction blocking_dir)</argsstring>
        <name>add_border</name>
        <param>
          <type>struct wl_array *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>enum <ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748" kindref="member">motion_direction</ref></type>
          <declname>blocking_dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4193" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4193" bodyend="4215"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a7b5be6f44ab0d807270a0ab9b9397c10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int compare_lines_x</definition>
        <argsstring>(const void *a, const void *b)</argsstring>
        <name>compare_lines_x</name>
        <param>
          <type>const void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4218" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4218" bodyend="4228"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1af8885180db579d88e9cc84b07f8af207" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_non_overlapping_edges</definition>
        <argsstring>(pixman_box32_t *boxes, int band_above_start, int band_below_start, int band_below_end, struct wl_array *borders)</argsstring>
        <name>add_non_overlapping_edges</name>
        <param>
          <type>pixman_box32_t *</type>
          <declname>boxes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>band_above_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>band_below_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>band_below_end</declname>
        </param>
        <param>
          <type>struct wl_array *</type>
          <declname>borders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4231" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4231" bodyend="4333"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a12d8db6ae1d429c1e979755303aa304f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_band_bottom_edges</definition>
        <argsstring>(pixman_box32_t *boxes, int band_start, int band_end, struct wl_array *borders)</argsstring>
        <name>add_band_bottom_edges</name>
        <param>
          <type>pixman_box32_t *</type>
          <declname>boxes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>band_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>band_end</declname>
        </param>
        <param>
          <type>struct wl_array *</type>
          <declname>borders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4336" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4336" bodyend="4349"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a9f4ee151d4881332668780c10d4d423a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void region_to_outline</definition>
        <argsstring>(pixman_region32_t *region, struct wl_array *borders)</argsstring>
        <name>region_to_outline</name>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <param>
          <type>struct wl_array *</type>
          <declname>borders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4352" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4352" bodyend="4465"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ac97092b01b0f7cdfd5e4ae378397050c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_border_horizontal</definition>
        <argsstring>(struct border *border)</argsstring>
        <name>is_border_horizontal</name>
        <param>
          <type>struct <ref refid="structborder" kindref="compound">border</ref> *</type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4468" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4468" bodyend="4471"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a99c82ec3ef5996bded56f03c675b0524" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_border_blocking_directions</definition>
        <argsstring>(struct border *border, uint32_t directions)</argsstring>
        <name>is_border_blocking_directions</name>
        <param>
          <type>struct <ref refid="structborder" kindref="compound">border</ref> *</type>
          <declname>border</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>directions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4474" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4474" bodyend="4489"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1af6b9f2bca9a1b3d251fd45251850d95f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structborder" kindref="compound">border</ref> *</type>
        <definition>static struct border* get_closest_border</definition>
        <argsstring>(struct wl_array *borders, struct line *motion, uint32_t directions)</argsstring>
        <name>get_closest_border</name>
        <param>
          <type>struct wl_array *</type>
          <declname>borders</declname>
        </param>
        <param>
          <type>struct <ref refid="structline" kindref="compound">line</ref> *</type>
          <declname>motion</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>directions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4492" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4492" bodyend="4519"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a161cd4f31bd65b68a0240d940fe3c3ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void clamp_to_border</definition>
        <argsstring>(struct border *border, struct line *motion, uint32_t *motion_dir)</argsstring>
        <name>clamp_to_border</name>
        <param>
          <type>struct <ref refid="structborder" kindref="compound">border</ref> *</type>
          <declname>border</declname>
        </param>
        <param>
          <type>struct <ref refid="structline" kindref="compound">line</ref> *</type>
          <declname>motion</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>motion_dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4522" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4522" bodyend="4548"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6c986a0294294c400ee2b96e84b65b81" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t get_motion_directions</definition>
        <argsstring>(struct line *motion)</argsstring>
        <name>get_motion_directions</name>
        <param>
          <type>struct <ref refid="structline" kindref="compound">line</ref> *</type>
          <declname>motion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4551" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4551" bodyend="4565"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a8ede88d9fa3d1d7c096e2dd80ca32dfd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void weston_pointer_clamp_event_to_region</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_motion_event *event, pixman_region32_t *region, wl_fixed_t *clamped_x, wl_fixed_t *clamped_y)</argsstring>
        <name>weston_pointer_clamp_event_to_region</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>clamped_x</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>clamped_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4568" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4568" bodyend="4627"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ab3f8f6e84fc1082fb63c38b1f4fc0ce0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double point_to_border_distance_2</definition>
        <argsstring>(struct border *border, double x, double y)</argsstring>
        <name>point_to_border_distance_2</name>
        <param>
          <type>struct <ref refid="structborder" kindref="compound">border</ref> *</type>
          <declname>border</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4630" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4630" bodyend="4657"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a55868b4b4157c53256512e6670ea3d76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void warp_to_behind_border</definition>
        <argsstring>(struct border *border, wl_fixed_t *sx, wl_fixed_t *sy)</argsstring>
        <name>warp_to_behind_border</name>
        <param>
          <type>struct <ref refid="structborder" kindref="compound">border</ref> *</type>
          <declname>border</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4660" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4660" bodyend="4686"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a944cbb72aaa491589260a70d821e42d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_grab_pointer_motion</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, struct weston_pointer_motion_event *event)</argsstring>
        <name>confined_pointer_grab_pointer_motion</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4741" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4741" bodyend="4777"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a2a0c226424eeca51a3ba373e3793abe0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_grab_pointer_button</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, uint32_t button, uint32_t state_w)</argsstring>
        <name>confined_pointer_grab_pointer_button</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4780" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4780" bodyend="4786"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa0cc365a324516686e819d65c6e21449" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_grab_pointer_axis</definition>
        <argsstring>(struct weston_pointer_grab *grab, const struct timespec *time, struct weston_pointer_axis_event *event)</argsstring>
        <name>confined_pointer_grab_pointer_axis</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4789" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4789" bodyend="4794"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ad2186cb26c1168cbfcd84d6ce97f9cb5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_grab_pointer_axis_source</definition>
        <argsstring>(struct weston_pointer_grab *grab, uint32_t source)</argsstring>
        <name>confined_pointer_grab_pointer_axis_source</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4797" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4797" bodyend="4801"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a91fbe5870a36f825d819a2464621fd9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_grab_pointer_frame</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>confined_pointer_grab_pointer_frame</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4804" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4804" bodyend="4807"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1abd57826773712ca20aee6731f0208b7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_grab_pointer_cancel</definition>
        <argsstring>(struct weston_pointer_grab *grab)</argsstring>
        <name>confined_pointer_grab_pointer_cancel</name>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4810" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4810" bodyend="4816"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ad4d340a99f12e5378e5c523687e2a460" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>confined_pointer_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4830" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4830" bodyend="4834"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a793c0ecdfa8221e1e7cab56a6d0135bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void confined_pointer_set_region</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *region_resource)</argsstring>
        <name>confined_pointer_set_region</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>region_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4837" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4837" bodyend="4857"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa9b3b4f52355f2c28b708df4f4501642" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_constraints_confine_pointer</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, struct wl_resource *surface_resource, struct wl_resource *pointer_resource, struct wl_resource *region_resource, uint32_t lifetime)</argsstring>
        <name>pointer_constraints_confine_pointer</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>pointer_resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>region_resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4865" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4865" bodyend="4883"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a84fe1e074ad6e11972949e82850c890c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_pointer_constraints</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_pointer_constraints</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4892" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4892" bodyend="4903"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae64352d414f52517f87c7926691c35bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void input_timestamps_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>input_timestamps_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4906" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4906" bodyend="4910"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a8931804fccd7026f1972048b181017ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void input_timestamps_manager_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>input_timestamps_manager_destroy</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4918" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4918" bodyend="4922"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a6099c9369757ce67780e52f832702676" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void input_timestamps_manager_get_keyboard_timestamps</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, struct wl_resource *keyboard_resource)</argsstring>
        <name>input_timestamps_manager_get_keyboard_timestamps</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>keyboard_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4925" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4925" bodyend="4953"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1ae63d1f9191ba53f7c496724e13311efc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void input_timestamps_manager_get_pointer_timestamps</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, struct wl_resource *pointer_resource)</argsstring>
        <name>input_timestamps_manager_get_pointer_timestamps</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>pointer_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4956" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4956" bodyend="4984"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a02a59b9dc18f1a3581115c28626c04d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void input_timestamps_manager_get_touch_timestamps</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, struct wl_resource *touch_resource)</argsstring>
        <name>input_timestamps_manager_get_touch_timestamps</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>touch_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="4987" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="4987" bodyend="5014"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1aa169f2f56dc40230e8f9e749b03e3ae3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_input_timestamps_manager</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_input_timestamps_manager</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="5025" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="5025" bodyend="5041"/>
      </memberdef>
      <memberdef kind="function" id="input_8c_1a7d55cac3425ac3f6641a05922142266e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_input_init</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_input_init</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/input.c" line="5044" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="5044" bodyend="5062"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2013<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2017-2018<sp/>Collabora,<sp/>Ltd.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2017-2018<sp/>General<sp/>Electric<sp/>Company</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;values.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/helpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/os-compatibility.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/timespec-util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="libweston_8h" kindref="compound">libweston/libweston.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="backend_8h" kindref="compound">backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libweston-internal_8h" kindref="compound">libweston-internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;relative-pointer-unstable-v1-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pointer-constraints-unstable-v1-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;input-timestamps-unstable-v1-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3" kindref="member">pointer_constraint_type</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a4e795eaad3d7c6a15a7497a1ab8ccbb8" kindref="member">POINTER_CONSTRAINT_TYPE_LOCK</ref>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a5bdf810a5c747165edb552cfcc035ef6" kindref="member">POINTER_CONSTRAINT_TYPE_CONFINE</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748" kindref="member">motion_direction</ref><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" kindref="member">MOTION_DIRECTION_POSITIVE_X</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748ace65161e5ee8e0af79a41e7877d41ee8" kindref="member">MOTION_DIRECTION_NEGATIVE_X</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748abc10445b528675ce0651b4ec508eb86a" kindref="member">MOTION_DIRECTION_NEGATIVE_Y</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structvec2d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>,<sp/><ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structline" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structline" kindref="compound">line</ref><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/><ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/><ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structborder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structline" kindref="compound">line</ref><sp/><ref refid="structline" kindref="compound">line</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748" kindref="member">motion_direction</ref><sp/><ref refid="structborder_1a744baba1e75c3be65f0f25ddf1b82f84" kindref="member">blocking_dir</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="input_8c_1ab6e3b03423f5c77343adb86d3d824c13" kindref="member">maybe_warp_confined_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="input_8c_1af0fea9467f1694ae88a2fbc5dd999480" kindref="member">empty_region</ref>(pixman_region32_t<sp/>*region)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(region);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(region);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="input_8c_1a1416f09293d589dc99655700e0a72b53" kindref="member">region_init_infinite</ref>(pixman_region32_t<sp/>*region)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init_rect(region,<sp/>INT32_MIN,<sp/>INT32_MIN,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT32_MAX,<sp/>UINT32_MAX);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="input_8c_1aabf6affda3185123d25e61747abfa482" kindref="member">send_timestamp</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_to_proto(time,<sp/>&amp;tv_sec_hi,<sp/>&amp;tv_sec_lo,<sp/>&amp;tv_nsec);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zwp_input_timestamps_v1_send_timestamp(resource,<sp/>tv_sec_hi,<sp/>tv_sec_lo,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv_nsec);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*input_resource,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*list,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_user_data(resource)<sp/>==<sp/>input_resource)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aabf6affda3185123d25e61747abfa482" kindref="member">send_timestamp</ref>(resource,<sp/>time);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="input_8c_1ababbba9b54cc982f49cb6f150b0a7e4c" kindref="member">remove_input_resource_from_timestamps</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*input_resource,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*list)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_user_data(resource)<sp/>==<sp/>input_resource)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="input_8c_1ab636d1e6d0bc7f2204c8f1f80cb47e07" kindref="member">weston_touch_create_touch_device</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__touch__device_1a10891cbc85a29105be61bcf69ab33ad6" kindref="member">backend_data</ref>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device__ops" kindref="compound">weston_touch_device_ops</ref><sp/>*<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>-&gt;<ref refid="structweston__touch__device__ops_1a7267417007aca994c4b5a48b6ef479ff" kindref="member">get_output</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>-&gt;<ref refid="structweston__touch__device__ops_1a235062be7e3463069f33451c40019612" kindref="member">get_calibration_head_name</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>-&gt;<ref refid="structweston__touch__device__ops_1a1a220c0b93c081ff0eed2ac4eb3b7750" kindref="member">get_calibration</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>-&gt;<ref refid="structweston__touch__device__ops_1ad8e27e65897d172dda6b8efd87ff379d" kindref="member">set_calibration</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*device);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;device-&gt;<ref refid="structweston__touch__device_1a42bd571f4039a1385649ad32a1df2e5d" kindref="member">destroy_signal</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref><sp/>=<sp/>strdup(<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(device);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;<ref refid="structweston__touch__device_1a10891cbc85a29105be61bcf69ab33ad6" kindref="member">backend_data</ref><sp/>=<sp/><ref refid="structweston__touch__device_1a10891cbc85a29105be61bcf69ab33ad6" kindref="member">backend_data</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref><sp/>=<sp/><ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref><sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;device_list.prev,<sp/>&amp;device-&gt;<ref refid="structweston__touch__device_1a6d5ffdca54c5aeaa8db25a304db53312" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>device;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="input_8c_1aa6762c2cc7031bbfe61074d8b0d90191" kindref="member">weston_touch_device_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;device-&gt;<ref refid="structweston__touch__device_1a6d5ffdca54c5aeaa8db25a304db53312" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;device-&gt;<ref refid="structweston__touch__device_1a42bd571f4039a1385649ad32a1df2e5d" kindref="member">destroy_signal</ref>,<sp/>device);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(device-&gt;<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(device);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="input_8c_1a93ffbebf74d038e66d41b7189d304e61" kindref="member">weston_touch_device_can_calibrate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!!device-&gt;<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="input_8c_1aeb999acbb110377ba4a1818522c8bbf6" kindref="member">weston_touch_device_get_mode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>-&gt;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="input_8c_1a4c43fffbd16768544b7cccc00c0ea4fa" kindref="member">weston_pointer_client_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_client<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*pointer_client);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer_client)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_client-&gt;<ref refid="structweston__pointer__client_1ad89fcb7cb485b563de0cca91054a7650" kindref="member">client</ref><sp/>=<sp/><ref refid="structweston__pointer__client_1ad89fcb7cb485b563de0cca91054a7650" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1a582de2b5e172f8c11188af511c8008ed" kindref="member">pointer_resources</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1ad68bdb2aa68277372a13a2d6e9a54ec7" kindref="member">relative_pointer_resources</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer_client;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="input_8c_1a9321bb26eeb6ae9e20a57343aba5579f" kindref="member">weston_pointer_client_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1a582de2b5e172f8c11188af511c8008ed" kindref="member">pointer_resources</ref>)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1ad68bdb2aa68277372a13a2d6e9a54ec7" kindref="member">relative_pointer_resources</ref>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1a582de2b5e172f8c11188af511c8008ed" kindref="member">pointer_resources</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1ad68bdb2aa68277372a13a2d6e9a54ec7" kindref="member">relative_pointer_resources</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pointer_client);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="input_8c_1a67dcea554780a0683c8eb66c2dab89db" kindref="member">weston_pointer_client_is_empty</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1a582de2b5e172f8c11188af511c8008ed" kindref="member">pointer_resources</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_empty(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1ad68bdb2aa68277372a13a2d6e9a54ec7" kindref="member">relative_pointer_resources</ref>));</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><ref refid="input_8c_1aee3835bbcd4ba01823d27c1644e347e2" kindref="member">weston_pointer_get_pointer_client</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(pointer_client,<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;pointer_clients,<sp/><ref refid="structweston__pointer__client_1acf9bd559c9322da1f96425e74ed166e8" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointer_client-&gt;<ref refid="structweston__pointer__client_1ad89fcb7cb485b563de0cca91054a7650" kindref="member">client</ref><sp/>==<sp/><ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer_client;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><ref refid="input_8c_1a150a22aa9fe883468ca6635683f8f735" kindref="member">weston_pointer_ensure_pointer_client</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_client<sp/>=<sp/><ref refid="input_8c_1aee3835bbcd4ba01823d27c1644e347e2" kindref="member">weston_pointer_get_pointer_client</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/><ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointer_client)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer_client;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_client<sp/>=<sp/><ref refid="input_8c_1a4c43fffbd16768544b7cccc00c0ea4fa" kindref="member">weston_pointer_client_create</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;pointer_clients,<sp/>&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1acf9bd559c9322da1f96425e74ed166e8" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_client(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource)<sp/>==<sp/><ref refid="structclient" kindref="compound">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client<sp/>=<sp/>pointer_client;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer_client;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="input_8c_1af39a0a194fe6b9a7e41a82618ed68143" kindref="member">weston_pointer_cleanup_pointer_client</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a67dcea554780a0683c8eb66c2dab89db" kindref="member">weston_pointer_client_is_empty</ref>(pointer_client))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client<sp/>==<sp/>pointer_client)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1acf9bd559c9322da1f96425e74ed166e8" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a9321bb26eeb6ae9e20a57343aba5579f" kindref="member">weston_pointer_client_destroy</ref>(pointer_client);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="input_8c_1a8bc4dc292fd4b34ca53770b9c96a4c09" kindref="member">unbind_pointer_client_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>wl_resource_get_client(resource);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_client<sp/>=<sp/><ref refid="input_8c_1aee3835bbcd4ba01823d27c1644e347e2" kindref="member">weston_pointer_get_pointer_client</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(pointer_client);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ababbba9b54cc982f49cb6f150b0a7e4c" kindref="member">remove_input_resource_from_timestamps</ref>(resource,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1af39a0a194fe6b9a7e41a82618ed68143" kindref="member">weston_pointer_cleanup_pointer_client</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>pointer_client);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="input_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="input_8c_1aa60e7771b5a23d6e81355f69f62123c8" kindref="member">weston_pointer_motion_to_abs</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*x,<sp/>wl_fixed_t<sp/>*y)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" kindref="member">mask</ref><sp/>&amp;<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a84c6d5ae05c3d2b0778a27a28751c181" kindref="member">WESTON_POINTER_MOTION_ABS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>wl_fixed_from_double(event-&gt;<ref refid="structweston__pointer__motion__event_1a23d2c4c1ecface14929b695adaf627f8" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>wl_fixed_from_double(event-&gt;<ref refid="structweston__pointer__motion__event_1a32457056c8b02f30fd4d60f95aa93f96" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" kindref="member">mask</ref><sp/>&amp;<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a1a81e5f785512d1f1ea98b3f7774917d" kindref="member">WESTON_POINTER_MOTION_REL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>+<sp/>wl_fixed_from_double(event-&gt;<ref refid="structweston__pointer__motion__event_1a7ddfe78bd877f534fafb524c956c1d72" kindref="member">dx</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>+<sp/>wl_fixed_from_double(event-&gt;<ref refid="structweston__pointer__motion__event_1a97e8ba0b48f6d7a408c2f1399a95aa99" kindref="member">dy</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!</highlight><highlight class="stringliteral">&quot;invalid<sp/>motion<sp/>event&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>*y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><ref refid="input_8c_1a9da0b228823c3607b889346f99b2d59c" kindref="member">weston_pointer_motion_to_rel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dy,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dx_unaccel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dy_unaccel)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" kindref="member">mask</ref><sp/>&amp;<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a1a81e5f785512d1f1ea98b3f7774917d" kindref="member">WESTON_POINTER_MOTION_REL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" kindref="member">mask</ref><sp/>&amp;<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5aca06cf4b91022f3c5e5087251ea462fd" kindref="member">WESTON_POINTER_MOTION_REL_UNACCEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dx<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dx;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dy<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dy;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dx_unaccel<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dx_unaccel;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dy_unaccel<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dy_unaccel;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" kindref="member">mask</ref><sp/>&amp;<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a1a81e5f785512d1f1ea98b3f7774917d" kindref="member">WESTON_POINTER_MOTION_REL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dx_unaccel<sp/>=<sp/>*dx<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dx;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dy_unaccel<sp/>=<sp/>*dy<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dy;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" kindref="member">mask</ref><sp/>&amp;<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5aca06cf4b91022f3c5e5087251ea462fd" kindref="member">WESTON_POINTER_MOTION_REL_UNACCEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dx_unaccel<sp/>=<sp/>*dx<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dx_unaccel;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dy_unaccel<sp/>=<sp/>*dy<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dy_unaccel;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="input_8c_1a6de88b133f2df2089534d96a88becb8c" kindref="member">weston_seat_repick</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab);</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><ref refid="input_8c_1a16652173a65db126512fe2dd510873e6" kindref="member">weston_compositor_idle_inhibit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(compositor);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a5044af245cac705c327f2122805a3469" kindref="member">idle_inhibit</ref>++;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><ref refid="input_8c_1ac9515552f97ec2926c9681f8f0e7e6dc" kindref="member">weston_compositor_idle_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a5044af245cac705c327f2122805a3469" kindref="member">idle_inhibit</ref>--;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(compositor);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><ref refid="input_8c_1a27323ed15b4d1ab13da02536f6aa8c29" kindref="member">pointer_focus_view_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref>,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1ac4cfba8c8f2d640abe6a5c97a7eaa351" kindref="member">focus_view_listener</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3796f149723a5e49d6b176837a50d093" kindref="member">weston_pointer_clear_focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><ref refid="input_8c_1a3586e637ad940f664dbf6cd526fbd885" kindref="member">pointer_focus_resource_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref>,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a1f26f70dd9310f621b257f1d80f3463d" kindref="member">focus_resource_listener</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3796f149723a5e49d6b176837a50d093" kindref="member">weston_pointer_clear_focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><ref refid="input_8c_1a6605f3f74f47487f6a303ca0b4646ba9" kindref="member">keyboard_focus_resource_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref>,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__keyboard_1af22040d6ed2f7a292561f077f6b0a42a" kindref="member">focus_resource_listener</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5c8f2d331758909aabe3ab0a320110a" kindref="member">weston_keyboard_set_focus</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><ref refid="input_8c_1a611b2a166b543bc42726ab4e5f9b92fa" kindref="member">touch_focus_view_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref>,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a26582d6b8d1ffc7a8c229ee8df93733b" kindref="member">focus_view_listener</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8f5d2ab8262d54999fab8f84a4a87c4f" kindref="member">weston_touch_set_focus</ref>(<ref refid="structtouch" kindref="compound">touch</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><ref refid="input_8c_1aaafa6a3638395421b5eba885fff86332" kindref="member">touch_focus_resource_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref>,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a0d66cdf24d226f522d92737a43efae5c" kindref="member">focus_resource_listener</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8f5d2ab8262d54999fab8f84a4a87c4f" kindref="member">weston_touch_set_focus</ref>(<ref refid="structtouch" kindref="compound">touch</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><ref refid="input_8c_1a2efc9cad7767209a7a3a0980c6ffae72" kindref="member">move_resources</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*destination,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*source)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(destination,<sp/>source);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(source);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><ref refid="input_8c_1a5310cddfcc3182e2c975c3b92920a4e3" kindref="member">move_resources_for_client</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*destination,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*source,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource,<sp/>*tmp;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each_safe(resource,<sp/>tmp,<sp/>source)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_client(resource)<sp/>==<sp/><ref refid="structclient" kindref="compound">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(destination,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><ref refid="input_8c_1a5abca7d7a299d7c364c955adcebea3cb" kindref="member">default_grab_pointer_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structweston__pointer_1a6b019df603fd1638e8d7d77f49d593cd" kindref="member">grab</ref>-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>sy;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;button_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/><ref refid="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" kindref="member">weston_compositor_pick_view</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;compositor,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sx,<sp/>&amp;sy);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>!=<sp/>view<sp/>||<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx<sp/>!=<sp/>sx<sp/>||<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy<sp/>!=<sp/>sy)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4f683d449ac87d60d5e0205d966917c0" kindref="member">weston_pointer_set_focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>view,<sp/>sx,<sp/>sy);</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><ref refid="input_8c_1a53cffb54e97d763ba736c3f6145244a6" kindref="member">pointer_send_relative_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>time_usec;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/>dy,<sp/>dx_unaccel,<sp/>dy_unaccel;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>dxf,<sp/>dyf,<sp/>dxf_unaccel,<sp/>dyf_unaccel;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1a9da0b228823c3607b889346f99b2d59c" kindref="member">weston_pointer_motion_to_rel</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>event,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dx,<sp/>&amp;dy,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dx_unaccel,<sp/>&amp;dy_unaccel))</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;relative_pointer_resources;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_usec<sp/>=<sp/>timespec_to_usec(&amp;event-&gt;<ref refid="structweston__pointer__motion__event_1a08ad4be38330bfda16deaeab8a8c1b52" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_usec<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_usec<sp/>=<sp/>timespec_to_usec(time);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxf<sp/>=<sp/>wl_fixed_from_double(dx);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyf<sp/>=<sp/>wl_fixed_from_double(dy);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxf_unaccel<sp/>=<sp/>wl_fixed_from_double(dx_unaccel);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyf_unaccel<sp/>=<sp/>wl_fixed_from_double(dy_unaccel);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zwp_relative_pointer_v1_send_relative_motion(</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/>(time_usec<sp/>&gt;&gt;<sp/>32),</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/>time_usec,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxf,<sp/>dyf,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxf_unaccel,<sp/>dyf_unaccel);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><ref refid="input_8c_1abcb80f71889ae0e261e46573c44acbb9" kindref="member">pointer_send_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>wl_fixed_t<sp/>sy)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>msecs;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;pointer_resources;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msecs<sp/>=<sp/>timespec_to_msec(time);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(resource,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_motion(resource,<sp/>msecs,<sp/>sx,<sp/>sy);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><ref refid="input_8c_1ab26fbd79ff4d88d30d6b79396677aa97" kindref="member">weston_pointer_send_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>old_sx<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>old_sy<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa60e7771b5a23d6e81355f69f62123c8" kindref="member">weston_pointer_motion_to_abs</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>event,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>,<sp/>x,<sp/>y,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx,<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab9f43265a9a88c5b2b3a1f23fdc6329b" kindref="member">weston_pointer_move</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>event);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_sx<sp/>!=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx<sp/>||<sp/>old_sy<sp/>!=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1abcb80f71889ae0e261e46573c44acbb9" kindref="member">pointer_send_motion</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>time,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a53cffb54e97d763ba736c3f6145244a6" kindref="member">pointer_send_relative_motion</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><ref refid="input_8c_1a998d8a6fe21a1d70274509df6b46a6bf" kindref="member">default_grab_pointer_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab26fbd79ff4d88d30d6b79396677aa97" kindref="member">weston_pointer_send_motion</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><ref refid="input_8c_1aa5739d335835aa75c34d497491d57ff7" kindref="member">weston_pointer_has_focus_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;pointer_resources))</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><ref refid="input_8c_1acff4837ae0f91d176b516b195aee7947" kindref="member">weston_pointer_send_button</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/>uint32_t<sp/>button,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_pointer_button_state<sp/>state)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_display<sp/>*display<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;compositor-&gt;wl_display;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>msecs;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1aa5739d335835aa75c34d497491d57ff7" kindref="member">weston_pointer_has_focus_resource</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>))</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;pointer_resources;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(display);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msecs<sp/>=<sp/>timespec_to_msec(time);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(resource,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_button(resource,<sp/>serial,<sp/>msecs,<sp/>button,<sp/>state);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><ref refid="input_8c_1a3052d2d094f810c4a084de3d8242432b" kindref="member">default_grab_pointer_button</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/>uint32_t<sp/>button,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_pointer_button_state<sp/>state)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structweston__pointer_1a6b019df603fd1638e8d7d77f49d593cd" kindref="member">grab</ref>-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;compositor;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>sy;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1acff4837ae0f91d176b516b195aee7947" kindref="member">weston_pointer_send_button</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>time,<sp/>button,<sp/>state);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;button_count<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>==<sp/>WL_POINTER_BUTTON_STATE_RELEASED)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/><ref refid="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" kindref="member">weston_compositor_pick_view</ref>(compositor,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sx,<sp/>&amp;sy);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4f683d449ac87d60d5e0205d966917c0" kindref="member">weston_pointer_set_focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>view,<sp/>sx,<sp/>sy);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><ref refid="input_8c_1ad395050e7ec12082c2ee18c9ff42dda2" kindref="member">weston_pointer_send_axis</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>msecs;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1aa5739d335835aa75c34d497491d57ff7" kindref="member">weston_pointer_has_focus_resource</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>))</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;pointer_resources;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msecs<sp/>=<sp/>timespec_to_msec(time);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structweston__pointer__axis__event_1ac924f23da18ad3fc1276a5570ead8a04" kindref="member">has_discrete</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_version(resource)<sp/>&gt;=</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_POINTER_AXIS_DISCRETE_SINCE_VERSION)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_axis_discrete(resource,<sp/>event-&gt;<ref refid="structweston__pointer__axis__event_1a921166b269c22fd0b3ec989397f5d88a" kindref="member">axis</ref>,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="structweston__pointer__axis__event_1a535dfb7b1258d768f7e104996d8705b1" kindref="member">discrete</ref>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structweston__pointer__axis__event_1a758413a513d73685c127fb41181e4320" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(resource,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_axis(resource,<sp/>msecs,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="structweston__pointer__axis__event_1a921166b269c22fd0b3ec989397f5d88a" kindref="member">axis</ref>,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(event-&gt;<ref refid="structweston__pointer__axis__event_1a758413a513d73685c127fb41181e4320" kindref="member">value</ref>));</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_version(resource)<sp/>&gt;=</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_POINTER_AXIS_STOP_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(resource,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_axis_stop(resource,<sp/>msecs,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="structweston__pointer__axis__event_1a921166b269c22fd0b3ec989397f5d88a" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><ref refid="input_8c_1a70f2579a25e836fc05a631986bfac65b" kindref="member">weston_pointer_send_axis_source</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_pointer_axis_source<sp/>source)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1aa5739d335835aa75c34d497491d57ff7" kindref="member">weston_pointer_has_focus_resource</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>))</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;pointer_resources;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_version(resource)<sp/>&gt;=</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_POINTER_AXIS_SOURCE_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_axis_source(resource,<sp/>source);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><ref refid="input_8c_1ae0281a474ed7f8a0e941673f79de6230" kindref="member">pointer_send_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_version(resource)<sp/>&gt;=</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_POINTER_FRAME_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_frame(resource);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><ref refid="input_8c_1a2bb5b53363fe73ab8a6b0f52e5415ff3" kindref="member">weston_pointer_send_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1aa5739d335835aa75c34d497491d57ff7" kindref="member">weston_pointer_has_focus_resource</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>))</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;pointer_resources;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae0281a474ed7f8a0e941673f79de6230" kindref="member">pointer_send_frame</ref>(resource);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><ref refid="input_8c_1a7cd67f2ee89fff5404d37a269edf2c18" kindref="member">default_grab_pointer_axis</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ad395050e7ec12082c2ee18c9ff42dda2" kindref="member">weston_pointer_send_axis</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><ref refid="input_8c_1a67035952a0574bd3d7df24d58f250ebe" kindref="member">default_grab_pointer_axis_source</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_pointer_axis_source<sp/>source)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a70f2579a25e836fc05a631986bfac65b" kindref="member">weston_pointer_send_axis_source</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>source);</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><ref refid="input_8c_1a213120aaf578428f1755e756cdc9d923" kindref="member">default_grab_pointer_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2bb5b53363fe73ab8a6b0f52e5415ff3" kindref="member">weston_pointer_send_frame</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><ref refid="input_8c_1aab0bd65ec1a3229486e373eee5965a0b" kindref="member">default_grab_pointer_cancel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ad38e7c6caef6001fd4182c96338bb845" kindref="member">default_pointer_grab_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a5abca7d7a299d7c364c955adcebea3cb" kindref="member">default_grab_pointer_focus</ref>,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a998d8a6fe21a1d70274509df6b46a6bf" kindref="member">default_grab_pointer_motion</ref>,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3052d2d094f810c4a084de3d8242432b" kindref="member">default_grab_pointer_button</ref>,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a7cd67f2ee89fff5404d37a269edf2c18" kindref="member">default_grab_pointer_axis</ref>,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a67035952a0574bd3d7df24d58f250ebe" kindref="member">default_grab_pointer_axis_source</ref>,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a213120aaf578428f1755e756cdc9d923" kindref="member">default_grab_pointer_frame</ref>,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aab0bd65ec1a3229486e373eee5965a0b" kindref="member">default_grab_pointer_cancel</ref>,</highlight></codeline>
<codeline lineno="783"><highlight class="normal">};</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><ref refid="input_8c_1a4363722f2a5c5b613d8eb7f313549dcb" kindref="member">weston_touch_has_focus_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list))</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><ref refid="input_8c_1a1d70791ddcb4629a7846232e26d4fa68" kindref="member">weston_touch_send_down</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,<sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y)</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_display<sp/>*display<sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;seat-&gt;compositor-&gt;wl_display;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>sy;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>msecs;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1a4363722f2a5c5b613d8eb7f313549dcb" kindref="member">weston_touch_has_focus_resource</ref>(<ref refid="structtouch" kindref="compound">touch</ref>))</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus,<sp/>x,<sp/>y,<sp/>&amp;sx,<sp/>&amp;sy);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(display);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msecs<sp/>=<sp/>timespec_to_msec(time);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(resource,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_touch_send_down(resource,<sp/>serial,<sp/>msecs,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus-&gt;surface-&gt;resource,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touch_id,<sp/>sx,<sp/>sy);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><ref refid="input_8c_1a8c3ece2669ade3ffaaace4f7eb1ab830" kindref="member">default_grab_touch_down</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y)</highlight></codeline>
<codeline lineno="847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1d70791ddcb4629a7846232e26d4fa68" kindref="member">weston_touch_send_down</ref>(grab-&gt;<ref refid="structweston__touch__grab_1acdda1d4990fa2766f8022ef1cc41e0d4" kindref="member">touch</ref>,<sp/>time,<sp/>touch_id,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><ref refid="input_8c_1ae22c7a42c191767f1151fe6d01d56738" kindref="member">weston_touch_send_up</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_display<sp/>*display<sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;seat-&gt;compositor-&gt;wl_display;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>msecs;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1a4363722f2a5c5b613d8eb7f313549dcb" kindref="member">weston_touch_has_focus_resource</ref>(<ref refid="structtouch" kindref="compound">touch</ref>))</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(display);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msecs<sp/>=<sp/>timespec_to_msec(time);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(resource,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_touch_send_up(resource,<sp/>serial,<sp/>msecs,<sp/>touch_id);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><ref refid="input_8c_1a1acfec4bd309363d7a3521d4f5264fa0" kindref="member">default_grab_touch_up</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id)</highlight></codeline>
<codeline lineno="888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae22c7a42c191767f1151fe6d01d56738" kindref="member">weston_touch_send_up</ref>(grab-&gt;<ref refid="structweston__touch__grab_1acdda1d4990fa2766f8022ef1cc41e0d4" kindref="member">touch</ref>,<sp/>time,<sp/>touch_id);</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><ref refid="input_8c_1a64f6ad901561897ff571a30c85bd20b9" kindref="member">weston_touch_send_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y)</highlight></codeline>
<codeline lineno="908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>sy;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>msecs;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1a4363722f2a5c5b613d8eb7f313549dcb" kindref="member">weston_touch_has_focus_resource</ref>(<ref refid="structtouch" kindref="compound">touch</ref>))</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus,<sp/>x,<sp/>y,<sp/>&amp;sx,<sp/>&amp;sy);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msecs<sp/>=<sp/>timespec_to_msec(time);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(resource,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_touch_send_motion(resource,<sp/>msecs,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touch_id,<sp/>sx,<sp/>sy);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><ref refid="input_8c_1a88be333e8b19f460bf59ca47261319a0" kindref="member">default_grab_touch_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y)</highlight></codeline>
<codeline lineno="934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a64f6ad901561897ff571a30c85bd20b9" kindref="member">weston_touch_send_motion</ref>(grab-&gt;<ref refid="structweston__touch__grab_1acdda1d4990fa2766f8022ef1cc41e0d4" kindref="member">touch</ref>,<sp/>time,<sp/>touch_id,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><ref refid="input_8c_1a4af7b368ba26d19f767eb08aedf7d5de" kindref="member">weston_touch_send_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>)</highlight></codeline>
<codeline lineno="949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1a4363722f2a5c5b613d8eb7f313549dcb" kindref="member">weston_touch_has_focus_resource</ref>(<ref refid="structtouch" kindref="compound">touch</ref>))</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_touch_send_frame(resource);</highlight></codeline>
<codeline lineno="957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><ref refid="input_8c_1a2a7a91bc785e7fca187262b8feb392be" kindref="member">default_grab_touch_frame</ref>(struct<sp/><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4af7b368ba26d19f767eb08aedf7d5de" kindref="member">weston_touch_send_frame</ref>(grab-&gt;touch);</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><ref refid="input_8c_1a71182987ee31bdbf7758be4cc0e11fd4" kindref="member">default_grab_touch_cancel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab__interface" kindref="compound">weston_touch_grab_interface</ref><sp/><ref refid="input_8c_1a1e4eb0bff00e5f315642582db8d97e56" kindref="member">default_touch_grab_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8c3ece2669ade3ffaaace4f7eb1ab830" kindref="member">default_grab_touch_down</ref>,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1acfec4bd309363d7a3521d4f5264fa0" kindref="member">default_grab_touch_up</ref>,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a88be333e8b19f460bf59ca47261319a0" kindref="member">default_grab_touch_motion</ref>,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2a7a91bc785e7fca187262b8feb392be" kindref="member">default_grab_touch_frame</ref>,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a71182987ee31bdbf7758be4cc0e11fd4" kindref="member">default_grab_touch_cancel</ref>,</highlight></codeline>
<codeline lineno="976"><highlight class="normal">};</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><ref refid="input_8c_1ab4324e1d9a1be4e0dee7f37b59dee41a" kindref="member">weston_keyboard_has_focus_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>)</highlight></codeline>
<codeline lineno="985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref>)</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list))</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><ref refid="input_8c_1a0c9aac811e3a283a2a6819403d86fd9a" kindref="member">weston_keyboard_send_key</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/>uint32_t<sp/>key,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_keyboard_key_state<sp/>state)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_display<sp/>*display<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat-&gt;compositor-&gt;wl_display;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>msecs;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1ab4324e1d9a1be4e0dee7f37b59dee41a" kindref="member">weston_keyboard_has_focus_resource</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>))</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(display);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msecs<sp/>=<sp/>timespec_to_msec(time);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac241c686812a364212f2615e0418398b" kindref="member">send_timestamps_for_input_resource</ref>(resource,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_key(resource,<sp/>serial,<sp/>msecs,<sp/>key,<sp/>state);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><ref refid="input_8c_1adc4a44b7e9292607bbe1876ebfdb3416" kindref="member">default_grab_keyboard_key</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/>uint32_t<sp/>key,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>state)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a0c9aac811e3a283a2a6819403d86fd9a" kindref="member">weston_keyboard_send_key</ref>(grab-&gt;<ref refid="structweston__keyboard__grab_1a1c8e9bd02af467b4cf8f5d0425a62e6c" kindref="member">keyboard</ref>,<sp/>time,<sp/>key,<sp/>state);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><ref refid="input_8c_1a743f6b5a33a0587944b3cf5180545cab" kindref="member">send_modifiers_to_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_modifiers(resource,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref>,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a8bb44ac8e8fceb671ab93f263ccb9617" kindref="member">mods_latched</ref>,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2012e8f062eb115b64e39dfdd94373fb" kindref="member">mods_locked</ref>,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1adb62149681606abc035f3bb35b72aa8d" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><ref refid="input_8c_1a274f7c7fa91b5b2637a5695d957ab3dc" kindref="member">send_modifiers_to_client_in_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*list,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_client(resource)<sp/>==<sp/><ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a743f6b5a33a0587944b3cf5180545cab" kindref="member">send_modifiers_to_resource</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource,</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><ref refid="input_8c_1aaa7257a914ff88914cc8e8eab010b7bf" kindref="member">find_pointer_client_for_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>wl_resource_get_client(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aee3835bbcd4ba01823d27c1644e347e2" kindref="member">weston_pointer_get_pointer_client</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/><ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><ref refid="input_8c_1a94436365f4f1a38667aba53185928f31" kindref="member">find_pointer_client_for_view</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!view)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aaa7257a914ff88914cc8e8eab010b7bf" kindref="member">find_pointer_client_for_surface</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><ref refid="input_8c_1a4f210316e65ae148d81804c02648ad4c" kindref="member">find_resource_for_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*list,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_resource_find_for_client(list,<sp/>wl_resource_get_client(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource));</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><ref refid="input_8c_1ab0649f15a4018a435162fe7d2bff1582" kindref="member">weston_keyboard_send_modifiers</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>mods_depressed,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_latched,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_locked,<sp/>uint32_t<sp/>group)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1ab4324e1d9a1be4e0dee7f37b59dee41a" kindref="member">weston_keyboard_has_focus_resource</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*resource_list;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_list<sp/>=<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_modifiers(resource,<sp/>serial,</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_depressed,<sp/>mods_latched,</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_locked,<sp/>group);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref><sp/>&amp;&amp;<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>&amp;&amp;<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface<sp/>!=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*pointer_client<sp/>=</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_client(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a274f7c7fa91b5b2637a5695d957ab3dc" kindref="member">send_modifiers_to_client_in_list</ref>(pointer_client,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><ref refid="input_8c_1a20dd882320955f26b611c05a776e9c3b" kindref="member">default_grab_keyboard_modifiers</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>mods_depressed,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_latched,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_locked,<sp/>uint32_t<sp/>group)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab0649f15a4018a435162fe7d2bff1582" kindref="member">weston_keyboard_send_modifiers</ref>(grab-&gt;<ref refid="structweston__keyboard__grab_1a1c8e9bd02af467b4cf8f5d0425a62e6c" kindref="member">keyboard</ref>,<sp/>serial,<sp/>mods_depressed,</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_latched,<sp/>mods_locked,<sp/>group);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><ref refid="input_8c_1a0419acb297ce28fdc1d3ddda6ee724a0" kindref="member">default_grab_keyboard_cancel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab__interface" kindref="compound">weston_keyboard_grab_interface</ref></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa4113372db172daea8464be85b796e3e" kindref="member">default_keyboard_grab_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1adc4a44b7e9292607bbe1876ebfdb3416" kindref="member">default_grab_keyboard_key</ref>,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a20dd882320955f26b611c05a776e9c3b" kindref="member">default_grab_keyboard_modifiers</ref>,</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a0419acb297ce28fdc1d3ddda6ee724a0" kindref="member">default_grab_keyboard_cancel</ref>,</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><ref refid="input_8c_1a1e3b27c20c9932892ad2a29a47bbbb24" kindref="member">pointer_unmap_sprite</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite-&gt;surface;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(<ref refid="structsurface" kindref="compound">surface</ref>))</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a80d606617df1553ec673787ebcfa2ba5" kindref="member">weston_surface_unmap</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite_destroy_listener.link);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed_private<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a15415df8115e81631c8dae987b7ef40c" kindref="member">weston_surface_set_label_func</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a3b0df14d913003992656e8f791a6da9f" kindref="member">weston_view_destroy</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><ref refid="input_8c_1ac647342442ccc05afd1c1c1d5402c52b" kindref="member">pointer_handle_sprite_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref>,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a6aea257a25ec8b0b98c5e1dc46f0904d" kindref="member">sprite_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><ref refid="input_8c_1af9f342d9ab953c757c6c5dd86159ab9e" kindref="member">weston_pointer_reset_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;button_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><ref refid="input_8c_1aeed361cdb743075816104915091212d1" kindref="member">weston_pointer_handle_output_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><ref refid="input_8c_1afee0bcc0fa4f06f429c8012bc2dcf0fd" kindref="member">weston_pointer_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;pointer_clients);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1a2f5a2d6428c3ed7e10464a53314e5c" kindref="member">weston_pointer_set_default_grab</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1afb8c36f1ea6c3a7b5898771c60127ed9" kindref="member">default_pointer_grab</ref>);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_resource_listener.notify<sp/>=<sp/><ref refid="input_8c_1a3586e637ad940f664dbf6cd526fbd885" kindref="member">pointer_focus_resource_destroyed</ref>;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;default_grab.pointer<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;default_grab;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;motion_signal);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_signal);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_view_listener.link);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;destroy_signal);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite_destroy_listener.notify<sp/>=<sp/><ref refid="input_8c_1ac647342442ccc05afd1c1c1d5402c52b" kindref="member">pointer_handle_sprite_destroy</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Pick<sp/>better<sp/>co-ords.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>=<sp/>wl_fixed_from_int(100);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>=<sp/>wl_fixed_from_int(100);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;output_destroy_listener.notify<sp/>=</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aeed361cdb743075816104915091212d1" kindref="member">weston_pointer_handle_output_destroy</ref>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1ab1912e258bec64ce232b91caa3e54363" kindref="member">output_destroyed_signal</ref>,</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;output_destroy_listener);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx<sp/>=<sp/>wl_fixed_from_int(-1000000);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy<sp/>=<sp/>wl_fixed_from_int(-1000000);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><ref refid="input_8c_1a159d30af69d470066e352de407440014" kindref="member">weston_pointer_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client,<sp/>*tmp;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;destroy_signal,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1e3b27c20c9932892ad2a29a47bbbb24" kindref="member">pointer_unmap_sprite</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(pointer_client,<sp/>tmp,<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;pointer_clients,</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer__client_1acf9bd559c9322da1f96425e74ed166e8" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1acf9bd559c9322da1f96425e74ed166e8" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a9321bb26eeb6ae9e20a57343aba5579f" kindref="member">weston_pointer_client_destroy</ref>(pointer_client);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_view_listener.link);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;output_destroy_listener.link);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><ref refid="input_8c_1a1a2f5a2d6428c3ed7e10464a53314e5c" kindref="member">weston_pointer_set_default_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>*interface)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interface)</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;default_grab.interface<sp/>=<sp/>interface;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;default_grab.interface<sp/>=</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1ad38e7c6caef6001fd4182c96338bb845" kindref="member">default_pointer_grab_interface</ref>;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><ref refid="input_8c_1a076fad97e8b005388847b2dd9b6339c0" kindref="member">weston_keyboard_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_listener.notify<sp/>=<sp/><ref refid="input_8c_1a6605f3f74f47487f6a303ca0b4646ba9" kindref="member">keyboard_focus_resource_destroyed</ref>;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_init(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;default_grab.interface<sp/>=<sp/>&amp;<ref refid="input_8c_1aa4113372db172daea8464be85b796e3e" kindref="member">default_keyboard_grab_interface</ref>;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;default_grab.keyboard<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab<sp/>=<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;default_grab;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_signal);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><ref refid="input_8c_1ae58676c71d357045aae4617416f1281b" kindref="member">weston_xkb_info_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*<ref refid="structweston__keyboard_1a8ff6a56e25eb7d4a10d14bcff761f55e" kindref="member">xkb_info</ref>);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><ref refid="input_8c_1a5a59b68e63dd8818845a12c1a9a2995e" kindref="member">weston_keyboard_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_unref(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info)</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae58676c71d357045aae4617416f1281b" kindref="member">weston_xkb_info_destroy</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_keymap_unref(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;pending_keymap);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_release(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><ref refid="input_8c_1a80b97eed061608712716f3b9673fb212" kindref="member">weston_touch_reset_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><ref refid="input_8c_1aaf46510eb5337f76a83c0cc07d331fdd" kindref="member">weston_touch_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;device_list);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;resource_list);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_view_listener.link);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_view_listener.notify<sp/>=<sp/><ref refid="input_8c_1a611b2a166b543bc42726ab4e5f9b92fa" kindref="member">touch_focus_view_destroyed</ref>;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_listener.notify<sp/>=<sp/><ref refid="input_8c_1aaafa6a3638395421b5eba885fff86332" kindref="member">touch_focus_resource_destroyed</ref>;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;default_grab.interface<sp/>=<sp/>&amp;<ref refid="input_8c_1a1e4eb0bff00e5f315642582db8d97e56" kindref="member">default_touch_grab_interface</ref>;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;default_grab.touch<sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab<sp/>=<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;default_grab;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_signal);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><ref refid="input_8c_1a0e41c3d72f75b61d33af3babbc6ca4be" kindref="member">weston_touch_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>)</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_list_empty(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;device_list));</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;resource_list);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_view_listener.link);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structtouch" kindref="compound">touch</ref>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_seat_capability<sp/>caps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" kindref="member">pointer_device_count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps<sp/>|=<sp/>WL_SEAT_CAPABILITY_POINTER;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps<sp/>|=<sp/>WL_SEAT_CAPABILITY_KEYBOARD;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" kindref="member">touch_device_count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps<sp/>|=<sp/>WL_SEAT_CAPABILITY_TOUCH;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;seat-&gt;<ref refid="structweston__seat_1a0ad46dab28dd2bd40bc457bb2b1c4725" kindref="member">base_resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_seat_send_capabilities(resource,<sp/>caps);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;seat-&gt;<ref refid="structweston__seat_1a143d1eca453c6cdf060ca8aa36567da5" kindref="member">updated_caps_signal</ref>,<sp/>seat);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><ref refid="input_8c_1a3796f149723a5e49d6b176837a50d093" kindref="member">weston_pointer_clear_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4f683d449ac87d60d5e0205d966917c0" kindref="member">weston_pointer_set_focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_int(-1000000),</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_int(-1000000));</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><ref refid="input_8c_1a4f683d449ac87d60d5e0205d966917c0" kindref="member">weston_pointer_set_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>wl_fixed_t<sp/>sy)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*kbd<sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*surface_resource;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_display<sp/>*display<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;compositor-&gt;wl_display;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*focus_resource_list;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refocus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>&amp;&amp;<sp/>view)<sp/>||</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>&amp;&amp;<sp/>!view)<sp/>||</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>&amp;&amp;<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface<sp/>!=<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx<sp/>!=<sp/>sx<sp/>||<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy<sp/>!=<sp/>sy)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refocus<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client<sp/>&amp;&amp;<sp/>refocus)<sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_resource_list<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;pointer_resources;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_list_empty(focus_resource_list))<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(display);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_resource<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>focus_resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_leave(resource,<sp/>serial,</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_resource);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae0281a474ed7f8a0e941673f79de6230" kindref="member">pointer_send_frame</ref>(resource);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_client<sp/>=<sp/><ref refid="input_8c_1a94436365f4f1a38667aba53185928f31" kindref="member">find_pointer_client_for_view</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>view);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointer_client<sp/>&amp;&amp;<sp/>refocus)<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*surface_client<sp/>=<sp/>pointer_client-&gt;<ref refid="structweston__pointer__client_1ad89fcb7cb485b563de0cca91054a7650" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(display);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kbd<sp/>&amp;&amp;<sp/>kbd-&gt;<ref refid="structweston__keyboard_1a30ca19c1cfbbf58e0c50e26a28685d32" kindref="member">focus</ref><sp/>!=<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a274f7c7fa91b5b2637a5695d957ab3dc" kindref="member">send_modifiers_to_client_in_list</ref>(surface_client,</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;kbd-&gt;<ref refid="structweston__keyboard_1a2560db901791f7186b42471cfa630814" kindref="member">resource_list</ref>,</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial,</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kbd);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client<sp/>=<sp/>pointer_client;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_resource_list<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_client-&gt;pointer_resources;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>focus_resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_enter(resource,</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial,</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx,<sp/>sy);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae0281a474ed7f8a0e941673f79de6230" kindref="member">pointer_send_frame</ref>(resource);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_serial<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_view_listener.link);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_view_listener.link);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;view-&gt;<ref refid="structweston__view_1a2f080864caf024d69229c411f4c65f94" kindref="member">destroy_signal</ref>,<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_view_listener);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view<sp/>&amp;&amp;<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_add_destroy_listener(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_resource_listener);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>=<sp/>view;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_view_listener.notify<sp/>=<sp/><ref refid="input_8c_1a27323ed15b4d1ab13da02536f6aa8c29" kindref="member">pointer_focus_view_destroyed</ref>;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx<sp/>=<sp/>sx;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(view<sp/>||<sp/>sx<sp/>==<sp/>wl_fixed_from_int(-1000000));</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(view<sp/>||<sp/>sy<sp/>==<sp/>wl_fixed_from_int(-1000000));</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_signal,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><ref refid="input_8c_1a779557e0900a4e0868335c30c39edb64" kindref="member">send_enter_to_resource_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*list,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial)</highlight></codeline>
<codeline lineno="1517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_enter(resource,<sp/>serial,</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a743f6b5a33a0587944b3cf5180545cab" kindref="member">send_modifiers_to_resource</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/>resource,<sp/>serial);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><ref refid="input_8c_1ac5c8f2d331758909aabe3ab0a320110a" kindref="member">weston_keyboard_set_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_display<sp/>*display<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat-&gt;compositor-&gt;wl_display;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*focus_resource_list;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Keyboard<sp/>focus<sp/>on<sp/>a<sp/>surface<sp/>without<sp/>a<sp/>client<sp/>is<sp/>equivalent<sp/>to<sp/>NULL</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>focus<sp/>as<sp/>nothing<sp/>would<sp/>react<sp/>to<sp/>the<sp/>keyboard<sp/>events<sp/>anyway.</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Just<sp/>set<sp/>focus<sp/>to<sp/>NULL<sp/>instead<sp/>-<sp/>the<sp/>destroy<sp/>listener<sp/>hangs<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wl_resource<sp/>anyway.</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref><sp/>&amp;&amp;<sp/>!<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource)</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_resource_list<sp/>=<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_list_empty(focus_resource_list)<sp/>&amp;&amp;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(display);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>focus_resource_list)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_leave(resource,<sp/>serial,</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2efc9cad7767209a7a3a0980c6ffae72" kindref="member">move_resources</ref>(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list,<sp/>focus_resource_list);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a4f210316e65ae148d81804c02648ad4c" kindref="member">find_resource_for_surface</ref>(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list,<sp/><ref refid="structsurface" kindref="compound">surface</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*surface_client<sp/>=</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_client(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(display);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a5310cddfcc3182e2c975c3b92920a4e3" kindref="member">move_resources_for_client</ref>(focus_resource_list,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list,</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_client);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a779557e0900a4e0868335c30c39edb64" kindref="member">send_enter_to_resource_list</ref>(focus_resource_list,</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_serial<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1a0304b3719787b35a90b1897fa6284842" kindref="member">saved_kbd_focus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;seat-&gt;<ref refid="structweston__seat_1a2b1b5fc5223b4e63713dafb93b37d4ed" kindref="member">saved_kbd_focus_listener</ref>.link);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1a0304b3719787b35a90b1897fa6284842" kindref="member">saved_kbd_focus</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_add_destroy_listener(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource,</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_listener);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_signal,<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Users<sp/>of<sp/>this<sp/>function<sp/>must<sp/>manually<sp/>manage<sp/>the<sp/>keyboard<sp/>focus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><ref refid="input_8c_1ac25cae7db3ca9ae3e35b98dbcb4fdd78" kindref="member">weston_keyboard_start_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab<sp/>=<sp/>grab;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__keyboard__grab_1a1c8e9bd02af467b4cf8f5d0425a62e6c" kindref="member">keyboard</ref><sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><ref refid="input_8c_1a8d1afdec8c569cf3fdbde5b1cd4b6513" kindref="member">weston_keyboard_end_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab<sp/>=<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;default_grab;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><ref refid="input_8c_1a3abbb42b9ce77717241e818ddbeaec72" kindref="member">weston_keyboard_cancel_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab-&gt;interface-&gt;cancel(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><ref refid="input_8c_1a1ba15fe33ad21e716157d11ef4b95bfc" kindref="member">weston_pointer_start_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab<sp/>=<sp/>grab;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><ref refid="input_8c_1ae5aa08a5ae051943a460449fac42b8a9" kindref="member">weston_pointer_end_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab<sp/>=<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;default_grab;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><ref refid="input_8c_1a2f515f99d9e3c105bf4ad49c98820da0" kindref="member">weston_pointer_cancel_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;cancel(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><ref refid="input_8c_1a1b4054b056e841dca16cb8aaf85268c5" kindref="member">weston_touch_start_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab<sp/>=<sp/>grab;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__touch__grab_1acdda1d4990fa2766f8022ef1cc41e0d4" kindref="member">touch</ref><sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><ref refid="input_8c_1adc5de1147c1ce233bb09f113f8c7ba8d" kindref="member">weston_touch_end_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab<sp/>=<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;default_grab;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><ref refid="input_8c_1acf3fb720c963c7189e0a458bd55b7855" kindref="member">weston_touch_cancel_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab-&gt;interface-&gt;cancel(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><ref refid="input_8c_1a3706790f1bcbadb89e0b25ee926e48ce" kindref="member">weston_pointer_clamp_for_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*fx,<sp/>wl_fixed_t<sp/>*fy)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>wl_fixed_to_int(*fx);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>wl_fixed_to_int(*fy);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>output-&gt;x)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fx<sp/>=<sp/>wl_fixed_from_int(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fx<sp/>=<sp/>wl_fixed_from_int(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>output-&gt;y)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fy<sp/>=<sp/>wl_fixed_from_int(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fy<sp/>=<sp/>wl_fixed_from_int(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>+</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><ref refid="input_8c_1a9d7987594807f912e2d98f1ca1e4237b" kindref="member">weston_pointer_clamp</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>wl_fixed_t<sp/>*fx,<sp/>wl_fixed_t<sp/>*fy)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;compositor;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/>*prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>,<sp/>old_x,<sp/>old_y,<sp/>valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref><sp/>=<sp/>wl_fixed_to_int(*fx);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref><sp/>=<sp/>wl_fixed_to_int(*fy);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_x<sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_y<sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;output<sp/>&amp;&amp;<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;output<sp/>!=<sp/><ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixman_region32_contains_point(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region,</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>,<sp/>NULL))</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixman_region32_contains_point(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region,</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_x,<sp/>old_y,<sp/>NULL))</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prev)</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;output;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev<sp/>&amp;&amp;<sp/>!valid)</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3706790f1bcbadb89e0b25ee926e48ce" kindref="member">weston_pointer_clamp_for_output</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>prev,<sp/>fx,<sp/>fy);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><ref refid="input_8c_1aeb8e8b9ad7255c9e9a5e217e876ec30c" kindref="member">weston_pointer_move_to</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/>wl_fixed_t<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ix,<sp/>iy;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a9d7987594807f912e2d98f1ca1e4237b" kindref="member">weston_pointer_clamp</ref><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>&amp;<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/>&amp;<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>=<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>=<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ix<sp/>=<sp/>wl_fixed_to_int(<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iy<sp/>=<sp/>wl_fixed_to_int(<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite)<sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae1df17820e004a35b62f4a923066e9fd" kindref="member">weston_view_set_position</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite,</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ix<sp/>-<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_x,</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iy<sp/>-<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_y);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a60b2b361cc447823985669f9743e8e29" kindref="member">weston_view_schedule_repaint</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;motion_signal,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><ref refid="input_8c_1ab9f43265a9a88c5b2b3a1f23fdc6329b" kindref="member">weston_pointer_move</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa60e7771b5a23d6e81355f69f62123c8" kindref="member">weston_pointer_motion_to_abs</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>event,<sp/>&amp;<ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/>&amp;<ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aeb8e8b9ad7255c9e9a5e217e876ec30c" kindref="member">weston_pointer_move_to</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><ref refid="input_8c_1aeed361cdb743075816104915091212d1" kindref="member">weston_pointer_handle_output_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/>*closest<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>,<sp/>distance,<sp/><ref refid="gl-renderer_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref><sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>fx,<sp/>fy;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref>,</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_destroy_listener);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat-&gt;compositor;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>,<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixman_region32_contains_point(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;region,</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>,<sp/>NULL))</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Aproximante<sp/>the<sp/>distance<sp/>from<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>center<sp/>of</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>abs(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref><sp/>/<sp/>2<sp/>-<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>+<sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref><sp/>/<sp/>2<sp/>-<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance<sp/>&lt;<sp/><ref refid="gl-renderer_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gl-renderer_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref><sp/>=<sp/>distance;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>if<sp/>there&apos;s<sp/>no<sp/>output<sp/>left.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closest)</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fy<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3706790f1bcbadb89e0b25ee926e48ce" kindref="member">weston_pointer_clamp_for_output</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>closest,<sp/>&amp;fx,<sp/>&amp;fy);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aeb8e8b9ad7255c9e9a5e217e876ec30c" kindref="member">weston_pointer_move_to</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>fx,<sp/>fy);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><ref refid="input_8c_1a035ebbdf329d3837736d585ae77eb2ed" kindref="member">notify_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(ec);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;motion(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><ref refid="input_8c_1a6028b85ecba47ddb42c33f70cb7ee42a" kindref="member">run_modifier_bindings</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>,<sp/>uint32_t<sp/>old,<sp/>uint32_t<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>diff;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>xkb;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/>weston;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>mods[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;ctrl_mod,<sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fadfa99f109f19bae56c57599c09081702" kindref="member">MODIFIER_CTRL</ref><sp/>},</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;alt_mod,<sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896faeef7f95cefee09607005b76d3e2e17e8" kindref="member">MODIFIER_ALT</ref><sp/>},</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;super_mod,<sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fac7c4489a6ddb2042ce3797b4c1cbd0ba" kindref="member">MODIFIER_SUPER</ref><sp/>},</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;shift_mod,<sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fa8bb8f661e83a0141db816fb56bf53cd7" kindref="member">MODIFIER_SHIFT</ref><sp/>},</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>&amp;<sp/>~old;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ARRAY_LENGTH(mods);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>mods[i].xkb))</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a15f8eb4f1e0f9a48c6db2d6f58f71e50" kindref="member">weston_compositor_run_modifier_binding</ref>(compositor,</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods[i].weston,</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_KEYBOARD_KEY_STATE_PRESSED);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>old<sp/>&amp;<sp/>~new;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ARRAY_LENGTH(mods);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>mods[i].xkb))</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a15f8eb4f1e0f9a48c6db2d6f58f71e50" kindref="member">weston_compositor_run_modifier_binding</ref>(compositor,</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods[i].weston,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_KEYBOARD_KEY_STATE_RELEASED);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><ref refid="input_8c_1ac4e9ced5099c0e1a1b776b7e245b8128" kindref="member">notify_motion_absolute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>event<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(ec);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mask<sp/>=<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a84c6d5ae05c3d2b0778a27a28751c181" kindref="member">WESTON_POINTER_MOTION_ABS</ref>,</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/><ref refid="structweston__pointer__motion__event_1a23d2c4c1ecface14929b695adaf627f8" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/><ref refid="structweston__pointer__motion__event_1a32457056c8b02f30fd4d60f95aa93f96" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;motion(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab,<sp/>time,<sp/>&amp;event);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><ref refid="input_8c_1a6c65d9c0b887242e084c96d160cbb721" kindref="member">peek_next_activate_serial</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*c)</highlight></codeline>
<codeline lineno="1851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>serial<sp/>=<sp/>c-&gt;<ref refid="structweston__compositor_1ae4926a7915767362658139b652fe0237" kindref="member">activate_serial</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>serial<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>serial;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><ref refid="input_8c_1a2a90e2b5b12e5a15da58fc00ec626eab" kindref="member">inc_activate_serial</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*c)</highlight></codeline>
<codeline lineno="1859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structweston__compositor_1ae4926a7915767362658139b652fe0237" kindref="member">activate_serial</ref><sp/>=<sp/><ref refid="input_8c_1a6c65d9c0b887242e084c96d160cbb721" kindref="member">peek_next_activate_serial</ref><sp/>(c);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><ref refid="input_8c_1a55b0b308f8ca8dfe27622277eafabacd" kindref="member">weston_view_activate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags)</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baaf3b8b43f8e2c13134d83f59acf0068c7" kindref="member">WESTON_ACTIVATE_FLAG_CLICKED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view-&gt;<ref refid="structweston__view_1a352296fe09a8b12565a295c528cac665" kindref="member">click_to_activate_serial</ref><sp/>=</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6c65d9c0b887242e084c96d160cbb721" kindref="member">peek_next_activate_serial</ref>(compositor);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a46e90691191fd2cdc9fab021d6238829" kindref="member">weston_seat_set_keyboard_focus</ref>(seat,<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><ref refid="input_8c_1a341d3b175076e06fad2e432288b0bb7b" kindref="member">notify_button</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>button,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_pointer_button_state<sp/><ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="1881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>WL_POINTER_BUTTON_STATE_PRESSED)<sp/>{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a16652173a65db126512fe2dd510873e6" kindref="member">weston_compositor_idle_inhibit</ref>(compositor);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;button_count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab_button<sp/>=<sp/>button;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab_time<sp/>=<sp/>*time;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab_x<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab_y<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;button_count++;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac9515552f97ec2926c9681f8f0e7e6dc" kindref="member">weston_compositor_idle_release</ref>(compositor);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;button_count--;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1ad5944cf2eea98081f6f3f120db80aabc" kindref="member">weston_compositor_run_button_binding</ref>(compositor,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>time,<sp/>button,</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;<ref refid="structpointer_1a9fc6f37d552aad4189cf13065df9d3ef" kindref="member">button</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab,<sp/>time,<sp/>button,<sp/>state);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;button_count<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab_serial<sp/>=</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_display_get_serial(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><ref refid="input_8c_1a46f42be4885b59c6a4395201f9acb9dc" kindref="member">notify_axis</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="1912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(compositor);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bindings_8c_1a86163548f1868a8d900b7e1f5cf15cd1" kindref="member">weston_compositor_run_axis_binding</ref>(compositor,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time,<sp/>event))</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;<ref refid="structpointer_1a3a7a32e7eb81d8407ac5c8e9054e8055" kindref="member">axis</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><ref refid="input_8c_1a740a3ad0ea196742af5da58be3a77572" kindref="member">notify_axis_source</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>,<sp/>uint32_t<sp/>source)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(compositor);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;axis_source(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab,<sp/>source);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><ref refid="input_8c_1a58338cc09053bfbc6635127cd9e1b3bd" kindref="member">notify_pointer_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="1938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(compositor);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab-&gt;interface-&gt;frame(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;grab);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><ref refid="input_8c_1a4be3758a0a5e28a2c83577c0ebd3fba9" kindref="member">weston_keyboard_set_locks</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="1950"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_mask_t<sp/>mods_depressed,<sp/>mods_latched,<sp/>mods_locked,<sp/>group;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_mask_t<sp/>num,<sp/>caps;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>want<sp/>the<sp/>leds<sp/>to<sp/>go<sp/>out<sp/>of<sp/>sync<sp/>with<sp/>the<sp/>actual<sp/>state</highlight></codeline>
<codeline lineno="1956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>if<sp/>the<sp/>backend<sp/>has<sp/>no<sp/>way<sp/>to<sp/>change<sp/>the<sp/>leds<sp/>don&apos;t<sp/>try<sp/>to</highlight></codeline>
<codeline lineno="1957"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>change<sp/>the<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat-&gt;led_update)</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_depressed<sp/>=<sp/>xkb_state_serialize_mods(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_DEPRESSED);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_latched<sp/>=<sp/>xkb_state_serialize_mods(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_LATCHED);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_locked<sp/>=<sp/>xkb_state_serialize_mods(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_LOCKED);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/>=<sp/>xkb_state_serialize_group(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_EFFECTIVE);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;mod2_mod);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;caps_mod);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a9f1a9cb0074a63bbf44b28556ffdcd81" kindref="member">WESTON_NUM_LOCK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;<sp/><ref refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a9f1a9cb0074a63bbf44b28556ffdcd81" kindref="member">WESTON_NUM_LOCK</ref>)</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_locked<sp/>|=<sp/>num;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_locked<sp/>&amp;=<sp/>~num;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a731c7508f6ac1f2b216178c302e61d6c" kindref="member">WESTON_CAPS_LOCK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;<sp/><ref refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a731c7508f6ac1f2b216178c302e61d6c" kindref="member">WESTON_CAPS_LOCK</ref>)</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_locked<sp/>|=<sp/>caps;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_locked<sp/>&amp;=<sp/>~caps;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_update_mask(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,<sp/>mods_depressed,</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_latched,<sp/>mods_locked,<sp/>0,<sp/>0,<sp/>group);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat-&gt;compositor-&gt;wl_display);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aae75251c5c98be717a0513bed342264c" kindref="member">notify_modifiers</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat,<sp/>serial);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><ref refid="input_8c_1aae75251c5c98be717a0513bed342264c" kindref="member">notify_modifiers</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>,<sp/>uint32_t<sp/>serial)</highlight></codeline>
<codeline lineno="1997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_depressed,<sp/>mods_latched,<sp/>mods_locked,<sp/>group;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_lookup;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0" kindref="member">weston_led</ref><sp/>leds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Serialize<sp/>and<sp/>update<sp/>our<sp/>internal<sp/>state,<sp/>checking<sp/>to<sp/>see<sp/>if<sp/>it&apos;s</highlight></codeline>
<codeline lineno="2006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>different<sp/>to<sp/>the<sp/>previous<sp/>state.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_depressed<sp/>=<sp/>xkb_state_serialize_mods(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_MODS_DEPRESSED);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_latched<sp/>=<sp/>xkb_state_serialize_mods(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_MODS_LATCHED);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_locked<sp/>=<sp/>xkb_state_serialize_mods(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_MODS_LOCKED);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/>=<sp/>xkb_state_serialize_layout(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_LAYOUT_EFFECTIVE);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods_depressed<sp/>!=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref><sp/>||</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_latched<sp/>!=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a8bb44ac8e8fceb671ab93f263ccb9617" kindref="member">mods_latched</ref><sp/>||</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_locked<sp/>!=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2012e8f062eb115b64e39dfdd94373fb" kindref="member">mods_locked</ref><sp/>||</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/>!=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1adb62149681606abc035f3bb35b72aa8d" kindref="member">group</ref>)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6028b85ecba47ddb42c33f70cb7ee42a" kindref="member">run_modifier_bindings</ref>(seat,<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref>,</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_depressed);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref><sp/>=<sp/>mods_depressed;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a8bb44ac8e8fceb671ab93f263ccb9617" kindref="member">mods_latched</ref><sp/>=<sp/>mods_latched;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2012e8f062eb115b64e39dfdd94373fb" kindref="member">mods_locked</ref><sp/>=<sp/>mods_locked;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1adb62149681606abc035f3bb35b72aa8d" kindref="member">group</ref><sp/>=<sp/>group;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>update<sp/>the<sp/>modifier_state<sp/>for<sp/>bindings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods_lookup<sp/>=<sp/>mods_depressed<sp/>|<sp/>mods_latched;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods_lookup<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;ctrl_mod))</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref><sp/>|=<sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fadfa99f109f19bae56c57599c09081702" kindref="member">MODIFIER_CTRL</ref>;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods_lookup<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;alt_mod))</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref><sp/>|=<sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896faeef7f95cefee09607005b76d3e2e17e8" kindref="member">MODIFIER_ALT</ref>;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods_lookup<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;super_mod))</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref><sp/>|=<sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fac7c4489a6ddb2042ce3797b4c1cbd0ba" kindref="member">MODIFIER_SUPER</ref>;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods_lookup<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;shift_mod))</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref><sp/>|=<sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fa8bb8f661e83a0141db816fb56bf53cd7" kindref="member">MODIFIER_SHIFT</ref>;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finally,<sp/>notify<sp/>the<sp/>compositor<sp/>that<sp/>LEDs<sp/>have<sp/>changed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_led_index_is_active(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;num_led))</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leds<sp/>|=<sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0afb4afcb3a2efeaeb0ae53455693553b8" kindref="member">LED_NUM_LOCK</ref>;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_led_index_is_active(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;caps_led))</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leds<sp/>|=<sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0a9694f2f03b30c7081839f70a0546f0d7" kindref="member">LED_CAPS_LOCK</ref>;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_led_index_is_active(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;scroll_led))</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leds<sp/>|=<sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0a31a8ab056a0c2227359d2e835614855f" kindref="member">LED_SCROLL_LOCK</ref>;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leds<sp/>!=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.leds<sp/>&amp;&amp;<sp/>seat-&gt;<ref refid="structweston__seat_1a32bed4e68fda40820be3535fc2740530" kindref="member">led_update</ref>)</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1a32bed4e68fda40820be3535fc2740530" kindref="member">led_update</ref>(seat,<sp/>leds);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.leds<sp/>=<sp/>leds;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(changed)<sp/>{</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__keyboard__grab_1ae15572385e255cd9150024bd63b10c87" kindref="member">interface</ref>-&gt;<ref refid="structweston__keyboard__grab__interface_1a58f22270fa84b226a2a92e9a5c63e416" kindref="member">modifiers</ref>(grab,</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial,</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref>,</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a8bb44ac8e8fceb671ab93f263ccb9617" kindref="member">mods_latched</ref>,</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2012e8f062eb115b64e39dfdd94373fb" kindref="member">mods_locked</ref>,</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1adb62149681606abc035f3bb35b72aa8d" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><ref refid="input_8c_1a29b237fd00406206e0df60cce121c997" kindref="member">update_modifier_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,<sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>key,</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_keyboard_key_state<sp/>state)</highlight></codeline>
<codeline lineno="2069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>xkb_key_direction<sp/>direction;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__keyboard_1a3a23dee8749255183af2d4cda6e95b7e" kindref="member">state</ref><sp/>==<sp/>WL_KEYBOARD_KEY_STATE_PRESSED)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/>XKB_KEY_DOWN;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/>XKB_KEY_UP;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>the<sp/>keycode<sp/>by<sp/>8,<sp/>as<sp/>the<sp/>evdev<sp/>XKB<sp/>rules<sp/>reflect<sp/>X&apos;s</highlight></codeline>
<codeline lineno="2079"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>broken<sp/>keycode<sp/>system,<sp/>which<sp/>starts<sp/>at<sp/>8.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_update_key(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,<sp/>key<sp/>+<sp/>8,<sp/>direction);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aae75251c5c98be717a0513bed342264c" kindref="member">notify_modifiers</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>,<sp/>serial);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><ref refid="input_8c_1adee16da18d2931849cb3581a3555f40e" kindref="member">weston_keyboard_send_keymap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*kbd,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="2087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*xkb_info<sp/>=<sp/>kbd-&gt;<ref refid="structweston__keyboard_1a8ff6a56e25eb7d4a10d14bcff761f55e" kindref="member">xkb_info</ref>;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ro_anonymous_file_mapmode<sp/>mapmode;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_version(resource)<sp/>&lt;<sp/>7)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapmode<sp/>=<sp/>RO_ANONYMOUS_FILE_MAPMODE_SHARED;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapmode<sp/>=<sp/>RO_ANONYMOUS_FILE_MAPMODE_PRIVATE;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>os_ro_anonymous_file_get_fd(xkb_info-&gt;<ref refid="structweston__xkb__info_1a36fe2ba7b81f3d509533f1ef70784d70" kindref="member">keymap_rofile</ref>,<sp/>mapmode);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>os_ro_anonymous_file_size(xkb_info-&gt;<ref refid="structweston__xkb__info_1a36fe2ba7b81f3d509533f1ef70784d70" kindref="member">keymap_rofile</ref>);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;creating<sp/>a<sp/>keymap<sp/>file<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_keymap(resource,</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_KEYBOARD_KEYMAP_FORMAT_XKB_V1,</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os_ro_anonymous_file_put_fd(fd);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><ref refid="input_8c_1a77116eaa76efe5e3bbecebfcc4ac5f06" kindref="member">send_modifiers</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,<sp/>uint32_t<sp/>serial,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>)</highlight></codeline>
<codeline lineno="2117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_modifiers(resource,<sp/>serial,</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref>,</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a8bb44ac8e8fceb671ab93f263ccb9617" kindref="member">mods_latched</ref>,</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1a2012e8f062eb115b64e39dfdd94373fb" kindref="member">mods_locked</ref>,</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;modifiers.<ref refid="structkeyboard_1adb62149681606abc035f3bb35b72aa8d" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><ref refid="input_8c_1a81d5d15190a33d2c4d7ebf25f4858f0e" kindref="member">weston_xkb_info_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xkb_keymap<sp/>*<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><ref refid="input_8c_1a239417694c3d84500896626f49e84843" kindref="member">update_keymap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="2130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*xkb_info;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xkb_state<sp/>*state;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_mask_t<sp/>latched_mods;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_mask_t<sp/>locked_mods;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info<sp/>=<sp/><ref refid="input_8c_1a81d5d15190a33d2c4d7ebf25f4858f0e" kindref="member">weston_xkb_info_create</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;pending_keymap);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_keymap_unref(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;pending_keymap);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;pending_keymap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xkb_info)<sp/>{</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>XKB<sp/>info\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>xkb_state_new(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!state)<sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>initialise<sp/>XKB<sp/>state\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae58676c71d357045aae4617416f1281b" kindref="member">weston_xkb_info_destroy</ref>(xkb_info);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latched_mods<sp/>=<sp/>xkb_state_serialize_mods(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_MODS_LATCHED);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locked_mods<sp/>=<sp/>xkb_state_serialize_mods(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_STATE_MODS_LOCKED);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_update_mask(state,</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>depressed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latched_mods,</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locked_mods,</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae58676c71d357045aae4617416f1281b" kindref="member">weston_xkb_info_destroy</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info<sp/>=<sp/>xkb_info;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_unref(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref><sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1adee16da18d2931849cb3581a3555f40e" kindref="member">weston_keyboard_send_keymap</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/>resource);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1adee16da18d2931849cb3581a3555f40e" kindref="member">weston_keyboard_send_keymap</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/>resource);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aae75251c5c98be717a0513bed342264c" kindref="member">notify_modifiers</ref>(seat,<sp/>wl_display_next_serial(seat-&gt;compositor-&gt;wl_display));</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!latched_mods<sp/>&amp;&amp;<sp/>!locked_mods)</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a77116eaa76efe5e3bbecebfcc4ac5f06" kindref="member">send_modifiers</ref>(resource,<sp/>wl_display_get_serial(seat-&gt;compositor-&gt;wl_display),<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list)</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a77116eaa76efe5e3bbecebfcc4ac5f06" kindref="member">send_modifiers</ref>(resource,<sp/>wl_display_get_serial(seat-&gt;compositor-&gt;wl_display),<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><ref refid="input_8c_1aef2cf9bf595febf9a1e448096797f937" kindref="member">notify_key</ref>(struct<sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,<sp/>const<sp/>struct<sp/>timespec<sp/>*time,<sp/>uint32_t<sp/>key,</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enum<sp/>wl_keyboard_key_state<sp/>state,</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enum<sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51" kindref="member">weston_key_state_update</ref><sp/>update_state)</highlight></codeline>
<codeline lineno="2191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;compositor;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*k,<sp/>*end;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>WL_KEYBOARD_KEY_STATE_PRESSED)<sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a16652173a65db126512fe2dd510873e6" kindref="member">weston_compositor_idle_inhibit</ref>(compositor);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac9515552f97ec2926c9681f8f0e7e6dc" kindref="member">weston_compositor_idle_release</ref>(compositor);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys.data<sp/>+<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys.size;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys.data;<sp/>k<sp/>&lt;<sp/>end;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*k<sp/>==<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>server-generated<sp/>repeats.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>WL_KEYBOARD_KEY_STATE_PRESSED)</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*k<sp/>=<sp/>*--end;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys.size<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>end<sp/>-<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys.data;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(state<sp/>==<sp/>WL_KEYBOARD_KEY_STATE_PRESSED)<sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>wl_array_add(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*k);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*k<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grab<sp/>==<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;default_grab<sp/>||</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab<sp/>==<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;input_method_grab)<sp/>{</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1aa7d83b5fe63ef57e6364620be3ffe9c6" kindref="member">weston_compositor_run_key_binding</ref>(compositor,<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/>time,</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key,<sp/>state);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__keyboard__grab_1ae15572385e255cd9150024bd63b10c87" kindref="member">interface</ref>-&gt;<ref refid="structweston__keyboard__grab__interface_1ab6d7de9f8e81b3339102b237cd94e86d" kindref="member">key</ref>(grab,<sp/>time,<sp/>key,<sp/>state);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;pending_keymap<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys.size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a239417694c3d84500896626f49e84843" kindref="member">update_keymap</ref>(seat);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(update_state<sp/>==<sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a816b30ccdbbe24e29682edc1fca8f45d" kindref="member">STATE_UPDATE_AUTOMATIC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a29b237fd00406206e0df60cce121c997" kindref="member">update_modifier_state</ref>(seat,</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_display_get_serial(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>),</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key,</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab_serial<sp/>=<sp/>wl_display_get_serial(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>WL_KEYBOARD_KEY_STATE_PRESSED)<sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab_time<sp/>=<sp/>*time;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;grab_key<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><ref refid="input_8c_1a4d4a279d6db370615901cc52452b545f" kindref="member">notify_pointer_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="2248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structoutput" kindref="compound">output</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aeb8e8b9ad7255c9e9a5e217e876ec30c" kindref="member">weston_pointer_move_to</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(<ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>),</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(<ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>));</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>We<sp/>should<sp/>call<sp/>weston_pointer_set_focus(seat,</highlight></codeline>
<codeline lineno="2257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>NULL)<sp/>here,<sp/>but<sp/>somehow<sp/>that<sp/>breaks<sp/>re-entry...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><ref refid="input_8c_1a03c35105941f4d1670eac2a1a09b413d" kindref="member">destroy_device_saved_kbd_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="2263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*ws;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws<sp/>=<sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref>,</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__seat_1a2b1b5fc5223b4e63713dafb93b37d4ed" kindref="member">saved_kbd_focus_listener</ref>);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws-&gt;<ref refid="structweston__seat_1a0304b3719787b35a90b1897fa6284842" kindref="member">saved_kbd_focus</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><ref refid="input_8c_1a3c6bf42d3db7275d5d21e7c471fb66b2" kindref="member">notify_keyboard_focus_in</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_array<sp/>*keys,</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51" kindref="member">weston_key_state_update</ref><sp/>update_state)</highlight></codeline>
<codeline lineno="2275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*k,<sp/>serial;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_copy(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys,<sp/>keys);</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_for_each(k,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys)<sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a16652173a65db126512fe2dd510873e6" kindref="member">weston_compositor_idle_inhibit</ref>(<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(update_state<sp/>==<sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a816b30ccdbbe24e29682edc1fca8f45d" kindref="member">STATE_UPDATE_AUTOMATIC</ref>)</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a29b237fd00406206e0df60cce121c997" kindref="member">update_modifier_state</ref>(seat,<sp/>serial,<sp/>*k,</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_KEYBOARD_KEY_STATE_PRESSED);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a0304b3719787b35a90b1897fa6284842" kindref="member">saved_kbd_focus</ref>;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5c8f2d331758909aabe3ab0a320110a" kindref="member">weston_keyboard_set_focus</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><ref refid="input_8c_1af129a8798b5e9e4c417ea356d086761f" kindref="member">notify_keyboard_focus_out</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="2298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*focus<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref>;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*k,<sp/>serial;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/>wl_display_next_serial(<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_for_each(k,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys)<sp/>{</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac9515552f97ec2926c9681f8f0e7e6dc" kindref="member">weston_compositor_idle_release</ref>(<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a29b237fd00406206e0df60cce121c997" kindref="member">update_modifier_state</ref>(seat,<sp/>serial,<sp/>*k,</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_KEYBOARD_KEY_STATE_RELEASED);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5c8f2d331758909aabe3ab0a320110a" kindref="member">weston_keyboard_set_focus</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3abbb42b9ce77717241e818ddbeaec72" kindref="member">weston_keyboard_cancel_grab</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2f515f99d9e3c105bf4ad49c98820da0" kindref="member">weston_pointer_cancel_grab</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focus)<sp/>{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1a0304b3719787b35a90b1897fa6284842" kindref="member">saved_kbd_focus</ref><sp/>=<sp/>focus;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1a2b1b5fc5223b4e63713dafb93b37d4ed" kindref="member">saved_kbd_focus_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a03c35105941f4d1670eac2a1a09b413d" kindref="member">destroy_device_saved_kbd_focus</ref>;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;focus-&gt;<ref refid="structweston__surface_1ac6cffe8c4761faf4eafa539dd508b570" kindref="member">destroy_signal</ref>,</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;seat-&gt;<ref refid="structweston__seat_1a2b1b5fc5223b4e63713dafb93b37d4ed" kindref="member">saved_kbd_focus_listener</ref>);</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><ref refid="input_8c_1a8f5d2ab8262d54999fab8f84a4a87c4f" kindref="member">weston_touch_set_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="2330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/>*focus_resource_list;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_resource_list<sp/>=<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view<sp/>&amp;&amp;<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus-&gt;surface<sp/>==<sp/>view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus<sp/>=<sp/>view;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_listener.link);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_view_listener.link);</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_view_listener.link);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_list_empty(focus_resource_list))<sp/>{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2efc9cad7767209a7a3a0980c6ffae72" kindref="member">move_resources</ref>(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;resource_list,</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_resource_list);</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view)<sp/>{</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*surface_client;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_client<sp/>=<sp/>wl_resource_get_client(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a5310cddfcc3182e2c975c3b92920a4e3" kindref="member">move_resources_for_client</ref>(focus_resource_list,</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;resource_list,</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_client);</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_add_destroy_listener(view-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_listener);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;view-&gt;<ref refid="structweston__view_1a2f080864caf024d69229c411f4c65f94" kindref="member">destroy_signal</ref>,<sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_view_listener);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus<sp/>=<sp/>view;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><ref refid="input_8c_1a4a6228e98bdd815d94bf2e45d14c58e6" kindref="member">process_touch_normal</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device,</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>double_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>double_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_type)</highlight></codeline>
<codeline lineno="2374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab<sp/>=<sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>-&gt;<ref refid="structweston__touch_1adff18756078cb5e6dcfa08e5d853b5d6" kindref="member">grab</ref>;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec<sp/>=<sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>-&gt;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>sy;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref><sp/>=<sp/>wl_fixed_from_double(double_x);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref><sp/>=<sp/>wl_fixed_from_double(double_y);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>grab&apos;s<sp/>global<sp/>coordinates.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(touch_id<sp/>==<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab_touch_id<sp/>&amp;&amp;<sp/>touch_type<sp/>!=<sp/>WL_TOUCH_UP)<sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab_x<sp/>=<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab_y<sp/>=<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(touch_type)<sp/>{</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_TOUCH_DOWN:</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>first<sp/>finger<sp/>down<sp/>picks<sp/>the<sp/>view,<sp/>and<sp/>all<sp/>further<sp/>go</highlight></codeline>
<codeline lineno="2392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>that<sp/>view<sp/>for<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>touch<sp/>session<sp/>i.e.</highlight></codeline>
<codeline lineno="2393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>until<sp/>all<sp/>touch<sp/>points<sp/>are<sp/>up<sp/>again.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>=<sp/><ref refid="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" kindref="member">weston_compositor_pick_view</ref>(ec,<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>,<sp/>&amp;sx,<sp/>&amp;sy);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8f5d2ab8262d54999fab8f84a4a87c4f" kindref="member">weston_touch_set_focus</ref>(<ref refid="structtouch" kindref="compound">touch</ref>,<sp/>ev);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus)<sp/>{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unexpected<sp/>condition:<sp/>We<sp/>have<sp/>non-initial<sp/>touch<sp/>but</highlight></codeline>
<codeline lineno="2399"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>there<sp/>is<sp/>no<sp/>focused<sp/>surface.</highlight></codeline>
<codeline lineno="2400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;touch<sp/>event<sp/>received<sp/>with<sp/>%d<sp/>points<sp/>down<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;but<sp/>no<sp/>surface<sp/>focused\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp);</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bindings_8c_1a0abb009d0ca7da1f924903a75672c722" kindref="member">weston_compositor_run_touch_binding</ref>(ec,<sp/><ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time,<sp/>touch_type);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__touch__grab_1a3eabeef9a5b7bb770fca3e57bade430e" kindref="member">interface</ref>-&gt;<ref refid="structweston__touch__grab__interface_1a8dbe2bb8ff5b283b195c04476f0420fa" kindref="member">down</ref>(grab,<sp/>time,<sp/>touch_id,<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab_serial<sp/>=</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_display_get_serial(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab_touch_id<sp/>=<sp/>touch_id;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab_time<sp/>=<sp/>*time;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab_x<sp/>=<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;grab_y<sp/>=<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_TOUCH_MOTION:</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ev)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__touch__grab_1a3eabeef9a5b7bb770fca3e57bade430e" kindref="member">interface</ref>-&gt;<ref refid="structweston__touch__grab__interface_1a01822269eec6e6aecff6e0be775a05d0" kindref="member">motion</ref>(grab,<sp/>time,<sp/>touch_id,<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_TOUCH_UP:</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__touch__grab_1a3eabeef9a5b7bb770fca3e57bade430e" kindref="member">interface</ref>-&gt;<ref refid="structweston__touch__grab__interface_1aaad9f0eeb38396610edd0a632ab16a4d" kindref="member">up</ref>(grab,<sp/>time,<sp/>touch_id);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8f5d2ab8262d54999fab8f84a4a87c4f" kindref="member">weston_touch_set_focus</ref>(<ref refid="structtouch" kindref="compound">touch</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><ref refid="input_8c_1abfc8d5fe86bb6841822ae86496cad315" kindref="member">get_next_touch_mode</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref><sp/>from)</highlight></codeline>
<codeline lineno="2437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(from)<sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" kindref="member">WESTON_TOUCH_MODE_PREP_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" kindref="member">WESTON_TOUCH_MODE_PREP_CALIB</ref>:</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>:</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>from;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><ref refid="input_8c_1ac5f7cdefa6f42ce7babca1289a1bab8d" kindref="member">weston_compositor_update_touch_mode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="2462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref><sp/>goal;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>,<sp/>&amp;compositor-&gt;<ref refid="structweston__compositor_1ab4c35ec45448163579d52c41d7df701b" kindref="member">seat_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/><ref refid="input_8c_1a4d586b87353ba3d18989739666a1f7dd" kindref="member">weston_seat_get_touch</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtouch" kindref="compound">touch</ref>)</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal<sp/>=<sp/><ref refid="input_8c_1abfc8d5fe86bb6841822ae86496cad315" kindref="member">get_next_touch_mode</ref>(compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref>);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref><sp/>!=<sp/>goal)<sp/>{</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref><sp/>=<sp/>goal;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston-internal_8h_1ac8f3995039375cf0814baa61932685e9" kindref="member">touch_calibrator_mode_changed</ref>(compositor);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><ref refid="input_8c_1ab0b95770a5e0b0ba87ee3a3646c64b76" kindref="member">weston_compositor_set_touch_mode_normal</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="2492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" kindref="member">WESTON_TOUCH_MODE_PREP_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" kindref="member">WESTON_TOUCH_MODE_PREP_CALIB</ref>:</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref><sp/>=<sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston-internal_8h_1ac8f3995039375cf0814baa61932685e9" kindref="member">touch_calibrator_mode_changed</ref>(compositor);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>:</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref><sp/>=<sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" kindref="member">WESTON_TOUCH_MODE_PREP_NORMAL</ref>;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5f7cdefa6f42ce7babca1289a1bab8d" kindref="member">weston_compositor_update_touch_mode</ref>(compositor);</highlight></codeline>
<codeline lineno="2506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><ref refid="input_8c_1aca9dc3aa1b251cafd259642fbea8e119" kindref="member">weston_compositor_set_touch_mode_calib</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="2517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" kindref="member">WESTON_TOUCH_MODE_PREP_CALIB</ref>:</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>:</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" kindref="member">WESTON_TOUCH_MODE_PREP_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref><sp/>=<sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston-internal_8h_1ac8f3995039375cf0814baa61932685e9" kindref="member">touch_calibrator_mode_changed</ref>(compositor);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor-&gt;<ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref><sp/>=<sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" kindref="member">WESTON_TOUCH_MODE_PREP_CALIB</ref>;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5f7cdefa6f42ce7babca1289a1bab8d" kindref="member">weston_compositor_update_touch_mode</ref>(compositor);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><ref refid="input_8c_1a9664bca52bbe38ccd9ae24b1cba4a04a" kindref="member">notify_touch_normalized</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device,</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__point2d__device__normalized" kindref="compound">weston_point2d_device_normalized</ref><sp/>*norm,</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_type)</highlight></codeline>
<codeline lineno="2565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>-&gt;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(touch_type<sp/>!=<sp/>WL_TOUCH_UP)<sp/>{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a93ffbebf74d038e66d41b7189d304e61" kindref="member">weston_touch_device_can_calibrate</ref>(device))</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(norm<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(norm<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>touchpoints<sp/>count<sp/>regardless<sp/>of<sp/>the<sp/>current<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(touch_type)<sp/>{</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_TOUCH_DOWN:</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a16652173a65db126512fe2dd510873e6" kindref="member">weston_compositor_idle_inhibit</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp++;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_TOUCH_UP:</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>can<sp/>happen<sp/>if<sp/>we<sp/>start<sp/>out<sp/>with<sp/>one<sp/>or</highlight></codeline>
<codeline lineno="2586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>more<sp/>fingers<sp/>on<sp/>the<sp/>touch<sp/>screen,<sp/>in<sp/>which</highlight></codeline>
<codeline lineno="2587"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>case<sp/>we<sp/>didn&apos;t<sp/>get<sp/>the<sp/>corresponding<sp/>down</highlight></codeline>
<codeline lineno="2588"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Unmatched<sp/>touch<sp/>up<sp/>event<sp/>on<sp/>seat<sp/>%s,<sp/>device<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a990d4933e2070b6e496317aa3108caa8" kindref="member">seat_name</ref>,<sp/>device-&gt;<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref>);</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac9515552f97ec2926c9681f8f0e7e6dc" kindref="member">weston_compositor_idle_release</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;num_tp--;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Properly<sp/>forward<sp/>the<sp/>touch<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1aeb999acbb110377ba4a1818522c8bbf6" kindref="member">weston_touch_device_get_mode</ref>(device))<sp/>{</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" kindref="member">WESTON_TOUCH_MODE_PREP_CALIB</ref>:</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4a6228e98bdd815d94bf2e45d14c58e6" kindref="member">process_touch_normal</ref>(device,<sp/>time,<sp/>touch_id,<sp/>x,<sp/>y,<sp/>touch_type);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>:</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" kindref="member">WESTON_TOUCH_MODE_PREP_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1acd3bb3ef61eea217fd90ef58a9f9ee11" kindref="member">notify_touch_calibrator</ref>(device,<sp/>time,<sp/>touch_id,</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm,<sp/>touch_type);</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><ref refid="input_8c_1a446dcf07765cfcd5a4202532caa33a7c" kindref="member">notify_touch_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device)</highlight></codeline>
<codeline lineno="2617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1aeb999acbb110377ba4a1818522c8bbf6" kindref="member">weston_touch_device_get_mode</ref>(device))<sp/>{</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" kindref="member">WESTON_TOUCH_MODE_PREP_CALIB</ref>:</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab<sp/>=<sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>-&gt;<ref refid="structweston__touch_1adff18756078cb5e6dcfa08e5d853b5d6" kindref="member">grab</ref>;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__touch__grab_1a3eabeef9a5b7bb770fca3e57bade430e" kindref="member">interface</ref>-&gt;<ref refid="structweston__touch__grab__interface_1a3402b7b6c02efdf44ef1f6e0e5a7068e" kindref="member">frame</ref>(grab);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>:</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" kindref="member">WESTON_TOUCH_MODE_PREP_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1a6b115f5667ce6e498d841c3cfb10f777" kindref="member">notify_touch_calibrator_frame</ref>(device);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5f7cdefa6f42ce7babca1289a1bab8d" kindref="member">weston_compositor_update_touch_mode</ref>(device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>-&gt;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="2633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><ref refid="input_8c_1a66bfa64e68570bd446d75208fa8f31b3" kindref="member">notify_touch_cancel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device)</highlight></codeline>
<codeline lineno="2637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab;</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1aeb999acbb110377ba4a1818522c8bbf6" kindref="member">weston_touch_device_get_mode</ref>(device))<sp/>{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" kindref="member">WESTON_TOUCH_MODE_PREP_CALIB</ref>:</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab<sp/>=<sp/>device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>-&gt;<ref refid="structweston__touch_1adff18756078cb5e6dcfa08e5d853b5d6" kindref="member">grab</ref>;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab-&gt;<ref refid="structweston__touch__grab_1a3eabeef9a5b7bb770fca3e57bade430e" kindref="member">interface</ref>-&gt;<ref refid="structweston__touch__grab__interface_1a94bcbcc0fe7656ae2ae551e049b56719" kindref="member">cancel</ref>(grab);</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>:</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" kindref="member">WESTON_TOUCH_MODE_PREP_NORMAL</ref>:</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1a3d913f6ce7333d06f408e10fbc5e0446" kindref="member">notify_touch_calibrator_cancel</ref>(device);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5f7cdefa6f42ce7babca1289a1bab8d" kindref="member">weston_compositor_update_touch_mode</ref>(device-&gt;<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>-&gt;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><ref refid="input_8c_1add032e223a5663d5d7ba5b80c90832bb" kindref="member">pointer_cursor_surface_get_label</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="2658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(buf,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;cursor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><ref refid="input_8c_1a9a3e7fe1e7a58012e6a7e8b7c6a58fb1" kindref="member">pointer_cursor_surface_committed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*es,</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>dx,<sp/>int32_t<sp/>dy)</highlight></codeline>
<codeline lineno="2665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>es-&gt;<ref refid="structweston__surface_1a8252a976b6e444f98377e6a51fc62154" kindref="member">committed_private</ref>;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>,<sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(es-&gt;<ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(es<sp/>==<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite-&gt;surface);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_x<sp/>-=<sp/>dx;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_y<sp/>-=<sp/>dy;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>)<sp/>-<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_x;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>)<sp/>-<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_y;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae1df17820e004a35b62f4a923066e9fd" kindref="member">weston_view_set_position</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite,<sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>,<sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1af0fea9467f1694ae88a2fbc5dd999480" kindref="member">empty_region</ref>(&amp;es-&gt;<ref refid="structweston__surface_1a308d5d1f9b1a3d2043a60be0cd806842" kindref="member">pending</ref>.<ref refid="structweston__surface__state_1a3ec88c1ba535b2ba4e38dc9a2eb97a32" kindref="member">input</ref>);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1af0fea9467f1694ae88a2fbc5dd999480" kindref="member">empty_region</ref>(&amp;es-&gt;<ref refid="structweston__surface_1ab288fca02a260a7eb9ca4d82b5b5f8e1" kindref="member">input</ref>);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(es))<sp/>{</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1adcf675a1f1ac2cea92e8ca52900b89c4" kindref="member">weston_layer_entry_insert</ref>(&amp;es-&gt;<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a232bc7c0608ea7161cb5d8cfca6e9a82" kindref="member">cursor_layer</ref>.<ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>,</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite-&gt;layer_link);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9605e8abe1240aa6cbe7abdd2fc7f2be" kindref="member">weston_view_update_transform</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>es-&gt;<ref refid="structweston__surface_1a01c08279440b8bcb241a6dd61956217c" kindref="member">is_mapped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite-&gt;is_mapped<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><ref refid="input_8c_1a76d8cafc1477bd537d98292142d173d3" kindref="member">pointer_set_cursor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource,</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>,<sp/>int32_t<sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="2698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface_resource)</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>wl_resource_get_user_data(surface_resource);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer-&gt;focus-&gt;surface-&gt;resource<sp/>can<sp/>be<sp/>NULL.<sp/>Surfaces<sp/>like<sp/>the</highlight></codeline>
<codeline lineno="2711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>black_surface<sp/>used<sp/>in<sp/>shell.c<sp/>for<sp/>fullscreen<sp/>don&apos;t<sp/>have</highlight></codeline>
<codeline lineno="2712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>resource,<sp/>but<sp/>can<sp/>still<sp/>have<sp/>focus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_client(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource)<sp/>!=<sp/><ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_serial<sp/>-<sp/>serial<sp/>&gt;<sp/>UINT32_MAX<sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite)</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1e3b27c20c9932892ad2a29a47bbbb24" kindref="member">pointer_unmap_sprite</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite<sp/>&amp;&amp;<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite-&gt;surface<sp/>==<sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_x<sp/>==<sp/>x<sp/>&amp;&amp;<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_y<sp/>==<sp/>y)</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite<sp/>||<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite-&gt;surface<sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compositor_8c_1a77ddbc1401698987792d00d6e7e3407d" kindref="member">weston_surface_set_role</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wl_pointer-cursor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_POINTER_ERROR_ROLE)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite)</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1e3b27c20c9932892ad2a29a47bbbb24" kindref="member">pointer_unmap_sprite</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;destroy_signal,</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite_destroy_listener);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed<sp/>=<sp/><ref refid="input_8c_1a9a3e7fe1e7a58012e6a7e8b7c6a58fb1" kindref="member">pointer_cursor_surface_committed</ref>;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed_private<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a15415df8115e81631c8dae987b7ef40c" kindref="member">weston_surface_set_label_func</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1add032e223a5663d5d7ba5b80c90832bb" kindref="member">pointer_cursor_surface_get_label</ref>);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite<sp/>=<sp/><ref refid="compositor_8c_1aa7c65b03520dde2e12d5a35f444435d5" kindref="member">weston_view_create</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;hotspot_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;buffer_ref.<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a9a3e7fe1e7a58012e6a7e8b7c6a58fb1" kindref="member">pointer_cursor_surface_committed</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a60b2b361cc447823985669f9743e8e29" kindref="member">weston_view_schedule_repaint</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><ref refid="input_8c_1a4a78f49db731474e7045a6bad6b8ddc5" kindref="member">pointer_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="2760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_pointer_interface<sp/><ref refid="input_8c_1a386ee38eb0ea8bd348c82d6e2fcc052e" kindref="member">pointer_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a76d8cafc1477bd537d98292142d173d3" kindref="member">pointer_set_cursor</ref>,</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4a78f49db731474e7045a6bad6b8ddc5" kindref="member">pointer_release</ref></highlight></codeline>
<codeline lineno="2767"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><ref refid="input_8c_1aa976a7fdd4346cd10a550d4604bae82f" kindref="member">seat_get_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>the<sp/>pointer_state<sp/>directly,<sp/>which<sp/>means<sp/>we&apos;ll</highlight></codeline>
<codeline lineno="2775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>give<sp/>a<sp/>wl_pointer<sp/>if<sp/>the<sp/>seat<sp/>has<sp/>ever<sp/>had<sp/>one<sp/>-<sp/>even<sp/>though</highlight></codeline>
<codeline lineno="2776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>spec<sp/>explicitly<sp/>states<sp/>that<sp/>this<sp/>request<sp/>only<sp/>takes<sp/>effect</highlight></codeline>
<codeline lineno="2777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>the<sp/>seat<sp/>has<sp/>the<sp/>pointer<sp/>capability.</highlight></codeline>
<codeline lineno="2778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>prevents<sp/>a<sp/>race<sp/>between<sp/>the<sp/>compositor<sp/>sending<sp/>new</highlight></codeline>
<codeline lineno="2780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>capabilities<sp/>and<sp/>the<sp/>client<sp/>trying<sp/>to<sp/>use<sp/>the<sp/>old<sp/>ones.</highlight></codeline>
<codeline lineno="2781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref><sp/>?<sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" kindref="member">pointer_state</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*cr;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_pointer_interface,</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_version(resource),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(cr,<sp/>&amp;<ref refid="input_8c_1a386ee38eb0ea8bd348c82d6e2fcc052e" kindref="member">pointer_interface</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8bc4dc292fd4b34ca53770b9c96a4c09" kindref="member">unbind_pointer_client_resource</ref>);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>pointer_state,<sp/>the<sp/>resource<sp/>is<sp/>inert,<sp/>so<sp/>there</highlight></codeline>
<codeline lineno="2798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>nothing<sp/>more<sp/>to<sp/>set<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_client<sp/>=<sp/><ref refid="input_8c_1a150a22aa9fe883468ca6635683f8f735" kindref="member">weston_pointer_ensure_pointer_client</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/><ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer_client)<sp/>{</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1a582de2b5e172f8c11188af511c8008ed" kindref="member">pointer_resources</ref>,</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>&amp;&amp;<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_client(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource)<sp/>==<sp/><ref refid="structclient" kindref="compound">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>sy;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>,</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sx,<sp/>&amp;sy);</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_send_enter(cr,</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;focus_serial,</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface-&gt;resource,</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx,<sp/>sy);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae0281a474ed7f8a0e941673f79de6230" kindref="member">pointer_send_frame</ref>(cr);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><ref refid="input_8c_1a52b68929490586f62b695434af8c3ae4" kindref="member">destroy_keyboard_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="2830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ababbba9b54cc982f49cb6f150b0a7e4c" kindref="member">remove_input_resource_from_timestamps</ref>(resource,</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><ref refid="input_8c_1a6744b635b9e89b59c40a45f48616a7d9" kindref="member">keyboard_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="2843"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_keyboard_interface<sp/><ref refid="input_8c_1ab5c29d5d7f64b2e2c8450088f5f8a035" kindref="member">keyboard_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6744b635b9e89b59c40a45f48616a7d9" kindref="member">keyboard_release</ref></highlight></codeline>
<codeline lineno="2849"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><ref refid="input_8c_1ac2987a4288e5faa3f6ab7352e75a9e89" kindref="member">seat_get_keyboard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>the<sp/>keyboard_state<sp/>directly,<sp/>which<sp/>means<sp/>we&apos;ll</highlight></codeline>
<codeline lineno="2857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>give<sp/>a<sp/>wl_keyboard<sp/>if<sp/>the<sp/>seat<sp/>has<sp/>ever<sp/>had<sp/>one<sp/>-<sp/>even<sp/>though</highlight></codeline>
<codeline lineno="2858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>spec<sp/>explicitly<sp/>states<sp/>that<sp/>this<sp/>request<sp/>only<sp/>takes<sp/>effect</highlight></codeline>
<codeline lineno="2859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>the<sp/>seat<sp/>has<sp/>the<sp/>keyboard<sp/>capability.</highlight></codeline>
<codeline lineno="2860"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>prevents<sp/>a<sp/>race<sp/>between<sp/>the<sp/>compositor<sp/>sending<sp/>new</highlight></codeline>
<codeline lineno="2862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>capabilities<sp/>and<sp/>the<sp/>client<sp/>trying<sp/>to<sp/>use<sp/>the<sp/>old<sp/>ones.</highlight></codeline>
<codeline lineno="2863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref><sp/>?<sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*cr;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_keyboard_interface,</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_version(resource),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(cr,<sp/>&amp;<ref refid="input_8c_1ab5c29d5d7f64b2e2c8450088f5f8a035" kindref="member">keyboard_interface</ref>,</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/><ref refid="input_8c_1a52b68929490586f62b695434af8c3ae4" kindref="member">destroy_keyboard_resource</ref>);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>keyboard_state,<sp/>the<sp/>resource<sp/>is<sp/>inert,<sp/>so<sp/>there</highlight></codeline>
<codeline lineno="2879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>nothing<sp/>more<sp/>to<sp/>set<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structkeyboard" kindref="compound">keyboard</ref>)</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>May<sp/>be<sp/>moved<sp/>to<sp/>focused<sp/>list<sp/>later<sp/>by<sp/>either</highlight></codeline>
<codeline lineno="2884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>weston_keyboard_set_focus<sp/>or<sp/>directly<sp/>if<sp/>this<sp/>client<sp/>is<sp/>already</highlight></codeline>
<codeline lineno="2885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>focused<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;resource_list,<sp/>wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_version(cr)<sp/>&gt;=<sp/>WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_repeat_info(cr,</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a0bdcc28a8f535b9f63f4d31803babd42" kindref="member">kb_repeat_rate</ref>,</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a5501dff49a64b01b35db831d20dbf24b" kindref="member">kb_repeat_delay</ref>);</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1adee16da18d2931849cb3581a3555f40e" kindref="member">weston_keyboard_send_keymap</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/>cr);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>&amp;&amp;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref>-&gt;resource<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_client(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref>-&gt;resource)<sp/>==<sp/><ref refid="structclient" kindref="compound">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*)<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref>;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list,</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_send_enter(cr,</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_serial,</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;resource,</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys);</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a743f6b5a33a0587944b3cf5180545cab" kindref="member">send_modifiers_to_resource</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr,</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_serial);</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>the<sp/>first<sp/>keyboard<sp/>resource<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="2914"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>client...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;focus_resource_list.prev<sp/>==</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(cr))</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data-device_8c_1aa0c093fa845ffd3417dfba422c9bc480" kindref="member">wl_data_device_set_keyboard_focus</ref>(seat);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><ref refid="input_8c_1ae3ec58fe87b9ea35ef484621e17eb9df" kindref="member">destroy_touch_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="2923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ababbba9b54cc982f49cb6f150b0a7e4c" kindref="member">remove_input_resource_from_timestamps</ref>(resource,</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;timestamps_list);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><ref refid="input_8c_1ae422683c11233661a51a76541993ed6b" kindref="member">touch_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="2936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_touch_interface<sp/><ref refid="input_8c_1a5d8eed55e64230ef2f43c677788be466" kindref="member">touch_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae422683c11233661a51a76541993ed6b" kindref="member">touch_release</ref></highlight></codeline>
<codeline lineno="2942"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><ref refid="input_8c_1a666e631cb2e4b6afece1ba81c922263f" kindref="member">seat_get_touch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>the<sp/>touch_state<sp/>directly,<sp/>which<sp/>means<sp/>we&apos;ll</highlight></codeline>
<codeline lineno="2950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>give<sp/>a<sp/>wl_touch<sp/>if<sp/>the<sp/>seat<sp/>has<sp/>ever<sp/>had<sp/>one<sp/>-<sp/>even<sp/>though</highlight></codeline>
<codeline lineno="2951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>spec<sp/>explicitly<sp/>states<sp/>that<sp/>this<sp/>request<sp/>only<sp/>takes<sp/>effect</highlight></codeline>
<codeline lineno="2952"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>the<sp/>seat<sp/>has<sp/>the<sp/>touch<sp/>capability.</highlight></codeline>
<codeline lineno="2953"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2954"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>prevents<sp/>a<sp/>race<sp/>between<sp/>the<sp/>compositor<sp/>sending<sp/>new</highlight></codeline>
<codeline lineno="2955"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>capabilities<sp/>and<sp/>the<sp/>client<sp/>trying<sp/>to<sp/>use<sp/>the<sp/>old<sp/>ones.</highlight></codeline>
<codeline lineno="2956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref><sp/>?<sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*cr;</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;wl_touch_interface,</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_version(resource),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(cr,<sp/>&amp;<ref refid="input_8c_1a5d8eed55e64230ef2f43c677788be466" kindref="member">touch_interface</ref>,</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>,<sp/><ref refid="input_8c_1ae3ec58fe87b9ea35ef484621e17eb9df" kindref="member">destroy_touch_resource</ref>);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>touch_state,<sp/>the<sp/>resource<sp/>is<sp/>inert,<sp/>so<sp/>there</highlight></codeline>
<codeline lineno="2972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>nothing<sp/>more<sp/>to<sp/>set<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtouch" kindref="compound">touch</ref>)</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_client(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus-&gt;surface-&gt;resource)<sp/>==<sp/><ref refid="structclient" kindref="compound">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;focus_resource_list,</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;resource_list,</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><ref refid="input_8c_1ab66919f56e16c052e5976f807944d9c2" kindref="member">seat_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="2988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_seat_interface<sp/><ref refid="input_8c_1a2099b7222e4d917dc21853cac9b3d408" kindref="member">seat_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa976a7fdd4346cd10a550d4604bae82f" kindref="member">seat_get_pointer</ref>,</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac2987a4288e5faa3f6ab7352e75a9e89" kindref="member">seat_get_keyboard</ref>,</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a666e631cb2e4b6afece1ba81c922263f" kindref="member">seat_get_touch</ref>,</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab66919f56e16c052e5976f807944d9c2" kindref="member">seat_release</ref>,</highlight></codeline>
<codeline lineno="2997"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><ref refid="input_8c_1aa85815b4f91e45d70b684911439a9824" kindref="member">bind_seat</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_seat_capability<sp/>caps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wl_seat_interface,<sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;seat-&gt;<ref refid="structweston__seat_1a0ad46dab28dd2bd40bc457bb2b1c4725" kindref="member">base_resource_list</ref>,<sp/>wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="input_8c_1a2099b7222e4d917dc21853cac9b3d408" kindref="member">seat_interface</ref>,<sp/>data,</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(seat))</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps<sp/>|=<sp/>WL_SEAT_CAPABILITY_POINTER;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(seat))</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps<sp/>|=<sp/>WL_SEAT_CAPABILITY_KEYBOARD;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a4d586b87353ba3d18989739666a1f7dd" kindref="member">weston_seat_get_touch</ref>(seat))</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps<sp/>|=<sp/>WL_SEAT_CAPABILITY_TOUCH;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_seat_send_capabilities(resource,<sp/>caps);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>&gt;=<sp/>WL_SEAT_NAME_SINCE_VERSION)</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_seat_send_name(resource,<sp/>seat-&gt;<ref refid="structweston__seat_1a990d4933e2070b6e496317aa3108caa8" kindref="member">seat_name</ref>);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><ref refid="input_8c_1ad47886ac59ecd19e06f0ecad52456582" kindref="member">relative_pointer_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="3027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_relative_pointer_v1_interface<sp/><ref refid="input_8c_1a57269f1574a23b04f3156c972b196f7d" kindref="member">relative_pointer_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ad47886ac59ecd19e06f0ecad52456582" kindref="member">relative_pointer_destroy</ref></highlight></codeline>
<codeline lineno="3033"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><ref refid="input_8c_1ae5f963d183090a7e03d01741e6c51a34" kindref="member">relative_pointer_manager_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="3038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="3040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><ref refid="input_8c_1a240768008f0b478a7fa2e7bc9ab5e432" kindref="member">relative_pointer_manager_get_relative_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*pointer_resource)</highlight></codeline>
<codeline lineno="3047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(pointer_resource);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*pointer_client;</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*cr;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;zwp_relative_pointer_v1_interface,</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_version(resource),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_client<sp/>=<sp/><ref refid="input_8c_1a150a22aa9fe883468ca6635683f8f735" kindref="member">weston_pointer_ensure_pointer_client</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/><ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer_client)<sp/>{</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"></highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;pointer_client-&gt;<ref refid="structweston__pointer__client_1ad68bdb2aa68277372a13a2d6e9a54ec7" kindref="member">relative_pointer_resources</ref>,</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(cr));</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(cr,<sp/>&amp;<ref refid="input_8c_1a57269f1574a23b04f3156c972b196f7d" kindref="member">relative_pointer_interface</ref>,</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8bc4dc292fd4b34ca53770b9c96a4c09" kindref="member">unbind_pointer_client_resource</ref>);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_relative_pointer_manager_v1_interface<sp/><ref refid="input_8c_1aecc02d2eeea304ca6003efeedb4391d9" kindref="member">relative_pointer_manager</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae5f963d183090a7e03d01741e6c51a34" kindref="member">relative_pointer_manager_destroy</ref>,</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a240768008f0b478a7fa2e7bc9ab5e432" kindref="member">relative_pointer_manager_get_relative_pointer</ref>,</highlight></codeline>
<codeline lineno="3076"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><ref refid="input_8c_1af8d72305401b3576fd7b105419a55b55" kindref="member">bind_relative_pointer_manager</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_relative_pointer_manager_v1_interface,</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="input_8c_1aecc02d2eeea304ca6003efeedb4391d9" kindref="member">relative_pointer_manager</ref>,</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor,</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><ref refid="input_8c_1a9f979dcc0b012fa585f4393d774fe053" kindref="member">weston_compositor_set_xkb_rule_names</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xkb_rule_names<sp/>*names)</highlight></codeline>
<codeline lineno="3097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ec-&gt;<ref refid="structweston__compositor_1a7dc311ad4df22872764ddf01e9ac1a27" kindref="member">xkb_context</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a7dc311ad4df22872764ddf01e9ac1a27" kindref="member">xkb_context</ref><sp/>=<sp/>xkb_context_new(XKB_CONTEXT_NO_FLAGS);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ec-&gt;<ref refid="structweston__compositor_1a7dc311ad4df22872764ddf01e9ac1a27" kindref="member">xkb_context</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>XKB<sp/>context\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(names)</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref><sp/>=<sp/>*names;</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.rules)</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.rules<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;evdev&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.model)</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.model<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;pc105&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.layout)</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.layout<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;us&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><ref refid="input_8c_1ae58676c71d357045aae4617416f1281b" kindref="member">weston_xkb_info_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*xkb_info)</highlight></codeline>
<codeline lineno="3120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--xkb_info-&gt;<ref refid="structweston__xkb__info_1a77faf944e9f66cbfc68745fa8b4353e8" kindref="member">ref_count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_keymap_unref(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os_ro_anonymous_file_destroy(xkb_info-&gt;<ref refid="structweston__xkb__info_1a36fe2ba7b81f3d509533f1ef70784d70" kindref="member">keymap_rofile</ref>);</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(xkb_info);</highlight></codeline>
<codeline lineno="3128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><ref refid="input_8c_1a624242cb87819b26602d5b14cb0392ca" kindref="member">weston_compositor_xkb_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec)</highlight></codeline>
<codeline lineno="3132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.rules);</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.model);</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.layout);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.variant);</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.options);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ec-&gt;<ref refid="structweston__compositor_1a5393cfe8cf2c54f154478bf2f53e77a9" kindref="member">xkb_info</ref>)</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae58676c71d357045aae4617416f1281b" kindref="member">weston_xkb_info_destroy</ref>(ec-&gt;<ref refid="structweston__compositor_1a5393cfe8cf2c54f154478bf2f53e77a9" kindref="member">xkb_info</ref>);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_context_unref(ec-&gt;<ref refid="structweston__compositor_1a7dc311ad4df22872764ddf01e9ac1a27" kindref="member">xkb_context</ref>);</highlight></codeline>
<codeline lineno="3142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><ref refid="input_8c_1a81d5d15190a33d2c4d7ebf25f4858f0e" kindref="member">weston_xkb_info_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xkb_keymap<sp/>*<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>)</highlight></codeline>
<codeline lineno="3146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*keymap_string;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keymap_size;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*xkb_info<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*xkb_info);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_info<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref><sp/>=<sp/>xkb_keymap_ref(<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1a77faf944e9f66cbfc68745fa8b4353e8" kindref="member">ref_count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1a20c92d2eab0f17a1a91abfdfaca354a7" kindref="member">shift_mod</ref><sp/>=<sp/>xkb_keymap_mod_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_MOD_NAME_SHIFT);</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1a272311950ec6e63fbb89a108f44e2f27" kindref="member">caps_mod</ref><sp/>=<sp/>xkb_keymap_mod_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_MOD_NAME_CAPS);</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1aa84cbf49813a2ecede5751c3df3b8752" kindref="member">ctrl_mod</ref><sp/>=<sp/>xkb_keymap_mod_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_MOD_NAME_CTRL);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1a4d4ab9033a300ab5a8785c4c266cc951" kindref="member">alt_mod</ref><sp/>=<sp/>xkb_keymap_mod_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_MOD_NAME_ALT);</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1a381a40f2f682b0732f2e4e7a06718011" kindref="member">mod2_mod</ref><sp/>=<sp/>xkb_keymap_mod_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mod2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1af4136491459d7f15288082b6d9554f7b" kindref="member">mod3_mod</ref><sp/>=<sp/>xkb_keymap_mod_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mod3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1acb0f8be28da3f61619135771f4c49ca9" kindref="member">super_mod</ref><sp/>=<sp/>xkb_keymap_mod_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_MOD_NAME_LOGO);</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1aa3726d817052f5bee17722ee8b99b0ea" kindref="member">mod5_mod</ref><sp/>=<sp/>xkb_keymap_mod_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mod5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"></highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1adf643f03c988cbe298aa7caaad2cff79" kindref="member">num_led</ref><sp/>=<sp/>xkb_keymap_led_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_LED_NAME_NUM);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1a2f7d62a1e3f89a9ae7ad1752a484c95c" kindref="member">caps_led</ref><sp/>=<sp/>xkb_keymap_led_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_LED_NAME_CAPS);</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1ab90ebf57958243471257fb1560d8f44e" kindref="member">scroll_led</ref><sp/>=<sp/>xkb_keymap_led_get_index(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_LED_NAME_SCROLL);</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymap_string<sp/>=<sp/>xkb_keymap_get_as_string(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>,</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XKB_KEYMAP_FORMAT_TEXT_V1);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymap_string<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>get<sp/>string<sp/>version<sp/>of<sp/>keymap\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_keymap;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymap_size<sp/>=<sp/>strlen(keymap_string)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_info-&gt;<ref refid="structweston__xkb__info_1a36fe2ba7b81f3d509533f1ef70784d70" kindref="member">keymap_rofile</ref><sp/>=<sp/>os_ro_anonymous_file_create(keymap_size,</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymap_string);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(keymap_string);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xkb_info-&gt;<ref refid="structweston__xkb__info_1a36fe2ba7b81f3d509533f1ef70784d70" kindref="member">keymap_rofile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>anonymous<sp/>file<sp/>for<sp/>keymap\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_keymap;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xkb_info;</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal">err_keymap:</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_keymap_unref(xkb_info-&gt;<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(xkb_info);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><ref refid="input_8c_1add2436b2aa237b41ec428f9f53f5350d" kindref="member">weston_compositor_build_global_keymap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec)</highlight></codeline>
<codeline lineno="3207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xkb_keymap<sp/>*keymap;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ec-&gt;<ref refid="structweston__compositor_1a5393cfe8cf2c54f154478bf2f53e77a9" kindref="member">xkb_info</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keymap<sp/>=<sp/>xkb_keymap_new_from_names(ec-&gt;<ref refid="structweston__compositor_1a7dc311ad4df22872764ddf01e9ac1a27" kindref="member">xkb_context</ref>,</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>,</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymap<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>compile<sp/>global<sp/>XKB<sp/>keymap\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>tried<sp/>rules<sp/>%s,<sp/>model<sp/>%s,<sp/>layout<sp/>%s,<sp/>variant<sp/>%s,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;options<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.rules,<sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.model,</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.layout,<sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.variant,</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>.options);</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="structweston__compositor_1a5393cfe8cf2c54f154478bf2f53e77a9" kindref="member">xkb_info</ref><sp/>=<sp/><ref refid="input_8c_1a81d5d15190a33d2c4d7ebf25f4858f0e" kindref="member">weston_xkb_info_create</ref>(keymap);</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_keymap_unref(keymap);</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ec-&gt;<ref refid="structweston__compositor_1a5393cfe8cf2c54f154478bf2f53e77a9" kindref="member">xkb_info</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><ref refid="input_8c_1a2fdbc776f3b6ac9b03828f05d9b01ba1" kindref="member">weston_seat_update_keymap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xkb_keymap<sp/>*keymap)</highlight></codeline>
<codeline lineno="3236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>||<sp/>!keymap)</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_keymap_unref(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;pending_keymap);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;pending_keymap<sp/>=<sp/>xkb_keymap_ref(keymap);</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys.size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a239417694c3d84500896626f49e84843" kindref="member">update_keymap</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><ref refid="input_8c_1a6ee7365931e5b81e995c640d1bf158e0" kindref="member">weston_seat_init_keyboard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xkb_keymap<sp/>*keymap)</highlight></codeline>
<codeline lineno="3251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a076fad97e8b005388847b2dd9b6339c0" kindref="member">weston_keyboard_create</ref>();</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>allocate<sp/>weston<sp/>keyboard<sp/>struct\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keymap<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info<sp/>=<sp/><ref refid="input_8c_1a81d5d15190a33d2c4d7ebf25f4858f0e" kindref="member">weston_xkb_info_create</ref>(keymap);</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1add2436b2aa237b41ec428f9f53f5350d" kindref="member">weston_compositor_build_global_keymap</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info<sp/>=<sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a5393cfe8cf2c54f154478bf2f53e77a9" kindref="member">xkb_info</ref>;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;ref_count++;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref><sp/>=<sp/>xkb_state_new(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;keymap);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>initialise<sp/>XKB<sp/>state\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.leds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref><sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat<sp/>=<sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info)</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae58676c71d357045aae4617416f1281b" kindref="member">weston_xkb_info_destroy</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info);</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><ref refid="input_8c_1a945ada43625733a73cf3e94928a11a1c" kindref="member">weston_keyboard_reset_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>)</highlight></codeline>
<codeline lineno="3304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;seat;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xkb_state<sp/>*state;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>xkb_state_new(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_info-&gt;keymap);</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!state)<sp/>{</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>reset<sp/>XKB<sp/>state\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_unref(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref><sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;xkb_state.leds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><ref refid="input_8c_1adc5a8c2cbe300f6f0be4c17241c1f779" kindref="member">weston_seat_release_keyboard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="3323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref>--;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(seat-&gt;<ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref><sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5c8f2d331758909aabe3ab0a320110a" kindref="member">weston_keyboard_set_focus</ref>(seat-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3abbb42b9ce77717241e818ddbeaec72" kindref="member">weston_keyboard_cancel_grab</ref>(seat-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref>);</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a945ada43625733a73cf3e94928a11a1c" kindref="member">weston_keyboard_reset_state</ref>(seat-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref>);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(seat);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><ref refid="input_8c_1a0f241f297507f22da6465509d03c9f33" kindref="member">weston_seat_init_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="3336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" kindref="member">pointer_state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" kindref="member">pointer_device_count</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" kindref="member">pointer_device_count</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1afee0bcc0fa4f06f429c8012bc2dcf0fd" kindref="member">weston_pointer_create</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" kindref="member">pointer_state</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" kindref="member">pointer_device_count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat<sp/>=<sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><ref refid="input_8c_1a9be3e32a8ef28ef2011c1b084494a18b" kindref="member">weston_seat_release_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" kindref="member">pointer_state</ref>;</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" kindref="member">pointer_device_count</ref>--;</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" kindref="member">pointer_device_count</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a3796f149723a5e49d6b176837a50d093" kindref="member">weston_pointer_clear_focus</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2f515f99d9e3c105bf4ad49c98820da0" kindref="member">weston_pointer_cancel_grab</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sprite)</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1e3b27c20c9932892ad2a29a47bbbb24" kindref="member">pointer_unmap_sprite</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1af9f342d9ab953c757c6c5dd86159ab9e" kindref="member">weston_pointer_reset_state</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seat-&gt;pointer<sp/>is<sp/>intentionally<sp/>not<sp/>destroyed<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="3374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>newly<sp/>attached<sp/>pointer<sp/>on<sp/>this<sp/>seat<sp/>will<sp/>retain</highlight></codeline>
<codeline lineno="3375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>previous<sp/>cursor<sp/>co-ordinates.</highlight></codeline>
<codeline lineno="3376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><ref refid="input_8c_1a04b3f51a81712517ce6ed5a71adf6c5a" kindref="member">weston_seat_init_touch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" kindref="member">touch_device_count</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" kindref="member">touch_device_count</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/><ref refid="input_8c_1aaf46510eb5337f76a83c0cc07d331fdd" kindref="member">weston_touch_create</ref>();</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref><sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" kindref="member">touch_device_count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;seat<sp/>=<sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><ref refid="input_8c_1a5d6a767a8449fe1bd7ebe9aeaf199ea8" kindref="member">weston_seat_release_touch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" kindref="member">touch_device_count</ref>--;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" kindref="member">touch_device_count</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8f5d2ab8262d54999fab8f84a4a87c4f" kindref="member">weston_touch_set_focus</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1acf3fb720c963c7189e0a458bd55b7855" kindref="member">weston_touch_cancel_grab</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref>);</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a80b97eed061608712716f3b9673fb212" kindref="member">weston_touch_reset_state</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref>);</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a714754a5c067ab8a07822e4395ac4f17" kindref="member">seat_send_updated_caps</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><ref refid="input_8c_1a8e69f6e66263be7757aadcc5f1528f71" kindref="member">weston_seat_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seat_name)</highlight></codeline>
<codeline lineno="3418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ac2277c3fa30a4bde31212b646ef3caca" kindref="member">selection_data_source</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a0ad46dab28dd2bd40bc457bb2b1c4725" kindref="member">base_resource_list</ref>);</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a407370ba48e4a88858215df78a38c6ee" kindref="member">selection_signal</ref>);</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab591872d026a2214c3ea9db760fb32ba" kindref="member">drag_resource_list</ref>);</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ae7acf8dcc27a2d3b68de44934f28d413" kindref="member">destroy_signal</ref>);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a143d1eca453c6cdf060ca8aa36567da5" kindref="member">updated_caps_signal</ref>);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a1b34aeda9c9c8c34d4888876a9a51f52" kindref="member">global</ref><sp/>=<sp/>wl_global_create(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,<sp/>&amp;wl_seat_interface,</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN(wl_seat_interface.version,<sp/>7),</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>,<sp/><ref refid="input_8c_1aa85815b4f91e45d70b684911439a9824" kindref="member">bind_seat</ref>);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref><sp/>=<sp/>ec;</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a990d4933e2070b6e496317aa3108caa8" kindref="member">seat_name</ref><sp/>=<sp/>strdup(seat_name);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(ec-&gt;<ref refid="structweston__compositor_1ab4c35ec45448163579d52c41d7df701b" kindref="member">seat_list</ref>.prev,<sp/>&amp;<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a105bb1c3da70be29d32ab90882757d18" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="clipboard_8c_1a6b4f345ba46e19810219d1414a676716" kindref="member">clipboard_create</ref>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;ec-&gt;<ref refid="structweston__compositor_1a4c1ce59b05fd209548f06c0dcf7c14e2" kindref="member">seat_created_signal</ref>,<sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><ref refid="input_8c_1a4f4636b5443315bd1415369ed427d14c" kindref="member">weston_seat_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;seat-&gt;<ref refid="structweston__seat_1a0ad46dab28dd2bd40bc457bb2b1c4725" kindref="member">base_resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_for_each(resource,<sp/>&amp;seat-&gt;<ref refid="structweston__seat_1ab591872d026a2214c3ea9db760fb32ba" kindref="member">drag_resource_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(resource,<sp/>NULL);</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;seat-&gt;<ref refid="structweston__seat_1a0ad46dab28dd2bd40bc457bb2b1c4725" kindref="member">base_resource_list</ref>);</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;seat-&gt;<ref refid="structweston__seat_1ab591872d026a2214c3ea9db760fb32ba" kindref="member">drag_resource_list</ref>);</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;seat-&gt;<ref refid="structweston__seat_1a105bb1c3da70be29d32ab90882757d18" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1a0304b3719787b35a90b1897fa6284842" kindref="member">saved_kbd_focus</ref>)</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;seat-&gt;<ref refid="structweston__seat_1a2b1b5fc5223b4e63713dafb93b37d4ed" kindref="member">saved_kbd_focus_listener</ref>.link);</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" kindref="member">pointer_state</ref>)</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a159d30af69d470066e352de407440014" kindref="member">weston_pointer_destroy</ref>(seat-&gt;<ref refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" kindref="member">pointer_state</ref>);</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref>)</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a5a59b68e63dd8818845a12c1a9a2995e" kindref="member">weston_keyboard_destroy</ref>(seat-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref>);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref>)</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a0e41c3d72f75b61d33af3babbc6ca4be" kindref="member">weston_touch_destroy</ref>(seat-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref>);</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"></highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(seat-&gt;<ref refid="structweston__seat_1a990d4933e2070b6e496317aa3108caa8" kindref="member">seat_name</ref>);</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_global_destroy(seat-&gt;<ref refid="structweston__seat_1a1b34aeda9c9c8c34d4888876a9a51f52" kindref="member">global</ref>);</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"></highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;seat-&gt;<ref refid="structweston__seat_1ae7acf8dcc27a2d3b68de44934f28d413" kindref="member">destroy_signal</ref>,<sp/>seat);</highlight></codeline>
<codeline lineno="3476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref>)</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref>;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" kindref="member">pointer_device_count</ref>)</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" kindref="member">pointer_state</ref>;</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"></highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_locked_pointer_v1_interface<sp/><ref refid="input_8c_1a12ed31fcd5fca9404f09b7bce49ef20b" kindref="member">locked_pointer_interface</ref>;</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_confined_pointer_v1_interface<sp/><ref refid="input_8c_1a0cdd83341db6850c0dbb8a826eaaa7c2" kindref="member">confined_pointer_interface</ref>;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3" kindref="member">pointer_constraint_type</ref></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><ref refid="input_8c_1a4cd05a686ad743270dd715e4041bf4e2" kindref="member">pointer_constraint_get_type</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="3527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_instance_of(constraint-&gt;<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_locked_pointer_v1_interface,</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1a12ed31fcd5fca9404f09b7bce49ef20b" kindref="member">locked_pointer_interface</ref>))<sp/>{</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a4e795eaad3d7c6a15a7497a1ab8ccbb8" kindref="member">POINTER_CONSTRAINT_TYPE_LOCK</ref>;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_instance_of(constraint-&gt;<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_confined_pointer_v1_interface,</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1a0cdd83341db6850c0dbb8a826eaaa7c2" kindref="member">confined_pointer_interface</ref>))<sp/>{</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a5bdf810a5c747165edb552cfcc035ef6" kindref="member">POINTER_CONSTRAINT_TYPE_CONFINE</ref>;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><ref refid="input_8c_1a8437d8a6beab807c4cb5d8b8765c7e68" kindref="member">pointer_constraint_notify_activated</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="3544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource<sp/>=<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a4cd05a686ad743270dd715e4041bf4e2" kindref="member">pointer_constraint_get_type</ref>(constraint))<sp/>{</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a4e795eaad3d7c6a15a7497a1ab8ccbb8" kindref="member">POINTER_CONSTRAINT_TYPE_LOCK</ref>:</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zwp_locked_pointer_v1_send_locked(resource);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a5bdf810a5c747165edb552cfcc035ef6" kindref="member">POINTER_CONSTRAINT_TYPE_CONFINE</ref>:</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zwp_confined_pointer_v1_send_confined(resource);</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><ref refid="input_8c_1aec9a947870c53a2feadc7996ad547a58" kindref="member">pointer_constraint_notify_deactivated</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="3559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource<sp/>=<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a4cd05a686ad743270dd715e4041bf4e2" kindref="member">pointer_constraint_get_type</ref>(constraint))<sp/>{</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a4e795eaad3d7c6a15a7497a1ab8ccbb8" kindref="member">POINTER_CONSTRAINT_TYPE_LOCK</ref>:</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zwp_locked_pointer_v1_send_unlocked(resource);</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a5bdf810a5c747165edb552cfcc035ef6" kindref="member">POINTER_CONSTRAINT_TYPE_CONFINE</ref>:</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zwp_confined_pointer_v1_send_unconfined(resource);</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><ref refid="input_8c_1a6b0effb9fcaa26160b9b2db2ee2913ca" kindref="member">get_pointer_constraint_for_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="3575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(constraint,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pointer_constraints,<sp/><ref refid="structweston__pointer__constraint_1ab329036693caeb2778aa17f1628c6e34" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraint-&gt;<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref><sp/>==<sp/><ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><ref refid="input_8c_1a4d586b87353ba3d18989739666a1f7dd" kindref="member">weston_seat_get_touch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" kindref="member">touch_device_count</ref>)</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>-&gt;<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref>;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><ref refid="input_8c_1a46e90691191fd2cdc9fab021d6238829" kindref="member">weston_seat_set_keyboard_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>,</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="3616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor<sp/>=<sp/>seat-&gt;<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__activation__data" kindref="compound">weston_surface_activation_data</ref><sp/>activation_data;</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>&amp;&amp;<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac5c8f2d331758909aabe3ab0a320110a" kindref="member">weston_keyboard_set_focus</ref>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data-device_8c_1aa0c093fa845ffd3417dfba422c9bc480" kindref="member">wl_data_device_set_keyboard_focus</ref>(<ref refid="structweston__surface__activation__data_1af2492e7d45e19f49d8a14fd842540ee1" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2a90e2b5b12e5a15da58fc00ec626eab" kindref="member">inc_activate_serial</ref>(compositor);</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activation_data<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__activation__data" kindref="compound">weston_surface_activation_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.surface<sp/>=<sp/><ref refid="structweston__surface__activation__data_1a4b47b09a3f9828f4688b6789b4b16331" kindref="member">surface</ref>,</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seat<sp/>=<sp/><ref refid="structweston__surface__activation__data_1af2492e7d45e19f49d8a14fd842540ee1" kindref="member">seat</ref>,</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;compositor-&gt;<ref refid="structweston__compositor_1a952d2d5dad528b120372c5cd95e46dad" kindref="member">activate_signal</ref>,<sp/>&amp;activation_data);</highlight></codeline>
<codeline lineno="3633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><ref refid="input_8c_1abbe71a9c3a531a5dcc00b0593f90562c" kindref="member">enable_pointer_constraint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint,</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view)</highlight></codeline>
<codeline lineno="3638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref><sp/>=<sp/>view;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8437d8a6beab807c4cb5d8b8765c7e68" kindref="member">pointer_constraint_notify_activated</ref>(constraint);</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1ba15fe33ad21e716157d11ef4b95bfc" kindref="member">weston_pointer_start_grab</ref>(constraint-&gt;<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref>,<sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>);</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a19a1c71aa8f0199a525c6f87c53a6fe9" kindref="member">surface_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a19a1c71aa8f0199a525c6f87c53a6fe9" kindref="member">surface_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="3645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><ref refid="input_8c_1a6c2a0bb09e2fcd7591902845d9564cae" kindref="member">is_pointer_constraint_enabled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="3649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><ref refid="input_8c_1a6fa9f153c6ac7300527740b0eaca1340" kindref="member">weston_pointer_constraint_disable</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="3655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aec9a947870c53a2feadc7996ad547a58" kindref="member">pointer_constraint_notify_deactivated</ref>(constraint);</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae5aa08a5ae051943a460449fac42b8a9" kindref="member">weston_pointer_end_grab</ref>(constraint-&gt;<ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>.<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="3659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"></highlight></codeline>
<codeline lineno="3661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><ref refid="input_8c_1ab181ee2bacdbc99648f9b7aa14be7437" kindref="member">weston_pointer_constraint_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="3663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a6c2a0bb09e2fcd7591902845d9564cae" kindref="member">is_pointer_constraint_enabled</ref>(constraint))</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6fa9f153c6ac7300527740b0eaca1340" kindref="member">weston_pointer_constraint_disable</ref>(constraint);</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1ab12460780ecdf53855c1fffc5fa345cb" kindref="member">pointer_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a19a1c71aa8f0199a525c6f87c53a6fe9" kindref="member">surface_destroy_listener</ref>.link);</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a5fb91060ed420411b649ee4947b95107" kindref="member">surface_commit_listener</ref>.link);</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a272b3b6b9f9e3e55b72c4d6ed4f69597" kindref="member">surface_activate_listener</ref>.link);</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_user_data(constraint-&gt;<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1ab329036693caeb2778aa17f1628c6e34" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(constraint);</highlight></codeline>
<codeline lineno="3676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><ref refid="input_8c_1a6a2931d2a078a5ca98a2cc6469e397e0" kindref="member">disable_pointer_constraint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="3680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(constraint-&gt;<ref refid="structweston__pointer__constraint_1adbe2c7557a0df0512afcd17352009c92" kindref="member">lifetime</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZWP_POINTER_CONSTRAINTS_V1_LIFETIME_ONESHOT:</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab181ee2bacdbc99648f9b7aa14be7437" kindref="member">weston_pointer_constraint_destroy</ref>(constraint);</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZWP_POINTER_CONSTRAINTS_V1_LIFETIME_PERSISTENT:</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6fa9f153c6ac7300527740b0eaca1340" kindref="member">weston_pointer_constraint_disable</ref>(constraint);</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><ref refid="input_8c_1aeade43e6372bce448cb344c58099ec4c" kindref="member">is_within_constraint_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint,</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>wl_fixed_t<sp/>sy)</highlight></codeline>
<codeline lineno="3694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a9cde684c20bf346ea28724b3a5d2c559" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>constraint_region;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;constraint_region);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;constraint_region,</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;input,</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>pixman_region32_contains_point(&amp;constraint_region,</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_int(sx),</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_int(sy),</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;constraint_region);</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><ref refid="input_8c_1a82e3d73d65540b5e1de0484938c63e95" kindref="member">maybe_enable_pointer_constraint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="3714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a9cde684c20bf346ea28724b3a5d2c559" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*vit;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;seat;</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Postpone<sp/>if<sp/>no<sp/>view<sp/>of<sp/>the<sp/>surface<sp/>was<sp/>most<sp/>recently<sp/>clicked.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(vit,<sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;views,<sp/>surface_link)<sp/>{</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vit-&gt;<ref refid="structweston__view_1a352296fe09a8b12565a295c528cac665" kindref="member">click_to_activate_serial</ref><sp/>==</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;activate_serial)<sp/>{</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>vit;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Postpone<sp/>if<sp/>surface<sp/>doesn&apos;t<sp/>have<sp/>keyboard<sp/>focus.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(seat);</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>||<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>!=<sp/><ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Postpone<sp/>constraint<sp/>if<sp/>the<sp/>pointer<sp/>is<sp/>not<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="3739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>constraint<sp/>region.</highlight></codeline>
<codeline lineno="3740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a0e9c9a3eaa8a28e392585c3fc0a92c0f" kindref="member">weston_view_from_global</ref>(view,</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>),</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_int(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1aeade43e6372bce448cb344c58099ec4c" kindref="member">is_within_constraint_region</ref>(constraint,</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_int(x),</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_int(y)))</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1abbe71a9c3a531a5dcc00b0593f90562c" kindref="member">enable_pointer_constraint</ref>(constraint,<sp/>view);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><ref refid="input_8c_1a15c0c29937e579e0227df6db20c24457" kindref="member">locked_pointer_grab_pointer_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="3755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><ref refid="input_8c_1ab01999adefdff40e6385f45a426a44ad" kindref="member">locked_pointer_grab_pointer_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="3762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a53cffb54e97d763ba736c3f6145244a6" kindref="member">pointer_send_relative_motion</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="3764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><ref refid="input_8c_1ac6d7a969a927ca30769749d119764fa8" kindref="member">locked_pointer_grab_pointer_button</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>button,</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>state_w)</highlight></codeline>
<codeline lineno="3771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1acff4837ae0f91d176b516b195aee7947" kindref="member">weston_pointer_send_button</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>time,<sp/>button,<sp/>state_w);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><ref refid="input_8c_1acee67c7beada1e3b933022aefe4711e4" kindref="member">locked_pointer_grab_pointer_axis</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="3779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ad395050e7ec12082c2ee18c9ff42dda2" kindref="member">weston_pointer_send_axis</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="3781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><ref refid="input_8c_1a4a8bdb820161ed591087c98a821f1503" kindref="member">locked_pointer_grab_pointer_axis_source</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>source)</highlight></codeline>
<codeline lineno="3786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a70f2579a25e836fc05a631986bfac65b" kindref="member">weston_pointer_send_axis_source</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>source);</highlight></codeline>
<codeline lineno="3788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><ref refid="input_8c_1a70ad2215203cfe677a41365daef7a48c" kindref="member">locked_pointer_grab_pointer_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="3792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2bb5b53363fe73ab8a6b0f52e5415ff3" kindref="member">weston_pointer_send_frame</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="3794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><ref refid="input_8c_1ad061019bd860c9f8e1a8dd66f21d08bd" kindref="member">locked_pointer_grab_pointer_cancel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="3798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(<ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref>,<sp/><ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>);</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6a2931d2a078a5ca98a2cc6469e397e0" kindref="member">disable_pointer_constraint</ref>(constraint);</highlight></codeline>
<codeline lineno="3803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ace86975fb49050b2cc12435fd50709fd" kindref="member">locked_pointer_grab_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a15c0c29937e579e0227df6db20c24457" kindref="member">locked_pointer_grab_pointer_focus</ref>,</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab01999adefdff40e6385f45a426a44ad" kindref="member">locked_pointer_grab_pointer_motion</ref>,</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac6d7a969a927ca30769749d119764fa8" kindref="member">locked_pointer_grab_pointer_button</ref>,</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1acee67c7beada1e3b933022aefe4711e4" kindref="member">locked_pointer_grab_pointer_axis</ref>,</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4a8bdb820161ed591087c98a821f1503" kindref="member">locked_pointer_grab_pointer_axis_source</ref>,</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a70ad2215203cfe677a41365daef7a48c" kindref="member">locked_pointer_grab_pointer_frame</ref>,</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ad061019bd860c9f8e1a8dd66f21d08bd" kindref="member">locked_pointer_grab_pointer_cancel</ref>,</highlight></codeline>
<codeline lineno="3814"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><ref refid="input_8c_1a22bc7866b0795c7e41ca63c1192e5af1" kindref="member">pointer_constraint_constrain_resource_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="3818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!constraint)</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab181ee2bacdbc99648f9b7aa14be7437" kindref="member">weston_pointer_constraint_destroy</ref>(constraint);</highlight></codeline>
<codeline lineno="3826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><ref refid="input_8c_1a7c02acd935340653669d8117b035c8db" kindref="member">pointer_constraint_surface_activate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="3830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__activation__data" kindref="compound">weston_surface_activation_data</ref><sp/>*activation<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*focus<sp/>=<sp/>activation-&gt;<ref refid="structweston__surface__activation__data_1a4b47b09a3f9828f4688b6789b4b16331" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref>,</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer__constraint_1a272b3b6b9f9e3e55b72c4d6ed4f69597" kindref="member">surface_activate_listener</ref>);</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_constraint_surface;</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(activation-&gt;<ref refid="structweston__surface__activation__data_1af2492e7d45e19f49d8a14fd842540ee1" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structpointer" kindref="compound">pointer</ref>)</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_constraint_surface<sp/>=</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6b0effb9fcaa26160b9b2db2ee2913ca" kindref="member">get_pointer_constraint_for_pointer</ref>(focus,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>)<sp/>==<sp/>constraint;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_constraint_surface<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="input_8c_1a6c2a0bb09e2fcd7591902845d9564cae" kindref="member">is_pointer_constraint_enabled</ref>(constraint))</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a82e3d73d65540b5e1de0484938c63e95" kindref="member">maybe_enable_pointer_constraint</ref>(constraint);</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_constraint_surface<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6c2a0bb09e2fcd7591902845d9564cae" kindref="member">is_pointer_constraint_enabled</ref>(constraint))</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6a2931d2a078a5ca98a2cc6469e397e0" kindref="member">disable_pointer_constraint</ref>(constraint);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><ref refid="input_8c_1a596c0eda6a481dd2692661405620dc84" kindref="member">pointer_constraint_pointer_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="3856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref>,</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer__constraint_1ab12460780ecdf53855c1fffc5fa345cb" kindref="member">pointer_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab181ee2bacdbc99648f9b7aa14be7437" kindref="member">weston_pointer_constraint_destroy</ref>(constraint);</highlight></codeline>
<codeline lineno="3862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><ref refid="input_8c_1aa97383840d83390c301e0e19a47190a3" kindref="member">pointer_constraint_surface_destroyed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="3866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref>,</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer__constraint_1a19a1c71aa8f0199a525c6f87c53a6fe9" kindref="member">surface_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab181ee2bacdbc99648f9b7aa14be7437" kindref="member">weston_pointer_constraint_destroy</ref>(constraint);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><ref refid="input_8c_1a06415cd2732049b74d66f919f10756d6" kindref="member">pointer_constraint_surface_committed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="3876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(listener,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref>,</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer__constraint_1a5fb91060ed420411b649ee4947b95107" kindref="member">surface_commit_listener</ref>);</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraint-&gt;<ref refid="structweston__pointer__constraint_1a0385e5cc132cb587a6d8fd75bdbf8a01" kindref="member">region_is_pending</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a0385e5cc132cb587a6d8fd75bdbf8a01" kindref="member">region_is_pending</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>,</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>);</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>);</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>);</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraint-&gt;<ref refid="structweston__pointer__constraint_1a2c63f96b19a360e7f806479b03b1d424" kindref="member">hint_is_pending</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a2c63f96b19a360e7f806479b03b1d424" kindref="member">hint_is_pending</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a2c63f96b19a360e7f806479b03b1d424" kindref="member">hint_is_pending</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a309986abb6778e82f4bac038cc1a492b" kindref="member">hint_x</ref><sp/>=<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a3c5710725d229e9cd0dc5b6ca39d84b4" kindref="member">hint_x_pending</ref>;</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a9c5fb7aadfd8db4048cd6516ddcc0078" kindref="member">hint_y</ref><sp/>=<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a44f256161ff4942eb54808a0b92a5ea1" kindref="member">hint_y_pending</ref>;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a4cd05a686ad743270dd715e4041bf4e2" kindref="member">pointer_constraint_get_type</ref>(constraint)<sp/>==</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa865376fa9d99769c57603e462dee3e3a5bdf810a5c747165edb552cfcc035ef6" kindref="member">POINTER_CONSTRAINT_TYPE_CONFINE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6c2a0bb09e2fcd7591902845d9564cae" kindref="member">is_pointer_constraint_enabled</ref>(constraint))</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ab6e3b03423f5c77343adb86d3d824c13" kindref="member">maybe_warp_confined_pointer</ref>(constraint);</highlight></codeline>
<codeline lineno="3901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight></codeline>
<codeline lineno="3903"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><ref refid="input_8c_1aab54f16282a7ad71c44044f4cbeb71d3" kindref="member">weston_pointer_constraint_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>,</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>zwp_pointer_constraints_v1_lifetime<sp/><ref refid="structweston__pointer__constraint_1adbe2c7557a0df0512afcd17352009c92" kindref="member">lifetime</ref>,</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*cr,</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>*grab_interface)</highlight></codeline>
<codeline lineno="3910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*constraint);</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!constraint)</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1adbe2c7557a0df0512afcd17352009c92" kindref="member">lifetime</ref><sp/>=<sp/><ref refid="structweston__pointer__constraint_1adbe2c7557a0df0512afcd17352009c92" kindref="member">lifetime</ref>;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>);</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;pointer_constraints,<sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1ab329036693caeb2778aa17f1628c6e34" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a9cde684c20bf346ea28724b3a5d2c559" kindref="member">surface</ref><sp/>=<sp/><ref refid="structweston__pointer__constraint_1a9cde684c20bf346ea28724b3a5d2c559" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref><sp/>=<sp/><ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref><sp/>=<sp/>cr;</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>.<ref refid="structweston__pointer__grab_1a4e8a8a94bcef315f44b2039fe44549ad" kindref="member">interface</ref><sp/>=<sp/>grab_interface;</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>,</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>-&gt;region);</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1416f09293d589dc99655700e0a72b53" kindref="member">region_init_infinite</ref>(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a272b3b6b9f9e3e55b72c4d6ed4f69597" kindref="member">surface_activate_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a7c02acd935340653669d8117b035c8db" kindref="member">pointer_constraint_surface_activate</ref>;</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a19a1c71aa8f0199a525c6f87c53a6fe9" kindref="member">surface_destroy_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa97383840d83390c301e0e19a47190a3" kindref="member">pointer_constraint_surface_destroyed</ref>;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a5fb91060ed420411b649ee4947b95107" kindref="member">surface_commit_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a06415cd2732049b74d66f919f10756d6" kindref="member">pointer_constraint_surface_committed</ref>;</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1ab12460780ecdf53855c1fffc5fa345cb" kindref="member">pointer_destroy_listener</ref>.notify<sp/>=</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a596c0eda6a481dd2692661405620dc84" kindref="member">pointer_constraint_pointer_destroyed</ref>;</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;compositor-&gt;activate_signal,</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a272b3b6b9f9e3e55b72c4d6ed4f69597" kindref="member">surface_activate_listener</ref>);</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;destroy_signal,</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1ab12460780ecdf53855c1fffc5fa345cb" kindref="member">pointer_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;destroy_signal,</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a19a1c71aa8f0199a525c6f87c53a6fe9" kindref="member">surface_destroy_listener</ref>);</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;commit_signal,</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a5fb91060ed420411b649ee4947b95107" kindref="member">surface_commit_listener</ref>);</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><ref refid="input_8c_1a0392e07832c9be3646efdefe84294d41" kindref="member">init_pointer_constraint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*pointer_constraints_resource,</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>,</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>zwp_pointer_constraints_v1_lifetime<sp/><ref refid="structweston__pointer__constraint_1adbe2c7557a0df0512afcd17352009c92" kindref="member">lifetime</ref>,</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_interface<sp/>*interface,</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>*grab_interface)</highlight></codeline>
<codeline lineno="3964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_client(pointer_constraints_resource);</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*cr;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint;</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref><sp/>&amp;&amp;<sp/><ref refid="input_8c_1a6b0effb9fcaa26160b9b2db2ee2913ca" kindref="member">get_pointer_constraint_for_pointer</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>))<sp/>{</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(pointer_constraints_resource,</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZWP_POINTER_CONSTRAINTS_V1_ERROR_ALREADY_CONSTRAINED,</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>pointer<sp/>has<sp/>a<sp/>lock/confine<sp/>request<sp/>on<sp/>this<sp/>surface&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>interface,</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_version(pointer_constraints_resource),</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint<sp/>=<sp/><ref refid="input_8c_1aab54f16282a7ad71c44044f4cbeb71d3" kindref="member">weston_pointer_constraint_create</ref>(<ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>,<sp/><ref refid="structweston__pointer__constraint_1adbe2c7557a0df0512afcd17352009c92" kindref="member">lifetime</ref>,</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr,<sp/>grab_interface);</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraint<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(cr,<sp/>implementation,<sp/>constraint,</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a22bc7866b0795c7e41ca63c1192e5af1" kindref="member">pointer_constraint_constrain_resource_destroyed</ref>);</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"></highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraint)</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a82e3d73d65540b5e1de0484938c63e95" kindref="member">maybe_enable_pointer_constraint</ref>(constraint);</highlight></codeline>
<codeline lineno="4002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"></highlight></codeline>
<codeline lineno="4004"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><ref refid="input_8c_1a753fe7cd4982edd5e4ef85c1ffda0baa" kindref="member">pointer_constraints_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"></highlight></codeline>
<codeline lineno="4011"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><ref refid="input_8c_1a567e864026d94c20ea80dda6f23ed354" kindref="member">locked_pointer_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"></highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraint<sp/>&amp;&amp;<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref><sp/>&amp;&amp;<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a2c63f96b19a360e7f806479b03b1d424" kindref="member">hint_is_pending</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aeade43e6372bce448cb344c58099ec4c" kindref="member">is_within_constraint_region</ref>(constraint,</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a309986abb6778e82f4bac038cc1a492b" kindref="member">hint_x</ref>,</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a9c5fb7aadfd8db4048cd6516ddcc0078" kindref="member">hint_y</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5567b014f0bf27bad49deebeb21df258" kindref="member">weston_view_to_global_fixed</ref>(constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref>,</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a309986abb6778e82f4bac038cc1a492b" kindref="member">hint_x</ref>,</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a9c5fb7aadfd8db4048cd6516ddcc0078" kindref="member">hint_y</ref>,</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aeb8e8b9ad7255c9e9a5e217e876ec30c" kindref="member">weston_pointer_move_to</ref>(constraint-&gt;<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><ref refid="input_8c_1ae47b8c096a93b8837a86ed55205c256f" kindref="member">locked_pointer_set_cursor_position_hint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>surface_x,</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>surface_y)</highlight></codeline>
<codeline lineno="4037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>a<sp/>set<sp/>cursor<sp/>hint<sp/>that<sp/>was<sp/>sent<sp/>after<sp/>the<sp/>lock<sp/>was<sp/>cancelled.</highlight></codeline>
<codeline lineno="4042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!constraint<sp/>||</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!constraint-&gt;<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref><sp/>||</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref><sp/>!=<sp/><ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a2c63f96b19a360e7f806479b03b1d424" kindref="member">hint_is_pending</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a3c5710725d229e9cd0dc5b6ca39d84b4" kindref="member">hint_x_pending</ref><sp/>=<sp/>surface_x;</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a44f256161ff4942eb54808a0b92a5ea1" kindref="member">hint_y_pending</ref><sp/>=<sp/>surface_y;</highlight></codeline>
<codeline lineno="4051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><ref refid="input_8c_1a2535946d2001d4462daf31f86a0a821e" kindref="member">locked_pointer_set_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*region_resource)</highlight></codeline>
<codeline lineno="4057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>region_resource<sp/>?</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(region_resource)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!constraint)</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>,</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region);</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1416f09293d589dc99655700e0a72b53" kindref="member">region_init_infinite</ref>(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>);</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a0385e5cc132cb587a6d8fd75bdbf8a01" kindref="member">region_is_pending</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_locked_pointer_v1_interface<sp/><ref refid="input_8c_1a12ed31fcd5fca9404f09b7bce49ef20b" kindref="member">locked_pointer_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a567e864026d94c20ea80dda6f23ed354" kindref="member">locked_pointer_destroy</ref>,</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae47b8c096a93b8837a86ed55205c256f" kindref="member">locked_pointer_set_cursor_position_hint</ref>,</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2535946d2001d4462daf31f86a0a821e" kindref="member">locked_pointer_set_region</ref>,</highlight></codeline>
<codeline lineno="4081"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><ref refid="input_8c_1afc2105a7e101b552ab478909fd475df5" kindref="member">pointer_constraints_lock_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource,</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*pointer_resource,</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*region_resource,</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>lifetime)</highlight></codeline>
<codeline lineno="4091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(surface_resource);</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>wl_resource_get_user_data(pointer_resource);</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>region_resource<sp/>?</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(region_resource)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a0392e07832c9be3646efdefe84294d41" kindref="member">init_pointer_constraint</ref>(<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>,<sp/><ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>,<sp/>lifetime,</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_locked_pointer_v1_interface,</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1a12ed31fcd5fca9404f09b7bce49ef20b" kindref="member">locked_pointer_interface</ref>,</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1ace86975fb49050b2cc12435fd50709fd" kindref="member">locked_pointer_grab_interface</ref>);</highlight></codeline>
<codeline lineno="4102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><ref refid="input_8c_1a4d106419b72ae403a51249878d7c1e69" kindref="member">confined_pointer_grab_pointer_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="4106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"></highlight></codeline>
<codeline lineno="4109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><ref refid="input_8c_1a1a2fe693960b18850f0182972a6a38db" kindref="member">vec2d_cross_product</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>a,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>b)</highlight></codeline>
<codeline lineno="4111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>*<sp/>b.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref><sp/>-<sp/>a.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref><sp/>*<sp/>b.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><ref refid="input_8c_1a6ee08342b14c631b7942be5d9d37feb5" kindref="member">vec2d_add</ref>(struct<sp/><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>a,<sp/>struct<sp/><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>b)</highlight></codeline>
<codeline lineno="4117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvec2d" kindref="compound">vec2d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>=<sp/>a.x<sp/>+<sp/>b.x,</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>a.y<sp/>+<sp/>b.y,</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"></highlight></codeline>
<codeline lineno="4124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref></highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><ref refid="input_8c_1a42b3fc9cb436a3eab8984cb4bf519a27" kindref="member">vec2d_subtract</ref>(struct<sp/><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>a,<sp/>struct<sp/><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>b)</highlight></codeline>
<codeline lineno="4126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvec2d" kindref="compound">vec2d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>=<sp/>a.x<sp/>-<sp/>b.x,</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>a.y<sp/>-<sp/>b.y,</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"></highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><ref refid="input_8c_1a567e4bd193502c49e84e5d7a372345cc" kindref="member">vec2d_multiply_constant</ref>(double<sp/>c,<sp/>struct<sp/><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>a)</highlight></codeline>
<codeline lineno="4135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvec2d" kindref="compound">vec2d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>=<sp/>c<sp/>*<sp/>a.x,</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>c<sp/>*<sp/>a.y,</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><ref refid="input_8c_1a4870a5ee84d700f027f962f93a969641" kindref="member">lines_intersect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structline" kindref="compound">line</ref><sp/>*line1,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structline" kindref="compound">line</ref><sp/>*line2,</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>*intersection)</highlight></codeline>
<codeline lineno="4145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>p<sp/>=<sp/>line1-&gt;<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>r<sp/>=<sp/><ref refid="input_8c_1a42b3fc9cb436a3eab8984cb4bf519a27" kindref="member">vec2d_subtract</ref>(line1-&gt;<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>,<sp/>line1-&gt;<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>q<sp/>=<sp/>line2-&gt;<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>s<sp/>=<sp/><ref refid="input_8c_1a42b3fc9cb436a3eab8984cb4bf519a27" kindref="member">vec2d_subtract</ref>(line2-&gt;<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>,<sp/>line2-&gt;<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rxs;</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sxr;</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"></highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>line<sp/>(p,<sp/>r)<sp/>and<sp/>(q,<sp/>s)<sp/>intersects<sp/>where</highlight></codeline>
<codeline lineno="4157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>p<sp/>+<sp/>t<sp/>r<sp/>=<sp/>q<sp/>+<sp/>u<sp/>s</highlight></codeline>
<codeline lineno="4159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Calculate<sp/>t:</highlight></codeline>
<codeline lineno="4161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>(p<sp/>+<sp/>t<sp/>r)<sp/>×<sp/>s<sp/>=<sp/>(q<sp/>+<sp/>u<sp/>s)<sp/>×<sp/>s</highlight></codeline>
<codeline lineno="4163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>p<sp/>×<sp/>s<sp/>+<sp/>t<sp/>(r<sp/>×<sp/>s)<sp/>=<sp/>q<sp/>×<sp/>s<sp/>+<sp/>u<sp/>(s<sp/>×<sp/>s)</highlight></codeline>
<codeline lineno="4164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>p<sp/>×<sp/>s<sp/>+<sp/>t<sp/>(r<sp/>×<sp/>s)<sp/>=<sp/>q<sp/>×<sp/>s</highlight></codeline>
<codeline lineno="4165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>t<sp/>(r<sp/>×<sp/>s)<sp/>=<sp/>q<sp/>×<sp/>s<sp/>-<sp/>p<sp/>×<sp/>s</highlight></codeline>
<codeline lineno="4166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>t<sp/>(r<sp/>×<sp/>s)<sp/>=<sp/>(q<sp/>-<sp/>p)<sp/>×<sp/>s</highlight></codeline>
<codeline lineno="4167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>t<sp/>=<sp/>((q<sp/>-<sp/>p)<sp/>×<sp/>s)<sp/>/<sp/>(r<sp/>×<sp/>s)</highlight></codeline>
<codeline lineno="4168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Using<sp/>the<sp/>same<sp/>method,<sp/>for<sp/>u<sp/>we<sp/>get:</highlight></codeline>
<codeline lineno="4170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>u<sp/>=<sp/>((p<sp/>-<sp/>q)<sp/>×<sp/>r)<sp/>/<sp/>(s<sp/>×<sp/>r)</highlight></codeline>
<codeline lineno="4172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxs<sp/>=<sp/><ref refid="input_8c_1a1a2fe693960b18850f0182972a6a38db" kindref="member">vec2d_cross_product</ref>(r,<sp/>s);</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxr<sp/>=<sp/><ref refid="input_8c_1a1a2fe693960b18850f0182972a6a38db" kindref="member">vec2d_cross_product</ref>(s,<sp/>r);</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>r<sp/>×<sp/>s<sp/>=<sp/>0<sp/>then<sp/>the<sp/>lines<sp/>are<sp/>either<sp/>parallel<sp/>or<sp/>collinear.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(rxs)<sp/>&lt;<sp/>DBL_MIN)</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="input_8c_1a1a2fe693960b18850f0182972a6a38db" kindref="member">vec2d_cross_product</ref>(<ref refid="input_8c_1a42b3fc9cb436a3eab8984cb4bf519a27" kindref="member">vec2d_subtract</ref>(q,<sp/>p),<sp/>s)<sp/>/<sp/>rxs;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/><ref refid="input_8c_1a1a2fe693960b18850f0182972a6a38db" kindref="member">vec2d_cross_product</ref>(<ref refid="input_8c_1a42b3fc9cb436a3eab8984cb4bf519a27" kindref="member">vec2d_subtract</ref>(p,<sp/>q),<sp/>r)<sp/>/<sp/>sxr;</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>lines<sp/>only<sp/>intersect<sp/>if<sp/>0<sp/>≤<sp/>t<sp/>≤<sp/>1<sp/>and<sp/>0<sp/>≤<sp/>u<sp/>≤<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.0<sp/>||<sp/>t<sp/>&gt;<sp/>1.0<sp/>||<sp/>u<sp/>&lt;<sp/>0.0<sp/>||<sp/>u<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intersection<sp/>=<sp/><ref refid="input_8c_1a6ee08342b14c631b7942be5d9d37feb5" kindref="member">vec2d_add</ref>(p,<sp/><ref refid="input_8c_1a567e4bd193502c49e84e5d7a372345cc" kindref="member">vec2d_multiply_constant</ref>(t,<sp/>r));</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_array<sp/>*array,</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2,</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748" kindref="member">motion_direction</ref><sp/><ref refid="structborder_1a744baba1e75c3be65f0f25ddf1b82f84" kindref="member">blocking_dir</ref>)</highlight></codeline>
<codeline lineno="4197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref><sp/>=<sp/>wl_array_add(array,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structborder" kindref="compound">border</ref>);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structborder" kindref="compound">border</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structline" kindref="compound">line</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>=<sp/>x1,</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>y1,</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.b<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/>x2,</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>y2,</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.blocking_dir<sp/>=<sp/><ref refid="structborder_1a744baba1e75c3be65f0f25ddf1b82f84" kindref="member">blocking_dir</ref>,</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structborder" kindref="compound">border</ref>;</highlight></codeline>
<codeline lineno="4215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><ref refid="input_8c_1a7b5be6f44ab0d807270a0ab9b9397c10" kindref="member">compare_lines_x</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b)</highlight></codeline>
<codeline lineno="4219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*border_a<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*border_b<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"></highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(border_a-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>==<sp/>border_b-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>border_a-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>&lt;<sp/>border_b-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>border_a-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>&gt;<sp/>border_b-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><ref refid="input_8c_1af8885180db579d88e9cc84b07f8af207" kindref="member">add_non_overlapping_edges</ref>(pixman_box32_t<sp/>*boxes,</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band_above_start,</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band_below_start,</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band_below_end,</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_array<sp/>*borders)</highlight></codeline>
<codeline lineno="4236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_array<sp/>band_merge;</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref>;</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*prev_border;</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*new_border;</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_init(&amp;band_merge);</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"></highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>bottom<sp/>band<sp/>of<sp/>previous<sp/>row,<sp/>and<sp/>top<sp/>band<sp/>of<sp/>current<sp/>row,<sp/>and</highlight></codeline>
<codeline lineno="4246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sort<sp/>them<sp/>so<sp/>lower<sp/>left<sp/>x<sp/>coordinate<sp/>comes<sp/>first.<sp/>If<sp/>there<sp/>are<sp/>two</highlight></codeline>
<codeline lineno="4247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>borders<sp/>with<sp/>the<sp/>same<sp/>left<sp/>x<sp/>coordinate,<sp/>the<sp/>wider<sp/>one<sp/>comes<sp/>first.</highlight></codeline>
<codeline lineno="4248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>band_above_start;<sp/>i<sp/>&lt;<sp/>band_below_start;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*box<sp/>=<sp/>&amp;boxes[i];</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(&amp;band_merge,<sp/>box-&gt;x1,<sp/>box-&gt;y2,<sp/>box-&gt;x2,<sp/>box-&gt;y2,</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref>);</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>band_below_start;<sp/>i<sp/>&lt;<sp/>band_below_end;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*box=<sp/>&amp;boxes[i];</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(&amp;band_merge,<sp/>box-&gt;x1,<sp/>box-&gt;y1,<sp/>box-&gt;x2,<sp/>box-&gt;y1,</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748abc10445b528675ce0651b4ec508eb86a" kindref="member">MOTION_DIRECTION_NEGATIVE_Y</ref>);</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qsort(band_merge.data,</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_merge.size<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structborder" kindref="compound">border</ref>,</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structborder" kindref="compound">border</ref>,</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a7b5be6f44ab0d807270a0ab9b9397c10" kindref="member">compare_lines_x</ref>);</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Combine<sp/>the<sp/>two<sp/>combined<sp/>bands<sp/>so<sp/>that<sp/>any<sp/>overlapping<sp/>border<sp/>is</highlight></codeline>
<codeline lineno="4265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>eliminated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_for_each(<ref refid="structborder" kindref="compound">border</ref>,<sp/>&amp;band_merge)<sp/>{</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref><sp/>==<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!prev_border<sp/>||</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref><sp/>==<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!prev_border<sp/>||</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>!=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>||</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>!=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>));</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!prev_border<sp/>||</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>&lt;=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_border<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>==<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>------------<sp/>+</highlight></codeline>
<codeline lineno="4281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>-------<sp/><sp/><sp/><sp/><sp/><sp/>=</highlight></codeline>
<codeline lineno="4282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>[<sp/><sp/><sp/><sp/><sp/>]-----</highlight></codeline>
<codeline lineno="4283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_border<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>==<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>------------<sp/>+</highlight></codeline>
<codeline lineno="4289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>------<sp/>=</highlight></codeline>
<codeline lineno="4290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>------[<sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="4291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_border<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>==<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>--------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="4297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------<sp/><sp/>=</highlight></codeline>
<codeline lineno="4298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>--------------</highlight></codeline>
<codeline lineno="4299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_border<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>&gt;=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>---------------<sp/>+</highlight></codeline>
<codeline lineno="4305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>------<sp/><sp/><sp/><sp/><sp/>=</highlight></codeline>
<codeline lineno="4306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>-----[<sp/><sp/><sp/><sp/>]----</highlight></codeline>
<codeline lineno="4307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_border<sp/>=<sp/><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(borders,</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a744baba1e75c3be65f0f25ddf1b82f84" kindref="member">blocking_dir</ref>);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border<sp/>=<sp/>new_border;</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!prev_border<sp/>||</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>&lt;<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>First<sp/>border<sp/>or<sp/>non-overlapping.</highlight></codeline>
<codeline lineno="4321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>-----<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="4323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----<sp/><sp/><sp/><sp/>=</highlight></codeline>
<codeline lineno="4324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>-----<sp/><sp/>-----</highlight></codeline>
<codeline lineno="4325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_border<sp/>=<sp/>wl_array_add(borders,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structborder" kindref="compound">border</ref>);</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*new_border<sp/>=<sp/>*<ref refid="structborder" kindref="compound">border</ref>;</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_border<sp/>=<sp/>new_border;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_release(&amp;band_merge);</highlight></codeline>
<codeline lineno="4333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><ref refid="input_8c_1a12d8db6ae1d429c1e979755303aa304f" kindref="member">add_band_bottom_edges</ref>(pixman_box32_t<sp/>*boxes,</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band_start,</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band_end,</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_array<sp/>*borders)</highlight></codeline>
<codeline lineno="4340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>band_start;<sp/>i<sp/>&lt;<sp/>band_end;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(borders,</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x1,<sp/>boxes[i].y2,</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x2,<sp/>boxes[i].y2,</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref>);</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><ref refid="input_8c_1a9f4ee151d4881332668780c10d4d423a" kindref="member">region_to_outline</ref>(pixman_region32_t<sp/>*region,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_array<sp/>*borders)</highlight></codeline>
<codeline lineno="4353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>*boxes;</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_boxes;</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_most,<sp/>bottom_most;</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_roof;</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_top;</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band_start,<sp/>prev_band_start;</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Remove<sp/>any<sp/>overlapping<sp/>lines<sp/>from<sp/>the<sp/>set<sp/>of<sp/>rectangles.<sp/>Note<sp/>that</highlight></codeline>
<codeline lineno="4364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>pixman<sp/>regions<sp/>are<sp/>grouped<sp/>as<sp/>rows<sp/>of<sp/>rectangles,<sp/>where<sp/>rectangles</highlight></codeline>
<codeline lineno="4365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>one<sp/>row<sp/>never<sp/>touch<sp/>or<sp/>overlap<sp/>and<sp/>are<sp/>all<sp/>of<sp/>the<sp/>same<sp/>height.</highlight></codeline>
<codeline lineno="4366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------<sp/>---<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------<sp/>---</highlight></codeline>
<codeline lineno="4368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|<sp/>|</highlight></codeline>
<codeline lineno="4369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>----------====----<sp/>---<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------<sp/><sp/>-----<sp/>---</highlight></codeline>
<codeline lineno="4370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="4371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>----==========---------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="4372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="4373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes<sp/>=<sp/>pixman_region32_rectangles(region,<sp/>&amp;num_boxes);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_most<sp/>=<sp/>boxes[0].y1;</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_roof<sp/>=<sp/>top_most;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_most<sp/>=<sp/>boxes[num_boxes<sp/>-<sp/>1].y2;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_band_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_boxes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Detect<sp/>if<sp/>there<sp/>is<sp/>a<sp/>vertical<sp/>empty<sp/>space,<sp/>and<sp/>add<sp/>the<sp/>lower</highlight></codeline>
<codeline lineno="4386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>level<sp/>of<sp/>the<sp/>previous<sp/>band<sp/>if<sp/>so<sp/>was<sp/>the<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].y1<sp/>!=<sp/>prev_top<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].y1<sp/>!=<sp/>boxes[i<sp/>-<sp/>1].y2)<sp/>{</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_roof<sp/>=<sp/>boxes[i].y1;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a12d8db6ae1d429c1e979755303aa304f" kindref="member">add_band_bottom_edges</ref>(boxes,</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_start,</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borders);</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>adding<sp/>the<sp/>last<sp/>band,<sp/>since<sp/>it<sp/>won&apos;t<sp/>be<sp/>handled</highlight></codeline>
<codeline lineno="4398"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>the<sp/>band<sp/>change<sp/>detection<sp/>below.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes[i].y1<sp/>!=<sp/>current_roof<sp/>&amp;&amp;<sp/>i<sp/>==<sp/>num_boxes<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes[i].y1<sp/>!=<sp/>prev_top)<sp/>{</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>last<sp/>band<sp/>is<sp/>a<sp/>single<sp/>box,<sp/>so<sp/>we<sp/>don&apos;t</highlight></codeline>
<codeline lineno="4402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>a<sp/>prev_band_start<sp/>to<sp/>tell<sp/>us<sp/>when<sp/>the</highlight></codeline>
<codeline lineno="4403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>previous<sp/>band<sp/>started.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1af8885180db579d88e9cc84b07f8af207" kindref="member">add_non_overlapping_edges</ref>(boxes,</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_start,</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borders);</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1af8885180db579d88e9cc84b07f8af207" kindref="member">add_non_overlapping_edges</ref>(boxes,</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_band_start,</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_start,</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borders);</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Detect<sp/>when<sp/>passing<sp/>a<sp/>band<sp/>and<sp/>combine<sp/>the<sp/>top<sp/>border<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="4419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>just<sp/>passed<sp/>band<sp/>with<sp/>the<sp/>bottom<sp/>band<sp/>of<sp/>the<sp/>previous<sp/>band.</highlight></codeline>
<codeline lineno="4420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes[i].y1<sp/>!=<sp/>top_most<sp/>&amp;&amp;<sp/>boxes[i].y1<sp/>!=<sp/>prev_top)<sp/>{</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Combine<sp/>the<sp/>two<sp/>passed<sp/>bands.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_top<sp/>!=<sp/>current_roof)<sp/>{</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1af8885180db579d88e9cc84b07f8af207" kindref="member">add_non_overlapping_edges</ref>(boxes,</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_band_start,</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_start,</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borders);</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_band_start<sp/>=<sp/>band_start;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band_start<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"></highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>the<sp/>top<sp/>border<sp/>if<sp/>the<sp/>box<sp/>is<sp/>part<sp/>of<sp/>the<sp/>current<sp/>roof.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes[i].y1<sp/>==<sp/>current_roof)<sp/>{</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(borders,</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x1,<sp/>boxes[i].y1,</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x2,<sp/>boxes[i].y1,</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748abc10445b528675ce0651b4ec508eb86a" kindref="member">MOTION_DIRECTION_NEGATIVE_Y</ref>);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>the<sp/>bottom<sp/>border<sp/>of<sp/>the<sp/>last<sp/>band.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes[i].y2<sp/>==<sp/>bottom_most)<sp/>{</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(borders,</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x1,<sp/>boxes[i].y2,</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x2,<sp/>boxes[i].y2,</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref>);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"></highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>add<sp/>the<sp/>left<sp/>border.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(borders,</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x1,<sp/>boxes[i].y1,</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x1,<sp/>boxes[i].y2,</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748ace65161e5ee8e0af79a41e7877d41ee8" kindref="member">MOTION_DIRECTION_NEGATIVE_X</ref>);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>add<sp/>the<sp/>right<sp/>border.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a27eaa4eb5c08912c3445cb2fcc136feb" kindref="member">add_border</ref>(borders,</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x2,<sp/>boxes[i].y1,</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i].x2,<sp/>boxes[i].y2,</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" kindref="member">MOTION_DIRECTION_POSITIVE_X</ref>);</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_top<sp/>=<sp/>boxes[i].y1;</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><ref refid="input_8c_1ac97092b01b0f7cdfd5e4ae378397050c" kindref="member">is_border_horizontal</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref>)</highlight></codeline>
<codeline lineno="4469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref><sp/>==<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><ref refid="input_8c_1a99c82ec3ef5996bded56f03c675b0524" kindref="member">is_border_blocking_directions</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref>,</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>directions)</highlight></codeline>
<codeline lineno="4476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>block<sp/>parallel<sp/>motions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1ac97092b01b0f7cdfd5e4ae378397050c" kindref="member">is_border_horizontal</ref>(<ref refid="structborder" kindref="compound">border</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((directions<sp/>&amp;<sp/>(<ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref><sp/>|</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748abc10445b528675ce0651b4ec508eb86a" kindref="member">MOTION_DIRECTION_NEGATIVE_Y</ref>))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((directions<sp/>&amp;<sp/>(<ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" kindref="member">MOTION_DIRECTION_POSITIVE_X</ref><sp/>|</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748ace65161e5ee8e0af79a41e7877d41ee8" kindref="member">MOTION_DIRECTION_NEGATIVE_X</ref>))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(~<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a744baba1e75c3be65f0f25ddf1b82f84" kindref="member">blocking_dir</ref><sp/>&amp;<sp/>directions)<sp/>!=<sp/>directions;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"></highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><ref refid="input_8c_1af6b9f2bca9a1b3d251fd45251850d95f" kindref="member">get_closest_border</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_array<sp/>*borders,</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structline" kindref="compound">line</ref><sp/>*<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>,</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>directions)</highlight></codeline>
<codeline lineno="4495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref>;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>intersection;</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref><sp/>delta;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance_2;</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*closest_border<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closest_distance_2<sp/>=<sp/>DBL_MAX;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_for_each(<ref refid="structborder" kindref="compound">border</ref>,<sp/>borders)<sp/>{</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1a99c82ec3ef5996bded56f03c675b0524" kindref="member">is_border_blocking_directions</ref>(<ref refid="structborder" kindref="compound">border</ref>,<sp/>directions))</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"></highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1a4870a5ee84d700f027f962f93a969641" kindref="member">lines_intersect</ref>(&amp;<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>,<sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>,<sp/>&amp;intersection))</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/><ref refid="input_8c_1a42b3fc9cb436a3eab8984cb4bf519a27" kindref="member">vec2d_subtract</ref>(intersection,<sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;a);</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance_2<sp/>=<sp/>delta.x*delta.x<sp/>+<sp/>delta.y*delta.y;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance_2<sp/>&lt;<sp/>closest_distance_2)<sp/>{</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_border<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>;</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_distance_2<sp/>=<sp/>distance_2;</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>closest_border;</highlight></codeline>
<codeline lineno="4519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><ref refid="input_8c_1a161cd4f31bd65b68a0240d940fe3c3ef" kindref="member">clamp_to_border</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref>,</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structline" kindref="compound">line</ref><sp/>*<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>,</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*motion_dir)</highlight></codeline>
<codeline lineno="4525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>clamping<sp/>either<sp/>rightward<sp/>or<sp/>downward<sp/>motions,<sp/>the<sp/>motion<sp/>needs</highlight></codeline>
<codeline lineno="4528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>clamped<sp/>so<sp/>that<sp/>the<sp/>destination<sp/>coordinate<sp/>does<sp/>not<sp/>end<sp/>up<sp/>on</highlight></codeline>
<codeline lineno="4529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>border<sp/>(see<sp/>weston_pointer_clamp_event_to_region).<sp/>Do<sp/>this<sp/>by</highlight></codeline>
<codeline lineno="4530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>clamping<sp/>such<sp/>motions<sp/>to<sp/>the<sp/>border<sp/>minus<sp/>the<sp/>smallest<sp/>possible</highlight></codeline>
<codeline lineno="4531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wl_fixed_t<sp/>value.</highlight></codeline>
<codeline lineno="4532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1ac97092b01b0f7cdfd5e4ae378397050c" kindref="member">is_border_horizontal</ref>(<ref refid="structborder" kindref="compound">border</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*motion_dir<sp/>&amp;<sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref>)</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;b.y<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref><sp/>-<sp/>wl_fixed_to_double(1);</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;b.y<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*motion_dir<sp/>&amp;=<sp/>~(<ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref><sp/>|</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748abc10445b528675ce0651b4ec508eb86a" kindref="member">MOTION_DIRECTION_NEGATIVE_Y</ref>);</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*motion_dir<sp/>&amp;<sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" kindref="member">MOTION_DIRECTION_POSITIVE_X</ref>)</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;b.x<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref><sp/>-<sp/>wl_fixed_to_double(1);</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;b.x<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*motion_dir<sp/>&amp;=<sp/>~(<ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" kindref="member">MOTION_DIRECTION_POSITIVE_X</ref><sp/>|</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748ace65161e5ee8e0af79a41e7877d41ee8" kindref="member">MOTION_DIRECTION_NEGATIVE_X</ref>);</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><ref refid="input_8c_1a6c986a0294294c400ee2b96e84b65b81" kindref="member">get_motion_directions</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structline" kindref="compound">line</ref><sp/>*<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>)</highlight></codeline>
<codeline lineno="4552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>directions<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"></highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;a.x<sp/>&lt;<sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;b.x)</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directions<sp/>|=<sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" kindref="member">MOTION_DIRECTION_POSITIVE_X</ref>;</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;a.x<sp/>&gt;<sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;b.x)</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directions<sp/>|=<sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748ace65161e5ee8e0af79a41e7877d41ee8" kindref="member">MOTION_DIRECTION_NEGATIVE_X</ref>;</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;a.y<sp/>&lt;<sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;b.y)</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directions<sp/>|=<sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref>;</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;a.y<sp/>&gt;<sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>-&gt;b.y)</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directions<sp/>|=<sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748abc10445b528675ce0651b4ec508eb86a" kindref="member">MOTION_DIRECTION_NEGATIVE_Y</ref>;</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>directions;</highlight></codeline>
<codeline lineno="4565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><ref refid="input_8c_1a8ede88d9fa3d1d7c096e2dd80ca32dfd" kindref="member">weston_pointer_clamp_event_to_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event,</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*region,</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*clamped_x,</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*clamped_y)</highlight></codeline>
<codeline lineno="4573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>sy;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>old_sx<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx;</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>old_sy<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy;</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_array<sp/>borders;</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structline" kindref="compound">line</ref><sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*closest_border;</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_x_f,<sp/>new_y_f;</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>directions;</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa60e7771b5a23d6e81355f69f62123c8" kindref="member">weston_pointer_motion_to_abs</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>event,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>,<sp/>x,<sp/>y,<sp/>&amp;sx,<sp/>&amp;sy);</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"></highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_init(&amp;borders);</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Generate<sp/>borders<sp/>given<sp/>the<sp/>confine<sp/>region<sp/>we<sp/>are<sp/>to<sp/>use.<sp/>The<sp/>borders</highlight></codeline>
<codeline lineno="4591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>defined<sp/>to<sp/>be<sp/>the<sp/>outer<sp/>region<sp/>of<sp/>the<sp/>allowed<sp/>area.<sp/>This<sp/>means</highlight></codeline>
<codeline lineno="4592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>top/left<sp/>borders<sp/>are<sp/>&quot;within&quot;<sp/>the<sp/>allowed<sp/>area,<sp/>while<sp/>bottom/right</highlight></codeline>
<codeline lineno="4593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>borders<sp/>are<sp/>outside.<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>considered<sp/>when<sp/>clamping</highlight></codeline>
<codeline lineno="4594"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>confined<sp/>motion<sp/>vectors.</highlight></codeline>
<codeline lineno="4595"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a9f4ee151d4881332668780c10d4d423a" kindref="member">region_to_outline</ref>(region,<sp/>&amp;borders);</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structline" kindref="compound">line</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.a<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/>wl_fixed_to_double(old_sx),</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>wl_fixed_to_double(old_sy),</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.b<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvec2d" kindref="compound">vec2d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/>wl_fixed_to_double(sx),</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>wl_fixed_to_double(sy),</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directions<sp/>=<sp/><ref refid="input_8c_1a6c986a0294294c400ee2b96e84b65b81" kindref="member">get_motion_directions</ref>(&amp;<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>);</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"></highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(directions)<sp/>{</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_border<sp/>=<sp/><ref refid="input_8c_1af6b9f2bca9a1b3d251fd45251850d95f" kindref="member">get_closest_border</ref>(&amp;borders,</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>,</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directions);</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closest_border)</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a161cd4f31bd65b68a0240d940fe3c3ef" kindref="member">clamp_to_border</ref>(closest_border,<sp/>&amp;<ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>,<sp/>&amp;directions);</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"></highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a1666f1b9cb32183712d16d893af00dae" kindref="member">weston_view_to_global_float</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>,</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>.b.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/><ref refid="zoom_8c_1a5a2553e1ac0753441c4eca4bbbfa6183" kindref="member">motion</ref>.b.y,</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;new_x_f,<sp/>&amp;new_y_f);</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*clamped_x<sp/>=<sp/>wl_fixed_from_double(new_x_f);</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*clamped_y<sp/>=<sp/>wl_fixed_from_double(new_y_f);</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"></highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_release(&amp;borders);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><ref refid="input_8c_1ab3f8f6e84fc1082fb63c38b1f4fc0ce0" kindref="member">point_to_border_distance_2</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="4631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orig_x,<sp/>orig_y;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/>dy;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"></highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1ac97092b01b0f7cdfd5e4ae378397050c" kindref="member">is_border_horizontal</ref>(<ref refid="structborder" kindref="compound">border</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>border-&gt;<ref refid="structline" kindref="compound">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_x<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_x<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_y<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>border-&gt;<ref refid="structline" kindref="compound">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_y<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_y<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_x<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal"></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>fabs(orig_x<sp/>-<sp/>x);</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>fabs(orig_y<sp/>-<sp/>y);</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx*dx<sp/>+<sp/>dy*dy;</highlight></codeline>
<codeline lineno="4657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"></highlight></codeline>
<codeline lineno="4659"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><ref refid="input_8c_1a55868b4b4157c53256512e6670ea3d76" kindref="member">warp_to_behind_border</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref>,<sp/>wl_fixed_t<sp/>*sx,<sp/>wl_fixed_t<sp/>*sy)</highlight></codeline>
<codeline lineno="4661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a744baba1e75c3be65f0f25ddf1b82f84" kindref="member">blocking_dir</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" kindref="member">MOTION_DIRECTION_POSITIVE_X</ref>:</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748ace65161e5ee8e0af79a41e7877d41ee8" kindref="member">MOTION_DIRECTION_NEGATIVE_X</ref>:</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a744baba1e75c3be65f0f25ddf1b82f84" kindref="member">blocking_dir</ref><sp/>==<sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748a6bcdc45c7260379a765dadff9d5dbb15" kindref="member">MOTION_DIRECTION_POSITIVE_X</ref>)</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sx<sp/>=<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sx<sp/>=<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sy<sp/>&lt;<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>))</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sy<sp/>=<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sy<sp/>&gt;<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>))</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sy<sp/>=<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref>:</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748abc10445b528675ce0651b4ec508eb86a" kindref="member">MOTION_DIRECTION_NEGATIVE_Y</ref>:</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a744baba1e75c3be65f0f25ddf1b82f84" kindref="member">blocking_dir</ref><sp/>==<sp/><ref refid="input_8c_1a72f8824b411d1122a2dfb88206ef9748aff6cbc220850a329096433042b1db0a9" kindref="member">MOTION_DIRECTION_POSITIVE_Y</ref>)</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sy<sp/>=<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sy<sp/>=<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a6e4cfba9ce4bece3c6a9fb215dbff935" kindref="member">y</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sx<sp/>&lt;<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sx<sp/>=<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a5d1b88325b65eb0bf325a5db38639f10" kindref="member">a</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sx<sp/>&gt;<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sx<sp/>=<sp/>wl_fixed_from_double(<ref refid="structborder" kindref="compound">border</ref>-&gt;<ref refid="structborder_1a1ba943a6be5dd251b3d4ad7bf0f8a693" kindref="member">line</ref>.<ref refid="structline_1a646a1fdf3f7dade70673ff0bae90521a" kindref="member">b</ref>.<ref refid="structvec2d_1a9a5047bd83eb9df966feaa0d4fc9bd80" kindref="member">x</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><ref refid="input_8c_1ab6e3b03423f5c77343adb86d3d824c13" kindref="member">maybe_warp_confined_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint)</highlight></codeline>
<codeline lineno="4690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>y;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx;</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sy;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"></highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref>,</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref>-&gt;<ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref>-&gt;<ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sx,</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sy);</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"></highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="input_8c_1aeade43e6372bce448cb344c58099ec4c" kindref="member">is_within_constraint_region</ref>(constraint,<sp/>sx,<sp/>sy))<sp/>{</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xf<sp/>=<sp/>wl_fixed_to_double(sx);</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yf<sp/>=<sp/>wl_fixed_to_double(sy);</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>confine_region;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_array<sp/>borders;</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*<ref refid="structborder" kindref="compound">border</ref>;</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closest_distance_2<sp/>=<sp/>DBL_MAX;</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structborder" kindref="compound">border</ref><sp/>*closest_border<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_init(&amp;borders);</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;confine_region);</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;confine_region,</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref>-&gt;<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1ab288fca02a260a7eb9ca4d82b5b5f8e1" kindref="member">input</ref>,</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a9f4ee151d4881332668780c10d4d423a" kindref="member">region_to_outline</ref>(&amp;confine_region,<sp/>&amp;borders);</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;confine_region);</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_for_each(<ref refid="structborder" kindref="compound">border</ref>,<sp/>&amp;borders)<sp/>{</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance_2;</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"></highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance_2<sp/>=<sp/><ref refid="input_8c_1ab3f8f6e84fc1082fb63c38b1f4fc0ce0" kindref="member">point_to_border_distance_2</ref>(<ref refid="structborder" kindref="compound">border</ref>,<sp/>xf,<sp/>yf);</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance_2<sp/>&lt;<sp/>closest_distance_2)<sp/>{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_border<sp/>=<sp/><ref refid="structborder" kindref="compound">border</ref>;</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_distance_2<sp/>=<sp/>distance_2;</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(closest_border);</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a55868b4b4157c53256512e6670ea3d76" kindref="member">warp_to_behind_border</ref>(closest_border,<sp/>&amp;sx,<sp/>&amp;sy);</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"></highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_release(&amp;borders);</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"></highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a5567b014f0bf27bad49deebeb21df258" kindref="member">weston_view_to_global_fixed</ref>(constraint-&gt;<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref>,<sp/>sx,<sp/>sy,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aeb8e8b9ad7255c9e9a5e217e876ec30c" kindref="member">weston_pointer_move_to</ref>(constraint-&gt;<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"></highlight></codeline>
<codeline lineno="4740"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><ref refid="input_8c_1a944cbb72aaa491589260a70d821e42d0" kindref="member">confined_pointer_grab_pointer_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="4744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(<ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref>,<sp/><ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>);</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structweston__pointer_1a6b019df603fd1638e8d7d77f49d593cd" kindref="member">grab</ref>-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>old_sx<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx;</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>old_sy<sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy;</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>confine_region;</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>);</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface<sp/>==<sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a9cde684c20bf346ea28724b3a5d2c559" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"></highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>-&gt;surface;</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_init(&amp;confine_region);</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_intersect(&amp;confine_region,</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structsurface" kindref="compound">surface</ref>-&gt;input,</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8ede88d9fa3d1d7c096e2dd80ca32dfd" kindref="member">weston_pointer_clamp_event_to_region</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>event,</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;confine_region,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aeb8e8b9ad7255c9e9a5e217e876ec30c" kindref="member">weston_pointer_move_to</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;confine_region);</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"></highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>,<sp/>x,<sp/>y,</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx,<sp/>&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy);</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"></highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_sx<sp/>!=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx<sp/>||<sp/>old_sy<sp/>!=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy)<sp/>{</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1abcb80f71889ae0e261e46573c44acbb9" kindref="member">pointer_send_motion</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>time,</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sx,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;sy);</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"></highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a53cffb54e97d763ba736c3f6145244a6" kindref="member">pointer_send_relative_motion</ref>(<ref refid="structpointer" kindref="compound">pointer</ref>,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="4777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"></highlight></codeline>
<codeline lineno="4779"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><ref refid="input_8c_1a2a0c226424eeca51a3ba373e3793abe0" kindref="member">confined_pointer_grab_pointer_button</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>button,</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>state_w)</highlight></codeline>
<codeline lineno="4784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1acff4837ae0f91d176b516b195aee7947" kindref="member">weston_pointer_send_button</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>time,<sp/>button,<sp/>state_w);</highlight></codeline>
<codeline lineno="4786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><ref refid="input_8c_1aa0cc365a324516686e819d65c6e21449" kindref="member">confined_pointer_grab_pointer_axis</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="4792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ad395050e7ec12082c2ee18c9ff42dda2" kindref="member">weston_pointer_send_axis</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>time,<sp/>event);</highlight></codeline>
<codeline lineno="4794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"></highlight></codeline>
<codeline lineno="4796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><ref refid="input_8c_1ad2186cb26c1168cbfcd84d6ce97f9cb5" kindref="member">confined_pointer_grab_pointer_axis_source</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>source)</highlight></codeline>
<codeline lineno="4799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a70f2579a25e836fc05a631986bfac65b" kindref="member">weston_pointer_send_axis_source</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>,<sp/>source);</highlight></codeline>
<codeline lineno="4801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"></highlight></codeline>
<codeline lineno="4803"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><ref refid="input_8c_1a91fbe5870a36f825d819a2464621fd9d" kindref="member">confined_pointer_grab_pointer_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="4805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2bb5b53363fe73ab8a6b0f52e5415ff3" kindref="member">weston_pointer_send_frame</ref>(grab-&gt;<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><ref refid="input_8c_1abd57826773712ca20aee6731f0208b7e" kindref="member">confined_pointer_grab_pointer_cancel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab)</highlight></codeline>
<codeline lineno="4811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_of(<ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref>,<sp/><ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>);</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6a2931d2a078a5ca98a2cc6469e397e0" kindref="member">disable_pointer_constraint</ref>(constraint);</highlight></codeline>
<codeline lineno="4816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"></highlight></codeline>
<codeline lineno="4818"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref></highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a7ef04b737041daa130a0ccf8509b06b4" kindref="member">confined_pointer_grab_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4d106419b72ae403a51249878d7c1e69" kindref="member">confined_pointer_grab_pointer_focus</ref>,</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a944cbb72aaa491589260a70d821e42d0" kindref="member">confined_pointer_grab_pointer_motion</ref>,</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a2a0c226424eeca51a3ba373e3793abe0" kindref="member">confined_pointer_grab_pointer_button</ref>,</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa0cc365a324516686e819d65c6e21449" kindref="member">confined_pointer_grab_pointer_axis</ref>,</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ad2186cb26c1168cbfcd84d6ce97f9cb5" kindref="member">confined_pointer_grab_pointer_axis_source</ref>,</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a91fbe5870a36f825d819a2464621fd9d" kindref="member">confined_pointer_grab_pointer_frame</ref>,</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1abd57826773712ca20aee6731f0208b7e" kindref="member">confined_pointer_grab_pointer_cancel</ref>,</highlight></codeline>
<codeline lineno="4827"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"></highlight></codeline>
<codeline lineno="4829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><ref refid="input_8c_1ad4d340a99f12e5378e5c523687e2a460" kindref="member">confined_pointer_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="4832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="4834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"></highlight></codeline>
<codeline lineno="4836"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><ref refid="input_8c_1a793c0ecdfa8221e1e7cab56a6d0135bf" kindref="member">confined_pointer_set_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*region_resource)</highlight></codeline>
<codeline lineno="4840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint<sp/>=</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>region_resource<sp/>?</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(region_resource)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!constraint)</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_copy(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>,</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>-&gt;region);</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_fini(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>);</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a1416f09293d589dc99655700e0a72b53" kindref="member">region_init_infinite</ref>(&amp;constraint-&gt;<ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;<ref refid="structweston__pointer__constraint_1a0385e5cc132cb587a6d8fd75bdbf8a01" kindref="member">region_is_pending</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"></highlight></codeline>
<codeline lineno="4859"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_confined_pointer_v1_interface<sp/><ref refid="input_8c_1a0cdd83341db6850c0dbb8a826eaaa7c2" kindref="member">confined_pointer_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ad4d340a99f12e5378e5c523687e2a460" kindref="member">confined_pointer_destroy</ref>,</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a793c0ecdfa8221e1e7cab56a6d0135bf" kindref="member">confined_pointer_set_region</ref>,</highlight></codeline>
<codeline lineno="4862"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><ref refid="input_8c_1aa9b3b4f52355f2c28b708df4f4501642" kindref="member">pointer_constraints_confine_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource,</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*pointer_resource,</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*region_resource,</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>lifetime)</highlight></codeline>
<codeline lineno="4872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(surface_resource);</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>wl_resource_get_user_data(pointer_resource);</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>*<ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref><sp/>=<sp/>region_resource<sp/>?</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(region_resource)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"></highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a0392e07832c9be3646efdefe84294d41" kindref="member">init_pointer_constraint</ref>(<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>,<sp/><ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>,<sp/>lifetime,</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_confined_pointer_v1_interface,</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1a0cdd83341db6850c0dbb8a826eaaa7c2" kindref="member">confined_pointer_interface</ref>,</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1a7ef04b737041daa130a0ccf8509b06b4" kindref="member">confined_pointer_grab_interface</ref>);</highlight></codeline>
<codeline lineno="4883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_pointer_constraints_v1_interface<sp/><ref refid="input_8c_1a35133392e11448243a2e219a602f4eef" kindref="member">pointer_constraints_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a753fe7cd4982edd5e4ef85c1ffda0baa" kindref="member">pointer_constraints_destroy</ref>,</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1afc2105a7e101b552ab478909fd475df5" kindref="member">pointer_constraints_lock_pointer</ref>,</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa9b3b4f52355f2c28b708df4f4501642" kindref="member">pointer_constraints_confine_pointer</ref>,</highlight></codeline>
<codeline lineno="4889"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><ref refid="input_8c_1a84fe1e074ad6e11972949e82850c890c" kindref="member">bind_pointer_constraints</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_pointer_constraints_v1_interface,</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"></highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;<ref refid="input_8c_1a35133392e11448243a2e219a602f4eef" kindref="member">pointer_constraints_interface</ref>,</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="4903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><ref refid="input_8c_1ae64352d414f52517f87c7926691c35bf" kindref="member">input_timestamps_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="4908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"></highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_input_timestamps_v1_interface</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a14b06629165f6ec84a8db6941ce35270" kindref="member">input_timestamps_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae64352d414f52517f87c7926691c35bf" kindref="member">input_timestamps_destroy</ref>,</highlight></codeline>
<codeline lineno="4915"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"></highlight></codeline>
<codeline lineno="4917"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><ref refid="input_8c_1a8931804fccd7026f1972048b181017ce" kindref="member">input_timestamps_manager_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="4920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="4922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><ref refid="input_8c_1a6099c9369757ce67780e52f832702676" kindref="member">input_timestamps_manager_get_keyboard_timestamps</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*keyboard_resource)</highlight></codeline>
<codeline lineno="4929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(keyboard_resource);</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*input_ts;</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"></highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_ts<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_input_timestamps_v1_interface,</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!input_ts)<sp/>{</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"></highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structkeyboard" kindref="compound">keyboard</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(input_ts));</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(wl_resource_get_link(input_ts));</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"></highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(input_ts,</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1a14b06629165f6ec84a8db6941ce35270" kindref="member">input_timestamps_interface</ref>,</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyboard_resource,</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>);</highlight></codeline>
<codeline lineno="4953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"></highlight></codeline>
<codeline lineno="4955"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><ref refid="input_8c_1ae63d1f9191ba53f7c496724e13311efc" kindref="member">input_timestamps_manager_get_pointer_timestamps</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*pointer_resource)</highlight></codeline>
<codeline lineno="4960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(pointer_resource);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*input_ts;</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"></highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_ts<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_input_timestamps_v1_interface,</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!input_ts)<sp/>{</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"></highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpointer" kindref="compound">pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(input_ts));</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(wl_resource_get_link(input_ts));</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(input_ts,</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1a14b06629165f6ec84a8db6941ce35270" kindref="member">input_timestamps_interface</ref>,</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_resource,</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>);</highlight></codeline>
<codeline lineno="4984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><ref refid="input_8c_1a02a59b9dc18f1a3581115c28626c04d8" kindref="member">input_timestamps_manager_get_touch_timestamps</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*touch_resource)</highlight></codeline>
<codeline lineno="4991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>wl_resource_get_user_data(touch_resource);</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*input_ts;</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"></highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_ts<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_input_timestamps_v1_interface,</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!input_ts)<sp/>{</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtouch" kindref="compound">touch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structtouch" kindref="compound">touch</ref>-&gt;timestamps_list,</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(input_ts));</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(wl_resource_get_link(input_ts));</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(input_ts,</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1a14b06629165f6ec84a8db6941ce35270" kindref="member">input_timestamps_interface</ref>,</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touch_resource,</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>);</highlight></codeline>
<codeline lineno="5014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">zwp_input_timestamps_manager_v1_interface</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ac672ad4b3f0ee0c4dd5607feeb109e9d" kindref="member">input_timestamps_manager_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8931804fccd7026f1972048b181017ce" kindref="member">input_timestamps_manager_destroy</ref>,</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6099c9369757ce67780e52f832702676" kindref="member">input_timestamps_manager_get_keyboard_timestamps</ref>,</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae63d1f9191ba53f7c496724e13311efc" kindref="member">input_timestamps_manager_get_pointer_timestamps</ref>,</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a02a59b9dc18f1a3581115c28626c04d8" kindref="member">input_timestamps_manager_get_touch_timestamps</ref>,</highlight></codeline>
<codeline lineno="5022"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"></highlight></codeline>
<codeline lineno="5024"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><ref refid="input_8c_1aa169f2f56dc40230e8f9e749b03e3ae3" kindref="member">bind_input_timestamps_manager</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource<sp/>=</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_input_timestamps_manager_v1_interface,</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"></highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="input_8c_1ac672ad4b3f0ee0c4dd5607feeb109e9d" kindref="member">input_timestamps_manager_interface</ref>,</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="5041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"></highlight></codeline>
<codeline lineno="5043"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><ref refid="input_8c_1a7d55cac3425ac3f6641a05922142266e" kindref="member">weston_input_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor)</highlight></codeline>
<codeline lineno="5045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_global_create(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_relative_pointer_manager_v1_interface,<sp/>1,</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositor,<sp/><ref refid="input_8c_1af8d72305401b3576fd7b105419a55b55" kindref="member">bind_relative_pointer_manager</ref>))</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_global_create(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_pointer_constraints_v1_interface,<sp/>1,</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="input_8c_1a84fe1e074ad6e11972949e82850c890c" kindref="member">bind_pointer_constraints</ref>))</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"></highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_global_create(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zwp_input_timestamps_manager_v1_interface,<sp/>1,</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="input_8c_1aa169f2f56dc40230e8f9e749b03e3ae3" kindref="member">bind_input_timestamps_manager</ref>))</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"></highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/libweston/input.c"/>
  </compounddef>
</doxygen>
