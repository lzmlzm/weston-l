<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="launcher-libseat_8c" kind="file" language="C++">
    <compoundname>launcher-libseat.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">libseat.h</includes>
    <includes refid="libweston_8h" local="no">libweston/libweston.h</includes>
    <includes refid="backend_8h" local="yes">backend.h</includes>
    <includes refid="dbus_8h" local="yes">dbus.h</includes>
    <includes refid="launcher-impl_8h" local="yes">launcher-impl.h</includes>
    <incdepgraph>
      <node id="12">
        <label>sys/stat.h</label>
      </node>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="15">
        <label>libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/libweston/launcher-libseat.c</label>
        <link refid="launcher-libseat_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="19">
        <label>wayland-server.h</label>
      </node>
      <node id="18">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="24">
        <label>launcher-impl.h</label>
        <link refid="launcher-impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>errno.h</label>
      </node>
      <node id="4">
        <label>fcntl.h</label>
      </node>
      <node id="23">
        <label>dbus.h</label>
        <link refid="dbus_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
      <node id="13">
        <label>unistd.h</label>
      </node>
      <node id="5">
        <label>signal.h</label>
      </node>
      <node id="21">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>time.h</label>
      </node>
      <node id="20">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="17">
        <label>pixman.h</label>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="22">
        <label>backend.h</label>
        <link refid="backend_8h"/>
      </node>
      <node id="14">
        <label>libseat.h</label>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structlauncher__libseat__device" prot="public">launcher_libseat_device</innerclass>
    <innerclass refid="structlauncher__libseat" prot="public">launcher_libseat</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="launcher-libseat_8c_1a6d6ced567e35447ae4ca6bf582324c34" prot="public" static="yes" mutable="no">
        <type>struct libseat_seat_listener</type>
        <definition>struct libseat_seat_listener seat_listener</definition>
        <argsstring></argsstring>
        <name>seat_listener</name>
        <initializer>= {
	.enable_seat = <ref refid="launcher-libseat_8c_1a66424993c6c6c1d7476d84181751ab26" kindref="member">handle_enable_seat</ref>,
	.disable_seat = <ref refid="launcher-libseat_8c_1a9f62dd71f449ff6bf7654dc8fc9b812e" kindref="member">handle_disable_seat</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="89" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="launcher-libseat_8c_1aa2d8c686ae230de520cb5414e2dad919" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structlauncher__interface" kindref="compound">launcher_interface</ref></type>
        <definition>const struct launcher_interface launcher_libseat_iface</definition>
        <argsstring></argsstring>
        <name>launcher_libseat_iface</name>
        <initializer>= {
	.name = &quot;libseat&quot;,
	.connect = <ref refid="launcher-libseat_8c_1a841b7f5d9a44b5e344e1b8225612e30d" kindref="member">seat_open</ref>,
	.destroy = <ref refid="launcher-libseat_8c_1ac09b71976ac0e117ea9efc0eb68bbad6" kindref="member">seat_close</ref>,
	.open = <ref refid="launcher-libseat_8c_1a3847f87d456832df13678b5b8dc16e0e" kindref="member">seat_open_device</ref>,
	.close = <ref refid="launcher-libseat_8c_1adaae16e092c3e44e8d737ac99bc7d994" kindref="member">seat_close_device</ref>,
	.activate_vt = <ref refid="launcher-libseat_8c_1a547e90bb2d8215c1d4b395083a20a385" kindref="member">seat_switch_session</ref>,
	.get_vt = <ref refid="launcher-libseat_8c_1afa76324ee9cf5a975c2f3433e0208e26" kindref="member">seat_get_vt</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="242" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="launcher-libseat_8c_1a8a4b32d4e2219a02d37a7759d86d4a7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structlauncher__libseat__device" kindref="compound">launcher_libseat_device</ref> *</type>
        <definition>static struct launcher_libseat_device* find_device_by_fd</definition>
        <argsstring>(struct launcher_libseat *wl, int fd)</argsstring>
        <name>find_device_by_fd</name>
        <param>
          <type>struct <ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref> *</type>
          <declname>wl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="64" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1a66424993c6c6c1d7476d84181751ab26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_enable_seat</definition>
        <argsstring>(struct libseat *seat, void *data)</argsstring>
        <name>handle_enable_seat</name>
        <param>
          <type>struct libseat *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="76" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="76" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1a9f62dd71f449ff6bf7654dc8fc9b812e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_disable_seat</definition>
        <argsstring>(struct libseat *seat, void *data)</argsstring>
        <name>handle_disable_seat</name>
        <param>
          <type>struct libseat *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="89" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="89" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1a3847f87d456832df13678b5b8dc16e0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int seat_open_device</definition>
        <argsstring>(struct weston_launcher *launcher, const char *path, int flags)</argsstring>
        <name>seat_open_device</name>
        <param>
          <type>struct <ref refid="structweston__launcher" kindref="compound">weston_launcher</ref> *</type>
          <declname>launcher</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="108" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="108" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1adaae16e092c3e44e8d737ac99bc7d994" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_close_device</definition>
        <argsstring>(struct weston_launcher *launcher, int fd)</argsstring>
        <name>seat_close_device</name>
        <param>
          <type>struct <ref refid="structweston__launcher" kindref="compound">weston_launcher</ref> *</type>
          <declname>launcher</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="142" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="142" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1a547e90bb2d8215c1d4b395083a20a385" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int seat_switch_session</definition>
        <argsstring>(struct weston_launcher *launcher, int vt)</argsstring>
        <name>seat_switch_session</name>
        <param>
          <type>struct <ref refid="structweston__launcher" kindref="compound">weston_launcher</ref> *</type>
          <declname>launcher</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="165" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1a6e0437cdebc118126ddc5234ce36b866" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int libseat_event</definition>
        <argsstring>(int fd, uint32_t mask, void *data)</argsstring>
        <name>libseat_event</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="172" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="172" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1a841b7f5d9a44b5e344e1b8225612e30d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int seat_open</definition>
        <argsstring>(struct weston_launcher **out, struct weston_compositor *compositor, int tty, const char *seat_id, bool sync_drm)</argsstring>
        <name>seat_open</name>
        <param>
          <type>struct <ref refid="structweston__launcher" kindref="compound">weston_launcher</ref> **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tty</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>seat_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sync_drm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="183" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="183" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1ac09b71976ac0e117ea9efc0eb68bbad6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_close</definition>
        <argsstring>(struct weston_launcher *launcher)</argsstring>
        <name>seat_close</name>
        <param>
          <type>struct <ref refid="structweston__launcher" kindref="compound">weston_launcher</ref> *</type>
          <declname>launcher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="230" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="230" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="launcher-libseat_8c_1afa76324ee9cf5a975c2f3433e0208e26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int seat_get_vt</definition>
        <argsstring>(struct weston_launcher *launcher)</argsstring>
        <name>seat_get_vt</name>
        <param>
          <type>struct <ref refid="structweston__launcher" kindref="compound">weston_launcher</ref> *</type>
          <declname>launcher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" line="242" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/launcher-libseat.c" bodystart="242" bodyend="245"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2020<sp/>Kenny<sp/>Levinsen</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libseat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="libweston_8h" kindref="compound">libweston/libweston.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="backend_8h" kindref="compound">backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dbus_8h" kindref="compound">dbus.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="launcher-impl_8h" kindref="compound">launcher-impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structlauncher__libseat__device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat__device" kindref="compound">launcher_libseat_device</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structlauncher__libseat__device_1a1f66a87f786e1644087a8fe088dda0ef" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlauncher__libseat__device_1ace7d80639c27756f62057dd92735ebba" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlauncher__libseat__device_1a7bd2c77c5851511656ca1dc0f1ec0bfe" kindref="member">device_id</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_t<sp/><ref refid="structlauncher__libseat__device_1a0a74ddc77b0191aff1df615e8f5d04ec" kindref="member">fsdev</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structlauncher__libseat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__launcher" kindref="compound">weston_launcher</ref><sp/><ref refid="structlauncher__libseat_1a9108ffe786bbe648242b8a9397c414df" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">libseat<sp/>*<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source<sp/>*<ref refid="structlauncher__libseat_1ad33535cf94bf7c462223243fec4e7bdf" kindref="member">seat_ctx</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structlauncher__libseat_1a97bbfe87347a94122111e852196aa606" kindref="member">devices</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat__device" kindref="compound">launcher_libseat_device</ref><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="launcher-libseat_8c_1a8a4b32d4e2219a02d37a7759d86d4a7e" kindref="member">find_device_by_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>*wl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlauncher__libseat__device_1ace7d80639c27756f62057dd92735ebba" kindref="member">fd</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat__device" kindref="compound">launcher_libseat_device</ref><sp/>*dev;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(dev,<sp/>&amp;wl-&gt;<ref refid="structlauncher__libseat_1a97bbfe87347a94122111e852196aa606" kindref="member">devices</ref>,<sp/><ref refid="structlauncher__libseat__device_1a1f66a87f786e1644087a8fe088dda0ef" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structlauncher__libseat__device_1ace7d80639c27756f62057dd92735ebba" kindref="member">fd</ref><sp/>==<sp/><ref refid="structlauncher__libseat__device_1ace7d80639c27756f62057dd92735ebba" kindref="member">fd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dev;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="launcher-libseat_8c_1a66424993c6c6c1d7476d84181751ab26" kindref="member">handle_enable_seat</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>libseat<sp/>*seat,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>*wl<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a1261d536f85647f94598c6892e6b5b9f" kindref="member">session_active</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a1261d536f85647f94598c6892e6b5b9f" kindref="member">session_active</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a6e62e13d73c89d00ef3c7788ea4ddd83" kindref="member">session_signal</ref>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="launcher-libseat_8c_1a9f62dd71f449ff6bf7654dc8fc9b812e" kindref="member">handle_disable_seat</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>libseat<sp/>*<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>*wl<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a1261d536f85647f94598c6892e6b5b9f" kindref="member">session_active</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a1261d536f85647f94598c6892e6b5b9f" kindref="member">session_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>-&gt;<ref refid="structweston__compositor_1a6e62e13d73c89d00ef3c7788ea4ddd83" kindref="member">session_signal</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libseat_disable_seat(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">libseat_seat_listener<sp/><ref refid="launcher-libseat_8c_1a6d6ced567e35447ae4ca6bf582324c34" kindref="member">seat_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.enable_seat<sp/>=<sp/><ref refid="launcher-libseat_8c_1a66424993c6c6c1d7476d84181751ab26" kindref="member">handle_enable_seat</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.disable_seat<sp/>=<sp/><ref refid="launcher-libseat_8c_1a9f62dd71f449ff6bf7654dc8fc9b812e" kindref="member">handle_disable_seat</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="launcher-libseat_8c_1a3847f87d456832df13678b5b8dc16e0e" kindref="member">seat_open_device</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__launcher" kindref="compound">weston_launcher</ref><sp/>*launcher,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>*wl<sp/>=<sp/>wl_container_of(launcher,<sp/>wl,<sp/><ref refid="structlauncher__libseat_1a9108ffe786bbe648242b8a9397c414df" kindref="member">base</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat__device" kindref="compound">launcher_libseat_device</ref><sp/>*dev;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlauncher__libseat__device" kindref="compound">launcher_libseat_device</ref>));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_alloc;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;device_id<sp/>=<sp/>libseat_open_device(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>,<sp/>path,<sp/>&amp;dev-&gt;fd);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;device_id<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_open;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fstat(dev-&gt;fd,<sp/>&amp;st)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_fd;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;fsdev<sp/>=<sp/>st.st_rdev;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;wl-&gt;<ref refid="structlauncher__libseat_1a97bbfe87347a94122111e852196aa606" kindref="member">devices</ref>,<sp/>&amp;dev-&gt;link);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dev-&gt;fd;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">err_fd:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libseat_close_device(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>,<sp/>dev-&gt;device_id);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(dev-&gt;fd);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">err_open:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(dev);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">err_alloc:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="launcher-libseat_8c_1adaae16e092c3e44e8d737ac99bc7d994" kindref="member">seat_close_device</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__launcher" kindref="compound">weston_launcher</ref><sp/>*launcher,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>*wl<sp/>=<sp/>wl_container_of(launcher,<sp/>wl,<sp/><ref refid="structlauncher__libseat_1a9108ffe786bbe648242b8a9397c414df" kindref="member">base</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat__device" kindref="compound">launcher_libseat_device</ref><sp/>*dev;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev<sp/>=<sp/><ref refid="launcher-libseat_8c_1a8a4b32d4e2219a02d37a7759d86d4a7e" kindref="member">find_device_by_fd</ref>(wl,<sp/><ref refid="structlauncher__libseat__device_1ace7d80639c27756f62057dd92735ebba" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;libseat:<sp/>No<sp/>device<sp/>with<sp/>fd<sp/>%d<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structlauncher__libseat__device_1ace7d80639c27756f62057dd92735ebba" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(<ref refid="structlauncher__libseat__device_1ace7d80639c27756f62057dd92735ebba" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libseat_close_device(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>,<sp/>dev-&gt;<ref refid="structlauncher__libseat__device_1a7bd2c77c5851511656ca1dc0f1ec0bfe" kindref="member">device_id</ref>)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;libseat:<sp/>Could<sp/>not<sp/>close<sp/>device<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structlauncher__libseat__device_1a7bd2c77c5851511656ca1dc0f1ec0bfe" kindref="member">device_id</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;dev-&gt;<ref refid="structlauncher__libseat__device_1a1f66a87f786e1644087a8fe088dda0ef" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(dev);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(<ref refid="structlauncher__libseat__device_1ace7d80639c27756f62057dd92735ebba" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="launcher-libseat_8c_1a547e90bb2d8215c1d4b395083a20a385" kindref="member">seat_switch_session</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__launcher" kindref="compound">weston_launcher</ref><sp/>*launcher,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vt)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>*wl<sp/>=<sp/>wl_container_of(launcher,<sp/>wl,<sp/><ref refid="structlauncher__libseat_1a9108ffe786bbe648242b8a9397c414df" kindref="member">base</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libseat_switch_session(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>,<sp/>vt);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="launcher-libseat_8c_1a6e0437cdebc118126ddc5234ce36b866" kindref="member">libseat_event</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">libseat<sp/>*seat<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libseat_dispatch(seat,<sp/>0)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;libseat:<sp/>dispatch<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="launcher-libseat_8c_1a841b7f5d9a44b5e344e1b8225612e30d" kindref="member">seat_open</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__launcher" kindref="compound">weston_launcher</ref><sp/>**out,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tty,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seat_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sync_drm)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>*wl;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_loop<sp/>*event_loop;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl<sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*wl));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl-&gt;<ref refid="structlauncher__libseat_1a9108ffe786bbe648242b8a9397c414df" kindref="member">base</ref>.<ref refid="structweston__launcher_1aa6f9ca9ae269376334c52aa5927a2c30" kindref="member">iface</ref><sp/>=<sp/>&amp;<ref refid="launcher-libseat_8c_1aa2d8c686ae230de520cb5414e2dad919" kindref="member">launcher_libseat_iface</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl-&gt;<ref refid="structlauncher__libseat_1a2a7b0aa3b285e9ea5e3fc0e574fd8b8e" kindref="member">compositor</ref><sp/>=<sp/>compositor;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;wl-&gt;<ref refid="structlauncher__libseat_1a97bbfe87347a94122111e852196aa606" kindref="member">devices</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref><sp/>=<sp/>libseat_open_seat(&amp;<ref refid="launcher-libseat_8c_1a6d6ced567e35447ae4ca6bf582324c34" kindref="member">seat_listener</ref>,<sp/>wl);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;libseat:<sp/>could<sp/>not<sp/>open<sp/>seat\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_seat;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_loop<sp/>=<sp/>wl_display_get_event_loop(compositor-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl-&gt;<ref refid="structlauncher__libseat_1ad33535cf94bf7c462223243fec4e7bdf" kindref="member">seat_ctx</ref><sp/>=<sp/>wl_event_loop_add_fd(event_loop,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libseat_get_fd(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>),<sp/>WL_EVENT_READABLE,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="launcher-libseat_8c_1a6e0437cdebc118126ddc5234ce36b866" kindref="member">libseat_event</ref>,<sp/>wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl-&gt;<ref refid="structlauncher__libseat_1ad33535cf94bf7c462223243fec4e7bdf" kindref="member">seat_ctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;libseat:<sp/>could<sp/>not<sp/>register<sp/>connection<sp/>to<sp/>event<sp/>loop\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_session;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libseat_dispatch(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>,<sp/>0)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;libseat:<sp/>dispatch<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_session;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;libseat:<sp/>session<sp/>control<sp/>granted\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out<sp/>=<sp/>&amp;wl-&gt;<ref refid="structlauncher__libseat_1a9108ffe786bbe648242b8a9397c414df" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">err_session:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libseat_close_seat(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">err_seat:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(wl);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">err_out:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="launcher-libseat_8c_1ac09b71976ac0e117ea9efc0eb68bbad6" kindref="member">seat_close</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__launcher" kindref="compound">weston_launcher</ref><sp/>*launcher)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__libseat" kindref="compound">launcher_libseat</ref><sp/>*wl<sp/>=<sp/>wl_container_of(launcher,<sp/>wl,<sp/><ref refid="structlauncher__libseat_1a9108ffe786bbe648242b8a9397c414df" kindref="member">base</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libseat_close_seat(wl-&gt;<ref refid="structlauncher__libseat_1a8efa41b8f09633c7109b826351f87b93" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_remove(wl-&gt;<ref refid="structlauncher__libseat_1ad33535cf94bf7c462223243fec4e7bdf" kindref="member">seat_ctx</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(wl);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><ref refid="launcher-libseat_8c_1afa76324ee9cf5a975c2f3433e0208e26" kindref="member">seat_get_vt</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__launcher" kindref="compound">weston_launcher</ref><sp/>*launcher)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOSYS;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlauncher__interface" kindref="compound">launcher_interface</ref><sp/><ref refid="launcher-libseat_8c_1aa2d8c686ae230de520cb5414e2dad919" kindref="member">launcher_libseat_iface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structlauncher__interface_1a6ad381fcad46afe08757d52d17e8c7c5" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;libseat&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connect<sp/>=<sp/><ref refid="launcher-libseat_8c_1a841b7f5d9a44b5e344e1b8225612e30d" kindref="member">seat_open</ref>,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.destroy<sp/>=<sp/><ref refid="launcher-libseat_8c_1ac09b71976ac0e117ea9efc0eb68bbad6" kindref="member">seat_close</ref>,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.open<sp/>=<sp/><ref refid="launcher-libseat_8c_1a3847f87d456832df13678b5b8dc16e0e" kindref="member">seat_open_device</ref>,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.close<sp/>=<sp/><ref refid="launcher-libseat_8c_1adaae16e092c3e44e8d737ac99bc7d994" kindref="member">seat_close_device</ref>,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.activate_vt<sp/>=<sp/><ref refid="launcher-libseat_8c_1a547e90bb2d8215c1d4b395083a20a385" kindref="member">seat_switch_session</ref>,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get_vt<sp/>=<sp/><ref refid="launcher-libseat_8c_1afa76324ee9cf5a975c2f3433e0208e26" kindref="member">seat_get_vt</ref>,</highlight></codeline>
<codeline lineno="255"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/libweston/launcher-libseat.c"/>
  </compounddef>
</doxygen>
