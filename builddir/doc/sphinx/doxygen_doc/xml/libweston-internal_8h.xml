<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="libweston-internal_8h" kind="file" language="C++">
    <compoundname>libweston-internal.h</compoundname>
    <includedby refid="animation_8c" local="yes">/home/lzm/Wayland/weston/libweston/animation.c</includedby>
    <includedby refid="drm-internal_8h" local="yes">/home/lzm/Wayland/weston/libweston/backend-drm/drm-internal.h</includedby>
    <includedby refid="bindings_8c" local="yes">/home/lzm/Wayland/weston/libweston/bindings.c</includedby>
    <includedby refid="clipboard_8c" local="yes">/home/lzm/Wayland/weston/libweston/clipboard.c</includedby>
    <includedby refid="compositor_8c" local="yes">/home/lzm/Wayland/weston/libweston/compositor.c</includedby>
    <includedby refid="content-protection_8c" local="yes">/home/lzm/Wayland/weston/libweston/content-protection.c</includedby>
    <includedby refid="data-device_8c" local="yes">/home/lzm/Wayland/weston/libweston/data-device.c</includedby>
    <includedby refid="input_8c" local="yes">/home/lzm/Wayland/weston/libweston/input.c</includedby>
    <includedby refid="libinput-device_8c" local="yes">/home/lzm/Wayland/weston/libweston/libinput-device.c</includedby>
    <includedby refid="libinput-seat_8c" local="yes">/home/lzm/Wayland/weston/libweston/libinput-seat.c</includedby>
    <includedby refid="linux-dmabuf_8c" local="yes">/home/lzm/Wayland/weston/libweston/linux-dmabuf.c</includedby>
    <includedby refid="linux-explicit-synchronization_8c" local="yes">/home/lzm/Wayland/weston/libweston/linux-explicit-synchronization.c</includedby>
    <includedby refid="noop-renderer_8c" local="yes">/home/lzm/Wayland/weston/libweston/noop-renderer.c</includedby>
    <includedby refid="pixman-renderer_8h" local="yes">/home/lzm/Wayland/weston/libweston/pixman-renderer.h</includedby>
    <includedby refid="gl-renderer_8h" local="yes">/home/lzm/Wayland/weston/libweston/renderer-gl/gl-renderer.h</includedby>
    <includedby refid="screenshooter_8c" local="yes">/home/lzm/Wayland/weston/libweston/screenshooter.c</includedby>
    <includedby refid="touch-calibration_8c" local="yes">/home/lzm/Wayland/weston/libweston/touch-calibration.c</includedby>
    <includedby refid="weston-direct-display_8c" local="yes">/home/lzm/Wayland/weston/libweston/weston-direct-display.c</includedby>
    <includedby refid="zoom_8c" local="yes">/home/lzm/Wayland/weston/libweston/zoom.c</includedby>
    <includedby refid="surface-global-test_8c" local="yes">/home/lzm/Wayland/weston/tests/surface-global-test.c</includedby>
    <includedby refid="surface-screenshot-test_8c" local="yes">/home/lzm/Wayland/weston/tests/surface-screenshot-test.c</includedby>
    <includedby refid="weston-test_8c" local="yes">/home/lzm/Wayland/weston/tests/weston-test.c</includedby>
    <invincdepgraph>
      <node id="5">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-virtual.c</label>
        <link refid="drm-virtual_8c"/>
      </node>
      <node id="15">
        <label>/home/lzm/Wayland/weston/libweston/content-protection.c</label>
        <link refid="content-protection_8c"/>
      </node>
      <node id="6">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm.c</label>
        <link refid="drm_8c"/>
      </node>
      <node id="17">
        <label>/home/lzm/Wayland/weston/libweston/input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="4">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-gbm.c</label>
        <link refid="drm-gbm_8c"/>
      </node>
      <node id="22">
        <label>/home/lzm/Wayland/weston/libweston/noop-renderer.c</label>
        <link refid="noop-renderer_8c"/>
      </node>
      <node id="25">
        <label>/home/lzm/Wayland/weston/libweston/backend-headless/headless.c</label>
        <link refid="headless_8c"/>
      </node>
      <node id="20">
        <label>/home/lzm/Wayland/weston/libweston/linux-dmabuf.c</label>
        <link refid="linux-dmabuf_8c"/>
      </node>
      <node id="26">
        <label>/home/lzm/Wayland/weston/libweston/backend-rdp/rdp.c</label>
        <link refid="rdp_8c"/>
      </node>
      <node id="3">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-internal.h</label>
        <link refid="drm-internal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/home/lzm/Wayland/weston/libweston/renderer-gl/gl-shaders.c</label>
        <link refid="gl-shaders_8c"/>
      </node>
      <node id="36">
        <label>/home/lzm/Wayland/weston/libweston/weston-direct-display.c</label>
        <link refid="weston-direct-display_8c"/>
      </node>
      <node id="28">
        <label>/home/lzm/Wayland/weston/libweston/backend-x11/x11.c</label>
        <link refid="x11_8c"/>
      </node>
      <node id="24">
        <label>/home/lzm/Wayland/weston/libweston/backend-fbdev/fbdev.c</label>
        <link refid="fbdev_8c"/>
      </node>
      <node id="11">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/state-propose.c</label>
        <link refid="state-propose_8c"/>
      </node>
      <node id="16">
        <label>/home/lzm/Wayland/weston/libweston/data-device.c</label>
        <link refid="data-device_8c"/>
      </node>
      <node id="31">
        <label>/home/lzm/Wayland/weston/libweston/renderer-gl/egl-glue.c</label>
        <link refid="egl-glue_8c"/>
      </node>
      <node id="10">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/state-helpers.c</label>
        <link refid="state-helpers_8c"/>
      </node>
      <node id="12">
        <label>/home/lzm/Wayland/weston/libweston/bindings.c</label>
        <link refid="bindings_8c"/>
      </node>
      <node id="29">
        <label>/home/lzm/Wayland/weston/libweston/pixman-renderer.c</label>
        <link refid="pixman-renderer_8c"/>
      </node>
      <node id="23">
        <label>/home/lzm/Wayland/weston/libweston/pixman-renderer.h</label>
        <link refid="pixman-renderer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/lzm/Wayland/weston/libweston/linux-explicit-synchronization.c</label>
        <link refid="linux-explicit-synchronization_8c"/>
      </node>
      <node id="34">
        <label>/home/lzm/Wayland/weston/libweston/screenshooter.c</label>
        <link refid="screenshooter_8c"/>
      </node>
      <node id="2">
        <label>/home/lzm/Wayland/weston/libweston/animation.c</label>
        <link refid="animation_8c"/>
      </node>
      <node id="32">
        <label>/home/lzm/Wayland/weston/libweston/renderer-gl/gl-renderer.c</label>
        <link refid="gl-renderer_8c"/>
      </node>
      <node id="30">
        <label>/home/lzm/Wayland/weston/libweston/renderer-gl/gl-renderer.h</label>
        <link refid="gl-renderer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/home/lzm/Wayland/weston/tests/surface-global-test.c</label>
        <link refid="surface-global-test_8c"/>
      </node>
      <node id="8">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/kms.c</label>
        <link refid="kms_8c"/>
      </node>
      <node id="37">
        <label>/home/lzm/Wayland/weston/libweston/zoom.c</label>
        <link refid="zoom_8c"/>
      </node>
      <node id="18">
        <label>/home/lzm/Wayland/weston/libweston/libinput-device.c</label>
        <link refid="libinput-device_8c"/>
      </node>
      <node id="27">
        <label>/home/lzm/Wayland/weston/libweston/backend-wayland/wayland.c</label>
        <link refid="wayland_8c"/>
      </node>
      <node id="7">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="13">
        <label>/home/lzm/Wayland/weston/libweston/clipboard.c</label>
        <link refid="clipboard_8c"/>
      </node>
      <node id="35">
        <label>/home/lzm/Wayland/weston/libweston/touch-calibration.c</label>
        <link refid="touch-calibration_8c"/>
      </node>
      <node id="14">
        <label>/home/lzm/Wayland/weston/libweston/compositor.c</label>
        <link refid="compositor_8c"/>
      </node>
      <node id="19">
        <label>/home/lzm/Wayland/weston/libweston/libinput-seat.c</label>
        <link refid="libinput-seat_8c"/>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/libweston/libweston-internal.h</label>
        <link refid="libweston-internal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/home/lzm/Wayland/weston/tests/weston-test.c</label>
        <link refid="weston-test_8c"/>
      </node>
      <node id="9">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/modes.c</label>
        <link refid="modes_8c"/>
      </node>
      <node id="39">
        <label>/home/lzm/Wayland/weston/tests/surface-screenshot-test.c</label>
        <link refid="surface-screenshot-test_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="libweston-internal_8h_1aed6929d897784a5d5538aca4aaf7d4cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_buffer_send_server_error</definition>
        <argsstring>(struct weston_buffer *buffer, const char *msg)</argsstring>
        <name>weston_buffer_send_server_error</name>
        <param>
          <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Resolve an internal compositor error by disconnecting the client. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used in cases when the wl_buffer turns out unusable and there is no fallback path.</para>
<para>It is possible the fault is caused by a compositor bug, the underlying graphics stack bug or normal behaviour, or perhaps a client mistake. In any case, the options are to either composite garbage or nothing, or disconnect the client. This is a helper function for the latter.</para>
<para>The error is sent as an INVALID_OBJECT error on the client&apos;s wl_display.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The weston buffer that is unusable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>A custom error message attached to the protocol error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="47" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="8032" bodyend="8049" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="47" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a46c9d30efa62b7ca5f720b1dd83ebe12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_buffer_reference</definition>
        <argsstring>(struct weston_buffer_reference *ref, struct weston_buffer *buffer)</argsstring>
        <name>weston_buffer_reference</name>
        <param>
          <type>struct <ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="50" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2336" bodyend="2356" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="50" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a23af340f7ae575bb87d66816c0e0ebdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_buffer_release_move</definition>
        <argsstring>(struct weston_buffer_release_reference *dest, struct weston_buffer_release_reference *src)</argsstring>
        <name>weston_buffer_release_move</name>
        <param>
          <type>struct <ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="54" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2413" bodyend="2418" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="54" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1afa7cfa1a0d493919152d7a79aad83edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_buffer_release_reference</definition>
        <argsstring>(struct weston_buffer_release_reference *ref, struct weston_buffer_release *buf_release)</argsstring>
        <name>weston_buffer_release_reference</name>
        <param>
          <type>struct <ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer__release" kindref="compound">weston_buffer_release</ref> *</type>
          <declname>buf_release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="58" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2388" bodyend="2410" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="58" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a87fd816827f096a6c11339f71043874b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_binding_list_destroy_all</definition>
        <argsstring>(struct wl_list *list)</argsstring>
        <name>weston_binding_list_destroy_all</name>
        <param>
          <type>struct wl_list *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="63" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="182" bodyend="188" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="63" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1ac8f3995039375cf0814baa61932685e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void touch_calibrator_mode_changed</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>touch_calibrator_mode_changed</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="68" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/touch-calibration.c" bodystart="239" bodyend="252" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="68" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a8f754b8b4d8e45b3d0264705c9293f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int noop_renderer_init</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>noop_renderer_init</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="71" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/noop-renderer.c" bodystart="106" bodyend="123" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="71" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga9cc453a480c9083e2b15d974f0c9d61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_add_head</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_head *head)</argsstring>
        <name>weston_compositor_add_head</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Register a new head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to register, must not be already registered.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This signals the core that a new head has become available, leading to heads_changed hook being called later. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="74" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5150" bodyend="5159" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="74" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga3bf54722d538ec9410a82d1242a84958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_add_pending_output</definition>
        <argsstring>(struct weston_output *output, struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_add_pending_output</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Adds <ref refid="structweston__output" kindref="compound">weston_output</ref> object to pending output list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The opposite of this operation is built into <ref refid="group__output_1ga4f2b78dfe24872b341fccb812d1e9473" kindref="member">weston_output_release()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="77" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6345" bodyend="6353" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="77" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga321e3fcf45c3aa5f8d5280691f6232c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_compositor_import_dmabuf</definition>
        <argsstring>(struct weston_compositor *compositor, struct linux_dmabuf_buffer *buffer)</argsstring>
        <name>weston_compositor_import_dmabuf</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Import dmabuf buffer into current renderer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the dmabuf buffer to import </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on usable buffers, false otherwise</para>
</simplesect>
This function tests that the <ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref> is usable for the current renderer. Returns false on unusable buffers. Usually usability is tested by importing the dmabufs for composition.</para>
<para>This hook is also used for detecting if the renderer supports dmabufs at all. If the renderer hook is NULL, dmabufs are not supported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="80" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7715" bodyend="7726" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="80" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a3694816c632e1265384ed06f9a0bfab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_compositor_dmabuf_can_scanout</definition>
        <argsstring>(struct weston_compositor *compositor, struct linux_dmabuf_buffer *buffer)</argsstring>
        <name>weston_compositor_dmabuf_can_scanout</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="83" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7729" bodyend="7738" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="83" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gabbeb356dd9688004330df598b514a27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_offscreen</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_offscreen</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Turns off rendering and frame events for the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This is used for example to prevent further rendering while the compositor is shutting down.</para>
<para>Stops the idle timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="86" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4827" bodyend="4837" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="86" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga4fa96710c12bf0aee8935872bc1c7437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* weston_compositor_print_scene_graph</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_print_scene_graph</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
<para>Output information on how libweston is currently composing the scene graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="89" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7297" bodyend="7376" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="89" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_read_presentation_clock</definition>
        <argsstring>(const struct weston_compositor *compositor, struct timespec *ts)</argsstring>
        <name>weston_compositor_read_presentation_clock</name>
        <param>
          <type>const struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct timespec *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
<para>Read the current time from the Presentation clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ts</parametername>
</parameternamelist>
<parameterdescription>
<para>The current time.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Reading the current time in user space is always imprecise to some degree.</para>
</simplesect>
This function is never meant to fail. If reading the clock does fail, an error message is logged and a zero time is returned. Callers are not supposed to detect or react to failures. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="92" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7677" bodyend="7696" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="92" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a86163548f1868a8d900b7e1f5cf15cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_run_axis_binding</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_pointer *pointer, const struct timespec *time, struct weston_pointer_axis_event *event)</argsstring>
        <name>weston_compositor_run_axis_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="97" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="399" bodyend="420" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="97" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a7403708312ac4fb4d3e2a6f4cf975928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_run_button_binding</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_pointer *pointer, const struct timespec *time, uint32_t button, enum wl_pointer_button_state value)</argsstring>
        <name>weston_compositor_run_button_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>enum wl_pointer_button_state</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="102" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="355" bodyend="377" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="102" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1aac44625bcc6ea9001813934455c97250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_run_debug_binding</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_keyboard *keyboard, const struct timespec *time, uint32_t key, enum wl_keyboard_key_state state)</argsstring>
        <name>weston_compositor_run_debug_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum wl_keyboard_key_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="108" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="423" bodyend="442" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="108" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1aa7d83b5fe63ef57e6364620be3ffe9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_run_key_binding</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_keyboard *keyboard, const struct timespec *time, uint32_t key, enum wl_keyboard_key_state state)</argsstring>
        <name>weston_compositor_run_key_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum wl_keyboard_key_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="114" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="288" bodyend="321" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="114" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a15f8eb4f1e0f9a48c6db2d6f58f71e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_run_modifier_binding</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_keyboard *keyboard, enum weston_keyboard_modifier modifier, enum wl_keyboard_key_state state)</argsstring>
        <name>weston_compositor_run_modifier_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref></type>
          <declname>modifier</declname>
        </param>
        <param>
          <type>enum wl_keyboard_key_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="120" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="324" bodyend="352" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="120" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a0abb009d0ca7da1f924903a75672c722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_run_touch_binding</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_touch *touch, const struct timespec *time, int touch_type)</argsstring>
        <name>weston_compositor_run_touch_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="125" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="380" bodyend="396" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="125" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gac0da9a90074155e609e2f5845cbf25fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_stack_plane</definition>
        <argsstring>(struct weston_compositor *ec, struct weston_plane *plane, struct weston_plane *above)</argsstring>
        <name>weston_compositor_stack_plane</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>above</declname>
        </param>
        <briefdescription>
<para>weston_compositor_stack_plane </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="130" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4924" bodyend="4932" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="130" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1ab0b95770a5e0b0ba87ee3a3646c64b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_set_touch_mode_normal</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_set_touch_mode_normal</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Start transition to normal touch event handling. </para>
        </briefdescription>
        <detaileddescription>
<para>The touch event mode changes when all touches on all touch devices have been lifted. If no touches are currently down, the transition is immediate.</para>
<para><simplesect kind="see"><para><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="134" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2491" bodyend="2506" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="134" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1aca9dc3aa1b251cafd259642fbea8e119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_set_touch_mode_calib</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_set_touch_mode_calib</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Start transition to calibrator touch event handling. </para>
        </briefdescription>
        <detaileddescription>
<para>The touch event mode changes when all touches on all touch devices have been lifted. If no touches are currently down, the transition is immediate.</para>
<para><simplesect kind="see"><para><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="137" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2516" bodyend="2532" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="137" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gabaca768863a217e3c5fa4d7519676a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_set_presentation_clock</definition>
        <argsstring>(struct weston_compositor *compositor, clockid_t clk_id)</argsstring>
        <name>weston_compositor_set_presentation_clock</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>clockid_t</type>
          <declname>clk_id</declname>
        </param>
        <briefdescription>
<para>weston_compositor_set_presentation_clock </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="140" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7620" bodyend="7631" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="140" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaab7e6328af752385d84c17b9eebddf74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_set_presentation_clock_software</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_set_presentation_clock_software</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>For choosing the software clock, when the display hardware or API does not expose a compatible presentation timestamp. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="143" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7639" bodyend="7660" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="143" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gacc91a9f77baf1c72d967471bade09cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_shutdown</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_shutdown</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
<para>weston_compositor_shutdown </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="146" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7558" bodyend="7583" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="146" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a624242cb87819b26602d5b14cb0392ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_xkb_destroy</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_xkb_destroy</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="149" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3131" bodyend="3142" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="149" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a7d55cac3425ac3f6641a05922142266e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_input_init</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_input_init</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="152" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="5044" bodyend="5062" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="152" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a2b2ea3608297a59698d168b47e7d4072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_disable_planes_incr</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_disable_planes_incr</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="157" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="8052" bodyend="8063" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="157" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1abc5d5ea39a8242825a8a617805027997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_disable_planes_decr</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_disable_planes_decr</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="160" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="8066" bodyend="8077" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="160" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1ab52c880548e2277a5d370b343d782cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_plane_init</definition>
        <argsstring>(struct weston_plane *plane, struct weston_compositor *ec, int32_t x, int32_t y)</argsstring>
        <name>weston_plane_init</name>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="165" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4889" bodyend="4902" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="165" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1afdee68639f6f9af1a195ee4892afcce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_plane_release</definition>
        <argsstring>(struct weston_plane *plane)</argsstring>
        <name>weston_plane_release</name>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="169" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4905" bodyend="4918" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="169" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a6b4f345ba46e19810219d1414a676716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structclipboard" kindref="compound">clipboard</ref> *</type>
        <definition>struct clipboard* clipboard_create</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>clipboard_create</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="174" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/clipboard.c" bodystart="290" bodyend="308" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="174" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a8e69f6e66263be7757aadcc5f1528f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_init</definition>
        <argsstring>(struct weston_seat *seat, struct weston_compositor *ec, const char *seat_name)</argsstring>
        <name>weston_seat_init</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>seat_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="177" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3416" bodyend="3441" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="177" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a6de88b133f2df2089534d96a88becb8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_repick</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_repick</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="181" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="357" bodyend="365" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="181" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a4f4636b5443315bd1415369ed427d14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_release</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_release</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="184" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3444" bodyend="3476" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="184" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a3a1532272bbde1d38cb3a6a11e220909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_send_selection</definition>
        <argsstring>(struct weston_seat *seat, struct wl_client *client)</argsstring>
        <name>weston_seat_send_selection</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Send the selection to the specified client. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates a new wl_data_offer if there is a wl_data_source currently set as the selection and sends it to the specified client, followed by the wl_data_device.selection() event. If there is no current selection the wl_data_device.selection() event will carry a NULL wl_data_offer.</para>
<para>If the client does not have a wl_data_device for the specified seat nothing will be done.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat owning the wl_data_device used to send the events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The client to which to send the selection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="187" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/data-device.c" bodystart="1118" bodyend="1135" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="187" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a0f241f297507f22da6465509d03c9f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_init_pointer</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_init_pointer</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="190" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3335" bodyend="3355" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="190" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a6ee7365931e5b81e995c640d1bf158e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_seat_init_keyboard</definition>
        <argsstring>(struct weston_seat *seat, struct xkb_keymap *keymap)</argsstring>
        <name>weston_seat_init_keyboard</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct xkb_keymap *</type>
          <declname>keymap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="193" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3250" bodyend="3300" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="193" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a04b3f51a81712517ce6ed5a71adf6c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_init_touch</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_init_touch</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="196" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3381" bodyend="3401" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="196" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1adc5a8c2cbe300f6f0be4c17241c1f779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_release_keyboard</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_release_keyboard</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="199" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3322" bodyend="3332" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="199" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a9be3e32a8ef28ef2011c1b084494a18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_release_pointer</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_release_pointer</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="202" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3358" bodyend="3378" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="202" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a5d6a767a8449fe1bd7ebe9aeaf199ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_release_touch</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_release_touch</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="205" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3404" bodyend="3413" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="205" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a2fdbc776f3b6ac9b03828f05d9b01ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_update_keymap</definition>
        <argsstring>(struct weston_seat *seat, struct xkb_keymap *keymap)</argsstring>
        <name>weston_seat_update_keymap</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct xkb_keymap *</type>
          <declname>keymap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="208" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3235" bodyend="3247" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="208" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1aa0c093fa845ffd3417dfba422c9bc480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_data_device_set_keyboard_focus</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>wl_data_device_set_keyboard_focus</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="211" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/data-device.c" bodystart="1346" bodyend="1359" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="211" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a9d7987594807f912e2d98f1ca1e4237b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_clamp</definition>
        <argsstring>(struct weston_pointer *pointer, wl_fixed_t *fx, wl_fixed_t *fy)</argsstring>
        <name>weston_pointer_clamp</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>fy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="216" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1674" bodyend="1701" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="216" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a1a2f5a2d6428c3ed7e10464a53314e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_set_default_grab</definition>
        <argsstring>(struct weston_pointer *pointer, const struct weston_pointer_grab_interface *interface)</argsstring>
        <name>weston_pointer_set_default_grab</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="219" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1274" bodyend="1282" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="219" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1ab181ee2bacdbc99648f9b7aa14be7437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_constraint_destroy</definition>
        <argsstring>(struct weston_pointer_constraint *constraint)</argsstring>
        <name>weston_pointer_constraint_destroy</name>
        <param>
          <type>struct <ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="223" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3662" bodyend="3676" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="223" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1ab4324e1d9a1be4e0dee7f37b59dee41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_keyboard_has_focus_resource</definition>
        <argsstring>(struct weston_keyboard *keyboard)</argsstring>
        <name>weston_keyboard_has_focus_resource</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
<para>Check if the keyboard has focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyboard to check for focused resources. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not this keyboard has focused resources </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="227" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="984" bodyend="993" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="227" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1ab636d1e6d0bc7f2204c8f1f80cb47e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
        <definition>struct weston_touch_device* weston_touch_create_touch_device</definition>
        <argsstring>(struct weston_touch *touch, const char *syspath, void *backend_data, const struct weston_touch_device_ops *ops)</argsstring>
        <name>weston_touch_create_touch_device</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>syspath</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>backend_data</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__touch__device__ops" kindref="compound">weston_touch_device_ops</ref> *</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Register a touchscreen input device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <ref refid="structweston__touch" kindref="compound">weston_touch</ref> that identifies the seat. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syspath</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique device name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend private data if necessary. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ops</parametername>
</parameternamelist>
<parameterdescription>
<para>Calibration operations, or NULL for not able to run calibration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New touch device, or NULL on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="232" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="140" bodyend="174" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="232" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1aa6762c2cc7031bbfe61074d8b0d90191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_device_destroy</definition>
        <argsstring>(struct weston_touch_device *device)</argsstring>
        <name>weston_touch_device_destroy</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Destroy the touch device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="238" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="178" bodyend="184" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="238" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a4363722f2a5c5b613d8eb7f313549dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_touch_has_focus_resource</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_has_focus_resource</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
<para>Check if the touch has focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch to check for focused resources. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not this touch has focused resources </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="241" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="791" bodyend="800" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="241" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a5b18ba01492aff4aa509e189d3fcf282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_touch_start_drag</definition>
        <argsstring>(struct weston_touch *touch, struct weston_data_source *source, struct weston_surface *icon, struct wl_client *client)</argsstring>
        <name>weston_touch_start_drag</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__data__source" kindref="compound">weston_data_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>icon</declname>
        </param>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="244" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/data-device.c" bodystart="973" bodyend="1023" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="244" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a93ffbebf74d038e66d41b7189d304e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_touch_device_can_calibrate</definition>
        <argsstring>(struct weston_touch_device *device)</argsstring>
        <name>weston_touch_device_can_calibrate</name>
        <param>
          <type>struct <ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Is it possible to run calibration on this touch device? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="253" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="188" bodyend="191" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="253" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a702b85cf2d793f367d89c11e6e8eeafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_to_buffer_float</definition>
        <argsstring>(struct weston_surface *surface, float x, float y, float *bx, float *by)</argsstring>
        <name>weston_surface_to_buffer_float</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="257" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="923" bodyend="935" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="257" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a93bb5bbf6daec9ac24e8735e22fca35d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_box32_t</type>
        <definition>pixman_box32_t weston_surface_to_buffer_rect</definition>
        <argsstring>(struct weston_surface *surface, pixman_box32_t rect)</argsstring>
        <name>weston_surface_to_buffer_rect</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>pixman_box32_t</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Transform a rectangle from surface coordinates to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to fetch wp_viewport and buffer transformation from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The rectangle to transform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed rectangle.</para>
</simplesect>
Viewport and buffer transformations can only do translation, scaling, and rotations in 90-degree steps. Therefore the only loss in the conversion is coordinate rounding.</para>
<para>However, some coordinate rounding takes place as an intermediate step before the buffer scale factor is applied, so the rectangle boundary may not be exactly as expected.</para>
<para>This is OK for damage tracking since a little extra coverage is not a problem. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="260" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="956" bodyend="975" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="260" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a8ac3e73015c689738f959bce31cb2d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_to_buffer_region</definition>
        <argsstring>(struct weston_surface *surface, pixman_region32_t *surface_region, pixman_region32_t *buffer_region)</argsstring>
        <name>weston_surface_to_buffer_region</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>surface_region</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>buffer_region</declname>
        </param>
        <briefdescription>
<para>Transform a region from surface coordinates to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to fetch wp_viewport and buffer transformation from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">surface_region</parametername>
</parameternamelist>
<parameterdescription>
<para>The region in surface coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer_region</parametername>
</parameternamelist>
<parameterdescription>
<para>The region converted to buffer coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Buffer_region must be init&apos;d, but will be completely overwritten.</para>
<para>Viewport and buffer transformations can only do translation, scaling, and rotations in 90-degree steps. Therefore the only loss in the conversion is from the coordinate rounding that takes place in <ref refid="libweston-internal_8h_1a93bb5bbf6daec9ac24e8735e22fca35d" kindref="member">weston_surface_to_buffer_rect</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="264" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="993" bodyend="1013" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="264" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a1c85f3f5502d6a8f4fed02cf23198ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_schedule_repaint</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_schedule_repaint</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to be repainted</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Marks the <ref refid="structoutput" kindref="compound">output(s)</ref> that the surface is shown on as needing to be repainted. See <ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="268" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1690" bodyend="1697" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="268" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1ad16252f43bd7a1abf1f58510de238c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_spring_init</definition>
        <argsstring>(struct weston_spring *spring, double k, double current, double target)</argsstring>
        <name>weston_spring_init</name>
        <param>
          <type>struct <ref refid="structweston__spring" kindref="compound">weston_spring</ref> *</type>
          <declname>spring</declname>
        </param>
        <param>
          <type>double</type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>current</declname>
        </param>
        <param>
          <type>double</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="273" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="44" bodyend="55" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="273" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a2c0db265667fb5a7223576f599701589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_spring_done</definition>
        <argsstring>(struct weston_spring *spring)</argsstring>
        <name>weston_spring_done</name>
        <param>
          <type>struct <ref refid="structweston__spring" kindref="compound">weston_spring</ref> *</type>
          <declname>spring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="276" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="121" bodyend="125" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="276" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1ace1dd02cfece14fbde433f0b47e2e417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_spring_update</definition>
        <argsstring>(struct weston_spring *spring, const struct timespec *time)</argsstring>
        <name>weston_spring_update</name>
        <param>
          <type>struct <ref refid="structweston__spring" kindref="compound">weston_spring</ref> *</type>
          <declname>spring</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="279" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="58" bodyend="118" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="279" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a5606de25373a315470c37b80df5199f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_to_global_fixed</definition>
        <argsstring>(struct weston_view *view, wl_fixed_t sx, wl_fixed_t sy, wl_fixed_t *x, wl_fixed_t *y)</argsstring>
        <name>weston_view_to_global_fixed</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sy</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="284" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1617" bodyend="1629" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="284" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a29e66a2344e0ea20637f84c0650ed90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_from_global_float</definition>
        <argsstring>(struct weston_view *view, float x, float y, float *vx, float *vy)</argsstring>
        <name>weston_view_from_global_float</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>vy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="288" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1632" bodyend="1655" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="288" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1aed7c9bb67356401511a6503c3ad79fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_view_is_opaque</definition>
        <argsstring>(struct weston_view *ev, pixman_region32_t *region)</argsstring>
        <name>weston_view_is_opaque</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="291" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1894" bodyend="1917" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="291" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a9f7bccb7057b651aefb9a0c6726afefb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_view_has_valid_buffer</definition>
        <argsstring>(struct weston_view *ev)</argsstring>
        <name>weston_view_has_valid_buffer</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
<para>Check if the view has a valid buffer available. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ev</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to check if it has a valid buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Returns true if the view has a valid buffer or false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="294" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1926" bodyend="1929" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="294" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1acf5cce4094634e7b4bca357181e7cdcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_view_matches_output_entirely</definition>
        <argsstring>(struct weston_view *ev, struct weston_output *output)</argsstring>
        <name>weston_view_matches_output_entirely</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Check if the view matches the entire output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ev</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to check against.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Returns true if the view does indeed matches the entire output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="297" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1939" bodyend="1952" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="297" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a6c1656484b6903667a3b4add28c5863e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_move_to_plane</definition>
        <argsstring>(struct weston_view *view, struct weston_plane *plane)</argsstring>
        <name>weston_view_move_to_plane</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__plane" kindref="compound">weston_plane</ref> *</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="300" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1016" bodyend="1025" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="300" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a659e0e7b6d6e149fd9872287e0528a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_transformed_coord</definition>
        <argsstring>(int width, int height, enum wl_output_transform transform, int32_t scale, float sx, float sy, float *bx, float *by)</argsstring>
        <name>weston_transformed_coord</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>enum wl_output_transform</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>by</declname>
        </param>
        <briefdescription>
<para>Transform a point to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface width. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface height. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer transform. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer scale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sx</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface x coordinate of a point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sy</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface y coordinate of a point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bx</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer x coordinate of the point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">by</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer Y coordinate of the point.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Converts the given surface-local coordinates to buffer coordinates according to the given buffer transform and scale. This ignores wp_viewport.</para>
<para>The given width and height must be the result of inverse scaled and inverse transformed buffer size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="304" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="630" bodyend="673" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="304" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a1586f602e908b42e1e4b1c486a21783d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_box32_t</type>
        <definition>pixman_box32_t weston_transformed_rect</definition>
        <argsstring>(int width, int height, enum wl_output_transform transform, int32_t scale, pixman_box32_t rect)</argsstring>
        <name>weston_transformed_rect</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>enum wl_output_transform</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>pixman_box32_t</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Transform a rectangle to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface width. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface height. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer transform. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer scale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Rectangle in surface coordinates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rectangle in buffer coordinates.</para>
</simplesect>
Converts the given surface-local rectangle to buffer coordinates according to the given buffer transform and scale. The resulting rectangle is guaranteed to be well-formed. This ignores wp_viewport.</para>
<para>The given width and height must be the result of inverse scaled and inverse transformed buffer size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="309" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="693" bodyend="724" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="309" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a6edea0da779eae3aca7dd73800591528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_transformed_region</definition>
        <argsstring>(int width, int height, enum wl_output_transform transform, int32_t scale, pixman_region32_t *src, pixman_region32_t *dest)</argsstring>
        <name>weston_transformed_region</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>enum wl_output_transform</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Transform a region to buffer coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface width. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface height. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer transform. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer scale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Region in surface coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Resulting region in buffer coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Converts the given surface-local region to buffer coordinates according to the given buffer transform and scale. This ignores wp_viewport.</para>
<para>The given width and height must be the result of inverse scaled and inverse transformed buffer size.</para>
<para>src and dest are allowed to point to the same memory for in-place conversion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="314" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="801" bodyend="890" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="314" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a69d6ae1e2501bc0b76f563edadc212d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_matrix_transform_region</definition>
        <argsstring>(pixman_region32_t *dest, struct weston_matrix *matrix, pixman_region32_t *src)</argsstring>
        <name>weston_matrix_transform_region</name>
        <param>
          <type>pixman_region32_t *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__matrix" kindref="compound">weston_matrix</ref> *</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>pixman_region32_t *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Transform a region by a matrix, restricted to axis-aligned transformations. </para>
        </briefdescription>
        <detaileddescription>
<para>Warning: This function does not work for projective, affine, or matrices that encode arbitrary rotations. Only 90-degree step rotations are supported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="319" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="733" bodyend="780" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="319" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1aa8e2bb41742f074cbbdcf2967965f3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_protected_surface_send_event</definition>
        <argsstring>(struct protected_surface *psurface, enum weston_hdcp_protection protection)</argsstring>
        <name>weston_protected_surface_send_event</name>
        <param>
          <type>struct <ref refid="structprotected__surface" kindref="compound">protected_surface</ref> *</type>
          <declname>psurface</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref></type>
          <declname>protection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="325" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="50" bodyend="72" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="325" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston-internal_8h_1a867e6f129361c764207679236de8d604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_data_device_manager_init</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_data_device_manager_init</name>
        <param>
          <type>struct wl_display *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h" line="330" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/data-device.c" bodystart="1362" bodyend="1370" declfile="/home/lzm/Wayland/weston/libweston/libweston-internal.h" declline="330" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2008-2011<sp/>Kristian<sp/>Høgsberg</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2017,<sp/>2018<sp/>General<sp/>Electric<sp/>Company</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012,<sp/>2017-2019<sp/>Collabora,<sp/>Ltd.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBWESTON_INTERNAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBWESTON_INTERNAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>internal<sp/>(private)<sp/>part<sp/>of<sp/>libweston.<sp/>All<sp/>symbols<sp/>found<sp/>here</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>are,<sp/>and<sp/>should<sp/>be<sp/>only<sp/>(with<sp/>a<sp/>few<sp/>exceptions)<sp/>used<sp/>within<sp/>the<sp/>internal</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>parts<sp/>of<sp/>libweston.<sp/><sp/>Notable<sp/>exception(s)<sp/>include<sp/>a<sp/>few<sp/>files<sp/>in<sp/>tests/<sp/>that</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>need<sp/>access<sp/>to<sp/>these<sp/>functions,<sp/>screen-share<sp/>file<sp/>from<sp/>compositor/<sp/>and<sp/>those</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>remoting/.<sp/>Those<sp/>will<sp/>require<sp/>some<sp/>further<sp/>fixing<sp/>as<sp/>to<sp/>avoid<sp/>including<sp/>this</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>private<sp/>header.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Eventually,<sp/>these<sp/>symbols<sp/>should<sp/>reside<sp/>naturally<sp/>into<sp/>their<sp/>own<sp/>scope.<sp/>New</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>features<sp/>should<sp/>either<sp/>provide<sp/>their<sp/>own<sp/>(internal)<sp/>header<sp/>or<sp/>use<sp/>this<sp/>one.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="libweston-internal_8h_1aed6929d897784a5d5538aca4aaf7d4cd" kindref="member">weston_buffer_send_server_error</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="libweston-internal_8h_1a46c9d30efa62b7ca5f720b1dd83ebe12" kindref="member">weston_buffer_reference</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref><sp/>*ref,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="libweston-internal_8h_1a23af340f7ae575bb87d66816c0e0ebdc" kindref="member">weston_buffer_release_move</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/>*dest,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/>*src);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="libweston-internal_8h_1afa7cfa1a0d493919152d7a79aad83edf" kindref="member">weston_buffer_release_reference</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/>*ref,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release" kindref="compound">weston_buffer_release</ref><sp/>*buf_release);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_bindings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="libweston-internal_8h_1a87fd816827f096a6c11339f71043874b" kindref="member">weston_binding_list_destroy_all</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_list<sp/>*list);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_compositor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="libweston-internal_8h_1ac8f3995039375cf0814baa61932685e9" kindref="member">touch_calibrator_mode_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="libweston-internal_8h_1a8f754b8b4d8e45b3d0264705c9293f8f" kindref="member">noop_renderer_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="group__compositor_1ga9cc453a480c9083e2b15d974f0c9d61e" kindref="member">weston_compositor_add_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="group__compositor_1ga3bf54722d538ec9410a82d1242a84958" kindref="member">weston_compositor_add_pending_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="group__compositor_1ga321e3fcf45c3aa5f8d5280691f6232c3" kindref="member">weston_compositor_import_dmabuf</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="libweston-internal_8h_1a3694816c632e1265384ed06f9a0bfab0" kindref="member">weston_compositor_dmabuf_can_scanout</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="group__compositor_1gabbeb356dd9688004330df598b514a27c" kindref="member">weston_compositor_offscreen</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="group__compositor_1ga4fa96710c12bf0aee8935872bc1c7437" kindref="member">weston_compositor_print_scene_graph</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="group__compositor_1ga464e69b90dabde1e2f4797181f3dc65a" kindref="member">weston_compositor_read_presentation_clock</ref>(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*ts);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="libweston-internal_8h_1a86163548f1868a8d900b7e1f5cf15cd1" kindref="member">weston_compositor_run_axis_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="libweston-internal_8h_1a7403708312ac4fb4d3e2a6f4cf975928" kindref="member">weston_compositor_run_button_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>button,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_pointer_button_state<sp/>value);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="libweston-internal_8h_1aac44625bcc6ea9001813934455c97250" kindref="member">weston_compositor_run_debug_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_keyboard_key_state<sp/>state);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="libweston-internal_8h_1aa7d83b5fe63ef57e6364620be3ffe9c6" kindref="member">weston_compositor_run_key_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_keyboard_key_state<sp/>state);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="libweston-internal_8h_1a15f8eb4f1e0f9a48c6db2d6f58f71e50" kindref="member">weston_compositor_run_modifier_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/>modifier,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_keyboard_key_state<sp/>state);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="libweston-internal_8h_1a0abb009d0ca7da1f924903a75672c722" kindref="member">weston_compositor_run_touch_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_type);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="group__compositor_1gac0da9a90074155e609e2f5845cbf25fc" kindref="member">weston_compositor_stack_plane</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*plane,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*above);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="libweston-internal_8h_1ab0b95770a5e0b0ba87ee3a3646c64b76" kindref="member">weston_compositor_set_touch_mode_normal</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="libweston-internal_8h_1aca9dc3aa1b251cafd259642fbea8e119" kindref="member">weston_compositor_set_touch_mode_calib</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="group__compositor_1gabaca768863a217e3c5fa4d7519676a9a" kindref="member">weston_compositor_set_presentation_clock</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clockid_t<sp/>clk_id);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="group__compositor_1gaab7e6328af752385d84c17b9eebddf74" kindref="member">weston_compositor_set_presentation_clock_software</ref>(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="group__compositor_1gacc91a9f77baf1c72d967471bade09cb3" kindref="member">weston_compositor_shutdown</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="libweston-internal_8h_1a624242cb87819b26602d5b14cb0392ca" kindref="member">weston_compositor_xkb_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="libweston-internal_8h_1a7d55cac3425ac3f6641a05922142266e" kindref="member">weston_input_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="libweston-internal_8h_1a2b2ea3608297a59698d168b47e7d4072" kindref="member">weston_output_disable_planes_incr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="libweston-internal_8h_1abc5d5ea39a8242825a8a617805027997" kindref="member">weston_output_disable_planes_decr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_plane<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="libweston-internal_8h_1ab52c880548e2277a5d370b343d782cde" kindref="member">weston_plane_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*plane,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="libweston-internal_8h_1afdee68639f6f9af1a195ee4892afcce6" kindref="member">weston_plane_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*plane);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_seat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclipboard" kindref="compound">clipboard</ref><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="libweston-internal_8h_1a6b4f345ba46e19810219d1414a676716" kindref="member">clipboard_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="libweston-internal_8h_1a8e69f6e66263be7757aadcc5f1528f71" kindref="member">weston_seat_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seat_name);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><ref refid="libweston-internal_8h_1a6de88b133f2df2089534d96a88becb8c" kindref="member">weston_seat_repick</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="libweston-internal_8h_1a4f4636b5443315bd1415369ed427d14c" kindref="member">weston_seat_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="libweston-internal_8h_1a3a1532272bbde1d38cb3a6a11e220909" kindref="member">weston_seat_send_selection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="libweston-internal_8h_1a0f241f297507f22da6465509d03c9f33" kindref="member">weston_seat_init_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="libweston-internal_8h_1a6ee7365931e5b81e995c640d1bf158e0" kindref="member">weston_seat_init_keyboard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xkb_keymap<sp/>*keymap);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="libweston-internal_8h_1a04b3f51a81712517ce6ed5a71adf6c5a" kindref="member">weston_seat_init_touch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="libweston-internal_8h_1adc5a8c2cbe300f6f0be4c17241c1f779" kindref="member">weston_seat_release_keyboard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="libweston-internal_8h_1a9be3e32a8ef28ef2011c1b084494a18b" kindref="member">weston_seat_release_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="libweston-internal_8h_1a5d6a767a8449fe1bd7ebe9aeaf199ea8" kindref="member">weston_seat_release_touch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="libweston-internal_8h_1a2fdbc776f3b6ac9b03828f05d9b01ba1" kindref="member">weston_seat_update_keymap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xkb_keymap<sp/>*keymap);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="libweston-internal_8h_1aa0c093fa845ffd3417dfba422c9bc480" kindref="member">wl_data_device_set_keyboard_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structclipboard_1a97dc69b3b09271aacb0dce3738cfb55a" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="libweston-internal_8h_1a9d7987594807f912e2d98f1ca1e4237b" kindref="member">weston_pointer_clamp</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*fx,<sp/>wl_fixed_t<sp/>*fy);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><ref refid="libweston-internal_8h_1a1a2f5a2d6428c3ed7e10464a53314e5c" kindref="member">weston_pointer_set_default_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>*interface);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="libweston-internal_8h_1ab181ee2bacdbc99648f9b7aa14be7437" kindref="member">weston_pointer_constraint_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>*constraint);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_keyboard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="libweston-internal_8h_1ab4324e1d9a1be4e0dee7f37b59dee41a" kindref="member">weston_keyboard_has_focus_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_touch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="libweston-internal_8h_1ab636d1e6d0bc7f2204c8f1f80cb47e07" kindref="member">weston_touch_create_touch_device</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__touch__device_1a10891cbc85a29105be61bcf69ab33ad6" kindref="member">backend_data</ref>,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device__ops" kindref="compound">weston_touch_device_ops</ref><sp/>*<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="libweston-internal_8h_1aa6762c2cc7031bbfe61074d8b0d90191" kindref="member">weston_touch_device_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><ref refid="libweston-internal_8h_1a4363722f2a5c5b613d8eb7f313549dcb" kindref="member">weston_touch_has_focus_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="libweston-internal_8h_1a5b18ba01492aff4aa509e189d3fcf282" kindref="member">weston_touch_start_drag</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*icon,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_touch_device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><ref refid="libweston-internal_8h_1a93ffbebf74d038e66d41b7189d304e61" kindref="member">weston_touch_device_can_calibrate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="libweston-internal_8h_1a702b85cf2d793f367d89c11e6e8eeafd" kindref="member">weston_surface_to_buffer_float</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*bx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*by);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">pixman_box32_t</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><ref refid="libweston-internal_8h_1a93bb5bbf6daec9ac24e8735e22fca35d" kindref="member">weston_surface_to_buffer_rect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>rect);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="libweston-internal_8h_1a8ac3e73015c689738f959bce31cb2d88" kindref="member">weston_surface_to_buffer_region</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*surface_region,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*buffer_region);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><ref refid="libweston-internal_8h_1a1c85f3f5502d6a8f4fed02cf23198ce0" kindref="member">weston_surface_schedule_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_spring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><ref refid="libweston-internal_8h_1ad16252f43bd7a1abf1f58510de238c7f" kindref="member">weston_spring_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__spring" kindref="compound">weston_spring</ref><sp/>*spring,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="libweston-internal_8h_1a2c0db265667fb5a7223576f599701589" kindref="member">weston_spring_done</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__spring" kindref="compound">weston_spring</ref><sp/>*spring);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><ref refid="libweston-internal_8h_1ace1dd02cfece14fbde433f0b47e2e417" kindref="member">weston_spring_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__spring" kindref="compound">weston_spring</ref><sp/>*spring,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>weston_view<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="libweston-internal_8h_1a5606de25373a315470c37b80df5199f0" kindref="member">weston_view_to_global_fixed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>wl_fixed_t<sp/>sy,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*x,<sp/>wl_fixed_t<sp/>*y);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><ref refid="libweston-internal_8h_1a29e66a2344e0ea20637f84c0650ed90d" kindref="member">weston_view_from_global_float</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*vx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*vy);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><ref refid="libweston-internal_8h_1aed7c9bb67356401511a6503c3ad79fa6" kindref="member">weston_view_is_opaque</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev,<sp/>pixman_region32_t<sp/>*region);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><ref refid="libweston-internal_8h_1a9f7bccb7057b651aefb9a0c6726afefb" kindref="member">weston_view_has_valid_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><ref refid="libweston-internal_8h_1acf5cce4094634e7b4bca357181e7cdcd" kindref="member">weston_view_matches_output_entirely</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*ev,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="libweston-internal_8h_1a6c1656484b6903667a3b4add28c5863e" kindref="member">weston_view_move_to_plane</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*plane);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="libweston-internal_8h_1a659e0e7b6d6e149fd9872287e0528a93" kindref="member">weston_transformed_coord</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_output_transform<sp/>transform,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*bx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*by);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">pixman_box32_t</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><ref refid="libweston-internal_8h_1a1586f602e908b42e1e4b1c486a21783d" kindref="member">weston_transformed_rect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_output_transform<sp/>transform,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>rect);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="libweston-internal_8h_1a6edea0da779eae3aca7dd73800591528" kindref="member">weston_transformed_region</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_output_transform<sp/>transform,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*src,<sp/>pixman_region32_t<sp/>*dest);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><ref refid="libweston-internal_8h_1a69d6ae1e2501bc0b76f563edadc212d1" kindref="member">weston_matrix_transform_region</ref>(pixman_region32_t<sp/>*dest,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/>*matrix,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*src);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>protected_surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><ref refid="libweston-internal_8h_1aa8e2bb41742f074cbbdcf2967965f3ad" kindref="member">weston_protected_surface_send_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>*psurface,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>protection);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>others<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><ref refid="libweston-internal_8h_1a867e6f129361c764207679236de8d604" kindref="member">wl_data_device_manager_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_display<sp/>*display);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/libweston/libweston-internal.h"/>
  </compounddef>
</doxygen>
