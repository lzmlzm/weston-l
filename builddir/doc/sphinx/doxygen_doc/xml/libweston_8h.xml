<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="libweston_8h" kind="file" language="C++">
    <compoundname>libweston.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">pixman.h</includes>
    <includes local="no">xkbcommon/xkbcommon.h</includes>
    <includes local="no">wayland-server.h</includes>
    <includes refid="matrix_8h" local="no">libweston/matrix.h</includes>
    <includes refid="zalloc_8h" local="no">libweston/zalloc.h</includes>
    <includedby refid="animation_8c" local="no">/home/lzm/Wayland/weston/libweston/animation.c</includedby>
    <includedby refid="drm-internal_8h" local="no">/home/lzm/Wayland/weston/libweston/backend-drm/drm-internal.h</includedby>
    <includedby refid="drm_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-drm/drm.c</includedby>
    <includedby refid="fb_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-drm/fb.c</includedby>
    <includedby refid="kms_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-drm/kms.c</includedby>
    <includedby refid="state-propose_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-drm/state-propose.c</includedby>
    <includedby refid="vaapi-recorder_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-drm/vaapi-recorder.c</includedby>
    <includedby refid="fbdev_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-fbdev/fbdev.c</includedby>
    <includedby refid="headless_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-headless/headless.c</includedby>
    <includedby refid="rdp_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-rdp/rdp.c</includedby>
    <includedby refid="wayland_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-wayland/wayland.c</includedby>
    <includedby refid="x11_8c" local="no">/home/lzm/Wayland/weston/libweston/backend-x11/x11.c</includedby>
    <includedby refid="bindings_8c" local="no">/home/lzm/Wayland/weston/libweston/bindings.c</includedby>
    <includedby refid="clipboard_8c" local="no">/home/lzm/Wayland/weston/libweston/clipboard.c</includedby>
    <includedby refid="compositor_8c" local="no">/home/lzm/Wayland/weston/libweston/compositor.c</includedby>
    <includedby refid="content-protection_8c" local="no">/home/lzm/Wayland/weston/libweston/content-protection.c</includedby>
    <includedby refid="data-device_8c" local="no">/home/lzm/Wayland/weston/libweston/data-device.c</includedby>
    <includedby refid="dbus_8c" local="no">/home/lzm/Wayland/weston/libweston/dbus.c</includedby>
    <includedby refid="dbus_8h" local="no">/home/lzm/Wayland/weston/libweston/dbus.h</includedby>
    <includedby refid="input_8c" local="no">/home/lzm/Wayland/weston/libweston/input.c</includedby>
    <includedby refid="launcher-direct_8c" local="no">/home/lzm/Wayland/weston/libweston/launcher-direct.c</includedby>
    <includedby refid="launcher-impl_8h" local="no">/home/lzm/Wayland/weston/libweston/launcher-impl.h</includedby>
    <includedby refid="launcher-libseat_8c" local="no">/home/lzm/Wayland/weston/libweston/launcher-libseat.c</includedby>
    <includedby refid="launcher-logind_8c" local="no">/home/lzm/Wayland/weston/libweston/launcher-logind.c</includedby>
    <includedby refid="launcher-util_8c" local="no">/home/lzm/Wayland/weston/libweston/launcher-util.c</includedby>
    <includedby refid="launcher-util_8h" local="no">/home/lzm/Wayland/weston/libweston/launcher-util.h</includedby>
    <includedby refid="launcher-weston-launch_8c" local="no">/home/lzm/Wayland/weston/libweston/launcher-weston-launch.c</includedby>
    <includedby refid="libinput-device_8c" local="no">/home/lzm/Wayland/weston/libweston/libinput-device.c</includedby>
    <includedby refid="libinput-device_8h" local="no">/home/lzm/Wayland/weston/libweston/libinput-device.h</includedby>
    <includedby refid="libinput-seat_8c" local="no">/home/lzm/Wayland/weston/libweston/libinput-seat.c</includedby>
    <includedby refid="libinput-seat_8h" local="no">/home/lzm/Wayland/weston/libweston/libinput-seat.h</includedby>
    <includedby refid="linux-dmabuf_8c" local="no">/home/lzm/Wayland/weston/libweston/linux-dmabuf.c</includedby>
    <includedby refid="linux-explicit-synchronization_8c" local="no">/home/lzm/Wayland/weston/libweston/linux-explicit-synchronization.c</includedby>
    <includedby refid="log_8c" local="no">/home/lzm/Wayland/weston/libweston/log.c</includedby>
    <includedby refid="noop-renderer_8c" local="no">/home/lzm/Wayland/weston/libweston/noop-renderer.c</includedby>
    <includedby refid="pixman-renderer_8h" local="no">/home/lzm/Wayland/weston/libweston/pixman-renderer.h</includedby>
    <includedby refid="plugin-registry_8c" local="no">/home/lzm/Wayland/weston/libweston/plugin-registry.c</includedby>
    <includedby refid="gl-renderer_8h" local="no">/home/lzm/Wayland/weston/libweston/renderer-gl/gl-renderer.h</includedby>
    <includedby refid="gl-shaders_8c" local="no">/home/lzm/Wayland/weston/libweston/renderer-gl/gl-shaders.c</includedby>
    <includedby refid="screenshooter_8c" local="no">/home/lzm/Wayland/weston/libweston/screenshooter.c</includedby>
    <includedby refid="spring-tool_8c" local="no">/home/lzm/Wayland/weston/libweston/spring-tool.c</includedby>
    <includedby refid="timeline_8c" local="no">/home/lzm/Wayland/weston/libweston/timeline.c</includedby>
    <includedby refid="touch-calibration_8c" local="no">/home/lzm/Wayland/weston/libweston/touch-calibration.c</includedby>
    <includedby refid="weston-direct-display_8c" local="no">/home/lzm/Wayland/weston/libweston/weston-direct-display.c</includedby>
    <includedby refid="weston-log-file_8c" local="no">/home/lzm/Wayland/weston/libweston/weston-log-file.c</includedby>
    <includedby refid="weston-log-flight-rec_8c" local="no">/home/lzm/Wayland/weston/libweston/weston-log-flight-rec.c</includedby>
    <includedby refid="weston-log-wayland_8c" local="no">/home/lzm/Wayland/weston/libweston/weston-log-wayland.c</includedby>
    <includedby refid="weston-log_8c" local="no">/home/lzm/Wayland/weston/libweston/weston-log.c</includedby>
    <includedby refid="zoom_8c" local="no">/home/lzm/Wayland/weston/libweston/zoom.c</includedby>
    <includedby refid="backend-drm_8h" local="no">/home/lzm/Wayland/weston/include/libweston/backend-drm.h</includedby>
    <includedby refid="backend-fbdev_8h" local="no">/home/lzm/Wayland/weston/include/libweston/backend-fbdev.h</includedby>
    <includedby refid="backend-headless_8h" local="no">/home/lzm/Wayland/weston/include/libweston/backend-headless.h</includedby>
    <includedby refid="backend-rdp_8h" local="no">/home/lzm/Wayland/weston/include/libweston/backend-rdp.h</includedby>
    <includedby refid="backend-wayland_8h" local="no">/home/lzm/Wayland/weston/include/libweston/backend-wayland.h</includedby>
    <includedby refid="backend-x11_8h" local="no">/home/lzm/Wayland/weston/include/libweston/backend-x11.h</includedby>
    <includedby refid="pipewire-plugin_8h" local="no">/home/lzm/Wayland/weston/include/libweston/pipewire-plugin.h</includedby>
    <includedby refid="remoting-plugin_8h" local="no">/home/lzm/Wayland/weston/include/libweston/remoting-plugin.h</includedby>
    <includedby refid="weston-test-fixture-compositor_8h" local="no">/home/lzm/Wayland/weston/tests/weston-test-fixture-compositor.h</includedby>
    <includedby refid="ivi-layout-internal-test_8c" local="no">/home/lzm/Wayland/weston/tests/ivi-layout-internal-test.c</includedby>
    <includedby refid="ivi-layout-test-plugin_8c" local="no">/home/lzm/Wayland/weston/tests/ivi-layout-test-plugin.c</includedby>
    <includedby refid="plugin-registry-test_8c" local="no">/home/lzm/Wayland/weston/tests/plugin-registry-test.c</includedby>
    <includedby refid="surface-global-test_8c" local="no">/home/lzm/Wayland/weston/tests/surface-global-test.c</includedby>
    <includedby refid="surface-screenshot-test_8c" local="no">/home/lzm/Wayland/weston/tests/surface-screenshot-test.c</includedby>
    <includedby refid="surface-test_8c" local="no">/home/lzm/Wayland/weston/tests/surface-test.c</includedby>
    <includedby refid="weston-test_8c" local="no">/home/lzm/Wayland/weston/tests/weston-test.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/include/libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>wayland-server.h</label>
      </node>
      <node id="6">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="9">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
      <node id="8">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="5">
        <label>pixman.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-virtual.c</label>
        <link refid="drm-virtual_8c"/>
      </node>
      <node id="30">
        <label>/home/lzm/Wayland/weston/libweston/launcher-util.c</label>
        <link refid="launcher-util_8c"/>
      </node>
      <node id="32">
        <label>/home/lzm/Wayland/weston/libweston/launcher-util.h</label>
        <link refid="launcher-util_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/lzm/Wayland/weston/libweston/content-protection.c</label>
        <link refid="content-protection_8c"/>
      </node>
      <node id="94">
        <label>/home/lzm/Wayland/weston/tests/yuv-buffer-test.c</label>
        <link refid="yuv-buffer-test_8c"/>
      </node>
      <node id="6">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm.c</label>
        <link refid="drm_8c"/>
      </node>
      <node id="43">
        <label>/home/lzm/Wayland/weston/libweston/plugin-registry.c</label>
        <link refid="plugin-registry_8c"/>
      </node>
      <node id="102">
        <label>/home/lzm/Wayland/weston/tests/weston-test-fixture-compositor.c</label>
        <link refid="weston-test-fixture-compositor_8c"/>
      </node>
      <node id="71">
        <label>/home/lzm/Wayland/weston/tests/buffer-transforms-test.c</label>
        <link refid="buffer-transforms-test_8c"/>
      </node>
      <node id="75">
        <label>/home/lzm/Wayland/weston/tests/input-timestamps-helper.c</label>
        <link refid="input-timestamps-helper_8c"/>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/include/libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>/home/lzm/Wayland/weston/tests/weston-test-fixture-compositor.h</label>
        <link refid="weston-test-fixture-compositor_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>/home/lzm/Wayland/weston/tests/ivi-layout-internal-test.c</label>
        <link refid="ivi-layout-internal-test_8c"/>
      </node>
      <node id="25">
        <label>/home/lzm/Wayland/weston/libweston/launcher-libseat.c</label>
        <link refid="launcher-libseat_8c"/>
      </node>
      <node id="27">
        <label>/home/lzm/Wayland/weston/libweston/input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="4">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-gbm.c</label>
        <link refid="drm-gbm_8c"/>
      </node>
      <node id="40">
        <label>/home/lzm/Wayland/weston/libweston/noop-renderer.c</label>
        <link refid="noop-renderer_8c"/>
      </node>
      <node id="28">
        <label>/home/lzm/Wayland/weston/libweston/launcher-direct.c</label>
        <link refid="launcher-direct_8c"/>
      </node>
      <node id="74">
        <label>/home/lzm/Wayland/weston/tests/event-test.c</label>
        <link refid="event-test_8c"/>
      </node>
      <node id="64">
        <label>/home/lzm/Wayland/weston/include/libweston/pipewire-plugin.h</label>
        <link refid="pipewire-plugin_8h"/>
      </node>
      <node id="14">
        <label>/home/lzm/Wayland/weston/libweston/backend-headless/headless.c</label>
        <link refid="headless_8c"/>
      </node>
      <node id="37">
        <label>/home/lzm/Wayland/weston/libweston/linux-dmabuf.c</label>
        <link refid="linux-dmabuf_8c"/>
      </node>
      <node id="29">
        <label>/home/lzm/Wayland/weston/libweston/launcher-impl.h</label>
        <link refid="launcher-impl_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/home/lzm/Wayland/weston/libweston/weston-log-flight-rec.c</label>
        <link refid="weston-log-flight-rec_8c"/>
      </node>
      <node id="80">
        <label>/home/lzm/Wayland/weston/tests/linux-explicit-synchronization-test.c</label>
        <link refid="linux-explicit-synchronization-test_8c"/>
      </node>
      <node id="15">
        <label>/home/lzm/Wayland/weston/libweston/backend-rdp/rdp.c</label>
        <link refid="rdp_8c"/>
      </node>
      <node id="3">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-internal.h</label>
        <link refid="drm-internal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/home/lzm/Wayland/weston/libweston/renderer-gl/gl-shaders.c</label>
        <link refid="gl-shaders_8c"/>
      </node>
      <node id="65">
        <label>/home/lzm/Wayland/weston/include/libweston/remoting-plugin.h</label>
        <link refid="remoting-plugin_8h"/>
      </node>
      <node id="89">
        <label>/home/lzm/Wayland/weston/tests/text-test.c</label>
        <link refid="text-test_8c"/>
      </node>
      <node id="52">
        <label>/home/lzm/Wayland/weston/libweston/weston-direct-display.c</label>
        <link refid="weston-direct-display_8c"/>
      </node>
      <node id="86">
        <label>/home/lzm/Wayland/weston/tests/string-test.c</label>
        <link refid="string-test_8c"/>
      </node>
      <node id="96">
        <label>/home/lzm/Wayland/weston/tests/plugin-registry-test.c</label>
        <link refid="plugin-registry-test_8c"/>
      </node>
      <node id="55">
        <label>/home/lzm/Wayland/weston/libweston/weston-log-wayland.c</label>
        <link refid="weston-log-wayland_8c"/>
      </node>
      <node id="63">
        <label>/home/lzm/Wayland/weston/include/libweston/backend-x11.h</label>
        <link refid="backend-x11_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/lzm/Wayland/weston/libweston/backend-x11/x11.c</label>
        <link refid="x11_8c"/>
      </node>
      <node id="62">
        <label>/home/lzm/Wayland/weston/include/libweston/backend-wayland.h</label>
        <link refid="backend-wayland_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>/home/lzm/Wayland/weston/tests/ivi-layout-test-client.c</label>
        <link refid="ivi-layout-test-client_8c"/>
      </node>
      <node id="101">
        <label>/home/lzm/Wayland/weston/tests/xwayland-test.c</label>
        <link refid="xwayland-test_8c"/>
      </node>
      <node id="76">
        <label>/home/lzm/Wayland/weston/tests/internal-screenshot-test.c</label>
        <link refid="internal-screenshot-test_8c"/>
      </node>
      <node id="53">
        <label>/home/lzm/Wayland/weston/libweston/weston-log-file.c</label>
        <link refid="weston-log-file_8c"/>
      </node>
      <node id="39">
        <label>/home/lzm/Wayland/weston/libweston/log.c</label>
        <link refid="log_8c"/>
      </node>
      <node id="61">
        <label>/home/lzm/Wayland/weston/include/libweston/backend-rdp.h</label>
        <link refid="backend-rdp_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/lzm/Wayland/weston/libweston/backend-fbdev/fbdev.c</label>
        <link refid="fbdev_8c"/>
      </node>
      <node id="23">
        <label>/home/lzm/Wayland/weston/libweston/dbus.c</label>
        <link refid="dbus_8c"/>
      </node>
      <node id="24">
        <label>/home/lzm/Wayland/weston/libweston/dbus.h</label>
        <link refid="dbus_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>/home/lzm/Wayland/weston/tests/ivi-layout-test-plugin.c</label>
        <link refid="ivi-layout-test-plugin_8c"/>
      </node>
      <node id="26">
        <label>/home/lzm/Wayland/weston/libweston/launcher-logind.c</label>
        <link refid="launcher-logind_8c"/>
      </node>
      <node id="11">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/state-propose.c</label>
        <link refid="state-propose_8c"/>
      </node>
      <node id="22">
        <label>/home/lzm/Wayland/weston/libweston/data-device.c</label>
        <link refid="data-device_8c"/>
      </node>
      <node id="90">
        <label>/home/lzm/Wayland/weston/tests/touch-test.c</label>
        <link refid="touch-test_8c"/>
      </node>
      <node id="69">
        <label>/home/lzm/Wayland/weston/tests/alpha-blending-test.c</label>
        <link refid="alpha-blending-test_8c"/>
      </node>
      <node id="45">
        <label>/home/lzm/Wayland/weston/libweston/renderer-gl/egl-glue.c</label>
        <link refid="egl-glue_8c"/>
      </node>
      <node id="10">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/state-helpers.c</label>
        <link refid="state-helpers_8c"/>
      </node>
      <node id="18">
        <label>/home/lzm/Wayland/weston/libweston/bindings.c</label>
        <link refid="bindings_8c"/>
      </node>
      <node id="58">
        <label>/home/lzm/Wayland/weston/include/libweston/backend-drm.h</label>
        <link refid="backend-drm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>/home/lzm/Wayland/weston/tests/vertex-clip-test.c</label>
        <link refid="vertex-clip-test_8c"/>
      </node>
      <node id="50">
        <label>/home/lzm/Wayland/weston/libweston/timeline.c</label>
        <link refid="timeline_8c"/>
      </node>
      <node id="82">
        <label>/home/lzm/Wayland/weston/tests/output-transforms-test.c</label>
        <link refid="output-transforms-test_8c"/>
      </node>
      <node id="42">
        <label>/home/lzm/Wayland/weston/libweston/pixman-renderer.c</label>
        <link refid="pixman-renderer_8c"/>
      </node>
      <node id="41">
        <label>/home/lzm/Wayland/weston/libweston/pixman-renderer.h</label>
        <link refid="pixman-renderer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>/home/lzm/Wayland/weston/libweston/spring-tool.c</label>
        <link refid="spring-tool_8c"/>
      </node>
      <node id="38">
        <label>/home/lzm/Wayland/weston/libweston/linux-explicit-synchronization.c</label>
        <link refid="linux-explicit-synchronization_8c"/>
      </node>
      <node id="48">
        <label>/home/lzm/Wayland/weston/libweston/screenshooter.c</label>
        <link refid="screenshooter_8c"/>
      </node>
      <node id="88">
        <label>/home/lzm/Wayland/weston/tests/subsurface-test.c</label>
        <link refid="subsurface-test_8c"/>
      </node>
      <node id="2">
        <label>/home/lzm/Wayland/weston/libweston/animation.c</label>
        <link refid="animation_8c"/>
      </node>
      <node id="46">
        <label>/home/lzm/Wayland/weston/libweston/renderer-gl/gl-renderer.c</label>
        <link refid="gl-renderer_8c"/>
      </node>
      <node id="44">
        <label>/home/lzm/Wayland/weston/libweston/renderer-gl/gl-renderer.h</label>
        <link refid="gl-renderer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/vaapi-recorder.c</label>
        <link refid="vaapi-recorder_8c"/>
      </node>
      <node id="72">
        <label>/home/lzm/Wayland/weston/tests/devices-test.c</label>
        <link refid="devices-test_8c"/>
      </node>
      <node id="92">
        <label>/home/lzm/Wayland/weston/tests/viewporter-test.c</label>
        <link refid="viewporter-test_8c"/>
      </node>
      <node id="97">
        <label>/home/lzm/Wayland/weston/tests/surface-global-test.c</label>
        <link refid="surface-global-test_8c"/>
      </node>
      <node id="81">
        <label>/home/lzm/Wayland/weston/tests/output-damage-test.c</label>
        <link refid="output-damage-test_8c"/>
      </node>
      <node id="8">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/kms.c</label>
        <link refid="kms_8c"/>
      </node>
      <node id="57">
        <label>/home/lzm/Wayland/weston/libweston/zoom.c</label>
        <link refid="zoom_8c"/>
      </node>
      <node id="34">
        <label>/home/lzm/Wayland/weston/libweston/libinput-device.c</label>
        <link refid="libinput-device_8c"/>
      </node>
      <node id="35">
        <label>/home/lzm/Wayland/weston/libweston/libinput-device.h</label>
        <link refid="libinput-device_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/lzm/Wayland/weston/libweston/backend-wayland/wayland.c</label>
        <link refid="wayland_8c"/>
      </node>
      <node id="91">
        <label>/home/lzm/Wayland/weston/tests/viewporter-shot-test.c</label>
        <link refid="viewporter-shot-test_8c"/>
      </node>
      <node id="7">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="78">
        <label>/home/lzm/Wayland/weston/tests/ivi-shell-app-test.c</label>
        <link refid="ivi-shell-app-test_8c"/>
      </node>
      <node id="85">
        <label>/home/lzm/Wayland/weston/tests/roles-test.c</label>
        <link refid="roles-test_8c"/>
      </node>
      <node id="79">
        <label>/home/lzm/Wayland/weston/tests/keyboard-test.c</label>
        <link refid="keyboard-test_8c"/>
      </node>
      <node id="56">
        <label>/home/lzm/Wayland/weston/libweston/weston-log.c</label>
        <link refid="weston-log_8c"/>
      </node>
      <node id="19">
        <label>/home/lzm/Wayland/weston/libweston/clipboard.c</label>
        <link refid="clipboard_8c"/>
      </node>
      <node id="83">
        <label>/home/lzm/Wayland/weston/tests/pointer-test.c</label>
        <link refid="pointer-test_8c"/>
      </node>
      <node id="70">
        <label>/home/lzm/Wayland/weston/tests/bad-buffer-test.c</label>
        <link refid="bad-buffer-test_8c"/>
      </node>
      <node id="98">
        <label>/home/lzm/Wayland/weston/tests/surface-test.c</label>
        <link refid="surface-test_8c"/>
      </node>
      <node id="51">
        <label>/home/lzm/Wayland/weston/libweston/touch-calibration.c</label>
        <link refid="touch-calibration_8c"/>
      </node>
      <node id="20">
        <label>/home/lzm/Wayland/weston/libweston/compositor.c</label>
        <link refid="compositor_8c"/>
      </node>
      <node id="33">
        <label>/home/lzm/Wayland/weston/libweston/libinput-seat.c</label>
        <link refid="libinput-seat_8c"/>
      </node>
      <node id="36">
        <label>/home/lzm/Wayland/weston/libweston/libinput-seat.h</label>
        <link refid="libinput-seat_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>/home/lzm/Wayland/weston/tests/weston-test-runner.c</label>
        <link refid="weston-test-runner_8c"/>
      </node>
      <node id="67">
        <label>/home/lzm/Wayland/weston/tests/weston-test-runner.h</label>
        <link refid="weston-test-runner_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>/home/lzm/Wayland/weston/tests/weston-test.c</label>
        <link refid="weston-test_8c"/>
      </node>
      <node id="9">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/modes.c</label>
        <link refid="modes_8c"/>
      </node>
      <node id="84">
        <label>/home/lzm/Wayland/weston/tests/presentation-test.c</label>
        <link refid="presentation-test_8c"/>
      </node>
      <node id="59">
        <label>/home/lzm/Wayland/weston/include/libweston/backend-fbdev.h</label>
        <link refid="backend-fbdev_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>/home/lzm/Wayland/weston/tests/drm-smoke-test.c</label>
        <link refid="drm-smoke-test_8c"/>
      </node>
      <node id="104">
        <label>/home/lzm/Wayland/weston/tests/surface-screenshot-test.c</label>
        <link refid="surface-screenshot-test_8c"/>
      </node>
      <node id="60">
        <label>/home/lzm/Wayland/weston/include/libweston/backend-headless.h</label>
        <link refid="backend-headless_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>/home/lzm/Wayland/weston/tests/weston-test-client-helper.c</label>
        <link refid="weston-test-client-helper_8c"/>
      </node>
      <node id="68">
        <label>/home/lzm/Wayland/weston/tests/weston-test-client-helper.h</label>
        <link refid="weston-test-client-helper_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>/home/lzm/Wayland/weston/tests/subsurface-shot-test.c</label>
        <link refid="subsurface-shot-test_8c"/>
      </node>
      <node id="31">
        <label>/home/lzm/Wayland/weston/libweston/launcher-weston-launch.c</label>
        <link refid="launcher-weston-launch_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structweston__geometry" prot="public">weston_geometry</innerclass>
    <innerclass refid="structweston__position" prot="public">weston_position</innerclass>
    <innerclass refid="structweston__size" prot="public">weston_size</innerclass>
    <innerclass refid="structweston__transform" prot="public">weston_transform</innerclass>
    <innerclass refid="structweston__point2d__device__normalized" prot="public">weston_point2d_device_normalized</innerclass>
    <innerclass refid="structweston__mode" prot="public">weston_mode</innerclass>
    <innerclass refid="structweston__animation" prot="public">weston_animation</innerclass>
    <innerclass refid="structweston__spring" prot="public">weston_spring</innerclass>
    <innerclass refid="structweston__output__zoom" prot="public">weston_output_zoom</innerclass>
    <innerclass refid="structweston__testsuite__quirks" prot="public">weston_testsuite_quirks</innerclass>
    <innerclass refid="structweston__testsuite__data" prot="public">weston_testsuite_data</innerclass>
    <innerclass refid="structweston__head" prot="public">weston_head</innerclass>
    <innerclass refid="structweston__output" prot="public">weston_output</innerclass>
    <innerclass refid="structweston__pointer__motion__event" prot="public">weston_pointer_motion_event</innerclass>
    <innerclass refid="structweston__pointer__axis__event" prot="public">weston_pointer_axis_event</innerclass>
    <innerclass refid="structweston__pointer__grab__interface" prot="public">weston_pointer_grab_interface</innerclass>
    <innerclass refid="structweston__pointer__grab" prot="public">weston_pointer_grab</innerclass>
    <innerclass refid="structweston__keyboard__grab__interface" prot="public">weston_keyboard_grab_interface</innerclass>
    <innerclass refid="structweston__keyboard__grab" prot="public">weston_keyboard_grab</innerclass>
    <innerclass refid="structweston__touch__grab__interface" prot="public">weston_touch_grab_interface</innerclass>
    <innerclass refid="structweston__touch__grab" prot="public">weston_touch_grab</innerclass>
    <innerclass refid="structweston__data__offer" prot="public">weston_data_offer</innerclass>
    <innerclass refid="structweston__data__source" prot="public">weston_data_source</innerclass>
    <innerclass refid="structweston__pointer__client" prot="public">weston_pointer_client</innerclass>
    <innerclass refid="structweston__pointer" prot="public">weston_pointer</innerclass>
    <innerclass refid="structweston__touch__device__matrix" prot="public">weston_touch_device_matrix</innerclass>
    <innerclass refid="structweston__touch__device__ops" prot="public">weston_touch_device_ops</innerclass>
    <innerclass refid="structweston__touch__device" prot="public">weston_touch_device</innerclass>
    <innerclass refid="structweston__touch" prot="public">weston_touch</innerclass>
    <innerclass refid="structweston__xkb__info" prot="public">weston_xkb_info</innerclass>
    <innerclass refid="structweston__keyboard" prot="public">weston_keyboard</innerclass>
    <innerclass refid="structweston__seat" prot="public">weston_seat</innerclass>
    <innerclass refid="structweston__layer__entry" prot="public">weston_layer_entry</innerclass>
    <innerclass refid="structweston__layer" prot="public">weston_layer</innerclass>
    <innerclass refid="structweston__plane" prot="public">weston_plane</innerclass>
    <innerclass refid="structweston__renderer" prot="public">weston_renderer</innerclass>
    <innerclass refid="structweston__backend__config" prot="public">weston_backend_config</innerclass>
    <innerclass refid="structweston__compositor" prot="public">weston_compositor</innerclass>
    <innerclass refid="structweston__buffer" prot="public">weston_buffer</innerclass>
    <innerclass refid="structweston__buffer__reference" prot="public">weston_buffer_reference</innerclass>
    <innerclass refid="structweston__buffer__viewport" prot="public">weston_buffer_viewport</innerclass>
    <innerclass refid="structweston__buffer__release" prot="public">weston_buffer_release</innerclass>
    <innerclass refid="structweston__buffer__release__reference" prot="public">weston_buffer_release_reference</innerclass>
    <innerclass refid="structweston__region" prot="public">weston_region</innerclass>
    <innerclass refid="structweston__view" prot="public">weston_view</innerclass>
    <innerclass refid="structweston__surface__state" prot="public">weston_surface_state</innerclass>
    <innerclass refid="structweston__surface__activation__data" prot="public">weston_surface_activation_data</innerclass>
    <innerclass refid="structweston__pointer__constraint" prot="public">weston_pointer_constraint</innerclass>
    <innerclass refid="structweston__surface" prot="public">weston_surface</innerclass>
    <innerclass refid="structweston__subsurface" prot="public">weston_subsurface</innerclass>
    <innerclass refid="structprotected__surface" prot="public">protected_surface</innerclass>
    <innerclass refid="structcontent__protection" prot="public">content_protection</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="libweston_8h_1aa8a0ead328e48baf473bcfc523b101a7" prot="public" static="no">
        <name>WL_HIDE_DEPRECATED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="41" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libweston_8h_1ac57ab20ccb8a4f9f66d9d2f9bb5500d0" prot="public" static="no">
        <name>WP_PRESENTATION_FEEDBACK_INVALID</name>
        <initializer>(1U &lt;&lt; 31)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1646" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libweston_8h_1a4dcb9f8540ab54e157a5237c5354a203" prot="public" static="no">
        <name>STAMP_SPACE</name>
        <initializer>&quot;               &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1868" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1868" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_keyboard_modifier</name>
        <enumvalue id="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fadfa99f109f19bae56c57599c09081702" prot="public">
          <name>MODIFIER_CTRL</name>
          <initializer>= (1 &lt;&lt; 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adc0293d9193b23154a60f0e64ac6896faeef7f95cefee09607005b76d3e2e17e8" prot="public">
          <name>MODIFIER_ALT</name>
          <initializer>= (1 &lt;&lt; 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fac7c4489a6ddb2042ce3797b4c1cbd0ba" prot="public">
          <name>MODIFIER_SUPER</name>
          <initializer>= (1 &lt;&lt; 2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fa8bb8f661e83a0141db816fb56bf53cd7" prot="public">
          <name>MODIFIER_SHIFT</name>
          <initializer>= (1 &lt;&lt; 3)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="83" column="30" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_keyboard_locks</name>
        <enumvalue id="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a9f1a9cb0074a63bbf44b28556ffdcd81" prot="public">
          <name>WESTON_NUM_LOCK</name>
          <initializer>= (1 &lt;&lt; 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a731c7508f6ac1f2b216178c302e61d6c" prot="public">
          <name>WESTON_CAPS_LOCK</name>
          <initializer>= (1 &lt;&lt; 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="90" column="27" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_led</name>
        <enumvalue id="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0afb4afcb3a2efeaeb0ae53455693553b8" prot="public">
          <name>LED_NUM_LOCK</name>
          <initializer>= (1 &lt;&lt; 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0a9694f2f03b30c7081839f70a0546f0d7" prot="public">
          <name>LED_CAPS_LOCK</name>
          <initializer>= (1 &lt;&lt; 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0a31a8ab056a0c2227359d2e835614855f" prot="public">
          <name>LED_SCROLL_LOCK</name>
          <initializer>= (1 &lt;&lt; 2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="95" column="16" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_mode_aspect_ratio</name>
        <enumvalue id="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96a7baf17017aad415e3497125b27294064" prot="public">
          <name>WESTON_MODE_PIC_AR_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>The picture aspect ratio values, for the aspect_ratio field of <ref refid="structweston__mode" kindref="compound">weston_mode</ref>. </para>
          </briefdescription>
          <detaileddescription>
<para>The values here, are taken from DRM_MODE_PICTURE_ASPECT_* from drm_mode.h. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96af2edbf94b67d56286d831a356b4858e2" prot="public">
          <name>WESTON_MODE_PIC_AR_4_3</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96a6346fdb14154c96e1c8bb8fa700b8ebd" prot="public">
          <name>WESTON_MODE_PIC_AR_16_9</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96abac2a18e65c2731951dbe13ef81da9ad" prot="public">
          <name>WESTON_MODE_PIC_AR_64_27</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96ae67e8e6b36e781de4c357d3e856b95fd" prot="public">
          <name>WESTON_MODE_PIC_AR_256_135</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="101" column="30" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="101" bodyend="111"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a149b1ac0bd76933ff03da35d64709208" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_surface_protection_mode</name>
        <enumvalue id="libweston_8h_1a149b1ac0bd76933ff03da35d64709208ab0feceb730258d0d17f95c9570f69934" prot="public">
          <name>WESTON_SURFACE_PROTECTION_MODE_RELAXED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a149b1ac0bd76933ff03da35d64709208aa5df7c201a76deb656b1e70da4268a54" prot="public">
          <name>WESTON_SURFACE_PROTECTION_MODE_ENFORCED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="113" column="36" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a39fca1837c5ce7715cbf571669660c13" prot="public" static="no" strong="no">
        <type></type>
        <name>@22</name>
        <enumvalue id="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a015bc74efebec6fe0962428502b50865" prot="public">
          <name>WESTON_SPRING_OVERSHOOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a39b3f37882e8adfbaf71188bf6b4be13" prot="public">
          <name>WESTON_SPRING_CLAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a5dd1eba6b07031885218cafb3481e65d" prot="public">
          <name>WESTON_SPRING_BOUNCE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="134" column="6" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="134" bodyend="138"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3" prot="public" static="no" strong="no">
        <type></type>
        <name>dpms_enum</name>
        <enumvalue id="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ad1b8db0fe08ab29dbaa695396cb1c637" prot="public">
          <name>WESTON_DPMS_ON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ab30cdef240c3801fe0f9fdfb7556de64" prot="public">
          <name>WESTON_DPMS_STANDBY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ad5c56b3cfaaa869cf1d468e08bcfaeba" prot="public">
          <name>WESTON_DPMS_SUSPEND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3a3f1ea2fc87236eee5e7a9dc3c00f80a3" prot="public">
          <name>WESTON_DPMS_OFF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="167" column="15" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="167" bodyend="172"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_hdcp_protection</name>
        <enumvalue id="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" prot="public">
          <name>WESTON_HDCP_DISABLE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671aa54e92658bde3e9e84397251be6b3f3b" prot="public">
          <name>WESTON_HDCP_ENABLE_TYPE_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671a56d9cf52a4b090964c1bfc82e71fa85d" prot="public">
          <name>WESTON_HDCP_ENABLE_TYPE_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="182" column="28" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1aac83b5763c409014ae833e140d7f04a5" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_pointer_motion_mask</name>
        <enumvalue id="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a84c6d5ae05c3d2b0778a27a28751c181" prot="public">
          <name>WESTON_POINTER_MOTION_ABS</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a1a81e5f785512d1f1ea98b3f7774917d" prot="public">
          <name>WESTON_POINTER_MOTION_REL</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1aac83b5763c409014ae833e140d7f04a5aca06cf4b91022f3c5e5087251ea462fd" prot="public">
          <name>WESTON_POINTER_MOTION_REL_UNACCEL</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="399" column="32" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="399" bodyend="403"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_touch_mode</name>
        <enumvalue id="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" prot="public">
          <name>WESTON_TOUCH_MODE_NORMAL</name>
          <briefdescription>
<para>Normal touch event handling. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" prot="public">
          <name>WESTON_TOUCH_MODE_PREP_CALIB</name>
          <briefdescription>
<para>Prepare moving to WESTON_TOUCH_MODE_CALIB. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>   Move to WESTON_TOUCH_MODE_CALIB as soon as no touches are down on
   any seat. Until then, all touch events are routed normally.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" prot="public">
          <name>WESTON_TOUCH_MODE_CALIB</name>
          <briefdescription>
<para>Calibration mode. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>   Only a single weston_touch_device forwards events to the calibrator
   all other touch device cause a calibrator &quot;wrong device&quot; event to
   be sent.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" prot="public">
          <name>WESTON_TOUCH_MODE_PREP_NORMAL</name>
          <briefdescription>
<para>Prepare moving to WESTON_TOUCH_MODE_NORMAL. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>   Move to WESTON_TOUCH_MODE_NORMAL as soon as no touches are down on
   any seat. Until then, touch events are routed as in
   WESTON_TOUCH_MODE_CALIB except &quot;wrong device&quot; events are not sent.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="583" column="23" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="583" bodyend="609"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4" prot="public" static="no" strong="no">
        <type></type>
        <name>@23</name>
        <enumvalue id="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad3408c9425d98ee7990dbdd19ddf6377" prot="public">
          <name>WESTON_COMPOSITOR_ACTIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad98fb56bd57616678d00cc1fef844267" prot="public">
          <name>WESTON_COMPOSITOR_IDLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" prot="public">
          <name>WESTON_COMPOSITOR_OFFSCREEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" prot="public">
          <name>WESTON_COMPOSITOR_SLEEPING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="837" column="6" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="837" bodyend="843"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5c" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_layer_position</name>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5cacf7abe83f5ce1dc50dc531ac7071c54b" prot="public">
          <name>WESTON_LAYER_POSITION_HIDDEN</name>
          <initializer>= 0x00000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca535c01934b02be5377b30abdf7821807" prot="public">
          <name>WESTON_LAYER_POSITION_BACKGROUND</name>
          <initializer>= 0x00000002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5cad279cd1cff10326d6c98e17f4c03863e" prot="public">
          <name>WESTON_LAYER_POSITION_BOTTOM_UI</name>
          <initializer>= 0x30000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca8d9648b768e66696eb0377487fdb3bee" prot="public">
          <name>WESTON_LAYER_POSITION_NORMAL</name>
          <initializer>= 0x50000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca577ca974e38714ebdec8cc05e55df591" prot="public">
          <name>WESTON_LAYER_POSITION_UI</name>
          <initializer>= 0x80000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca2170c3a4357c4e2264460c960533df71" prot="public">
          <name>WESTON_LAYER_POSITION_FULLSCREEN</name>
          <initializer>= 0xb0000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca989a52fb072cf62a6334048f6729eb71" prot="public">
          <name>WESTON_LAYER_POSITION_TOP_UI</name>
          <initializer>= 0xe0000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca113a47738f111934d4cef5f886c3212f" prot="public">
          <name>WESTON_LAYER_POSITION_LOCK</name>
          <initializer>= 0xffff0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca2e219337cfe0fa85a6e5c70fc269fd93" prot="public">
          <name>WESTON_LAYER_POSITION_CURSOR</name>
          <initializer>= 0xfffffffe</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca5c4a827bef388f0a31360726786789e7" prot="public">
          <name>WESTON_LAYER_POSITION_FADE</name>
          <initializer>= 0xffffffff</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Higher value means higher in the stack. </para>
        </briefdescription>
        <detaileddescription>
<para>These values are based on well-known concepts in a classic desktop environment. Third-party modules based on libweston are encouraged to use them to integrate better with other projects.</para>
<para>A fully integrated environment can use any value, based on these or not, at their discretion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="860" column="27" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="860" bodyend="904"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2d" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_capability</name>
        <enumvalue id="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dacfc07a33167b2f9438c61a8aa70bc11a" prot="public">
          <name>WESTON_CAP_ROTATION_ANY</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da8c6fa756c17911d39750f20b0270302f" prot="public">
          <name>WESTON_CAP_CAPTURE_YFLIP</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dad7f491f16c2614d695d30ab36928bf00" prot="public">
          <name>WESTON_CAP_CURSOR_PLANE</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dace9ed878a4985d2dc637b96ac7910ede" prot="public">
          <name>WESTON_CAP_ARBITRARY_MODES</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da9d3b76d6c75b519426aa5a4b8571b500" prot="public">
          <name>WESTON_CAP_VIEW_CLIP_MASK</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dac0105501579ea73b78960706632814a9" prot="public">
          <name>WESTON_CAP_EXPLICIT_SYNC</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da1b1e29ae46171ce404f460103204ce98" prot="public">
          <name>WESTON_CAP_COLOR_OPS</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="961" column="23" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="961" bodyend="982"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1afff20b83d542a98eccc1fee1314dde51" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_key_state_update</name>
        <enumvalue id="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a816b30ccdbbe24e29682edc1fca8f45d" prot="public">
          <name>STATE_UPDATE_AUTOMATIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a46aec089b299b52eac5d2496a211522c" prot="public">
          <name>STATE_UPDATE_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1579" column="29" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1579" bodyend="1582"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4ba" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_activate_flag</name>
        <enumvalue id="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baa0012c23a7037d7d0881c41e06d11ba60" prot="public">
          <name>WESTON_ACTIVATE_FLAG_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baa41ea78e42446fa020fa0711a90bb3758" prot="public">
          <name>WESTON_ACTIVATE_FLAG_CONFIGURE</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baaf3b8b43f8e2c13134d83f59acf0068c7" prot="public">
          <name>WESTON_ACTIVATE_FLAG_CLICKED</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1584" column="26" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1584" bodyend="1588"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_compositor_backend</name>
        <enumvalue id="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a62a6d338e4bbfd69283bcecd0c4146d3" prot="public">
          <name>WESTON_BACKEND_DRM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a89d4a284bb5b45264384b20211a49dd4" prot="public">
          <name>WESTON_BACKEND_FBDEV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a27dd7bf7e18276a1bcdc28f659f22813" prot="public">
          <name>WESTON_BACKEND_HEADLESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a7dde123c05411479dcb853cfbab3bf19" prot="public">
          <name>WESTON_BACKEND_RDP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a5ca3bb9d37a3b99dc829aa823a1f5e7f" prot="public">
          <name>WESTON_BACKEND_WAYLAND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a3b8188668bc350c2614b4f0b8d400edd" prot="public">
          <name>WESTON_BACKEND_X11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1832" column="31" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1832" bodyend="1839"/>
      </memberdef>
      <memberdef kind="enum" id="libweston_8h_1a3aab23652ab88eb09d27a041a335e597" prot="public" static="no" strong="no">
        <type></type>
        <name>weston_screenshooter_outcome</name>
        <enumvalue id="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a15572492c6051a5b07a9f63dae44e7c6" prot="public">
          <name>WESTON_SCREENSHOOTER_SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a5bbf640d4c011dd5762c536da481200c" prot="public">
          <name>WESTON_SCREENSHOOTER_NO_MEMORY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a3d179b261161f6059e95f4f42d16efcc" prot="public">
          <name>WESTON_SCREENSHOOTER_BAD_BUFFER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1883" column="34" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1883" bodyend="1887"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="libweston_8h_1adf8c2bb0e5fc912dfdc0526930eb1cb8" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* weston_touch_calibration_save_func) (struct weston_compositor *compositor, struct weston_touch_device *device, const struct weston_touch_device_matrix *calibration)</definition>
        <argsstring>)(struct weston_compositor *compositor, struct weston_touch_device *device, const struct weston_touch_device_matrix *calibration)</argsstring>
        <name>weston_touch_calibration_save_func</name>
        <briefdescription>
<para>Callback for saving calibration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The physical touch device to save for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>calibration</parametername>
</parameternamelist>
<parameterdescription>
<para>The new calibration from a client. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 on failure, 0 on success.</para>
</simplesect>
Failure will prevent taking the new calibration into use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1035" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1035" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libweston_8h_1a84c78b0176d92da0fe7f354c9de4e38f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* weston_key_binding_handler_t) (struct weston_keyboard *keyboard, const struct timespec *time, uint32_t key, void *data)</definition>
        <argsstring>)(struct weston_keyboard *keyboard, const struct timespec *time, uint32_t key, void *data)</argsstring>
        <name>weston_key_binding_handler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1665" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1665" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libweston_8h_1ab07e18845de33d478c4ce8e154babfe0" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* weston_modifier_binding_handler_t) (struct weston_keyboard *keyboard, enum weston_keyboard_modifier modifier, void *data)</definition>
        <argsstring>)(struct weston_keyboard *keyboard, enum weston_keyboard_modifier modifier, void *data)</argsstring>
        <name>weston_modifier_binding_handler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1681" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libweston_8h_1a8f95f19dde1eb1075f4f233d2f668f91" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* weston_button_binding_handler_t) (struct weston_pointer *pointer, const struct timespec *time, uint32_t button, void *data)</definition>
        <argsstring>)(struct weston_pointer *pointer, const struct timespec *time, uint32_t button, void *data)</argsstring>
        <name>weston_button_binding_handler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1690" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libweston_8h_1a20cceeb02a0017f5eac24db0e0efb021" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* weston_touch_binding_handler_t) (struct weston_touch *touch, const struct timespec *time, void *data)</definition>
        <argsstring>)(struct weston_touch *touch, const struct timespec *time, void *data)</argsstring>
        <name>weston_touch_binding_handler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1701" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libweston_8h_1a8fdfc58407b3cb20ae86afb627b3e7c6" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* weston_axis_binding_handler_t) (struct weston_pointer *pointer, const struct timespec *time, struct weston_pointer_axis_event *event, void *data)</definition>
        <argsstring>)(struct weston_pointer *pointer, const struct timespec *time, struct weston_pointer_axis_event *event, void *data)</argsstring>
        <name>weston_axis_binding_handler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1710" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* log_func_t) (const char *fmt, va_list ap)</definition>
        <argsstring>)(const char *fmt, va_list ap)</argsstring>
        <name>log_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1873" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libweston_8h_1a98320969b064cca70f7b47066c792cd6" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* weston_screenshooter_done_func_t) (void *data, enum weston_screenshooter_outcome outcome)</definition>
        <argsstring>)(void *data, enum weston_screenshooter_outcome outcome)</argsstring>
        <name>weston_screenshooter_done_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1889" column="9" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1889" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* weston_view_animation_done_func_t) (struct weston_view_animation *animation, void *data)</definition>
        <argsstring>)(struct weston_view_animation *animation, void *data)</argsstring>
        <name>weston_view_animation_done_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1900" column="8" bodyfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" bodystart="1900" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="libweston_8h_1aa60e7771b5a23d6e81355f69f62123c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_motion_to_abs</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_motion_event *event, wl_fixed_t *x, wl_fixed_t *y)</argsstring>
        <name>weston_pointer_motion_to_abs</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="652" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="314" bodyend="328" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="652" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ab26fbd79ff4d88d30d6b79396677aa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_motion</definition>
        <argsstring>(struct weston_pointer *pointer, const struct timespec *time, struct weston_pointer_motion_event *event)</argsstring>
        <name>weston_pointer_send_motion</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="657" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="533" bodyend="555" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="657" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aa5739d335835aa75c34d497491d57ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_pointer_has_focus_resource</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_has_focus_resource</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Check if the pointer has focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to check for focused resources. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not this pointer has focused resources </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="661" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="571" bodyend="580" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="661" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a1eefd0a32d4acd9e7adb4ba477a157dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_button</definition>
        <argsstring>(struct weston_pointer *pointer, const struct timespec *time, uint32_t button, uint32_t state_w)</argsstring>
        <name>weston_pointer_send_button</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="663" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="663" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ad395050e7ec12082c2ee18c9ff42dda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_axis</definition>
        <argsstring>(struct weston_pointer *pointer, const struct timespec *time, struct weston_pointer_axis_event *event)</argsstring>
        <name>weston_pointer_send_axis</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Send wl_pointer.axis events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer where the axis events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_pointer.axis event with the passed parameters. The focused resources are the wl_pointer resources of the client which currently has the surface with pointer focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="667" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="651" bodyend="687" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="667" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aa560e84f37484902cfb06bc4fece4f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_axis_source</definition>
        <argsstring>(struct weston_pointer *pointer, uint32_t source)</argsstring>
        <name>weston_pointer_send_axis_source</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="671" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="671" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a2bb5b53363fe73ab8a6b0f52e5415ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_send_frame</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_send_frame</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Send wl_pointer.frame events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer where the frame events originates from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_pointer.frame event. The focused resources are the wl_pointer resources of the client which currently has the surface with pointer focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="674" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="735" bodyend="746" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="674" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a4f683d449ac87d60d5e0205d966917c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_set_focus</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_view *view, wl_fixed_t sx, wl_fixed_t sy)</argsstring>
        <name>weston_pointer_set_focus</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="677" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1431" bodyend="1510" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="677" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a3796f149723a5e49d6b176837a50d093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_clear_focus</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_clear_focus</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Clear the pointer focus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to clear focus for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This can be used to unset pointer focus and set the co-ordinates to the arbitrary values we use for the no focus case.</para>
<para>There&apos;s no requirement to use this function. For example, passing the results of a <ref refid="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" kindref="member">weston_compositor_pick_view()</ref> directly to <ref refid="input_8c_1a4f683d449ac87d60d5e0205d966917c0" kindref="member">weston_pointer_set_focus()</ref> will do the right thing when no view is found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="681" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1423" bodyend="1428" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="681" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a1ba15fe33ad21e716157d11ef4b95bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_start_grab</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_grab *grab)</argsstring>
        <name>weston_pointer_start_grab</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="683" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1611" bodyend="1617" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="683" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ae5aa08a5ae051943a460449fac42b8a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_end_grab</definition>
        <argsstring>(struct weston_pointer *pointer)</argsstring>
        <name>weston_pointer_end_grab</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="686" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1620" bodyend="1624" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="686" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ab9f43265a9a88c5b2b3a1f23fdc6329b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_pointer_move</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_pointer_motion_event *event)</argsstring>
        <name>weston_pointer_move</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="688" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1729" bodyend="1736" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="688" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ac5c8f2d331758909aabe3ab0a320110a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_set_focus</definition>
        <argsstring>(struct weston_keyboard *keyboard, struct weston_surface *surface)</argsstring>
        <name>weston_keyboard_set_focus</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="691" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1529" bodyend="1587" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="691" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a2e7bde32b32ee8c47e5866d4b6859c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_start_grab</definition>
        <argsstring>(struct weston_keyboard *device, struct weston_keyboard_grab *grab)</argsstring>
        <name>weston_keyboard_start_grab</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="694" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1591" bodyend="1596" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="694" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a8d1afdec8c569cf3fdbde5b1cd4b6513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_end_grab</definition>
        <argsstring>(struct weston_keyboard *keyboard)</argsstring>
        <name>weston_keyboard_end_grab</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="697" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1599" bodyend="1602" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="697" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a4be3758a0a5e28a2c83577c0ebd3fba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_keyboard_set_locks</definition>
        <argsstring>(struct weston_keyboard *keyboard, uint32_t mask, uint32_t value)</argsstring>
        <name>weston_keyboard_set_locks</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="703" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1948" bodyend="1993" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="703" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a0c9aac811e3a283a2a6819403d86fd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_send_key</definition>
        <argsstring>(struct weston_keyboard *keyboard, const struct timespec *time, uint32_t key, enum wl_keyboard_key_state state)</argsstring>
        <name>weston_keyboard_send_key</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum wl_keyboard_key_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Send wl_keyboard.key events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyboard where the key events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state enum value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_keyboard.key event with the passed parameters. The focused resources are the wl_keyboard resources of the client which currently has the surface with keyboard focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="707" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1007" bodyend="1029" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="707" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ab0649f15a4018a435162fe7d2bff1582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_send_modifiers</definition>
        <argsstring>(struct weston_keyboard *keyboard, uint32_t serial, uint32_t mods_depressed, uint32_t mods_latched, uint32_t mods_locked, uint32_t group)</argsstring>
        <name>weston_keyboard_send_modifiers</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_depressed</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_latched</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_locked</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Send wl_keyboard.modifiers events to focused resources and pointer focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyboard where the modifiers events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>The serial of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mods_depressed</parametername>
</parameternamelist>
<parameterdescription>
<para>The mods_depressed value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mods_latched</parametername>
</parameternamelist>
<parameterdescription>
<para>The mods_latched value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mods_locked</parametername>
</parameternamelist>
<parameterdescription>
<para>The mods_locked value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>The group value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_keyboard.modifiers event with the passed parameters. The focused resources are the wl_keyboard resources of the client which currently has the surface with keyboard focus. This also sends wl_keyboard.modifiers events to the wl_keyboard resources of the client having pointer focus (if different from the keyboard focus client). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="711" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1122" bodyend="1152" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="711" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a8f5d2ab8262d54999fab8f84a4a87c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_set_focus</definition>
        <argsstring>(struct weston_touch *touch, struct weston_view *view)</argsstring>
        <name>weston_touch_set_focus</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="717" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2329" bodyend="2368" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="717" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a1b4054b056e841dca16cb8aaf85268c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_start_grab</definition>
        <argsstring>(struct weston_touch *touch, struct weston_touch_grab *grab)</argsstring>
        <name>weston_touch_start_grab</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref> *</type>
          <declname>grab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="720" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1633" bodyend="1637" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="720" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1adc5de1147c1ce233bb09f113f8c7ba8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_end_grab</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_end_grab</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="723" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1640" bodyend="1643" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="723" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a1d70791ddcb4629a7846232e26d4fa68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_send_down</definition>
        <argsstring>(struct weston_touch *touch, const struct timespec *time, int touch_id, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>weston_touch_send_down</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Send wl_touch.down events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch where the down events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>touch_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch_id value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_touch.down event with the passed parameters. The focused resources are the wl_touch resources of the client which currently has the surface with touch focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="726" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="815" bodyend="841" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="726" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ae22c7a42c191767f1151fe6d01d56738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_send_up</definition>
        <argsstring>(struct weston_touch *touch, const struct timespec *time, int touch_id)</argsstring>
        <name>weston_touch_send_up</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <briefdescription>
<para>Send wl_touch.up events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch where the up events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>touch_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch_id value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_touch.up event with the passed parameters. The focused resources are the wl_touch resources of the client which currently has the surface with touch focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="729" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="862" bodyend="883" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="729" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a64f6ad901561897ff571a30c85bd20b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_send_motion</definition>
        <argsstring>(struct weston_touch *touch, const struct timespec *time, int touch_id, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>weston_touch_send_motion</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Send wl_touch.motion events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch where the motion events originates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>touch_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch_id value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x value of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y value of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_touch.motion event with the passed parameters. The focused resources are the wl_touch resources of the client which currently has the surface with touch focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="732" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="905" bodyend="928" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="732" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a4af7b368ba26d19f767eb08aedf7d5de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_touch_send_frame</definition>
        <argsstring>(struct weston_touch *touch)</argsstring>
        <name>weston_touch_send_frame</name>
        <param>
          <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
<para>Send wl_touch.frame events to focused resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch</parametername>
</parameternamelist>
<parameterdescription>
<para>The touch where the frame events originates from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
For every resource that is currently in focus, send a wl_touch.frame event. The focused resources are the wl_touch resources of the client which currently has the surface with touch focus. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="736" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="948" bodyend="957" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="736" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a8ddb6f9ae194b2f77f67640a46008b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_set_selection</definition>
        <argsstring>(struct weston_seat *seat, struct weston_data_source *source, uint32_t serial)</argsstring>
        <name>weston_seat_set_selection</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__data__source" kindref="compound">weston_data_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="740" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/data-device.c" bodystart="1138" bodyend="1174" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="740" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aaeb12cfa20c836a2309a96c4fbbd78cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_pointer_start_drag</definition>
        <argsstring>(struct weston_pointer *pointer, struct weston_data_source *source, struct weston_surface *icon, struct wl_client *client)</argsstring>
        <name>weston_pointer_start_drag</name>
        <param>
          <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__data__source" kindref="compound">weston_data_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>icon</declname>
        </param>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="744" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/data-device.c" bodystart="911" bodyend="961" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="744" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a727f0b7833b706014790d029ba86684c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_version</definition>
        <argsstring>(int *major, int *minor, int *micro)</argsstring>
        <name>weston_version</name>
        <param>
          <type>int *</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>micro</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1591" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7741" bodyend="7746" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1591" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a282f55c3bc4fcad342539921f04cc484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_output</definition>
        <argsstring>(struct weston_view *view, struct weston_output *output)</argsstring>
        <name>weston_view_set_output</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Set the primary output of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view whose primary output to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The new primary output for the view</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Set <emphasis>output</emphasis> to be the primary output of the <emphasis>view</emphasis>.</para>
<para>Notice that the assignment may be temporary; the primary output could be automatically changed. Hence, one cannot rely on the value persisting.</para>
<para>Passing NULL as /a output will set the primary output to NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1594" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1238" bodyend="1251" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1594" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a9605e8abe1240aa6cbe7abdd2fc7f2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_update_transform</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_update_transform</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1597" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1544" bodyend="1592" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1597" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a2c99bb32d9b9c6fa15e4a129fce7ce30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_geometry_dirty</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_geometry_dirty</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1600" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1595" bodyend="1614" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1600" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a1666f1b9cb32183712d16d893af00dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_to_global_float</definition>
        <argsstring>(struct weston_view *view, float sx, float sy, float *x, float *y)</argsstring>
        <name>weston_view_to_global_float</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1603" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="586" bodyend="609" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1603" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a0e9c9a3eaa8a28e392585c3fc0a92c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_from_global</definition>
        <argsstring>(struct weston_view *view, int32_t x, int32_t y, int32_t *vx, int32_t *vy)</argsstring>
        <name>weston_view_from_global</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>vy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1607" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1673" bodyend="1681" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1607" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a4f40c4fe8494126d487f957034d73320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_from_global_fixed</definition>
        <argsstring>(struct weston_view *view, wl_fixed_t x, wl_fixed_t y, wl_fixed_t *vx, wl_fixed_t *vy)</argsstring>
        <name>weston_view_from_global_fixed</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>vy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1610" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1658" bodyend="1670" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1610" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a55b0b308f8ca8dfe27622277eafabacd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_activate</definition>
        <argsstring>(struct weston_view *view, struct weston_seat *seat, uint32_t flags)</argsstring>
        <name>weston_view_activate</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1615" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1864" bodyend="1876" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1615" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aae75251c5c98be717a0513bed342264c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_modifiers</definition>
        <argsstring>(struct weston_seat *seat, uint32_t serial)</argsstring>
        <name>notify_modifiers</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1620" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="1996" bodyend="2064" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1620" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1adcf675a1f1ac2cea92e8ca52900b89c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_entry_insert</definition>
        <argsstring>(struct weston_layer_entry *list, struct weston_layer_entry *entry)</argsstring>
        <name>weston_layer_entry_insert</name>
        <param>
          <type>struct <ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1623" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3081" bodyend="3086" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1623" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a30169d037f8e3aa397fb354f9ee3f5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_entry_remove</definition>
        <argsstring>(struct weston_layer_entry *entry)</argsstring>
        <name>weston_layer_entry_remove</name>
        <param>
          <type>struct <ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1626" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3089" bodyend="3094" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1626" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ab4294fb27b3079ee70660a0975d3e0e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_init</definition>
        <argsstring>(struct weston_layer *layer, struct weston_compositor *compositor)</argsstring>
        <name>weston_layer_init</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="structweston__layer" kindref="compound">weston_layer</ref> struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>The layer to initialize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1628" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3103" bodyend="3111" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1628" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a736341961367a84eac0b635b94eefc61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_set_position</definition>
        <argsstring>(struct weston_layer *layer, enum weston_layer_position position)</argsstring>
        <name>weston_layer_set_position</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5c" kindref="member">weston_layer_position</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Sets the position of the layer in the layer list. </para>
        </briefdescription>
        <detaileddescription>
<para>The layer will be placed below any layer with the same position value, if any. This function is safe to call if the layer is already on the list, but the layer may be moved below other layers at the same position, if any.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>The layer to modify </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position the layer will be placed at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1631" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3122" bodyend="3140" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1631" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aeea455f7de4acc7dda325e8dda148caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_unset_position</definition>
        <argsstring>(struct weston_layer *layer)</argsstring>
        <name>weston_layer_unset_position</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Hide a layer by taking it off the layer list. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is safe to call if the layer is not on the list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>The layer to hide </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1634" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3148" bodyend="3152" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1634" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a3bad282ec84d83635ede2e78f0861f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_set_mask</definition>
        <argsstring>(struct weston_layer *layer, int x, int y, int width, int height)</argsstring>
        <name>weston_layer_set_mask</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1637" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3155" bodyend="3168" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1637" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aa94f16fd96514709edcd9b4a0163378c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_layer_set_mask_infinite</definition>
        <argsstring>(struct weston_layer *layer)</argsstring>
        <name>weston_layer_set_mask_infinite</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1640" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3171" bodyend="3183" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1640" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aa3710db18821fd6bb0226c49e22de3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_layer_mask_is_infinite</definition>
        <argsstring>(struct weston_layer *layer)</argsstring>
        <name>weston_layer_mask_is_infinite</name>
        <param>
          <type>struct <ref refid="structweston__layer" kindref="compound">weston_layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1643" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3186" bodyend="3192" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1643" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga0464b27eac6a50ce14d0db08958e9489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_schedule_repaint</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_schedule_repaint</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1649" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3198" bodyend="3225" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1649" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga8477eedbbb0660db00b0c1be93c913db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_schedule_repaint</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_schedule_repaint</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>weston_compositor_schedule_repaint </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1651" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="3231" bodyend="3237" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1651" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga674d4dd1642c36ca73a7ddc246a4b411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_damage_all</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_damage_all</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>weston_compositor_damage_all </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1653" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2441" bodyend="2447" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1653" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_wake</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_wake</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Restores the compositor to active status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If the compositor was in a sleeping mode, all outputs are powered back on via DPMS. Otherwise if the compositor was inactive (idle/locked, offscreen, or sleeping) then the compositor&apos;s wake signal will fire.</para>
<para>Restarts the idle timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1655" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4793" bodyend="4813" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1655" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga0d01f39e15e169b13384be82bb05370d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_sleep</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_sleep</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Powers down all attached output devices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Causes rendering to the outputs to cease, and no frame events to be sent. Only powers down the outputs if the compositor is not already in sleep mode.</para>
<para>Stops the idle timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1657" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4852" bodyend="4860" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1657" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
        <definition>struct weston_view* weston_compositor_pick_view</definition>
        <argsstring>(struct weston_compositor *compositor, wl_fixed_t x, wl_fixed_t y, wl_fixed_t *sx, wl_fixed_t *sy)</argsstring>
        <name>weston_compositor_pick_view</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>wl_fixed_t *</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
<para>weston_compositor_pick_view </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1659" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2085" bodyend="2121" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1659" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ac8d58d8d956a2212f003e6b78ccc467d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__binding" kindref="compound">weston_binding</ref> *</type>
        <definition>struct weston_binding* weston_compositor_add_key_binding</definition>
        <argsstring>(struct weston_compositor *compositor, uint32_t key, enum weston_keyboard_modifier modifier, weston_key_binding_handler_t binding, void *data)</argsstring>
        <name>weston_compositor_add_key_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref></type>
          <declname>modifier</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a84c78b0176d92da0fe7f354c9de4e38f" kindref="member">weston_key_binding_handler_t</ref></type>
          <declname>binding</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1670" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1670" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a6048cc0c18488b35bb0d139d7e3fc2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__binding" kindref="compound">weston_binding</ref> *</type>
        <definition>struct weston_binding* weston_compositor_add_debug_binding</definition>
        <argsstring>(struct weston_compositor *compositor, uint32_t key, weston_key_binding_handler_t binding, void *data)</argsstring>
        <name>weston_compositor_add_debug_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a84c78b0176d92da0fe7f354c9de4e38f" kindref="member">weston_key_binding_handler_t</ref></type>
          <declname>binding</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1676" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="159" bodyend="172" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1676" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ad378ada6abd4ba81ae0da7a1d2b7d358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__binding" kindref="compound">weston_binding</ref> *</type>
        <definition>struct weston_binding* weston_compositor_add_modifier_binding</definition>
        <argsstring>(struct weston_compositor *compositor, enum weston_keyboard_modifier modifier, weston_modifier_binding_handler_t binding, void *data)</argsstring>
        <name>weston_compositor_add_modifier_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref></type>
          <declname>modifier</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1ab07e18845de33d478c4ce8e154babfe0" kindref="member">weston_modifier_binding_handler_t</ref></type>
          <declname>binding</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1685" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1685" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a03c90715eacac780e0d2c2c3e8f746ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__binding" kindref="compound">weston_binding</ref> *</type>
        <definition>struct weston_binding* weston_compositor_add_button_binding</definition>
        <argsstring>(struct weston_compositor *compositor, uint32_t button, enum weston_keyboard_modifier modifier, weston_button_binding_handler_t binding, void *data)</argsstring>
        <name>weston_compositor_add_button_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref></type>
          <declname>modifier</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a8f95f19dde1eb1075f4f233d2f668f91" kindref="member">weston_button_binding_handler_t</ref></type>
          <declname>binding</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1695" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1695" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a9c0f3c25e274938d545f7d92d6122d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__binding" kindref="compound">weston_binding</ref> *</type>
        <definition>struct weston_binding* weston_compositor_add_touch_binding</definition>
        <argsstring>(struct weston_compositor *compositor, enum weston_keyboard_modifier modifier, weston_touch_binding_handler_t binding, void *data)</argsstring>
        <name>weston_compositor_add_touch_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref></type>
          <declname>modifier</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a20cceeb02a0017f5eac24db0e0efb021" kindref="member">weston_touch_binding_handler_t</ref></type>
          <declname>binding</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1705" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1705" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a705c5af55d8d46e686e9ed9994349a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__binding" kindref="compound">weston_binding</ref> *</type>
        <definition>struct weston_binding* weston_compositor_add_axis_binding</definition>
        <argsstring>(struct weston_compositor *compositor, uint32_t axis, enum weston_keyboard_modifier modifier, weston_axis_binding_handler_t binding, void *data)</argsstring>
        <name>weston_compositor_add_axis_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref></type>
          <declname>modifier</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a8fdfc58407b3cb20ae86afb627b3e7c6" kindref="member">weston_axis_binding_handler_t</ref></type>
          <declname>binding</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1715" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1715" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ac05f4cdd96d5aa388f5104d88f24f7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_binding_destroy</definition>
        <argsstring>(struct weston_binding *binding)</argsstring>
        <name>weston_binding_destroy</name>
        <param>
          <type>struct <ref refid="structweston__binding" kindref="compound">weston_binding</ref> *</type>
          <declname>binding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1722" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="175" bodyend="179" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1722" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aedbd0ae0610f2df3923900339be0be74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_install_debug_key_binding</definition>
        <argsstring>(struct weston_compositor *compositor, uint32_t mod)</argsstring>
        <name>weston_install_debug_key_binding</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Install the trigger binding for debug bindings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The modifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This will add a key binding for modifier+SHIFT+SPACE that will trigger debug key bindings. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1725" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/bindings.c" bodystart="583" bodyend="589" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1725" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gad227efb7ecb34f771ad93dc86fdb5bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_set_default_pointer_grab</definition>
        <argsstring>(struct weston_compositor *compositor, const struct weston_pointer_grab_interface *interface)</argsstring>
        <name>weston_compositor_set_default_pointer_grab</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
<para>weston_compositor_set_default_pointer_grab </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1729" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7602" bodyend="7614" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1729" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a1e3347a74e72ecb0aa7617dbf89b76fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
        <definition>struct weston_surface* weston_surface_create</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_surface_create</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1733" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="530" bodyend="575" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1733" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aa7c65b03520dde2e12d5a35f444435d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
        <definition>struct weston_view* weston_view_create</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_view_create</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1736" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="322" bodyend="355" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1736" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a3b0df14d913003992656e8f791a6da9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_destroy</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_destroy</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1739" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2193" bodyend="2218" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1739" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ae1df17820e004a35b62f4a923066e9fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_position</definition>
        <argsstring>(struct weston_view *view, float x, float y)</argsstring>
        <name>weston_view_set_position</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1742" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1736" bodyend="1744" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1742" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a7fe0cf860d67bd9ee79c561a95adb1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_transform_parent</definition>
        <argsstring>(struct weston_view *view, struct weston_view *parent)</argsstring>
        <name>weston_view_set_transform_parent</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1746" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1758" bodyend="1781" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1746" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a8b2efecffa6f4d76ea628be8363723d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_mask</definition>
        <argsstring>(struct weston_view *view, int x, int y, int width, int height)</argsstring>
        <name>weston_view_set_mask</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set a clip mask rectangle on a view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to set the clip mask on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Top-left corner X coordinate of the clip rectangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Top-left corner Y coordinate of the clip rectangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the clip rectangle, non-negative. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the clip rectangle, non-negative.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
A shell may set a clip mask rectangle on a view. Everything outside the rectangle is cut away for input and output purposes: it is not drawn and cannot be hit by hit-test based input like pointer motion or touch-downs. Everything inside the rectangle will behave normally. Clients are unaware of clipping.</para>
<para>The rectangle is set in surface-local coordinates. Setting a clip mask rectangle does not affect the view position, the view is positioned as it would be without a clip. The clip also does not change <ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">weston_surface::width</ref>,height.</para>
<para>The clip mask rectangle is part of transformation inheritance (<ref refid="compositor_8c_1a7fe0cf860d67bd9ee79c561a95adb1d5" kindref="member">weston_view_set_transform_parent()</ref>). A clip set in the root of the transformation inheritance tree will affect all views in the tree. A clip can be set only on the root view. Attempting to set a clip on view that has a transformation parent will fail. Assigning a parent to a view that has a clip set will cause the clip to be forgotten.</para>
<para>Because the clip mask is an axis-aligned rectangle, it poses restrictions on the additional transformations in the child views. These transformations may not rotate the coordinate axes, i.e., only translation and scaling are allowed. Violating this restriction causes the clipping to malfunction. Furthermore, using scaling may cause rounding errors in child clipping.</para>
<para>The clip mask rectangle is not automatically adjusted based on wl_surface.attach dx and dy arguments.</para>
<para>A clip mask rectangle can be set only if the compositor capability WESTON_CAP_VIEW_CLIP_MASK is present.</para>
<para>This function sets the clip mask rectangle and schedules a repaint for the view. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1750" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1825" bodyend="1851" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1750" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a7b5c79b554c9394f17b2d3a1fd7c5607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_set_mask_infinite</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_set_mask_infinite</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
<para>Remove the clip mask from a view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to remove the clip mask from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Removed the clip mask rectangle and schedules a repaint.</para>
<para><simplesect kind="see"><para><ref refid="compositor_8c_1a8b2efecffa6f4d76ea628be8363723d1" kindref="member">weston_view_set_mask</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1754" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1862" bodyend="1867" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1754" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ab6d0b425ed3ea36224d7fe3f3c5d4667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_view_is_mapped</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_is_mapped</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1757" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1879" bodyend="1882" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1757" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a60b2b361cc447823985669f9743e8e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_schedule_repaint</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_schedule_repaint</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view to be repainted</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Marks the <ref refid="structoutput" kindref="compound">output(s)</ref> that the view is shown on as needing to be repainted. See <ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1760" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1706" bodyend="1713" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1760" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a13f5eb8c585d0bd1598d04ce4b318e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_surface_is_mapped</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_is_mapped</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1763" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1965" bodyend="1968" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1763" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ab9e73efa632b2b2aa47c1b460f08e16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_set_size</definition>
        <argsstring>(struct weston_surface *surface, int32_t width, int32_t height)</argsstring>
        <name>weston_surface_set_size</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1766" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1986" bodyend="1991" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1766" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a37abee2fc874d8a6394731696eb5be5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_damage</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_damage</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>XXX: This function does it the wrong way. </para>
        </briefdescription>
        <detaileddescription>
<para>surface-&gt;damage is the damage from the client, and causes <ref refid="compositor_8c_1a1a8cc3ae582c32975439217ea082b321" kindref="member">surface_flush_damage()</ref> to copy pixels. No window management action can cause damage to the client-provided content, warranting re-upload!</para>
<para>Instead of surface-&gt;damage, this function should record the damage with all the views for this surface to avoid extraneous texture uploads. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1770" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1726" bodyend="1733" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1770" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a3a8dd59c945611948e04e68ba09248d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_damage_below</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_damage_below</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
<para>Inflict damage on the plane where the view is visible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The view that causes the damage.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If the view is currently on a plane (including the primary plane), take the view&apos;s boundingbox, subtract all the opaque views that cover it, and add the remaining region as damage to the plane. This corresponds to the damage inflicted to the plane if this view disappeared.</para>
<para>A repaint is scheduled for this view.</para>
<para>The region of all opaque views covering this view is stored in <ref refid="structweston__view_1a7f10ad4288de845f3f42609bdf617416" kindref="member">weston_view::clip</ref> and updated by <ref refid="compositor_8c_1acb03c4841e0548b73c4c656ba2e497cf" kindref="member">view_accumulate_damage()</ref> during <ref refid="compositor_8c_1a2867191b08eb96f9f930169435b3fc91" kindref="member">weston_output_repaint()</ref>. Specifically, that region matches the scenegraph as it was last painted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1773" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="1044" bodyend="1056" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1773" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1af34d4b676e7ce4e41a963cd0b41c6dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_unmap</definition>
        <argsstring>(struct weston_view *view)</argsstring>
        <name>weston_view_unmap</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1776" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2136" bodyend="2169" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1776" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a80d606617df1553ec673787ebcfa2ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_unmap</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_unmap</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1779" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2172" bodyend="2180" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1779" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a8868325c450a7c04cd3e1cfec22b7104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
        <definition>struct weston_surface* weston_surface_get_main_surface</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_get_main_surface</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1782" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4184" bodyend="4192" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1782" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a77ddbc1401698987792d00d6e7e3407d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_surface_set_role</definition>
        <argsstring>(struct weston_surface *surface, const char *role_name, struct wl_resource *error_resource, uint32_t error_code)</argsstring>
        <name>weston_surface_set_role</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>role_name</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>error_resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1785" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4195" bodyend="4217" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1785" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a0ece5eb3f051d927072a77f531cd2a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* weston_surface_get_role</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_get_role</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1790" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4220" bodyend="4223" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1790" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a15415df8115e81631c8dae987b7ef40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_set_label_func</definition>
        <argsstring>(struct weston_surface *surface, int(*desc)(struct weston_surface *, char *, size_t))</argsstring>
        <name>weston_surface_set_label_func</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int(*)(struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *, char *, size_t)</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1793" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4226" bodyend="4233" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1793" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1af05cf4ebc640cb40915253335538b4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_get_content_size</definition>
        <argsstring>(struct weston_surface *surface, int *width, int *height)</argsstring>
        <name>weston_surface_get_content_size</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Get the size of surface contents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the width of raw contents. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the height of raw contents.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Retrieves the raw surface content size in pixels for the given surface. This is the whole content size in buffer pixels. If the surface has no content or the renderer does not implement this feature, zeroes are returned.</para>
<para>This function is used to determine the buffer size needed for a <ref refid="compositor_8c_1a353f17fe827e1c25b87e7e964e8d9892" kindref="member">weston_surface_copy_content()</ref> call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1798" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4250" bodyend="4262" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1798" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a4a639f0bac3d1fb3f0c464ea0e6f79e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__geometry" kindref="compound">weston_geometry</ref></type>
        <definition>struct weston_geometry weston_surface_get_bounding_box</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_get_bounding_box</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>Get the bounding box of a surface and its subsurfaces. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The bounding box relative to the surface origin. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1798" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4271" bodyend="4299" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1798" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a353f17fe827e1c25b87e7e964e8d9892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_surface_copy_content</definition>
        <argsstring>(struct weston_surface *surface, void *target, size_t size, int src_x, int src_y, int width, int height)</argsstring>
        <name>weston_surface_copy_content</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Copy surface contents to system memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>The surface to copy from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the target memory buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the target buffer in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_x</parametername>
</parameternamelist>
<parameterdescription>
<para>X location on contents to copy from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y location on contents to copy from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width in pixels of the area to copy. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height in pixels of the area to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success, -1 for failure.</para>
</simplesect>
Surface contents are maintained by the renderer. They can be in a reserved <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> or as a copy, e.g. a GL texture, or something else.</para>
<para>Surface contents are copied into memory pointed to by target, which has size bytes of space available. The target memory may be larger than needed, but being smaller returns an error. The extra bytes in target may or may not be written; their content is unspecified. Size must be large enough to hold the image.</para>
<para>The image in the target memory will be arranged in rows from top to bottom, and pixels on a row from left to right. The pixel format is PIXMAN_a8b8g8r8, 4 bytes per pixel, and stride is exactly width * 4.</para>
<para>Parameters src_x and src_y define the upper-left corner in buffer coordinates (pixels) to copy from. Parameters width and height define the size of the area to copy in pixels.</para>
<para>The rectangle defined by src_x, src_y, width, height must fit in the surface contents. Otherwise an error is returned.</para>
<para>Use weston_surface_get_content_size to determine the content size; the needed target buffer size and rectangle limits.</para>
<para>CURRENT IMPLEMENTATION RESTRICTIONS:<itemizedlist>
<listitem><para>the machine must be little-endian due to Pixman formats.</para>
</listitem></itemizedlist>
</para>
<para>NOTE: Pixman formats are premultiplied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1805" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="4343" bodyend="4371" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1805" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a31d4c4886f3f3d7e363a732225462faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
        <definition>struct weston_buffer* weston_buffer_from_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>weston_buffer_from_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1811" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2298" bodyend="2321" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1811" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga8e5847024d92d76171a144d15c5452da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_get_time</definition>
        <argsstring>(struct timespec *time)</argsstring>
        <name>weston_compositor_get_time</name>
        <param>
          <type>struct timespec *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>weston_compositor_get_time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1814" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2076" bodyend="2079" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1814" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga4f29f61ed5f73015798a14bdabb73dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_destroy</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_destroy</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
          <defname>compositor</defname>
        </param>
        <briefdescription>
<para>Destroys the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function cleans up the compositor state and then destroys it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1817" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7891" bodyend="7918" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1817" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga081445a62197fac7bcbeeab449261373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
        <definition>struct weston_compositor* weston_compositor_create</definition>
        <argsstring>(struct wl_display *display, struct weston_log_context *log_ctx, void *user_data, const struct weston_testsuite_data *test_data)</argsstring>
        <name>weston_compositor_create</name>
        <param>
          <type>struct wl_display *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__log__context" kindref="compound">weston_log_context</ref> *</type>
          <declname>log_ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>const struct <ref refid="structweston__testsuite__data" kindref="compound">weston_testsuite_data</ref> *</type>
          <declname>test_data</declname>
        </param>
        <briefdescription>
<para>Create the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para>This functions creates and initializes a compositor instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>display</parametername>
</parameternamelist>
<parameterdescription>
<para>The Wayland display to be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an object that can later be retrieved </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to weston_debug_compositor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>test_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional testsuite data, or NULL. using the <ref refid="group__compositor_1gaaecdc50a0ea2aebbf36a22db50e62385" kindref="member">weston_compositor_get_user_data</ref> function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The compositor instance on success or NULL on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1820" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7427" bodyend="7552" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1820" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaa92b2b7d2b73302bf143e1c3245045f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* weston_compositor_get_test_data</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_get_test_data</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
<para>Retrieve testsuite data from compositor. </para>
        </briefdescription>
        <detaileddescription>
<para>The testsuite data can be defined by the test suite of projects that uses libweston and given to the compositor at the moment of its creation. This function should be used when we need to retrieve the testsuite private data from the compositor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ec</parametername>
</parameternamelist>
<parameterdescription>
<para>The weston compositor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The testsuite data.</para>
</simplesect>
<simplesect kind="see"><para>weston_compositor_test_data_init </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1825" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7408" bodyend="7411" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1825" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a91193ce4a068dee9a1cf248a81a049bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_compositor_add_destroy_listener_once</definition>
        <argsstring>(struct weston_compositor *compositor, struct wl_listener *listener, wl_notify_func_t destroy_handler)</argsstring>
        <name>weston_compositor_add_destroy_listener_once</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>wl_notify_func_t</type>
          <declname>destroy_handler</declname>
        </param>
        <briefdescription>
<para>Add a compositor destroy listener only once. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor whose destroy to watch for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener struct to initialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destroy_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback when compositor is destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if listener is added, or false if there already is a listener with the given <computeroutput>destroy_handler</computeroutput>.</para>
</simplesect>
This function does nothing and returns false if the given callback function is already present in the <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> destroy callbacks list. Otherwise, this function initializes the given listener with the given callback pointer and adds it to the compositor&apos;s destroy callbacks list.</para>
<para>This can be used to ensure that plugin initialization is done only once in case the same plugin is loaded multiple times. If this function returns false, the plugin should be already initialized successfully.</para>
<para>All plugins should register a destroy listener for cleaning up. Note, that the plugin destruction order is not guaranteed: plugins that depend on other plugins must be able to be torn down in arbitrary order.</para>
<para><simplesect kind="see"><para><ref refid="group__compositor_1ga4f29f61ed5f73015798a14bdabb73dcc" kindref="member">weston_compositor_destroy</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1828" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7870" bodyend="7880" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1828" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga14405f588f9880d19e0764af6243e5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_load_backend</definition>
        <argsstring>(struct weston_compositor *compositor, enum weston_compositor_backend backend, struct weston_backend_config *config_base)</argsstring>
        <name>weston_compositor_load_backend</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036" kindref="member">weston_compositor_backend</ref></type>
          <declname>backend</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__backend__config" kindref="compound">weston_backend_config</ref> *</type>
          <declname>config_base</declname>
        </param>
        <briefdescription>
<para>Load a backend into a <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>A backend must be loaded to make a <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> work. A backend provides input and output capabilities, and determines the renderer to use.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>A compositor that has not had a backend loaded yet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the backend file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_base</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a backend-specific configuration structure&apos;s &apos;base&apos; member.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1842" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7973" bodyend="7998" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1842" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaf4e53253ff94f741ee4a04e7e52e302f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_exit</definition>
        <argsstring>(struct weston_compositor *ec)</argsstring>
        <name>weston_compositor_exit</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
          <defname>compositor</defname>
        </param>
        <briefdescription>
<para>Instruct the compositor to exit. </para>
        </briefdescription>
        <detaileddescription>
<para>This functions does not directly destroy the compositor object, it merely command it to start the tear down process. It is not guaranteed that the tear down will happen immediately.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor to tear down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1846" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7931" bodyend="7934" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1846" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaaecdc50a0ea2aebbf36a22db50e62385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* weston_compositor_get_user_data</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_get_user_data</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Return the user data stored in the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the user data pointer set with user_data parameter to the <ref refid="group__compositor_1ga081445a62197fac7bcbeeab449261373" kindref="member">weston_compositor_create</ref> function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1848" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7944" bodyend="7947" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1848" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga6299e93b80dfd70bd2c9c1603417f940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_exit_with_code</definition>
        <argsstring>(struct weston_compositor *compositor, int exit_code)</argsstring>
        <name>weston_compositor_exit_with_code</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exit_code</declname>
        </param>
        <briefdescription>
<para>weston_compositor_exit_with_code </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1850" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7589" bodyend="7596" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1850" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a28dd8782c78da83f36a046f2c24535e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_update_zoom</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_update_zoom</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1853" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/zoom.c" bodystart="125" bodyend="140" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1853" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1af307dccfaf6e7c83fe946f9760a630a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_activate_zoom</definition>
        <argsstring>(struct weston_output *output, struct weston_seat *seat)</argsstring>
        <name>weston_output_activate_zoom</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1855" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/zoom.c" bodystart="154" bodyend="167" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1855" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga76ab2121852bb7a085ac23abaac35bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_add_destroy_listener</definition>
        <argsstring>(struct weston_output *output, struct wl_listener *listener)</argsstring>
        <name>weston_output_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Add destroy callback for an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to watch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener to add. The <computeroutput>notify</computeroutput> member must be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The listener callback will be called when user destroys an output. This may be delayed by a backend in some cases. The main purpose of the listener is to allow hooking up custom data to the output. The custom data can be fetched via <ref refid="group__output_1ga0678ba130cd10a2c92720a2decfe7aeb" kindref="member">weston_output_get_destroy_listener()</ref> followed by container_of().</para>
<para>The <computeroutput>data</computeroutput> argument to the notify callback is the <ref refid="structweston__output" kindref="compound">weston_output</ref> being destroyed.</para>
<para><simplesect kind="note"><para>This is for the final destruction of an output, not when it gets disabled. If you want to keep track of enabled outputs, this is not it. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1858" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6587" bodyend="6591" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1858" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga0678ba130cd10a2c92720a2decfe7aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct wl_listener *</type>
        <definition>struct wl_listener* weston_output_get_destroy_listener</definition>
        <argsstring>(struct weston_output *output, wl_notify_func_t notify)</argsstring>
        <name>weston_output_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>wl_notify_func_t</type>
          <declname>notify</declname>
        </param>
        <briefdescription>
<para>Look up destroy listener for an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>The notify function used used for the added destroy listener. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The listener, or NULL if not found.</para>
</simplesect>
This looks up the previously added destroy listener struct based on the notify function it has. The listener can be used to access user data through <computeroutput>container_of()</computeroutput>.</para>
<para><simplesect kind="see"><para>wl_signal_get() <ref refid="group__output_1ga76ab2121852bb7a085ac23abaac35bdd" kindref="member">weston_output_add_destroy_listener()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1861" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6607" bodyend="6611" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1861" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a9f979dcc0b012fa585f4393d774fe053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_set_xkb_rule_names</definition>
        <argsstring>(struct weston_compositor *ec, struct xkb_rule_names *names)</argsstring>
        <name>weston_compositor_set_xkb_rule_names</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>struct xkb_rule_names *</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1864" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3095" bodyend="3116" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1864" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wlog_1gaae64561b04016b5b060befc9b5f5fb85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_log_set_handler</definition>
        <argsstring>(log_func_t log, log_func_t cont)</argsstring>
        <name>weston_log_set_handler</name>
        <param>
          <type><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref></type>
          <declname>log</declname>
        </param>
        <param>
          <type><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref></type>
          <declname>cont</declname>
        </param>
        <briefdescription>
<para>Install the log handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The given functions will be called to output text as passed to the <emphasis>weston_log</emphasis> and <emphasis>weston_log_continue</emphasis> functions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>log</parametername>
</parameternamelist>
<parameterdescription>
<para>The log function. This function will be called when <emphasis>weston_log</emphasis> is called, and should begin a new line, with user defined line headers, if any. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The continue log function. This function will be called when <emphasis>weston_log_continue</emphasis> is called, and should append its output to the current line, without any header or other content in between. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1875" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="94" bodyend="98" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1875" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_log</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>weston_log</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>printf() equivalent in weston compositor. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
*       .. note::
*
*               Needs :var:`log_handler` to be set-up!
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1877" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="120" bodyend="130" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1877" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wlog_1gaa0016cb4379eb39a57ac3be92f19ffa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_log_continue</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>weston_log_continue</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>weston_log_continue </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1880" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="147" bodyend="157" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1880" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1acbd7d685ea0272fe7e26ba5dba9d650f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_screenshooter_shoot</definition>
        <argsstring>(struct weston_output *output, struct weston_buffer *buffer, weston_screenshooter_done_func_t done, void *data)</argsstring>
        <name>weston_screenshooter_shoot</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__buffer" kindref="compound">weston_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a98320969b064cca70f7b47066c792cd6" kindref="member">weston_screenshooter_done_func_t</ref></type>
          <declname>done</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1892" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/screenshooter.c" bodystart="178" bodyend="215" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1892" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a45d3aadf969f0360b6c7db78a4dbcf02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__recorder" kindref="compound">weston_recorder</ref> *</type>
        <definition>struct weston_recorder* weston_recorder_start</definition>
        <argsstring>(struct weston_output *output, const char *filename)</argsstring>
        <name>weston_recorder_start</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1895" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/screenshooter.c" bodystart="469" bodyend="484" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1895" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1abf73149f28c462c3da37da5483140770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_recorder_stop</definition>
        <argsstring>(struct weston_recorder *recorder)</argsstring>
        <name>weston_recorder_stop</name>
        <param>
          <type>struct <ref refid="structweston__recorder" kindref="compound">weston_recorder</ref> *</type>
          <declname>recorder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1897" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/screenshooter.c" bodystart="487" bodyend="494" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1897" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aae530da10fd186078ae3c239c62a7df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_view_animation_destroy</definition>
        <argsstring>(struct weston_view_animation *animation)</argsstring>
        <name>weston_view_animation_destroy</name>
        <param>
          <type>struct <ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref> *</type>
          <declname>animation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1903" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="144" bodyend="155" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1903" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a017dec24b5d39eb7813245961905531a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref> *</type>
        <definition>struct weston_view_animation* weston_zoom_run</definition>
        <argsstring>(struct weston_view *view, float start, float stop, weston_view_animation_done_func_t done, void *data)</argsstring>
        <name>weston_zoom_run</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>start</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stop</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref></type>
          <declname>done</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1906" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="301" bodyend="320" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1906" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1add3af7fd8ec0e72c525157027954c3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref> *</type>
        <definition>struct weston_view_animation* weston_fade_run</definition>
        <argsstring>(struct weston_view *view, float start, float end, float k, weston_view_animation_done_func_t done, void *data)</argsstring>
        <name>weston_fade_run</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>start</declname>
        </param>
        <param>
          <type>float</type>
          <declname>end</declname>
        </param>
        <param>
          <type>float</type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref></type>
          <declname>done</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1910" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="334" bodyend="356" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1910" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ad076838d095a0a32752ae9bf13156632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref> *</type>
        <definition>struct weston_view_animation* weston_move_scale_run</definition>
        <argsstring>(struct weston_view *view, int dx, int dy, float start, float end, bool reverse, weston_view_animation_done_func_t done, void *data)</argsstring>
        <name>weston_move_scale_run</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>float</type>
          <declname>start</declname>
        </param>
        <param>
          <type>float</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reverse</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref></type>
          <declname>done</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1915" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="518" bodyend="524" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1915" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a861b34f14f178f47ad848c245b51d000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref> *</type>
        <definition>struct weston_view_animation* weston_move_run</definition>
        <argsstring>(struct weston_view *view, int dx, int dy, float start, float end, bool reverse, weston_view_animation_done_func_t done, void *data)</argsstring>
        <name>weston_move_run</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>float</type>
          <declname>start</declname>
        </param>
        <param>
          <type>float</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reverse</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref></type>
          <declname>done</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1920" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="527" bodyend="533" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1920" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a7b55afecab4117c47d43576fdc2e00d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_fade_update</definition>
        <argsstring>(struct weston_view_animation *fade, float target)</argsstring>
        <name>weston_fade_update</name>
        <param>
          <type>struct <ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref> *</type>
          <declname>fade</declname>
        </param>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1925" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="359" bodyend="363" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1925" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a9bff26c092c05eebcef5356986b0805d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref> *</type>
        <definition>struct weston_view_animation* weston_stable_fade_run</definition>
        <argsstring>(struct weston_view *front_view, float start, struct weston_view *back_view, float end, weston_view_animation_done_func_t done, void *data)</argsstring>
        <name>weston_stable_fade_run</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>front_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>start</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>back_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref></type>
          <declname>done</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1928" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="385" bodyend="407" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1928" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a80daa8edc72836f513e9f02e7f7a18a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref> *</type>
        <definition>struct weston_view_animation* weston_slide_run</definition>
        <argsstring>(struct weston_view *view, float start, float stop, weston_view_animation_done_func_t done, void *data)</argsstring>
        <name>weston_slide_run</name>
        <param>
          <type>struct <ref refid="structweston__view" kindref="compound">weston_view</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>start</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stop</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref></type>
          <declname>done</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1933" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/animation.c" bodystart="422" bodyend="440" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1933" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a864f2297b36a4f94f96b8ba55869fe66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_set_color</definition>
        <argsstring>(struct weston_surface *surface, float red, float green, float blue, float alpha)</argsstring>
        <name>weston_surface_set_color</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>float</type>
          <declname>red</declname>
        </param>
        <param>
          <type>float</type>
          <declname>green</declname>
        </param>
        <param>
          <type>float</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1937" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="578" bodyend="583" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1937" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aa8175b2c6f8cd4cc3f3f6006ecf7acb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_surface_destroy</definition>
        <argsstring>(struct weston_surface *surface)</argsstring>
        <name>weston_surface_destroy</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1941" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="2221" bodyend="2262" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1941" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga3cae00e20c6451270741932f1330e64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_mode_switch_to_temporary</definition>
        <argsstring>(struct weston_output *output, struct weston_mode *mode, int32_t scale)</argsstring>
        <name>weston_output_mode_switch_to_temporary</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__mode" kindref="compound">weston_mode</ref> *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1944" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="284" bodyend="309" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1944" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga71e8b4c2d4a15c8d153b85f178d1006d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_mode_switch_to_native</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_mode_switch_to_native</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1948" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="247" bodyend="278" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1948" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ae820cf03dcc3048da9077549b0abb1c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_backend_init</definition>
        <argsstring>(struct weston_compositor *c, struct weston_backend_config *config_base)</argsstring>
        <name>weston_backend_init</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__backend__config" kindref="compound">weston_backend_config</ref> *</type>
          <declname>config_base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1951" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/backend-drm/drm.c" bodystart="3232" bodyend="3253" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1951" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a74564adc82a9dd5d5d450ccc29e2b773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_module_init</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_module_init</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1954" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1954" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a1cf9686b2a6a6764e8197fdbb473607f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* weston_load_module</definition>
        <argsstring>(const char *name, const char *entrypoint)</argsstring>
        <name>weston_load_module</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>entrypoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1957" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7800" bodyend="7844" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1957" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a1f6a9e6a6915ff39ee0f7dfca47bed95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t weston_module_path_from_env</definition>
        <argsstring>(const char *name, char *path, size_t path_len)</argsstring>
        <name>weston_module_path_from_env</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>path_len</declname>
        </param>
        <briefdescription>
<para>Attempts to find a module path from the module map specified in the environment. </para>
        </briefdescription>
        <detaileddescription>
<para>If found, writes the full path into the path variable.</para>
<para>The module map is a string in environment variable WESTON_MODULE_MAP, where each entry is of the form &quot;name=path&quot; and entries are separated by semicolons. Whitespace is significant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Where the path is written to if found. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocated bytes at <computeroutput>path</computeroutput> . </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the string written to path on success, or 0 if the module was not specified in the environment map or path_len was too small. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1960" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="7763" bodyend="7797" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1960" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a42a8b6c4a834f6f2d4a2a6bed2b203e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_parse_transform</definition>
        <argsstring>(const char *transform, uint32_t *out)</argsstring>
        <name>weston_parse_transform</name>
        <param>
          <type>const char *</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1963" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1963" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1aef7351622664de3e786581957a8ff121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* weston_transform_to_string</definition>
        <argsstring>(uint32_t output_transform)</argsstring>
        <name>weston_transform_to_string</name>
        <param>
          <type>uint32_t</type>
          <declname>output_transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1966" column="1" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1966" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a6986418ab4ad62064fab60802cedf99d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
        <definition>struct weston_keyboard* weston_seat_get_keyboard</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_get_keyboard</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
<para>Get a seat&apos;s keyboard pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The seat&apos;s keyboard pointer, or NULL if no keyboard is present</para>
</simplesect>
The keyboard pointer for a seat isn&apos;t freed when all keyboards are removed, so it should only be used when the seat&apos;s keyboard_device_count is greater than zero. This function does that test and only returns a pointer when a keyboard is present. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1969" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3489" bodyend="3498" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1969" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a19c472e9c28557a525fac4d8b783edab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__pointer" kindref="compound">weston_pointer</ref> *</type>
        <definition>struct weston_pointer* weston_seat_get_pointer</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_get_pointer</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
<para>Get a seat&apos;s pointer pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The seat&apos;s pointer pointer, or NULL if no pointer device is present</para>
</simplesect>
The pointer pointer for a seat isn&apos;t freed when all mice are removed, so it should only be used when the seat&apos;s pointer_device_count is greater than zero. This function does that test and only returns a pointer when a pointing device is present. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1972" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3511" bodyend="3520" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1972" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a4d586b87353ba3d18989739666a1f7dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__touch" kindref="compound">weston_touch</ref> *</type>
        <definition>struct weston_touch* weston_seat_get_touch</definition>
        <argsstring>(struct weston_seat *seat)</argsstring>
        <name>weston_seat_get_touch</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
<para>Get a seat&apos;s touch pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The seat&apos;s touch pointer, or NULL if no touch device is present</para>
</simplesect>
The touch pointer for a seat isn&apos;t freed when all touch devices are removed, so it should only be used when the seat&apos;s touch_device_count is greater than zero. This function does that test and only returns a pointer when a touch device is present. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1975" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3597" bodyend="3606" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1975" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a46e90691191fd2cdc9fab021d6238829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_seat_set_keyboard_focus</definition>
        <argsstring>(struct weston_seat *seat, struct weston_surface *surface)</argsstring>
        <name>weston_seat_set_keyboard_focus</name>
        <param>
          <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>Sets the keyboard focus to the given surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>the surface to focus on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seat</parametername>
</parameternamelist>
<parameterdescription>
<para>The seat to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1978" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="3614" bodyend="3633" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1978" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1adee16da18d2931849cb3581a3555f40e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_keyboard_send_keymap</definition>
        <argsstring>(struct weston_keyboard *kbd, struct wl_resource *resource)</argsstring>
        <name>weston_keyboard_send_keymap</name>
        <param>
          <type>struct <ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref> *</type>
          <declname>kbd</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1982" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/input.c" bodystart="2086" bodyend="2113" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1982" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gac6e898461759aedc521674d927c4f433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_load_xwayland</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_load_xwayland</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>weston_compositor_load_xwayland </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1986" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="8004" bodyend="8014" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1986" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gad0da27f9a2e98faf8aecf84704935440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_head_is_connected</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_is_connected</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Is the head currently connected? </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Connection status.</para>
</simplesect>
Returns true if the head is physically connected to a monitor, or in case of a nested backend returns true when there is a connection to the parent display server.</para>
<para>This is independent from the head being enabled.</para>
<para><simplesect kind="see"><para><ref refid="group__head_1ga8d49a887b440265b363a5075fefff343" kindref="member">weston_head_is_enabled</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1989" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5653" bodyend="5656" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1989" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga8d49a887b440265b363a5075fefff343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_head_is_enabled</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_is_enabled</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Is the head currently enabled? </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Video status.</para>
</simplesect>
Returns true if the head is currently transmitting a video stream.</para>
<para>This is independent of the head being connected.</para>
<para><simplesect kind="see"><para><ref refid="group__head_1gad0da27f9a2e98faf8aecf84704935440" kindref="member">weston_head_is_connected</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1992" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5671" bodyend="5677" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1992" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga8166b9178e0d63360ebe4bd1a3d9466b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_head_is_device_changed</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_is_device_changed</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Has the device information changed? </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the device information has changed since last reset.</para>
</simplesect>
The information about the connected display device, e.g. a monitor, may change without being disconnected in between. Changing information causes a call to the heads_changed hook.</para>
<para>The information includes make, model, serial number, physical size, and sub-pixel type. The connection status is also included.</para>
<para><simplesect kind="see"><para><ref refid="group__head_1ga4f891068162ad3c11b7c971dcf7087d6" kindref="member">weston_head_reset_device_changed</ref>, weston_compositor_set_heads_changed_cb </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1995" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5695" bodyend="5698" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1995" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gaf349968c812aa4496e3afd9e2a550ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_head_is_non_desktop</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_is_non_desktop</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Does the head represent a non-desktop display? </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the device is a non-desktop display.</para>
</simplesect>
Non-desktop heads are not attached to outputs by default. This stops weston from extending the desktop onto head mounted displays. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="1998" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5711" bodyend="5714" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="1998" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga4f891068162ad3c11b7c971dcf7087d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_reset_device_changed</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_reset_device_changed</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Acknowledge device information change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to acknowledge.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Clears the device changed flag on this head. When a compositor has processed device information, it should call this to be able to notice further changes.</para>
<para><simplesect kind="see"><para><ref refid="group__head_1ga8166b9178e0d63360ebe4bd1a3d9466b" kindref="member">weston_head_is_device_changed</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2001" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5728" bodyend="5731" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2001" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gadc2cacc63e1e08fa67962fd1379dd085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* weston_head_get_name</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_get_name</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Get the name of a head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The head&apos;s name, not NULL.</para>
</simplesect>
The name depends on the backend. The DRM backend uses connector names, other backends may use hardcoded names or user-given names. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2004" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5744" bodyend="5747" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2004" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gaa421449fe0fad20bece74a1359e9dea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
        <definition>struct weston_output* weston_head_get_output</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_get_output</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Get the output the head is attached to. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output the head is attached to, or NULL if detached. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2007" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5756" bodyend="5759" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2007" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga2be199d2caef16d084aa4aa56434f0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t weston_head_get_transform</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_get_transform</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Get the head&apos;s native transformation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The head&apos;s native transform, as a WL_OUTPUT_TRANSFORM_* value</para>
</simplesect>
A <ref refid="structweston__head" kindref="compound">weston_head</ref> may have a &apos;native&apos; transform provided by the backend. Examples include panels which are physically rotated, where the rotation is recorded and described as part of the system configuration. This call will return any known native transform for the head. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2010" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5774" bodyend="5777" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2010" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gac5cc5415250a9aa4f830af252b72a666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_detach</definition>
        <argsstring>(struct weston_head *head)</argsstring>
        <name>weston_head_detach</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Detach a head from its output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to detach.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
It is safe to detach a non-attached head.</para>
<para>If the head is attached to an enabled output and the output will be left with no heads, the output will be disabled.</para>
<para><simplesect kind="see"><para><ref refid="group__output_1gad86b73873e740780e6a1b4b7ad7b7e2b" kindref="member">weston_output_disable</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2013" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5342" bodyend="5373" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2013" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1gacb1d8713745a3e871acad1bdb129d720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_add_destroy_listener</definition>
        <argsstring>(struct weston_head *head, struct wl_listener *listener)</argsstring>
        <name>weston_head_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Add destroy callback for a head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to watch for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener to add. The <computeroutput>notify</computeroutput> member must be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Heads may get destroyed for various reasons by the backends. If a head is attached to an output, the compositor should listen for head destruction and reconfigure or destroy the output if necessary.</para>
<para>The destroy callbacks will be called on <ref refid="structweston__head" kindref="compound">weston_head</ref> destruction before any automatic detaching from an associated <ref refid="structweston__output" kindref="compound">weston_output</ref> and before any <ref refid="structweston__head" kindref="compound">weston_head</ref> information is lost.</para>
<para>The <computeroutput>data</computeroutput> argument to the notify callback is the <ref refid="structweston__head" kindref="compound">weston_head</ref> being destroyed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2016" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5798" bodyend="5802" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2016" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga523c746a6ae0d5457e5696b903c1508d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct wl_listener *</type>
        <definition>struct wl_listener* weston_head_get_destroy_listener</definition>
        <argsstring>(struct weston_head *head, wl_notify_func_t notify)</argsstring>
        <name>weston_head_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>wl_notify_func_t</type>
          <declname>notify</declname>
        </param>
        <briefdescription>
<para>Look up destroy listener for a head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>The notify function used used for the added destroy listener. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The listener, or NULL if not found.</para>
</simplesect>
This looks up the previously added destroy listener struct based on the notify function it has. The listener can be used to access user data through <computeroutput>container_of()</computeroutput>.</para>
<para><simplesect kind="see"><para>wl_signal_get() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2020" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5818" bodyend="5822" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2020" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1ad857cfe1c11b72be724989f35dbb2d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_head_set_content_protection_status</definition>
        <argsstring>(struct weston_head *head, enum weston_hdcp_protection status)</argsstring>
        <name>weston_head_set_content_protection_status</name>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>enum <ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2024" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5630" bodyend="5636" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2024" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga23fa98d05ed6886179c337931ae8a407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
        <definition>struct weston_head* weston_compositor_iterate_heads</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_head *iter)</argsstring>
        <name>weston_compositor_iterate_heads</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Iterate over available heads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator, or NULL for start. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next available head in the list.</para>
</simplesect>
Returns all available heads, regardless of being connected or enabled.</para>
<para>You can iterate over all heads as follows: <programlisting><codeline><highlight class="normal">struct<sp/>weston_head<sp/>*head<sp/>=<sp/>NULL;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">while<sp/>((head<sp/>=<sp/>weston_compositor_iterate_heads(compositor,<sp/>head)))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If you cause <computeroutput>iter</computeroutput> to be removed from the list, you cannot use it to continue iterating. Removing any other item is safe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2028" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5207" bodyend="5228" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2028" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gaaf5629bbdce30062a548444c7df59205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_add_heads_changed_listener</definition>
        <argsstring>(struct weston_compositor *compositor, struct wl_listener *listener)</argsstring>
        <name>weston_compositor_add_heads_changed_listener</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Adds a listener to be called when heads change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The listener notify function argument is <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref>.</para>
<para>The listener function will be called after heads are added or their connection status has changed. Several changes may be accumulated into a single call. The user is expected to iterate over the existing heads and check their statuses to find out what changed.</para>
<para><simplesect kind="see"><para><ref refid="group__compositor_1ga23fa98d05ed6886179c337931ae8a407" kindref="member">weston_compositor_iterate_heads</ref>, <ref refid="group__head_1gad0da27f9a2e98faf8aecf84704935440" kindref="member">weston_head_is_connected</ref>, <ref refid="group__head_1ga8d49a887b440265b363a5075fefff343" kindref="member">weston_head_is_enabled</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2032" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5178" bodyend="5182" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2032" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1ga2a4277e31b2ef83535ad5ace9cb61488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
        <definition>struct weston_output* weston_compositor_find_output_by_name</definition>
        <argsstring>(struct weston_compositor *compositor, const char *name)</argsstring>
        <name>weston_compositor_find_output_by_name</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Find an output by its given name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor to search in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The output name to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An existing output with the given name, or NULL if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2036" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6658" bodyend="6672" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2036" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gafee0c9120b6d2ffcdbf3d7cae5837975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
        <definition>struct weston_output* weston_compositor_create_output</definition>
        <argsstring>(struct weston_compositor *compositor, const char *name)</argsstring>
        <name>weston_compositor_create_output</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a named output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <computeroutput><ref refid="structweston__output" kindref="compound">weston_output</ref></computeroutput>, or NULL on failure.</para>
</simplesect>
This creates a new <ref refid="structweston__output" kindref="compound">weston_output</ref> that starts with no heads attached.</para>
<para>An output must be configured and it must have at least one head before it can be enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2040" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6688" bodyend="6700" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2040" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gadc6c426dbd044667d0d1f5ec7ec47ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
        <definition>struct weston_output* weston_compositor_create_output_with_head</definition>
        <argsstring>(struct weston_compositor *compositor, struct weston_head *head)</argsstring>
        <name>weston_compositor_create_output_with_head</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Create an output for an unused head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head to attach to the output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <computeroutput><ref refid="structweston__output" kindref="compound">weston_output</ref></computeroutput>, or NULL on failure.</para>
</simplesect>
This creates a new <ref refid="structweston__output" kindref="compound">weston_output</ref> that starts with the given head attached. The output inherits the name of the head. The head must not be already attached to another output.</para>
<para>An output must be configured before it can be enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2044" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6717" bodyend="6732" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2044" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga44dae09ae8bbdb6e8b6574e2bd407c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_destroy</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_destroy</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Destroy an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to destroy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The heads attached to the given output are detached and become unused again.</para>
<para>It is not necessary to explicitly destroy all outputs at compositor exit. <ref refid="group__compositor_1ga4f29f61ed5f73015798a14bdabb73dcc" kindref="member">weston_compositor_destroy()</ref> will automatically destroy any remaining outputs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2048" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6747" bodyend="6750" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2048" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga4e31a4f40995c5c80cca21775d15a15a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_attach_head</definition>
        <argsstring>(struct weston_output *output, struct weston_head *head)</argsstring>
        <name>weston_output_attach_head</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Attach a head to an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to attach to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head that is not yet attached. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure.</para>
</simplesect>
Attaches the given head to the output. All heads of an output are clones and share the resolution and timings.</para>
<para>Cloning heads this way uses less resources than creating an output for each head, but is not always possible due to environment, driver and hardware limitations.</para>
<para>On failure, the head remains unattached. Success of this function does not guarantee the output configuration is actually valid. The final checks are made on <ref refid="group__output_1ga80c54aa6f93b50afc216bb6ab9c97575" kindref="member">weston_output_enable()</ref> unless the output was already enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2051" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5296" bodyend="5327" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2051" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaabbac16a3b4715c19d3f69b521e89750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
        <definition>struct weston_head* weston_output_iterate_heads</definition>
        <argsstring>(struct weston_output *output, struct weston_head *iter)</argsstring>
        <name>weston_output_iterate_heads</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Iterate over attached heads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output whose heads to iterate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator, or NULL for start. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next attached head in the list.</para>
</simplesect>
Returns all heads currently attached to the output.</para>
<para>You can iterate over all heads as follows: <programlisting><codeline><highlight class="normal">struct<sp/>weston_head<sp/>*head<sp/>=<sp/>NULL;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">while<sp/>((head<sp/>=<sp/>weston_output_iterate_heads(output,<sp/>head)))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If you cause <computeroutput>iter</computeroutput> to be removed from the list, you cannot use it to continue iterating. Removing any other item is safe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2055" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5253" bodyend="5274" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2055" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaf55cb7ce87a56e9284c9860ed8e56cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_set_scale</definition>
        <argsstring>(struct weston_output *output, int32_t scale)</argsstring>
        <name>weston_output_set_scale</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Sets the output scale for a given output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that the scale is set for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale factor for the given output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
It only supports setting scale for an output that is not enabled and it can only be ran once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2059" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6162" bodyend="6172" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2059" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga11bebd6791c64fbf449251f74e3254bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_set_transform</definition>
        <argsstring>(struct weston_output *output, uint32_t transform)</argsstring>
        <name>weston_output_set_transform</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Sets the output transform for a given output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that the transform is set for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Transform value for the given output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Refer to wl_output::transform section located at <ulink url="https://wayland.freedesktop.org/docs/html/apa.html#protocol-spec-wl_output">https://wayland.freedesktop.org/docs/html/apa.html#protocol-spec-wl_output</ulink> for list of values that can be passed to this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2063" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6186" bodyend="6256" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2063" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga524b14e04e1478ab2ebe168b97cda322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weston_output_set_renderer_shadow_buffer</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_set_renderer_shadow_buffer</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Make the output use renderer shadow buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object to modify. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success, false if unsupported.</para>
</simplesect>
This can only be set on a disabled output object.</para>
<para>This is a temporary API to demonstrate WESTON_CAP_COLOR_OPS and allow testing related features. This will be superseded with color management API.</para>
<para>By default, a renderer is not using a shadow buffer of its own. Enabling a shadow buffer may enable other color related features.</para>
<para>Support depends on the chosen renderer and the graphics driver stack in use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2067" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6277" bodyend="6289" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2067" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaeb6468e3cabf74cba4030400f1907799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_init</definition>
        <argsstring>(struct weston_output *output, struct weston_compositor *compositor, const char *name)</argsstring>
        <name>weston_output_init</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="structweston__output" kindref="compound">weston_output</ref> object with enough data so an output can be configured. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name for the output (the string is copied).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Sets initial values for fields that are expected to be configured either by compositors or backends.</para>
<para>The name is used in logs, and can be used by compositors as a configuration identifier. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2070" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6308" bodyend="6332" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2070" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga1e29336a58385636b0d2c213eaddbac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_move</definition>
        <argsstring>(struct weston_output *output, int x, int y)</argsstring>
        <name>weston_output_move</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2075" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5967" bodyend="6011" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2075" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1ga80c54aa6f93b50afc216bb6ab9c97575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_output_enable</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_enable</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="structweston__output" kindref="compound">weston_output</ref> object that can be used by the compositor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that needs to be enabled. Must not be enabled already. Must have at least one head attached.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output coordinates are calculated and each new output is by default assigned to the right of previous one.</para>
<para>Sets up the transformation, zoom, and geometry of the output using the properties that need to be configured by the compositor.</para>
<para>Establishes a repaint timer for the output with the relevant display object&apos;s event loop. See <ref refid="compositor_8c_1acc76702d769aa1e1bffb35feded7fdd4" kindref="member">output_repaint_timer_handler()</ref>.</para>
<para>The output is assigned an ID. Weston can support up to 32 distinct outputs, with IDs numbered from 0-31; the compositor&apos;s output_id_pool is referred to and used to find the first available ID number, and then this ID is marked as used in output_id_pool.</para>
<para>The output is also assigned a Wayland global with the wl_output external interface.</para>
<para>Backend specific function is called to set up the output output.</para>
<para>Output is added to the compositor&apos;s output list</para>
<para>If the backend specific function fails, the <ref refid="structweston__output" kindref="compound">weston_output</ref> object is returned to a state it was before calling this function and is added to the compositor&apos;s pending_output_list in case it needs to be reconfigured or just so it can be destroyed at shutdown.</para>
<para>0 is returned on success, -1 on failure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2078" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6419" bodyend="6496" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2078" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gad86b73873e740780e6a1b4b7ad7b7e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_disable</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_disable</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Converts a <ref refid="structweston__output" kindref="compound">weston_output</ref> object to a pending output state, so it can be configured again or destroyed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> object that needs to be disabled.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Calls a backend specific function to disable an output, in case such function exists.</para>
<para>The backend specific disable function may choose to postpone the disabling by returning a negative value, in which case this function returns early. In that case the backend will guarantee the output will be disabled soon by the backend calling this function again. One must not attempt to re-enable the output until that happens.</para>
<para>Otherwise, if the output is being used by the compositor, it is removed from weston&apos;s output_list (see <ref refid="group__compositor_1ga794fc39a73df6dca432c753825ef2a1b" kindref="member">weston_compositor_remove_output()</ref>) and is returned to a state it was before <ref refid="group__output_1ga80c54aa6f93b50afc216bb6ab9c97575" kindref="member">weston_output_enable()</ref> was ran (see weston_output_enable_undo()).</para>
<para>See <ref refid="group__output_1gaeb6468e3cabf74cba4030400f1907799" kindref="member">weston_output_init()</ref> for more information on the state output is returned to.</para>
<para>If the output has never been enabled yet, this function can still be called to ensure that the output is actually turned off rather than left in the state it was discovered in. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2081" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6527" bodyend="6547" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2081" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compositor_1gae835d9bf9af471b041a588778a774db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_compositor_flush_heads_changed</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_flush_heads_changed</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Forces a synchronous call to heads_changed hook. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If there are new or changed heads, calls the heads_changed hook and returns after the hook returns. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2084" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6559" bodyend="6565" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2084" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__head_1ga09a7ecebc209197f9691e09a4c8a3c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
        <definition>struct weston_head* weston_head_from_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>weston_head_from_resource</name>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Get the backing object of wl_output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>A wl_output protocol object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The backing object (user data) of a wl_resource representing a wl_output protocol object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2087" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="5042" bodyend="5048" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2087" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__output_1gaf0756dca4563d0814c75d534c51a7ecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__head" kindref="compound">weston_head</ref> *</type>
        <definition>struct weston_head* weston_output_get_first_head</definition>
        <argsstring>(struct weston_output *output)</argsstring>
        <name>weston_output_get_first_head</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>When you need a head... </para>
        </briefdescription>
        <detaileddescription>
<para>This function is a hack, used until all code has been converted to become multi-head aware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> whose head to get. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The first head in the output&apos;s list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2090" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6763" bodyend="6770" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2090" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a25906f3a587580e6a9541dd7d301b626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_output_allow_protection</definition>
        <argsstring>(struct weston_output *output, bool allow_protection)</argsstring>
        <name>weston_output_allow_protection</name>
        <param>
          <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_protection</declname>
        </param>
        <briefdescription>
<para>Allow/Disallow content-protection support for an output. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the allow_protection member for an output. Setting of this field will allow the compositor to attempt content-protection for this output, for a backend that supports the content-protection protocol.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structweston__output" kindref="compound">weston_output</ref> for whom the content-protection is to be allowed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_protection</parametername>
</parameternamelist>
<parameterdescription>
<para>The bool value which is to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2093" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/compositor.c" bodystart="6783" bodyend="6787" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2093" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a3f374ba352726b65dd85c4c489e12a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_enable_touch_calibrator</definition>
        <argsstring>(struct weston_compositor *compositor, weston_touch_calibration_save_func save)</argsstring>
        <name>weston_compositor_enable_touch_calibrator</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type><ref refid="libweston_8h_1adf8c2bb0e5fc912dfdc0526930eb1cb8" kindref="member">weston_touch_calibration_save_func</ref></type>
          <declname>save</declname>
        </param>
        <briefdescription>
<para>Advertise touch_calibration support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor to init for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>save</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function for saving a new calibration, or NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, -1 on failure or if already enabled.</para>
</simplesect>
Calling this initializes the weston_touch_calibration protocol support, so that the interface will be advertised to clients. It is recommended to use some mechanism, e.g. wl_display_set_global_filter(), to restrict access to the interface.</para>
<para>There is no way to disable this once enabled.</para>
<para>If the save callback is NULL, a new calibration provided by a client will always be accepted. If the save callback is not NULL, it must return success for the new calibration to be accepted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2097" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/touch-calibration.c" bodystart="695" bodyend="716" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2097" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__log_1ga1a1c4adc72146aa351636b0456939d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__log__context" kindref="compound">weston_log_context</ref> *</type>
        <definition>struct weston_log_context* weston_log_ctx_create</definition>
        <argsstring>(void)</argsstring>
        <name>weston_log_ctx_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Creates <ref refid="structweston__log__context" kindref="compound">weston_log_context</ref> structure. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>NULL in case of failure, or a <ref refid="structweston__log__context" kindref="compound">weston_log_context</ref> object in case of success</para>
</simplesect>
<ref refid="structweston__log__context" kindref="compound">weston_log_context</ref> is a singleton for each <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2101" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/weston-log.c" bodystart="407" bodyend="420" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2101" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__log_1ga23d424d8976026793627d7736375e5f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_log_ctx_destroy</definition>
        <argsstring>(struct weston_log_context *log_ctx)</argsstring>
        <name>weston_log_ctx_destroy</name>
        <param>
          <type>struct <ref refid="structweston__log__context" kindref="compound">weston_log_context</ref> *</type>
          <declname>log_ctx</declname>
        </param>
        <briefdescription>
<para>Destroy <ref refid="structweston__log__context" kindref="compound">weston_log_context</ref> structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>log_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The log context to destroy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2104" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/weston-log.c" bodystart="430" bodyend="457" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2104" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="libweston_8h_1a551f7585a5eae5a200b0b142ccee16af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_compositor_enable_content_protection</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_compositor_enable_content_protection</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2107" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/content-protection.c" bodystart="325" bodyend="347" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2107" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__log_1gabfcf8e012be0cc478dd901ca59ad3721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_timeline_refresh_subscription_objects</definition>
        <argsstring>(struct weston_compositor *wc, void *object)</argsstring>
        <name>weston_timeline_refresh_subscription_objects</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>wc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Sets (on) the timeline subscription object refresh status. </para>
        </briefdescription>
        <detaileddescription>
<para>This function &apos;notifies&apos; timeline to print the object ID. The timeline code will reset it back, so there&apos;s no need for users to do anything about it.</para>
<para>Can be used from outside libweston.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wc</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>the underlying object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h" line="2110" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/timeline.c" bodystart="370" bodyend="382" declfile="/home/lzm/Wayland/weston/include/libweston/libweston.h" declline="2110" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2008-2011<sp/>Kristian<sp/>Høgsberg</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012,<sp/>2017,<sp/>2018<sp/>Collabora,<sp/>Ltd.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2017,<sp/>2018<sp/>General<sp/>Electric<sp/>Company</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WAYLAND_SYSTEM_COMPOSITOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_WAYLAND_SYSTEM_COMPOSITOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pixman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xkbcommon/xkbcommon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="libweston_8h_1aa8a0ead328e48baf473bcfc523b101a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WL_HIDE_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wayland-server.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="matrix_8h" kindref="compound">libweston/matrix.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zalloc_8h" kindref="compound">libweston/zalloc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structweston__geometry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__geometry" kindref="compound">weston_geometry</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structweston__geometry_1a2c570f3c1224e0ba6754546894ec3976" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__geometry_1a70c1074a2c225fec12152def41939a5d" kindref="member">x</ref>,<sp/><ref refid="structweston__geometry_1a2c570f3c1224e0ba6754546894ec3976" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="49" refid="structweston__geometry_1a477e159bfa1399930d7554834bca0578" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__geometry_1a477e159bfa1399930d7554834bca0578" kindref="member">width</ref>,<sp/><ref refid="structweston__geometry_1afaa61c8f08bcea5f12fec0bf38a91a86" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structweston__position" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__position" kindref="compound">weston_position</ref><sp/>{</highlight></codeline>
<codeline lineno="53" refid="structweston__position_1a5fe2a3c5d74c8aca5c156c3997234da9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__position_1ab67ef590596979ad925070f6122025b5" kindref="member">x</ref>,<sp/><ref refid="structweston__position_1a5fe2a3c5d74c8aca5c156c3997234da9" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structweston__size" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__size" kindref="compound">weston_size</ref><sp/>{</highlight></codeline>
<codeline lineno="57" refid="structweston__size_1a8391a5e0bcc37a97d1e9900cf5ffdb16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__size_1a8391a5e0bcc37a97d1e9900cf5ffdb16" kindref="member">width</ref>,<sp/><ref refid="structweston__size_1aa391e1b586b3f3ad2e63fbcd9a4cc868" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structweston__transform" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__transform" kindref="compound">weston_transform</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/><ref refid="structweston__transform_1a2e8c01aca6da1fca782c208b7a19486d" kindref="member">matrix</ref>;</highlight></codeline>
<codeline lineno="62" refid="structweston__transform_1a4ba9d647b2fd275411de8d7ba1568758" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__transform_1a4ba9d647b2fd275411de8d7ba1568758" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structweston__point2d__device__normalized" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__point2d__device__normalized" kindref="compound">weston_point2d_device_normalized</ref><sp/>{</highlight></codeline>
<codeline lineno="67" refid="structweston__point2d__device__normalized_1a8503d213a4e63a68535e54dd74104244" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__point2d__device__normalized_1a8503d213a4e63a68535e54dd74104244" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="68" refid="structweston__point2d__device__normalized_1a57c06a977cd8538e8b39325acd130831" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__point2d__device__normalized_1a57c06a977cd8538e8b39325acd130831" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">shell_surface;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">input_method;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__recorder" kindref="compound">weston_recorder</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ro_anonymous_file;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/>{</highlight></codeline>
<codeline lineno="84" refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fadfa99f109f19bae56c57599c09081702" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fadfa99f109f19bae56c57599c09081702" kindref="member">MODIFIER_CTRL</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>0),</highlight></codeline>
<codeline lineno="85" refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896faeef7f95cefee09607005b76d3e2e17e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896faeef7f95cefee09607005b76d3e2e17e8" kindref="member">MODIFIER_ALT</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>1),</highlight></codeline>
<codeline lineno="86" refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fac7c4489a6ddb2042ce3797b4c1cbd0ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fac7c4489a6ddb2042ce3797b4c1cbd0ba" kindref="member">MODIFIER_SUPER</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>2),</highlight></codeline>
<codeline lineno="87" refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fa8bb8f661e83a0141db816fb56bf53cd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896fa8bb8f661e83a0141db816fb56bf53cd7" kindref="member">MODIFIER_SHIFT</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>3),</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2" kindref="member">weston_keyboard_locks</ref><sp/>{</highlight></codeline>
<codeline lineno="91" refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a9f1a9cb0074a63bbf44b28556ffdcd81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a9f1a9cb0074a63bbf44b28556ffdcd81" kindref="member">WESTON_NUM_LOCK</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>0),</highlight></codeline>
<codeline lineno="92" refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a731c7508f6ac1f2b216178c302e61d6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a5bc6b2baefee2814835aef33be49d3c2a731c7508f6ac1f2b216178c302e61d6c" kindref="member">WESTON_CAPS_LOCK</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>1),</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0" kindref="member">weston_led</ref><sp/>{</highlight></codeline>
<codeline lineno="96" refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0afb4afcb3a2efeaeb0ae53455693553b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0afb4afcb3a2efeaeb0ae53455693553b8" kindref="member">LED_NUM_LOCK</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>0),</highlight></codeline>
<codeline lineno="97" refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0a9694f2f03b30c7081839f70a0546f0d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0a9694f2f03b30c7081839f70a0546f0d7" kindref="member">LED_CAPS_LOCK</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>1),</highlight></codeline>
<codeline lineno="98" refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0a31a8ab056a0c2227359d2e835614855f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0a31a8ab056a0c2227359d2e835614855f" kindref="member">LED_SCROLL_LOCK</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>2),</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96" kindref="member">weston_mode_aspect_ratio</ref><sp/>{</highlight></codeline>
<codeline lineno="106" refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96a7baf17017aad415e3497125b27294064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96a7baf17017aad415e3497125b27294064" kindref="member">WESTON_MODE_PIC_AR_NONE</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DRM_MODE_PICTURE_ASPECT_NONE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96af2edbf94b67d56286d831a356b4858e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96af2edbf94b67d56286d831a356b4858e2" kindref="member">WESTON_MODE_PIC_AR_4_3</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DRM_MODE_PICTURE_ASPECT_4_3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96a6346fdb14154c96e1c8bb8fa700b8ebd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96a6346fdb14154c96e1c8bb8fa700b8ebd" kindref="member">WESTON_MODE_PIC_AR_16_9</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DRM_MODE_PICTURE_ASPECT_16_9<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96abac2a18e65c2731951dbe13ef81da9ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96abac2a18e65c2731951dbe13ef81da9ad" kindref="member">WESTON_MODE_PIC_AR_64_27</ref><sp/>=<sp/>3,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DRM_MODE_PICTURE_ASPECT_64_27<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96ae67e8e6b36e781de4c357d3e856b95fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96ae67e8e6b36e781de4c357d3e856b95fd" kindref="member">WESTON_MODE_PIC_AR_256_135</ref><sp/>=<sp/>4,<sp/></highlight><highlight class="comment">/*<sp/>DRM_MODE_PICTURE_ASPECT_256_135*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208" kindref="member">weston_surface_protection_mode</ref><sp/>{</highlight></codeline>
<codeline lineno="114" refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208ab0feceb730258d0d17f95c9570f69934" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208ab0feceb730258d0d17f95c9570f69934" kindref="member">WESTON_SURFACE_PROTECTION_MODE_RELAXED</ref>,</highlight></codeline>
<codeline lineno="115" refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208aa5df7c201a76deb656b1e70da4268a54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208aa5df7c201a76deb656b1e70da4268a54" kindref="member">WESTON_SURFACE_PROTECTION_MODE_ENFORCED</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structweston__mode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>{</highlight></codeline>
<codeline lineno="119" refid="structweston__mode_1a3486025f88d5d3a8f8a4fb6a047fd16c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__mode_1a3486025f88d5d3a8f8a4fb6a047fd16c" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="120" refid="structweston__mode_1ad58860dcac4bd2c8221838cf89a16026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a6b527a10894693be26aa1d1816ddbc96" kindref="member">weston_mode_aspect_ratio</ref><sp/><ref refid="structweston__mode_1ad58860dcac4bd2c8221838cf89a16026" kindref="member">aspect_ratio</ref>;</highlight></codeline>
<codeline lineno="121" refid="structweston__mode_1aea5fb418a59b04da33ae6907309fea4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__mode_1aea5fb418a59b04da33ae6907309fea4e" kindref="member">width</ref>,<sp/><ref refid="structweston__mode_1a54e031b141b63ff2479b784bfc6f021e" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="122" refid="structweston__mode_1a604805ee46663105f12b659d88f80da8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__mode_1a604805ee46663105f12b659d88f80da8" kindref="member">refresh</ref>;</highlight></codeline>
<codeline lineno="123" refid="structweston__mode_1ae460dffbf935bde13927238b881ece22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__mode_1ae460dffbf935bde13927238b881ece22" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structweston__animation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__animation" kindref="compound">weston_animation</ref><sp/>{</highlight></codeline>
<codeline lineno="127" refid="structweston__animation_1a2a8f689eadd9303701877f6ffb15bd21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__animation_1a2a8f689eadd9303701877f6ffb15bd21" kindref="member">frame</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__animation" kindref="compound">weston_animation</ref><sp/>*animation,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time);</highlight></codeline>
<codeline lineno="130" refid="structweston__animation_1aa38ca8483d827a04f0c0acba60106e68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__animation_1aa38ca8483d827a04f0c0acba60106e68" kindref="member">frame_counter</ref>;</highlight></codeline>
<codeline lineno="131" refid="structweston__animation_1ace7abe63e193a23a60adc080d76e4e0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__animation_1ace7abe63e193a23a60adc080d76e4e0d" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135" refid="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a015bc74efebec6fe0962428502b50865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a015bc74efebec6fe0962428502b50865" kindref="member">WESTON_SPRING_OVERSHOOT</ref>,</highlight></codeline>
<codeline lineno="136" refid="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a39b3f37882e8adfbaf71188bf6b4be13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a39b3f37882e8adfbaf71188bf6b4be13" kindref="member">WESTON_SPRING_CLAMP</ref>,</highlight></codeline>
<codeline lineno="137" refid="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a5dd1eba6b07031885218cafb3481e65d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a39fca1837c5ce7715cbf571669660c13a5dd1eba6b07031885218cafb3481e65d" kindref="member">WESTON_SPRING_BOUNCE</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="structweston__spring" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__spring" kindref="compound">weston_spring</ref><sp/>{</highlight></codeline>
<codeline lineno="141" refid="structweston__spring_1af8bc656f1d55b00bc672526a35a53c6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__spring_1af8bc656f1d55b00bc672526a35a53c6c" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="142" refid="structweston__spring_1abd60549cc2e089dd0708d37cd74778c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__spring_1abd60549cc2e089dd0708d37cd74778c0" kindref="member">friction</ref>;</highlight></codeline>
<codeline lineno="143" refid="structweston__spring_1a98c80cbc0ad25df5f783096cfe7c55ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__spring_1a98c80cbc0ad25df5f783096cfe7c55ff" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="144" refid="structweston__spring_1aa07d1dd67a0e548a1f68f0547c9c8cab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__spring_1aa07d1dd67a0e548a1f68f0547c9c8cab" kindref="member">target</ref>;</highlight></codeline>
<codeline lineno="145" refid="structweston__spring_1a759cec4b5305967c72a81cace9ebe505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__spring_1a759cec4b5305967c72a81cace9ebe505" kindref="member">previous</ref>;</highlight></codeline>
<codeline lineno="146" refid="structweston__spring_1a21e199c9954b7cbc645c69bab8ab92d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__spring_1a21e199c9954b7cbc645c69bab8ab92d4" kindref="member">min</ref>,<sp/><ref refid="structweston__spring_1ab247ed744b676353b5a4ae5352f10268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="147" refid="structweston__spring_1ac82469582c592ecd7dc381688cdbaa63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="structweston__spring_1ac82469582c592ecd7dc381688cdbaa63" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="148" refid="structweston__spring_1afc597d2ff33e16a671a9194522fa4729" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__spring_1afc597d2ff33e16a671a9194522fa4729" kindref="member">clip</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="structweston__output__zoom" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output__zoom" kindref="compound">weston_output_zoom</ref><sp/>{</highlight></codeline>
<codeline lineno="152" refid="structweston__output__zoom_1aa29b32366d886e589f9a5a29f41b0fd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__output__zoom_1aa29b32366d886e589f9a5a29f41b0fd8" kindref="member">active</ref>;</highlight></codeline>
<codeline lineno="153" refid="structweston__output__zoom_1acac52afc42bab2ce34f3928accb28036" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__output__zoom_1acac52afc42bab2ce34f3928accb28036" kindref="member">increment</ref>;</highlight></codeline>
<codeline lineno="154" refid="structweston__output__zoom_1a3cf692adf6943027d1c1da4e22ccb854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__output__zoom_1a3cf692adf6943027d1c1da4e22ccb854" kindref="member">level</ref>;</highlight></codeline>
<codeline lineno="155" refid="structweston__output__zoom_1ad6fcf33600222d735eef19c8c9edf851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__output__zoom_1ad6fcf33600222d735eef19c8c9edf851" kindref="member">max_level</ref>;</highlight></codeline>
<codeline lineno="156" refid="structweston__output__zoom_1a731eb60a2d3a17b7c8e3d4b31097a6d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__output__zoom_1a693de72ab623721f8c76d123d7dd43b6" kindref="member">trans_x</ref>,<sp/><ref refid="structweston__output__zoom_1a731eb60a2d3a17b7c8e3d4b31097a6d9" kindref="member">trans_y</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158" refid="structweston__output__zoom_1a4c83f2f1c597488d8246b95a9ab0ea63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__output__zoom_1a7abec0509cf79de5ed4f5d02a10634f3" kindref="member">x</ref>,<sp/><ref refid="structweston__output__zoom_1a4c83f2f1c597488d8246b95a9ab0ea63" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__output__zoom_1a8112825dbfea12b0ebd57c731560ef6b" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="160" refid="structweston__output__zoom_1aa5c07b04771bc794b05cf053aea10c42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__output__zoom_1aa5c07b04771bc794b05cf053aea10c42" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="161" refid="structweston__output__zoom_1acd33d5999f5a8a781c93df7ffe0daca2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__animation" kindref="compound">weston_animation</ref><sp/><ref refid="structweston__output__zoom_1acd33d5999f5a8a781c93df7ffe0daca2" kindref="member">animation_z</ref>;</highlight></codeline>
<codeline lineno="162" refid="structweston__output__zoom_1a54f5cf86cb29804ef39f35ceec5cf307" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__spring" kindref="compound">weston_spring</ref><sp/><ref refid="structweston__output__zoom_1a54f5cf86cb29804ef39f35ceec5cf307" kindref="member">spring_z</ref>;</highlight></codeline>
<codeline lineno="163" refid="structweston__output__zoom_1ac5436a161bab2b9c4c47769f0887277c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__output__zoom_1ac5436a161bab2b9c4c47769f0887277c" kindref="member">motion_listener</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bit<sp/>compatible<sp/>with<sp/>drm<sp/>definitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3" kindref="member">dpms_enum</ref><sp/>{</highlight></codeline>
<codeline lineno="168" refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ad1b8db0fe08ab29dbaa695396cb1c637" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ad1b8db0fe08ab29dbaa695396cb1c637" kindref="member">WESTON_DPMS_ON</ref>,</highlight></codeline>
<codeline lineno="169" refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ab30cdef240c3801fe0f9fdfb7556de64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ab30cdef240c3801fe0f9fdfb7556de64" kindref="member">WESTON_DPMS_STANDBY</ref>,</highlight></codeline>
<codeline lineno="170" refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ad5c56b3cfaaa869cf1d468e08bcfaeba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3ad5c56b3cfaaa869cf1d468e08bcfaeba" kindref="member">WESTON_DPMS_SUSPEND</ref>,</highlight></codeline>
<codeline lineno="171" refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3a3f1ea2fc87236eee5e7a9dc3c00f80a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3a3f1ea2fc87236eee5e7a9dc3c00f80a3" kindref="member">WESTON_DPMS_OFF</ref></highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>enum<sp/>for<sp/>content<sp/>protection<sp/>requests/status</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>This<sp/>enum<sp/>represents<sp/>the<sp/>content<sp/>protection<sp/>requests<sp/>and<sp/>statuses<sp/>in</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>libweston<sp/>and<sp/>its<sp/>enum<sp/>values<sp/>correspond<sp/>to<sp/>those<sp/>of<sp/>&apos;type&apos;<sp/>enum<sp/>defined<sp/>in</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>weston-content-protection<sp/>protocol.<sp/>The<sp/>values<sp/>should<sp/>exactly<sp/>match<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>values<sp/>of<sp/>the<sp/>&apos;type&apos;<sp/>enum<sp/>of<sp/>the<sp/>protocol.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>{</highlight></codeline>
<codeline lineno="183" refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671ad11b3fce4f7baccb7a07a1107b23f92e" kindref="member">WESTON_HDCP_DISABLE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="184" refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671aa54e92658bde3e9e84397251be6b3f3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671aa54e92658bde3e9e84397251be6b3f3b" kindref="member">WESTON_HDCP_ENABLE_TYPE_0</ref>,</highlight></codeline>
<codeline lineno="185" refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671a56d9cf52a4b090964c1bfc82e71fa85d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671a56d9cf52a4b090964c1bfc82e71fa85d" kindref="member">WESTON_HDCP_ENABLE_TYPE_1</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal">};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="structweston__testsuite__quirks" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__testsuite__quirks" kindref="compound">weston_testsuite_quirks</ref><sp/>{</highlight></codeline>
<codeline lineno="198" refid="structweston__testsuite__quirks_1abd9e19201aea3d99f24f3a33bc1028bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__testsuite__quirks_1abd9e19201aea3d99f24f3a33bc1028bf" kindref="member">gl_force_full_upload</ref>;</highlight></codeline>
<codeline lineno="200" refid="structweston__testsuite__quirks_1abb3769af372946baa999893d45bba17f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__testsuite__quirks_1abb3769af372946baa999893d45bba17f" kindref="member">gl_force_full_redraw_of_shadow_fb</ref>;</highlight></codeline>
<codeline lineno="202" refid="structweston__testsuite__quirks_1a147daf91afc2c3ac1bc23e61528e4d65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__testsuite__quirks_1a147daf91afc2c3ac1bc23e61528e4d65" kindref="member">required_capabilities</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="structweston__testsuite__data" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__testsuite__data" kindref="compound">weston_testsuite_data</ref><sp/>{</highlight></codeline>
<codeline lineno="219" refid="structweston__testsuite__data_1a066dac74ee89927f8cd00628c892bc87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__testsuite__quirks" kindref="compound">weston_testsuite_quirks</ref><sp/><ref refid="structweston__testsuite__data_1a066dac74ee89927f8cd00628c892bc87" kindref="member">test_quirks</ref>;</highlight></codeline>
<codeline lineno="220" refid="structweston__testsuite__data_1a3e98fc4477e2625ad566232842b54621" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__testsuite__data_1a3e98fc4477e2625ad566232842b54621" kindref="member">test_private_data</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="structweston__head" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>{</highlight></codeline>
<codeline lineno="231" refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232" refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__head_1a40c0e0bfe85b46ef2524d79eb83de814" kindref="member">compositor_link</ref>;<sp/></highlight></codeline>
<codeline lineno="233" refid="structweston__head_1a24f85e976741d62ea2ad01bb7d4e671b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__head_1a24f85e976741d62ea2ad01bb7d4e671b" kindref="member">destroy_signal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structweston__head_1a3002c5effcf5bc308da21f7e0241449f" kindref="member">output</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236" refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__head_1a21f63bcc97ea0592e94f94c6881a0ed3" kindref="member">output_link</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238" refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__head_1ac912ed258c44087a6de1e427d456cff8" kindref="member">resource_list</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239" refid="structweston__head_1a9262a2db007977965902bd71329b844e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_global<sp/>*<ref refid="structweston__head_1a9262a2db007977965902bd71329b844e" kindref="member">global</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241" refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__head_1a89fb83812cd6a027bc71f0e8f942ae02" kindref="member">xdg_output_resource_list</ref>;<sp/></highlight></codeline>
<codeline lineno="243" refid="structweston__head_1a53134128fbaec8ce32777943668231fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__head_1a53134128fbaec8ce32777943668231fa" kindref="member">mm_width</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244" refid="structweston__head_1a70fd6da38752dc11c9d9b81bd07629c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__head_1a70fd6da38752dc11c9d9b81bd07629c1" kindref="member">mm_height</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__head_1aaa48b85942cc487d098dc5edac098d07" kindref="member">make</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250" refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__head_1a2263081a53cbe5d8b09345c30d8e2661" kindref="member">model</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251" refid="structweston__head_1ac0caa1ebd8d85bf3a03fe4570ecbfc7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__head_1ac0caa1ebd8d85bf3a03fe4570ecbfc7f" kindref="member">serial_number</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252" refid="structweston__head_1a563a35c7295b88be527aaaa9773e7d46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__head_1a563a35c7295b88be527aaaa9773e7d46" kindref="member">subpixel</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253" refid="structweston__head_1a11cd90ab6330f808b8950c8cfa53befc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__head_1a11cd90ab6330f808b8950c8cfa53befc" kindref="member">connection_internal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254" refid="structweston__head_1adc383408494e7e17f37d660c7ba6bcee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__head_1adc383408494e7e17f37d660c7ba6bcee" kindref="member">device_changed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256" refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257" refid="structweston__head_1a2cb7768507f3445476c99cefaac39a2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__head_1a2cb7768507f3445476c99cefaac39a2a" kindref="member">connected</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258" refid="structweston__head_1a52f05b229e95b48234fc5529960ff9b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__head_1a52f05b229e95b48234fc5529960ff9b3" kindref="member">non_desktop</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261" refid="structweston__head_1ac0b673f5c060a68425b275a8b96a17f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/><ref refid="structweston__head_1ac0b673f5c060a68425b275a8b96a17f7" kindref="member">current_protection</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="structweston__output" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>{</highlight></codeline>
<codeline lineno="272" refid="structweston__output_1ad8e8d31d5eee1e5c87e575dfb4500ac4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__output_1ad8e8d31d5eee1e5c87e575dfb4500ac4" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="273" refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="structweston__output_1afca201a4f73571f4bed4b4785c943e9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__output_1afca201a4f73571f4bed4b4785c943e9e" kindref="member">user_destroy_signal</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="structweston__output_1a1e358b2a5b19785563a66d42d3edbe24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__output_1a1e358b2a5b19785563a66d42d3edbe24" kindref="member">renderer_state</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__output_1ac8d0528e465546f7c9074c8319215986" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="281" refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="structweston__output_1acea6a9d4a753b4d98ac3fbe490d2fe40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/><ref refid="structweston__output_1acea6a9d4a753b4d98ac3fbe490d2fe40" kindref="member">matrix</ref>;</highlight></codeline>
<codeline lineno="286" refid="structweston__output_1a89411db9af0f147882101ec93d83b3d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/><ref refid="structinverse__matrix" kindref="compound">inverse_matrix</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="structweston__output_1ae30506bd81d42f2933171705b06cfa06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__output_1ae30506bd81d42f2933171705b06cfa06" kindref="member">animation_list</ref>;</highlight></codeline>
<codeline lineno="289" refid="structweston__output_1a146521cad558d810fb343a471bb529ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>,<sp/><ref refid="structweston__output_1afe369b7cd5025ff87f9b8ccfaa1b7a17" kindref="member">width</ref>,<sp/><ref refid="structweston__output_1acf6ea57c32856e783332467242a966a2" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="structweston__output_1add429bc3b54e446ab000811f998127d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__output_1add429bc3b54e446ab000811f998127d6" kindref="member">region</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="structweston__output_1ada314197892b3a0545bceee307b9d071" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1ada314197892b3a0545bceee307b9d071" kindref="member">repaint_needed</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="structweston__output_1a67353acd3c7cc96549a6d0202a23ff39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a67353acd3c7cc96549a6d0202a23ff39" kindref="member">repainted</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="303" refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a0acff3a4bf6464c9c7d9cb60e6f044b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a0acff3a4bf6464c9c7d9cb60e6f044b3" kindref="member">REPAINT_NOT_SCHEDULED</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="304" refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a3650939da1d9263a0feb674509245a6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a3650939da1d9263a0feb674509245a6b" kindref="member">REPAINT_BEGIN_FROM_IDLE</ref>,<sp/></highlight></codeline>
<codeline lineno="305" refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a0de68514c7d7cf88336cb15dbe694571" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a0de68514c7d7cf88336cb15dbe694571" kindref="member">REPAINT_SCHEDULED</ref>,<sp/></highlight></codeline>
<codeline lineno="306" refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a8b90d343f622f9496714a9c77a0cf052" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__output_1acb9d3b2a8f71f9087d318d86bcd74d61a8b90d343f622f9496714a9c77a0cf052" kindref="member">REPAINT_AWAITING_COMPLETION</ref>,<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__output_1ae42ba2d08f24f221619784ed84ae2a4a" kindref="member">repaint_status</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="structweston__output_1a41351b8e6c0a9151b4a5565dbe094d2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="structweston__output_1a41351b8e6c0a9151b4a5565dbe094d2c" kindref="member">next_repaint</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="structweston__output_1a1dbfe596eeeae4f629494dd69d50a2ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source<sp/>*<ref refid="structweston__output_1a1dbfe596eeeae4f629494dd69d50a2ce" kindref="member">idle_repaint_source</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="structweston__output_1a5ecda0aa0033b4c78e983c71f7254a50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output__zoom" kindref="compound">weston_output_zoom</ref><sp/><ref refid="structweston__output_1a5ecda0aa0033b4c78e983c71f7254a50" kindref="member">zoom</ref>;</highlight></codeline>
<codeline lineno="317" refid="structweston__output_1a0108041f2dfaf363894e5c316c3a477a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a0108041f2dfaf363894e5c316c3a477a" kindref="member">dirty</ref>;</highlight></codeline>
<codeline lineno="318" refid="structweston__output_1a3fc0cfea239ba4d26dbbd889e62afd2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__output_1a3fc0cfea239ba4d26dbbd889e62afd2c" kindref="member">frame_signal</ref>;</highlight></codeline>
<codeline lineno="319" refid="structweston__output_1a3da9a65d3fda52f421e6de253c519a40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__output_1a3da9a65d3fda52f421e6de253c519a40" kindref="member">destroy_signal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320" refid="structweston__output_1af6ac8466b35e4f97d36eff065411368c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a32fb4821d9062cbb00b15b25fcb6aaab" kindref="member">move_x</ref>,<sp/><ref refid="structweston__output_1af6ac8466b35e4f97d36eff065411368c" kindref="member">move_y</ref>;</highlight></codeline>
<codeline lineno="321" refid="structweston__output_1a296a2035e42eaf7be01e97bf5f537f5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="structweston__output_1a296a2035e42eaf7be01e97bf5f537f5f" kindref="member">frame_time</ref>;<sp/></highlight><highlight class="comment">/*<sp/>presentation<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="structweston__output_1a8647b48f5e639dba32ee46df2f4d8871" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structweston__output_1a8647b48f5e639dba32ee46df2f4d8871" kindref="member">msc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>media<sp/>stream<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="structweston__output_1a008bbaafcf0d0c81f74a0aad9ff50138" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a008bbaafcf0d0c81f74a0aad9ff50138" kindref="member">disable_planes</ref>;</highlight></codeline>
<codeline lineno="324" refid="structweston__output_1ae0f5f078de8a071c8113297f18e3daaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1ae0f5f078de8a071c8113297f18e3daaa" kindref="member">destroying</ref>;</highlight></codeline>
<codeline lineno="325" refid="structweston__output_1a07203f4d46cbd3acc20f22a9b6c9b045" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__output_1a07203f4d46cbd3acc20f22a9b6c9b045" kindref="member">feedback_list</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="structweston__output_1ab92c885dbfd2781d4ada5dbc568140f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__output_1ab92c885dbfd2781d4ada5dbc568140f8" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="328" refid="structweston__output_1a420099d90f2e0eeec1c5b7c7a0420f44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__output_1a420099d90f2e0eeec1c5b7c7a0420f44" kindref="member">native_scale</ref>;</highlight></codeline>
<codeline lineno="329" refid="structweston__output_1a4d26b4de084a8c72721f3fb3b0f10458" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__output_1a4d26b4de084a8c72721f3fb3b0f10458" kindref="member">current_scale</ref>;</highlight></codeline>
<codeline lineno="330" refid="structweston__output_1ad87ad7855bf9a680f6f5cc95af00c1f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__output_1ad87ad7855bf9a680f6f5cc95af00c1f9" kindref="member">original_scale</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="structweston__output_1a93b96e348f0d31f5b1f53b9fc3cabda9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>*<ref refid="structweston__output_1a93b96e348f0d31f5b1f53b9fc3cabda9" kindref="member">native_mode</ref>;</highlight></codeline>
<codeline lineno="333" refid="structweston__output_1a5cba830878798becf5f1f560bf4622a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>*<ref refid="structweston__output_1a5cba830878798becf5f1f560bf4622a0" kindref="member">current_mode</ref>;</highlight></codeline>
<codeline lineno="334" refid="structweston__output_1a59b5d9ec2467f5dbf426f80cfdc3d348" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>*<ref refid="structweston__output_1a59b5d9ec2467f5dbf426f80cfdc3d348" kindref="member">original_mode</ref>;</highlight></codeline>
<codeline lineno="335" refid="structweston__output_1a9755ea3ab6a71e19204bc5d93cc4302e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__output_1a9755ea3ab6a71e19204bc5d93cc4302e" kindref="member">mode_list</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="structweston__output_1aa320f80b827c124ff8906d24a69a136d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__output_1aa320f80b827c124ff8906d24a69a136d" kindref="member">head_list</ref>;<sp/></highlight></codeline>
<codeline lineno="339" refid="structweston__output_1a7c58197731c83165bd582ffdf82f37ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/><ref refid="structweston__output_1a7c58197731c83165bd582ffdf82f37ee" kindref="member">desired_protection</ref>;</highlight></codeline>
<codeline lineno="340" refid="structweston__output_1a6bf7de5473b1148e36edac2528fab08c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/><ref refid="structweston__output_1a6bf7de5473b1148e36edac2528fab08c" kindref="member">current_protection</ref>;</highlight></codeline>
<codeline lineno="341" refid="structweston__output_1af3619fc9841c5cbd0e9effd959611a2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1af3619fc9841c5cbd0e9effd959611a2a" kindref="member">allow_protection</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="structweston__output_1abb453bd4dcd3ec08055b912f25ad0d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__output_1abb453bd4dcd3ec08055b912f25ad0d51" kindref="member">start_repaint_loop</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="344" refid="structweston__output_1aefef32db410babf8a514e897b5ea8baa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__output_1aefef32db410babf8a514e897b5ea8baa" kindref="member">repaint</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*damage,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*repaint_data);</highlight></codeline>
<codeline lineno="347" refid="structweston__output_1ae606b4ccdfc6d9e8c024b7d7647e0ae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__output_1ae606b4ccdfc6d9e8c024b7d7647e0ae8" kindref="member">destroy</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="348" refid="structweston__output_1a7e75820dff95ffd653c1ff4cf705492c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__output_1a7e75820dff95ffd653c1ff4cf705492c" kindref="member">assign_planes</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*repaint_data);</highlight></codeline>
<codeline lineno="349" refid="structweston__output_1af7a22e01f22bc626bfbf92cf162bef25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__output_1af7a22e01f22bc626bfbf92cf162bef25" kindref="member">switch_mode</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>*mode);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>backlight<sp/>values<sp/>are<sp/>on<sp/>0-255<sp/>range,<sp/>where<sp/>higher<sp/>is<sp/>brighter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="structweston__output_1a469ec8fb066107f4b30cba88236ed55c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__output_1a469ec8fb066107f4b30cba88236ed55c" kindref="member">backlight_current</ref>;</highlight></codeline>
<codeline lineno="353" refid="structweston__output_1a9933301b01eebe540db079fff3c77a22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__output_1a9933301b01eebe540db079fff3c77a22" kindref="member">set_backlight</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="354" refid="structweston__output_1af3b1e6e6b05bb78c661cf49125ae8c4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__output_1af3b1e6e6b05bb78c661cf49125ae8c4a" kindref="member">set_dpms</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a745785f1c5cf40791e2b4c3ef11043c3" kindref="member">dpms_enum</ref><sp/>level);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="structweston__output_1ad772cabc2f4931aef823815cb7fd69bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structweston__output_1ad772cabc2f4931aef823815cb7fd69bf" kindref="member">gamma_size</ref>;</highlight></codeline>
<codeline lineno="357" refid="structweston__output_1ade06ffaacd17a65441234d720739431c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__output_1ade06ffaacd17a65441234d720739431c" kindref="member">set_gamma</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>size,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*r,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*g,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*b);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="structweston__output_1ac5845e364925e00ffec20d517d4371ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1ac5845e364925e00ffec20d517d4371ed" kindref="member">enabled</ref>;<sp/></highlight></codeline>
<codeline lineno="364" refid="structweston__output_1a081b529f1e5f884677bde123cc7a9de3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1a081b529f1e5f884677bde123cc7a9de3" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="structweston__output_1aa1aa27549630f07151fcb44256a236c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__output_1aa1aa27549630f07151fcb44256a236c7" kindref="member">use_renderer_shadow_buffer</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="structweston__output_1a0950ed99a1da7eeb14cb1b8895cd0cc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__output_1a0950ed99a1da7eeb14cb1b8895cd0cc9" kindref="member">enable</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="369" refid="structweston__output_1a7a906dc361664e6c588a4b9ce7dec543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__output_1a7a906dc361664e6c588a4b9ce7dec543" kindref="member">disable</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="structweston__output_1a5f7e8acdaa963970d5904e5ec2a07225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__output_1a5f7e8acdaa963970d5904e5ec2a07225" kindref="member">attach_head</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="structweston__output_1ad90821c281b75d416377eba546fe22f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__output_1ad90821c281b75d416377eba546fe22f1" kindref="member">detach_head</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="397"><highlight class="normal">};</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5" kindref="member">weston_pointer_motion_mask</ref><sp/>{</highlight></codeline>
<codeline lineno="400" refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a84c6d5ae05c3d2b0778a27a28751c181" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a84c6d5ae05c3d2b0778a27a28751c181" kindref="member">WESTON_POINTER_MOTION_ABS</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="401" refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a1a81e5f785512d1f1ea98b3f7774917d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a1a81e5f785512d1f1ea98b3f7774917d" kindref="member">WESTON_POINTER_MOTION_REL</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="402" refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5aca06cf4b91022f3c5e5087251ea462fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5aca06cf4b91022f3c5e5087251ea462fd" kindref="member">WESTON_POINTER_MOTION_REL_UNACCEL</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="403"><highlight class="normal">};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="structweston__pointer__motion__event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>{</highlight></codeline>
<codeline lineno="406" refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" kindref="member">mask</ref>;</highlight></codeline>
<codeline lineno="407" refid="structweston__pointer__motion__event_1a08ad4be38330bfda16deaeab8a8c1b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="structweston__pointer__motion__event_1a08ad4be38330bfda16deaeab8a8c1b52" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="408" refid="structweston__pointer__motion__event_1a23d2c4c1ecface14929b695adaf627f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event_1a23d2c4c1ecface14929b695adaf627f8" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="409" refid="structweston__pointer__motion__event_1a32457056c8b02f30fd4d60f95aa93f96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event_1a32457056c8b02f30fd4d60f95aa93f96" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="410" refid="structweston__pointer__motion__event_1a7ddfe78bd877f534fafb524c956c1d72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event_1a7ddfe78bd877f534fafb524c956c1d72" kindref="member">dx</ref>;</highlight></codeline>
<codeline lineno="411" refid="structweston__pointer__motion__event_1a97e8ba0b48f6d7a408c2f1399a95aa99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event_1a97e8ba0b48f6d7a408c2f1399a95aa99" kindref="member">dy</ref>;</highlight></codeline>
<codeline lineno="412" refid="structweston__pointer__motion__event_1aa134bf41d6992de2ce98fc6b48f8e6ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event_1aa134bf41d6992de2ce98fc6b48f8e6ee" kindref="member">dx_unaccel</ref>;</highlight></codeline>
<codeline lineno="413" refid="structweston__pointer__motion__event_1add43b7b0b234e508c854ef77a2d89888" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event_1add43b7b0b234e508c854ef77a2d89888" kindref="member">dy_unaccel</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="structweston__pointer__axis__event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>{</highlight></codeline>
<codeline lineno="417" refid="structweston__pointer__axis__event_1a921166b269c22fd0b3ec989397f5d88a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__pointer__axis__event_1a921166b269c22fd0b3ec989397f5d88a" kindref="member">axis</ref>;</highlight></codeline>
<codeline lineno="418" refid="structweston__pointer__axis__event_1a758413a513d73685c127fb41181e4320" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event_1a758413a513d73685c127fb41181e4320" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="419" refid="structweston__pointer__axis__event_1ac924f23da18ad3fc1276a5570ead8a04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event_1ac924f23da18ad3fc1276a5570ead8a04" kindref="member">has_discrete</ref>;</highlight></codeline>
<codeline lineno="420" refid="structweston__pointer__axis__event_1a535dfb7b1258d768f7e104996d8705b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__pointer__axis__event_1a535dfb7b1258d768f7e104996d8705b1" kindref="member">discrete</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">};</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref>;</highlight></codeline>
<codeline lineno="424" refid="structweston__pointer__grab__interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>{</highlight></codeline>
<codeline lineno="425" refid="structweston__pointer__grab__interface_1ae5e701221cb6f3fc5b9e447440a89016" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__pointer__grab__interface_1ae5e701221cb6f3fc5b9e447440a89016" kindref="member">focus</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="426" refid="structweston__pointer__grab__interface_1a8d8140967d2e5acada6461d3d935c7c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__pointer__grab__interface_1a8d8140967d2e5acada6461d3d935c7c8" kindref="member">motion</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event);</highlight></codeline>
<codeline lineno="429" refid="structweston__pointer__grab__interface_1a9a32e9a60be9a0f0ccf11e3693281f05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__pointer__grab__interface_1a9a32e9a60be9a0f0ccf11e3693281f05" kindref="member">button</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__pointer__grab__interface_1a9a32e9a60be9a0f0ccf11e3693281f05" kindref="member">button</ref>,<sp/>uint32_t<sp/>state);</highlight></codeline>
<codeline lineno="432" refid="structweston__pointer__grab__interface_1a36343d4c78ead9b326390889b09028c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__pointer__grab__interface_1a36343d4c78ead9b326390889b09028c6" kindref="member">axis</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event);</highlight></codeline>
<codeline lineno="435" refid="structweston__pointer__grab__interface_1aa88ccafb16227411850c6b92f71028ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__pointer__grab__interface_1aa88ccafb16227411850c6b92f71028ed" kindref="member">axis_source</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab,<sp/>uint32_t<sp/>source);</highlight></codeline>
<codeline lineno="436" refid="structweston__pointer__grab__interface_1a21ebb1d0a573d4d15015b068ecb718c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__pointer__grab__interface_1a21ebb1d0a573d4d15015b068ecb718c8" kindref="member">frame</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="437" refid="structweston__pointer__grab__interface_1ac9ce42c25c51bba7d6a8b98bcc549ef8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__pointer__grab__interface_1ac9ce42c25c51bba7d6a8b98bcc549ef8" kindref="member">cancel</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">};</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="structweston__pointer__grab" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>{</highlight></codeline>
<codeline lineno="441" refid="structweston__pointer__grab_1a4e8a8a94bcef315f44b2039fe44549ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>*<ref refid="structweston__pointer__grab_1a4e8a8a94bcef315f44b2039fe44549ad" kindref="member">interface</ref>;</highlight></codeline>
<codeline lineno="442" refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structweston__pointer__grab_1aeb8ee963ea82935a2fd7af8d06a2331e" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">};</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref>;</highlight></codeline>
<codeline lineno="446" refid="structweston__keyboard__grab__interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab__interface" kindref="compound">weston_keyboard_grab_interface</ref><sp/>{</highlight></codeline>
<codeline lineno="447" refid="structweston__keyboard__grab__interface_1ab6d7de9f8e81b3339102b237cd94e86d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__keyboard__grab__interface_1ab6d7de9f8e81b3339102b237cd94e86d" kindref="member">key</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,<sp/>uint32_t<sp/><ref refid="structweston__keyboard__grab__interface_1ab6d7de9f8e81b3339102b237cd94e86d" kindref="member">key</ref>,<sp/>uint32_t<sp/>state);</highlight></codeline>
<codeline lineno="449" refid="structweston__keyboard__grab__interface_1a58f22270fa84b226a2a92e9a5c63e416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__keyboard__grab__interface_1a58f22270fa84b226a2a92e9a5c63e416" kindref="member">modifiers</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab,<sp/>uint32_t<sp/>serial,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_depressed,<sp/>uint32_t<sp/>mods_latched,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_locked,<sp/>uint32_t<sp/>group);</highlight></codeline>
<codeline lineno="452" refid="structweston__keyboard__grab__interface_1ac9903eebe2df0319090d75da5ae717cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__keyboard__grab__interface_1ac9903eebe2df0319090d75da5ae717cd" kindref="member">cancel</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="structweston__keyboard__grab" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>{</highlight></codeline>
<codeline lineno="456" refid="structweston__keyboard__grab_1ae15572385e255cd9150024bd63b10c87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab__interface" kindref="compound">weston_keyboard_grab_interface</ref><sp/>*<ref refid="structweston__keyboard__grab_1ae15572385e255cd9150024bd63b10c87" kindref="member">interface</ref>;</highlight></codeline>
<codeline lineno="457" refid="structweston__keyboard__grab_1a1c8e9bd02af467b4cf8f5d0425a62e6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structweston__keyboard__grab_1a1c8e9bd02af467b4cf8f5d0425a62e6c" kindref="member">keyboard</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">};</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref>;</highlight></codeline>
<codeline lineno="461" refid="structweston__touch__grab__interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab__interface" kindref="compound">weston_touch_grab_interface</ref><sp/>{</highlight></codeline>
<codeline lineno="462" refid="structweston__touch__grab__interface_1a8dbe2bb8ff5b283b195c04476f0420fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__touch__grab__interface_1a8dbe2bb8ff5b283b195c04476f0420fa" kindref="member">down</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sy);</highlight></codeline>
<codeline lineno="467" refid="structweston__touch__grab__interface_1aaad9f0eeb38396610edd0a632ab16a4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__touch__grab__interface_1aaad9f0eeb38396610edd0a632ab16a4d" kindref="member">up</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id);</highlight></codeline>
<codeline lineno="470" refid="structweston__touch__grab__interface_1a01822269eec6e6aecff6e0be775a05d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__touch__grab__interface_1a01822269eec6e6aecff6e0be775a05d0" kindref="member">motion</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sy);</highlight></codeline>
<codeline lineno="475" refid="structweston__touch__grab__interface_1a3402b7b6c02efdf44ef1f6e0e5a7068e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__touch__grab__interface_1a3402b7b6c02efdf44ef1f6e0e5a7068e" kindref="member">frame</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="476" refid="structweston__touch__grab__interface_1a94bcbcc0fe7656ae2ae551e049b56719" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__touch__grab__interface_1a94bcbcc0fe7656ae2ae551e049b56719" kindref="member">cancel</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="structweston__touch__grab" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>{</highlight></codeline>
<codeline lineno="480" refid="structweston__touch__grab_1a3eabeef9a5b7bb770fca3e57bade430e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab__interface" kindref="compound">weston_touch_grab_interface</ref><sp/>*<ref refid="structweston__touch__grab_1a3eabeef9a5b7bb770fca3e57bade430e" kindref="member">interface</ref>;</highlight></codeline>
<codeline lineno="481" refid="structweston__touch__grab_1acdda1d4990fa2766f8022ef1cc41e0d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structweston__touch__grab_1acdda1d4990fa2766f8022ef1cc41e0d4" kindref="member">touch</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="structweston__data__offer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__data__offer" kindref="compound">weston_data_offer</ref><sp/>{</highlight></codeline>
<codeline lineno="485" refid="structweston__data__offer_1a32d70c0608196dddff156c9b82634824" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__data__offer_1a32d70c0608196dddff156c9b82634824" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="486" refid="structweston__data__offer_1ae1f01fc3ee700bd1ee3bd25c2ed4e540" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>*<ref refid="structweston__data__offer_1ae1f01fc3ee700bd1ee3bd25c2ed4e540" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="487" refid="structweston__data__offer_1ae556b70f7491e1696fd908a712957acf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__data__offer_1ae556b70f7491e1696fd908a712957acf" kindref="member">source_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="488" refid="structweston__data__offer_1a65cc3e5770e805b8d03c14ea23f2d03a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__data__offer_1a65cc3e5770e805b8d03c14ea23f2d03a" kindref="member">dnd_actions</ref>;</highlight></codeline>
<codeline lineno="489" refid="structweston__data__offer_1a8725c6151a9824a5f2c4053c9e24d1f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_data_device_manager_dnd_action<sp/><ref refid="structweston__data__offer_1a8725c6151a9824a5f2c4053c9e24d1f5" kindref="member">preferred_dnd_action</ref>;</highlight></codeline>
<codeline lineno="490" refid="structweston__data__offer_1a77369e64c668b534407aa8220d127eca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__data__offer_1a77369e64c668b534407aa8220d127eca" kindref="member">in_ask</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">};</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="structweston__data__source" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>{</highlight></codeline>
<codeline lineno="494" refid="structweston__data__source_1ab007d6a6debd221e6dda5742fdd4b8e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__data__source_1ab007d6a6debd221e6dda5742fdd4b8e2" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="495" refid="structweston__data__source_1a3623787d7a11e747846ae5179d6f816f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__data__source_1a3623787d7a11e747846ae5179d6f816f" kindref="member">destroy_signal</ref>;</highlight></codeline>
<codeline lineno="496" refid="structweston__data__source_1a6d4815f549c63ffb787ad7b9a01ed4f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_array<sp/><ref refid="structweston__data__source_1a6d4815f549c63ffb787ad7b9a01ed4f1" kindref="member">mime_types</ref>;</highlight></codeline>
<codeline lineno="497" refid="structweston__data__source_1a3fea337b22d434efba110895209a80a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__data__offer" kindref="compound">weston_data_offer</ref><sp/>*<ref refid="structweston__data__source_1a3fea337b22d434efba110895209a80a2" kindref="member">offer</ref>;</highlight></codeline>
<codeline lineno="498" refid="structweston__data__source_1a5b3ed5d4a2a7457f15cd80a0602c7ef4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__data__source_1a5b3ed5d4a2a7457f15cd80a0602c7ef4" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="499" refid="structweston__data__source_1a38145fd2473cb6e16a191f09a87ee1a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__data__source_1a38145fd2473cb6e16a191f09a87ee1a6" kindref="member">accepted</ref>;</highlight></codeline>
<codeline lineno="500" refid="structweston__data__source_1aa386adf13261f4b86dd2ece6f05c74bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__data__source_1aa386adf13261f4b86dd2ece6f05c74bb" kindref="member">actions_set</ref>;</highlight></codeline>
<codeline lineno="501" refid="structweston__data__source_1a581d33eae2510bf1d5988a381d2612b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__data__source_1a581d33eae2510bf1d5988a381d2612b5" kindref="member">set_selection</ref>;</highlight></codeline>
<codeline lineno="502" refid="structweston__data__source_1afe960bcd56538e1d5d8b1efe88ba7204" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__data__source_1afe960bcd56538e1d5d8b1efe88ba7204" kindref="member">dnd_actions</ref>;</highlight></codeline>
<codeline lineno="503" refid="structweston__data__source_1a6b612c431a0bc992422abfe24b9161c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_data_device_manager_dnd_action<sp/><ref refid="structweston__data__source_1a6b612c431a0bc992422abfe24b9161c5" kindref="member">current_dnd_action</ref>;</highlight></codeline>
<codeline lineno="504" refid="structweston__data__source_1a21e35fa61819ea61854b94101faf8d39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_data_device_manager_dnd_action<sp/><ref refid="structweston__data__source_1a21e35fa61819ea61854b94101faf8d39" kindref="member">compositor_action</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="structweston__data__source_1a6e558827e0c61f10719fe29ca6b82e5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__data__source_1a6e558827e0c61f10719fe29ca6b82e5a" kindref="member">accept</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mime_type);</highlight></codeline>
<codeline lineno="508" refid="structweston__data__source_1a6ef8e0b4696b756d3c9eae99a2f91592" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__data__source_1a6ef8e0b4696b756d3c9eae99a2f91592" kindref="member">send</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mime_type,<sp/>int32_t<sp/>fd);</highlight></codeline>
<codeline lineno="510" refid="structweston__data__source_1a511b73075b7a85dbfd36e46b8f200da0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__data__source_1a511b73075b7a85dbfd36e46b8f200da0" kindref="member">cancel</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>*source);</highlight></codeline>
<codeline lineno="511"><highlight class="normal">};</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="structweston__pointer__client" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>{</highlight></codeline>
<codeline lineno="514" refid="structweston__pointer__client_1acf9bd559c9322da1f96425e74ed166e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__pointer__client_1acf9bd559c9322da1f96425e74ed166e8" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="515" refid="structweston__pointer__client_1ad89fcb7cb485b563de0cca91054a7650" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_client<sp/>*<ref refid="structweston__pointer__client_1ad89fcb7cb485b563de0cca91054a7650" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="516" refid="structweston__pointer__client_1a582de2b5e172f8c11188af511c8008ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__pointer__client_1a582de2b5e172f8c11188af511c8008ed" kindref="member">pointer_resources</ref>;</highlight></codeline>
<codeline lineno="517" refid="structweston__pointer__client_1ad68bdb2aa68277372a13a2d6e9a54ec7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__pointer__client_1ad68bdb2aa68277372a13a2d6e9a54ec7" kindref="member">relative_pointer_resources</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">};</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="structweston__pointer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>{</highlight></codeline>
<codeline lineno="521" refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="structweston__pointer_1adaff0333d6e57e1f34579e5d16db7d77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__pointer_1adaff0333d6e57e1f34579e5d16db7d77" kindref="member">pointer_clients</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="structweston__pointer_1a89c97621e56bd52d068d8d712760f5c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__pointer_1a89c97621e56bd52d068d8d712760f5c0" kindref="member">focus</ref>;</highlight></codeline>
<codeline lineno="526" refid="structweston__pointer_1ab41d614bd8246552091a2de5814335fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__client" kindref="compound">weston_pointer_client</ref><sp/>*<ref refid="structweston__pointer_1ab41d614bd8246552091a2de5814335fb" kindref="member">focus_client</ref>;</highlight></codeline>
<codeline lineno="527" refid="structweston__pointer_1a18585075167ab6be8420e4918814c4a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__pointer_1a18585075167ab6be8420e4918814c4a1" kindref="member">focus_serial</ref>;</highlight></codeline>
<codeline lineno="528" refid="structweston__pointer_1ac4cfba8c8f2d640abe6a5c97a7eaa351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__pointer_1ac4cfba8c8f2d640abe6a5c97a7eaa351" kindref="member">focus_view_listener</ref>;</highlight></codeline>
<codeline lineno="529" refid="structweston__pointer_1a1f26f70dd9310f621b257f1d80f3463d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__pointer_1a1f26f70dd9310f621b257f1d80f3463d" kindref="member">focus_resource_listener</ref>;</highlight></codeline>
<codeline lineno="530" refid="structweston__pointer_1ad0649cd1365eb73fd2d6f7a232de2c6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__pointer_1ad0649cd1365eb73fd2d6f7a232de2c6e" kindref="member">focus_signal</ref>;</highlight></codeline>
<codeline lineno="531" refid="structweston__pointer_1a03270d8638647da2f9202ccc67562a3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__pointer_1a03270d8638647da2f9202ccc67562a3b" kindref="member">motion_signal</ref>;</highlight></codeline>
<codeline lineno="532" refid="structweston__pointer_1a8ad269b44b122a1423176c0c9cce01a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__pointer_1a8ad269b44b122a1423176c0c9cce01a0" kindref="member">destroy_signal</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="structweston__pointer_1a19b1924e86ab64517c6cfb09b49282d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__pointer_1a19b1924e86ab64517c6cfb09b49282d6" kindref="member">sprite</ref>;</highlight></codeline>
<codeline lineno="535" refid="structweston__pointer_1a6aea257a25ec8b0b98c5e1dc46f0904d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__pointer_1a6aea257a25ec8b0b98c5e1dc46f0904d" kindref="member">sprite_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="536" refid="structweston__pointer_1abbf28ad39f3d5a54ca249887603fb4b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__pointer_1a4ffdf073f7a1dd3b09e5d539cc320814" kindref="member">hotspot_x</ref>,<sp/><ref refid="structweston__pointer_1abbf28ad39f3d5a54ca249887603fb4b4" kindref="member">hotspot_y</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="structweston__pointer_1a6b019df603fd1638e8d7d77f49d593cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*<ref refid="structweston__pointer_1a6b019df603fd1638e8d7d77f49d593cd" kindref="member">grab</ref>;</highlight></codeline>
<codeline lineno="539" refid="structweston__pointer_1a9588f0347f23c8b59f0d43aeb27b02bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/><ref refid="structweston__pointer_1a9588f0347f23c8b59f0d43aeb27b02bf" kindref="member">default_grab</ref>;</highlight></codeline>
<codeline lineno="540" refid="structweston__pointer_1a113f57e64c644854bf64ae67f81a29a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__pointer_1a7c6050793f7c5bde2ae55cf32d3080c3" kindref="member">grab_x</ref>,<sp/><ref refid="structweston__pointer_1a113f57e64c644854bf64ae67f81a29a0" kindref="member">grab_y</ref>;</highlight></codeline>
<codeline lineno="541" refid="structweston__pointer_1a091ad1563520d3916bd3837d341f3c66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__pointer_1a091ad1563520d3916bd3837d341f3c66" kindref="member">grab_button</ref>;</highlight></codeline>
<codeline lineno="542" refid="structweston__pointer_1affb52e1c1e2dfbffb0c997fe82900c9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__pointer_1affb52e1c1e2dfbffb0c997fe82900c9d" kindref="member">grab_serial</ref>;</highlight></codeline>
<codeline lineno="543" refid="structweston__pointer_1ad872f14bb97cc067dbf2a1134eb671f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="structweston__pointer_1ad872f14bb97cc067dbf2a1134eb671f4" kindref="member">grab_time</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__pointer_1a4ccc65f8aeed7be1020347f6e8dc6eff" kindref="member">x</ref>,<sp/><ref refid="structweston__pointer_1a7d5e278458b02b5a4138f2660cd1e4b6" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="546" refid="structweston__pointer_1a300ca0ec2b0800aab5ee6820aa8b8253" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__pointer_1afa0c8790e1c49588c94dfee747164837" kindref="member">sx</ref>,<sp/><ref refid="structweston__pointer_1a300ca0ec2b0800aab5ee6820aa8b8253" kindref="member">sy</ref>;</highlight></codeline>
<codeline lineno="547" refid="structweston__pointer_1af8690d2ca686d0bd0649cd839a47d163" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__pointer_1af8690d2ca686d0bd0649cd839a47d163" kindref="member">button_count</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="structweston__pointer_1aabb627cddff5df3fb8c4ab46ebc61534" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__pointer_1aabb627cddff5df3fb8c4ab46ebc61534" kindref="member">output_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="structweston__pointer_1a9426cc7aa3bf848adb5b84356e076e9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__pointer_1a9426cc7aa3bf848adb5b84356e076e9e" kindref="member">timestamps_list</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="structweston__touch__device__matrix" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device__matrix" kindref="compound">weston_touch_device_matrix</ref><sp/>{</highlight></codeline>
<codeline lineno="560" refid="structweston__touch__device__matrix_1a494c194bf83d977280f6b103992ab999" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__device__matrix_1a494c194bf83d977280f6b103992ab999" kindref="member">m</ref>[6];</highlight></codeline>
<codeline lineno="561"><highlight class="normal">};</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="structweston__touch__device__ops" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device__ops" kindref="compound">weston_touch_device_ops</ref><sp/>{</highlight></codeline>
<codeline lineno="568" refid="structweston__touch__device__ops_1a7267417007aca994c4b5a48b6ef479ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*(*get_output)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="572" refid="structweston__touch__device__ops_1a235062be7e3463069f33451c40019612" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*get_calibration_head_name)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="structweston__touch__device__ops_1a1a220c0b93c081ff0eed2ac4eb3b7750" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__touch__device__ops_1a1a220c0b93c081ff0eed2ac4eb3b7750" kindref="member">get_calibration</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device__matrix" kindref="compound">weston_touch_device_matrix</ref><sp/>*cal);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="579" refid="structweston__touch__device__ops_1ad8e27e65897d172dda6b8efd87ff379d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__touch__device__ops_1ad8e27e65897d172dda6b8efd87ff379d" kindref="member">set_calibration</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device__matrix" kindref="compound">weston_touch_device_matrix</ref><sp/>*cal);</highlight></codeline>
<codeline lineno="581"><highlight class="normal">};</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref><sp/>{</highlight></codeline>
<codeline lineno="585" refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4af4af74c2e7130d82e1efcbeb7aaa0637" kindref="member">WESTON_TOUCH_MODE_NORMAL</ref>,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a3cd899fbd23f7caeacbf986e7d2698b9" kindref="member">WESTON_TOUCH_MODE_PREP_CALIB</ref>,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4ae07632059e16d439ede2fefe2f87f740" kindref="member">WESTON_TOUCH_MODE_CALIB</ref>,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4a1a1d7fef5a649a1c124084b96e82f51b" kindref="member">WESTON_TOUCH_MODE_PREP_NORMAL</ref></highlight></codeline>
<codeline lineno="609"><highlight class="normal">};</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="structweston__touch__device" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>{</highlight></codeline>
<codeline lineno="613" refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__touch__device_1a564d1ffa839e5af734c6bd1fefddea48" kindref="member">syspath</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="615" refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structweston__touch__device_1a048bf477f217f41e3517c306b0c24434" kindref="member">aggregate</ref>;<sp/></highlight></codeline>
<codeline lineno="616" refid="structweston__touch__device_1a6d5ffdca54c5aeaa8db25a304db53312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__touch__device_1a6d5ffdca54c5aeaa8db25a304db53312" kindref="member">link</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617" refid="structweston__touch__device_1a42bd571f4039a1385649ad32a1df2e5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__touch__device_1a42bd571f4039a1385649ad32a1df2e5d" kindref="member">destroy_signal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="619" refid="structweston__touch__device_1a10891cbc85a29105be61bcf69ab33ad6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__touch__device_1a10891cbc85a29105be61bcf69ab33ad6" kindref="member">backend_data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="621" refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device__ops" kindref="compound">weston_touch_device_ops</ref><sp/>*<ref refid="structweston__touch__device_1af4c924321d4e20ec970f99967fb46bfc" kindref="member">ops</ref>;</highlight></codeline>
<codeline lineno="622" refid="structweston__touch__device_1a348deee4a4f9cb8a16c5868a7f482790" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device__matrix" kindref="compound">weston_touch_device_matrix</ref><sp/><ref refid="structweston__touch__device_1a348deee4a4f9cb8a16c5868a7f482790" kindref="member">saved_calibration</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="structweston__touch" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>{</highlight></codeline>
<codeline lineno="627" refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="structweston__touch_1a0ccd4a62b794a775dc160b8ce2938642" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__touch_1a0ccd4a62b794a775dc160b8ce2938642" kindref="member">device_list</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>weston_touch_device::link<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="structweston__touch_1ad62c593818cf695a7060bfb062e580c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__touch_1ad62c593818cf695a7060bfb062e580c2" kindref="member">resource_list</ref>;</highlight></codeline>
<codeline lineno="632" refid="structweston__touch_1a4365ee28323b4392e8b930607c645e3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__touch_1a4365ee28323b4392e8b930607c645e3e" kindref="member">focus_resource_list</ref>;</highlight></codeline>
<codeline lineno="633" refid="structweston__touch_1a2fffe6199890f7378fbdfa00a91f12d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__touch_1a2fffe6199890f7378fbdfa00a91f12d8" kindref="member">focus</ref>;</highlight></codeline>
<codeline lineno="634" refid="structweston__touch_1a26582d6b8d1ffc7a8c229ee8df93733b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__touch_1a26582d6b8d1ffc7a8c229ee8df93733b" kindref="member">focus_view_listener</ref>;</highlight></codeline>
<codeline lineno="635" refid="structweston__touch_1a0d66cdf24d226f522d92737a43efae5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__touch_1a0d66cdf24d226f522d92737a43efae5c" kindref="member">focus_resource_listener</ref>;</highlight></codeline>
<codeline lineno="636" refid="structweston__touch_1aa76d4d8852b8aaf759f122067e154362" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__touch_1aa76d4d8852b8aaf759f122067e154362" kindref="member">focus_serial</ref>;</highlight></codeline>
<codeline lineno="637" refid="structweston__touch_1a154c19643a3524e5a5f7daf553f03060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__touch_1a154c19643a3524e5a5f7daf553f03060" kindref="member">focus_signal</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="structweston__touch_1a5681da11639e5ca38823770cf63cebc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__touch_1a5681da11639e5ca38823770cf63cebc6" kindref="member">num_tp</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="structweston__touch_1adff18756078cb5e6dcfa08e5d853b5d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*<ref refid="structweston__touch_1adff18756078cb5e6dcfa08e5d853b5d6" kindref="member">grab</ref>;</highlight></codeline>
<codeline lineno="642" refid="structweston__touch_1a8134a960a5368ab37948f0b754041ab6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/><ref refid="structweston__touch_1a8134a960a5368ab37948f0b754041ab6" kindref="member">default_grab</ref>;</highlight></codeline>
<codeline lineno="643" refid="structweston__touch_1a6c8a6073c76cfc37288903d045030c98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__touch_1a6c8a6073c76cfc37288903d045030c98" kindref="member">grab_touch_id</ref>;</highlight></codeline>
<codeline lineno="644" refid="structweston__touch_1ad4bec3d9528b8120845fc51a343d8735" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__touch_1a30d2998a526db81cc25dbd18fae02cb0" kindref="member">grab_x</ref>,<sp/><ref refid="structweston__touch_1ad4bec3d9528b8120845fc51a343d8735" kindref="member">grab_y</ref>;</highlight></codeline>
<codeline lineno="645" refid="structweston__touch_1a111ef936cca502188c1f97806c269089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__touch_1a111ef936cca502188c1f97806c269089" kindref="member">grab_serial</ref>;</highlight></codeline>
<codeline lineno="646" refid="structweston__touch_1a8db487362ab941ac939e733abdef8a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="structweston__touch_1a8db487362ab941ac939e733abdef8a08" kindref="member">grab_time</ref>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="structweston__touch_1af5e61557eceee5e9db4f8144bc6f983b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__touch_1af5e61557eceee5e9db4f8144bc6f983b" kindref="member">timestamps_list</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal">};</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><ref refid="libweston_8h_1aa60e7771b5a23d6e81355f69f62123c8" kindref="member">weston_pointer_motion_to_abs</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*x,<sp/>wl_fixed_t<sp/>*y);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><ref refid="libweston_8h_1ab26fbd79ff4d88d30d6b79396677aa97" kindref="member">weston_pointer_send_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><ref refid="libweston_8h_1aa5739d335835aa75c34d497491d57ff7" kindref="member">weston_pointer_has_focus_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><ref refid="libweston_8h_1a1eefd0a32d4acd9e7adb4ba477a157dc" kindref="member">weston_pointer_send_button</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>button,<sp/>uint32_t<sp/>state_w);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><ref refid="libweston_8h_1ad395050e7ec12082c2ee18c9ff42dda2" kindref="member">weston_pointer_send_axis</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><ref refid="libweston_8h_1aa560e84f37484902cfb06bc4fece4f2d" kindref="member">weston_pointer_send_axis_source</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>source);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><ref refid="libweston_8h_1a2bb5b53363fe73ab8a6b0f52e5415ff3" kindref="member">weston_pointer_send_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><ref refid="libweston_8h_1a4f683d449ac87d60d5e0205d966917c0" kindref="member">weston_pointer_set_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>sx,<sp/>wl_fixed_t<sp/>sy);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><ref refid="libweston_8h_1a3796f149723a5e49d6b176837a50d093" kindref="member">weston_pointer_clear_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><ref refid="libweston_8h_1a1ba15fe33ad21e716157d11ef4b95bfc" kindref="member">weston_pointer_start_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><ref refid="libweston_8h_1ae5aa08a5ae051943a460449fac42b8a9" kindref="member">weston_pointer_end_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><ref refid="libweston_8h_1ab9f43265a9a88c5b2b3a1f23fdc6329b" kindref="member">weston_pointer_move</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>*event);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><ref refid="libweston_8h_1ac5c8f2d331758909aabe3ab0a320110a" kindref="member">weston_keyboard_set_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><ref refid="libweston_8h_1a2e7bde32b32ee8c47e5866d4b6859c57" kindref="member">weston_keyboard_start_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*device,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><ref refid="libweston_8h_1a8d1afdec8c569cf3fdbde5b1cd4b6513" kindref="member">weston_keyboard_end_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*<sp/>&apos;mask&apos;<sp/>and<sp/>&apos;value&apos;<sp/>should<sp/>be<sp/>a<sp/>bitwise<sp/>mask<sp/>of<sp/>one<sp/>or<sp/>more</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/>*<sp/>valued<sp/>of<sp/>the<sp/>weston_keyboard_locks<sp/>enum.</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><ref refid="libweston_8h_1a4be3758a0a5e28a2c83577c0ebd3fba9" kindref="member">weston_keyboard_set_locks</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><ref refid="libweston_8h_1a0c9aac811e3a283a2a6819403d86fd9a" kindref="member">weston_keyboard_send_key</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/>uint32_t<sp/>key,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_keyboard_key_state<sp/>state);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><ref refid="libweston_8h_1ab0649f15a4018a435162fe7d2bff1582" kindref="member">weston_keyboard_send_modifiers</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>mods_depressed,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_latched,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_locked,<sp/>uint32_t<sp/>group);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><ref refid="libweston_8h_1a8f5d2ab8262d54999fab8f84a4a87c4f" kindref="member">weston_touch_set_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><ref refid="libweston_8h_1a1b4054b056e841dca16cb8aaf85268c5" kindref="member">weston_touch_start_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch__grab" kindref="compound">weston_touch_grab</ref><sp/>*grab);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><ref refid="libweston_8h_1adc5de1147c1ce233bb09f113f8c7ba8d" kindref="member">weston_touch_end_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><ref refid="libweston_8h_1a1d70791ddcb4629a7846232e26d4fa68" kindref="member">weston_touch_send_down</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,<sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><ref refid="libweston_8h_1ae22c7a42c191767f1151fe6d01d56738" kindref="member">weston_touch_send_up</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><ref refid="libweston_8h_1a64f6ad901561897ff571a30c85bd20b9" kindref="member">weston_touch_send_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>touch_id,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><ref refid="libweston_8h_1a4af7b368ba26d19f767eb08aedf7d5de" kindref="member">weston_touch_send_frame</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><ref refid="libweston_8h_1a8ddb6f9ae194b2f77f67640a46008b67" kindref="member">weston_seat_set_selection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>*source,<sp/>uint32_t<sp/>serial);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><ref refid="libweston_8h_1aaeb12cfa20c836a2309a96c4fbbd78cf" kindref="member">weston_pointer_start_drag</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*icon,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="748" refid="structweston__xkb__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>{</highlight></codeline>
<codeline lineno="749" refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xkb_keymap<sp/>*<ref refid="structweston__xkb__info_1af504d14355a377b088ad4d32054b1d0f" kindref="member">keymap</ref>;</highlight></codeline>
<codeline lineno="750" refid="structweston__xkb__info_1a36fe2ba7b81f3d509533f1ef70784d70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ro_anonymous_file<sp/>*<ref refid="structweston__xkb__info_1a36fe2ba7b81f3d509533f1ef70784d70" kindref="member">keymap_rofile</ref>;</highlight></codeline>
<codeline lineno="751" refid="structweston__xkb__info_1a77faf944e9f66cbfc68745fa8b4353e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__xkb__info_1a77faf944e9f66cbfc68745fa8b4353e8" kindref="member">ref_count</ref>;</highlight></codeline>
<codeline lineno="752" refid="structweston__xkb__info_1a20c92d2eab0f17a1a91abfdfaca354a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_index_t<sp/><ref refid="structweston__xkb__info_1a20c92d2eab0f17a1a91abfdfaca354a7" kindref="member">shift_mod</ref>;</highlight></codeline>
<codeline lineno="753" refid="structweston__xkb__info_1a272311950ec6e63fbb89a108f44e2f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_index_t<sp/><ref refid="structweston__xkb__info_1a272311950ec6e63fbb89a108f44e2f27" kindref="member">caps_mod</ref>;</highlight></codeline>
<codeline lineno="754" refid="structweston__xkb__info_1aa84cbf49813a2ecede5751c3df3b8752" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_index_t<sp/><ref refid="structweston__xkb__info_1aa84cbf49813a2ecede5751c3df3b8752" kindref="member">ctrl_mod</ref>;</highlight></codeline>
<codeline lineno="755" refid="structweston__xkb__info_1a4d4ab9033a300ab5a8785c4c266cc951" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_index_t<sp/><ref refid="structweston__xkb__info_1a4d4ab9033a300ab5a8785c4c266cc951" kindref="member">alt_mod</ref>;</highlight></codeline>
<codeline lineno="756" refid="structweston__xkb__info_1a381a40f2f682b0732f2e4e7a06718011" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_index_t<sp/><ref refid="structweston__xkb__info_1a381a40f2f682b0732f2e4e7a06718011" kindref="member">mod2_mod</ref>;</highlight></codeline>
<codeline lineno="757" refid="structweston__xkb__info_1af4136491459d7f15288082b6d9554f7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_index_t<sp/><ref refid="structweston__xkb__info_1af4136491459d7f15288082b6d9554f7b" kindref="member">mod3_mod</ref>;</highlight></codeline>
<codeline lineno="758" refid="structweston__xkb__info_1acb0f8be28da3f61619135771f4c49ca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_index_t<sp/><ref refid="structweston__xkb__info_1acb0f8be28da3f61619135771f4c49ca9" kindref="member">super_mod</ref>;</highlight></codeline>
<codeline lineno="759" refid="structweston__xkb__info_1aa3726d817052f5bee17722ee8b99b0ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_mod_index_t<sp/><ref refid="structweston__xkb__info_1aa3726d817052f5bee17722ee8b99b0ea" kindref="member">mod5_mod</ref>;</highlight></codeline>
<codeline lineno="760" refid="structweston__xkb__info_1adf643f03c988cbe298aa7caaad2cff79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_led_index_t<sp/><ref refid="structweston__xkb__info_1adf643f03c988cbe298aa7caaad2cff79" kindref="member">num_led</ref>;</highlight></codeline>
<codeline lineno="761" refid="structweston__xkb__info_1a2f7d62a1e3f89a9ae7ad1752a484c95c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_led_index_t<sp/><ref refid="structweston__xkb__info_1a2f7d62a1e3f89a9ae7ad1752a484c95c" kindref="member">caps_led</ref>;</highlight></codeline>
<codeline lineno="762" refid="structweston__xkb__info_1ab90ebf57958243471257fb1560d8f44e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_led_index_t<sp/><ref refid="structweston__xkb__info_1ab90ebf57958243471257fb1560d8f44e" kindref="member">scroll_led</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">};</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="structweston__keyboard" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>{</highlight></codeline>
<codeline lineno="766" refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="structweston__keyboard_1a2560db901791f7186b42471cfa630814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__keyboard_1a2560db901791f7186b42471cfa630814" kindref="member">resource_list</ref>;</highlight></codeline>
<codeline lineno="769" refid="structweston__keyboard_1a4112e0e3411e7cdf45bd1a3c902f7d50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__keyboard_1a4112e0e3411e7cdf45bd1a3c902f7d50" kindref="member">focus_resource_list</ref>;</highlight></codeline>
<codeline lineno="770" refid="structweston__keyboard_1a30ca19c1cfbbf58e0c50e26a28685d32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__keyboard_1a30ca19c1cfbbf58e0c50e26a28685d32" kindref="member">focus</ref>;</highlight></codeline>
<codeline lineno="771" refid="structweston__keyboard_1af22040d6ed2f7a292561f077f6b0a42a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__keyboard_1af22040d6ed2f7a292561f077f6b0a42a" kindref="member">focus_resource_listener</ref>;</highlight></codeline>
<codeline lineno="772" refid="structweston__keyboard_1a9e4fed96be2568015794857493844389" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__keyboard_1a9e4fed96be2568015794857493844389" kindref="member">focus_serial</ref>;</highlight></codeline>
<codeline lineno="773" refid="structweston__keyboard_1aca1a1b91c47ec0127d22f6708332c945" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__keyboard_1aca1a1b91c47ec0127d22f6708332c945" kindref="member">focus_signal</ref>;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="structweston__keyboard_1ab23f78b769b70eae4bf6d55bdf8e9be6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/>*<ref refid="structweston__keyboard_1ab23f78b769b70eae4bf6d55bdf8e9be6" kindref="member">grab</ref>;</highlight></codeline>
<codeline lineno="776" refid="structweston__keyboard_1aeba0497141894976554d6eee4d785594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/><ref refid="structweston__keyboard_1aeba0497141894976554d6eee4d785594" kindref="member">default_grab</ref>;</highlight></codeline>
<codeline lineno="777" refid="structweston__keyboard_1a84b51785586e6124a918fcdd5ea0cf16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__keyboard_1a84b51785586e6124a918fcdd5ea0cf16" kindref="member">grab_key</ref>;</highlight></codeline>
<codeline lineno="778" refid="structweston__keyboard_1a1b5b5aa6f3e8ae2d6db2d117cfc1c19f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__keyboard_1a1b5b5aa6f3e8ae2d6db2d117cfc1c19f" kindref="member">grab_serial</ref>;</highlight></codeline>
<codeline lineno="779" refid="structweston__keyboard_1ae8c7d7b1bf8a2bb6ca0cf0b68909306c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="structweston__keyboard_1ae8c7d7b1bf8a2bb6ca0cf0b68909306c" kindref="member">grab_time</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="structweston__keyboard_1a9ebebc870eb8948caee8662ab38ee4ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_array<sp/><ref refid="structweston__keyboard_1a9ebebc870eb8948caee8662ab38ee4ee" kindref="member">keys</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="784" refid="structweston__keyboard_1af6752702dfe57b9ed24e16b513128556" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__keyboard_1af6752702dfe57b9ed24e16b513128556" kindref="member">mods_depressed</ref>;</highlight></codeline>
<codeline lineno="785" refid="structweston__keyboard_1a7d3ef8098272fc76d3721466298f9bb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__keyboard_1a7d3ef8098272fc76d3721466298f9bb1" kindref="member">mods_latched</ref>;</highlight></codeline>
<codeline lineno="786" refid="structweston__keyboard_1acde1df17f0467dd68aa67571321ea51a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__keyboard_1acde1df17f0467dd68aa67571321ea51a" kindref="member">mods_locked</ref>;</highlight></codeline>
<codeline lineno="787" refid="structweston__keyboard_1a8e5952505420a742ac6ff48e664f825b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__keyboard_1a8e5952505420a742ac6ff48e664f825b" kindref="member">group</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__keyboard_1a2b1378f8ffc54b63cb46bab58d3dd99b" kindref="member">modifiers</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790" refid="structweston__keyboard_1a7f443b6c1ef5f5e017ee3f46b294a460" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard__grab" kindref="compound">weston_keyboard_grab</ref><sp/><ref refid="structweston__keyboard_1a7f443b6c1ef5f5e017ee3f46b294a460" kindref="member">input_method_grab</ref>;</highlight></codeline>
<codeline lineno="791" refid="structweston__keyboard_1a396888015fc0860d4d75ee173ca3c756" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__keyboard_1a396888015fc0860d4d75ee173ca3c756" kindref="member">input_method_resource</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="structweston__keyboard_1a8ff6a56e25eb7d4a10d14bcff761f55e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*<ref refid="structweston__keyboard_1a8ff6a56e25eb7d4a10d14bcff761f55e" kindref="member">xkb_info</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="795" refid="structweston__keyboard_1a3a23dee8749255183af2d4cda6e95b7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard_1acbcdbc9f40f3ef63de91c138730004c5" kindref="member">xkb_state</ref><sp/>*<ref refid="structweston__keyboard_1a3a23dee8749255183af2d4cda6e95b7e" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="796" refid="structweston__keyboard_1afd873e23dc1b4f94d3381afffcacd999" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0" kindref="member">weston_led</ref><sp/><ref refid="structweston__keyboard_1afd873e23dc1b4f94d3381afffcacd999" kindref="member">leds</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__keyboard_1acbcdbc9f40f3ef63de91c138730004c5" kindref="member">xkb_state</ref>;</highlight></codeline>
<codeline lineno="798" refid="structweston__keyboard_1a4944fe9e5149973105f2249c3f564c85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xkb_keymap<sp/>*<ref refid="structweston__keyboard_1a4944fe9e5149973105f2249c3f564c85" kindref="member">pending_keymap</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="structweston__keyboard_1a9a3fb2a4e6393ea39816e112e59c0bca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__keyboard_1a9a3fb2a4e6393ea39816e112e59c0bca" kindref="member">timestamps_list</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal">};</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803" refid="structweston__seat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>{</highlight></codeline>
<codeline lineno="804" refid="structweston__seat_1a0ad46dab28dd2bd40bc457bb2b1c4725" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__seat_1a0ad46dab28dd2bd40bc457bb2b1c4725" kindref="member">base_resource_list</ref>;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806" refid="structweston__seat_1a1b34aeda9c9c8c34d4888876a9a51f52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_global<sp/>*<ref refid="structweston__seat_1a1b34aeda9c9c8c34d4888876a9a51f52" kindref="member">global</ref>;</highlight></codeline>
<codeline lineno="807" refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structweston__seat_1a1a77415c28cfaa0c7f5412b2211feed9" kindref="member">pointer_state</ref>;</highlight></codeline>
<codeline lineno="808" refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structweston__seat_1ab184bb083a07baa11635d83edc651f3c" kindref="member">keyboard_state</ref>;</highlight></codeline>
<codeline lineno="809" refid="structweston__seat_1a000526400843552c920de0efa8112431" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structweston__seat_1a000526400843552c920de0efa8112431" kindref="member">touch_state</ref>;</highlight></codeline>
<codeline lineno="810" refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__seat_1aa1cc2b5153bda0bb83bb250dc8345f44" kindref="member">pointer_device_count</ref>;</highlight></codeline>
<codeline lineno="811" refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__seat_1ac3aeca10e294c9f0945dae2dd7944779" kindref="member">keyboard_device_count</ref>;</highlight></codeline>
<codeline lineno="812" refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__seat_1ab723766982fd513eadea1a7b247d5813" kindref="member">touch_device_count</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="structweston__seat_1a1cf29894b5476e641ef9103c305eeccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structweston__seat_1a1cf29894b5476e641ef9103c305eeccf" kindref="member">output</ref>;<sp/></highlight><highlight class="comment">/*<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816" refid="structweston__seat_1ae7acf8dcc27a2d3b68de44934f28d413" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__seat_1ae7acf8dcc27a2d3b68de44934f28d413" kindref="member">destroy_signal</ref>;</highlight></codeline>
<codeline lineno="817" refid="structweston__seat_1a143d1eca453c6cdf060ca8aa36567da5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__seat_1a143d1eca453c6cdf060ca8aa36567da5" kindref="member">updated_caps_signal</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__seat_1a58160bbc8f87efa12c73096be486b27f" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="820" refid="structweston__seat_1a105bb1c3da70be29d32ab90882757d18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__seat_1a105bb1c3da70be29d32ab90882757d18" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="821" refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/><ref refid="structweston__seat_1aa2af7ad3be074d07eadceeb369fe08e5" kindref="member">modifier_state</ref>;</highlight></codeline>
<codeline lineno="822" refid="structweston__seat_1a0304b3719787b35a90b1897fa6284842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__seat_1a0304b3719787b35a90b1897fa6284842" kindref="member">saved_kbd_focus</ref>;</highlight></codeline>
<codeline lineno="823" refid="structweston__seat_1a2b1b5fc5223b4e63713dafb93b37d4ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__seat_1a2b1b5fc5223b4e63713dafb93b37d4ed" kindref="member">saved_kbd_focus_listener</ref>;</highlight></codeline>
<codeline lineno="824" refid="structweston__seat_1ab591872d026a2214c3ea9db760fb32ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__seat_1ab591872d026a2214c3ea9db760fb32ba" kindref="member">drag_resource_list</ref>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="structweston__seat_1a3b802aed9c69455b95568a3c7a2b887e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__seat_1a3b802aed9c69455b95568a3c7a2b887e" kindref="member">selection_serial</ref>;</highlight></codeline>
<codeline lineno="827" refid="structweston__seat_1ac2277c3fa30a4bde31212b646ef3caca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__data__source" kindref="compound">weston_data_source</ref><sp/>*<ref refid="structweston__seat_1ac2277c3fa30a4bde31212b646ef3caca" kindref="member">selection_data_source</ref>;</highlight></codeline>
<codeline lineno="828" refid="structweston__seat_1a6fd782b145319004309a77fa4302ca57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__seat_1a6fd782b145319004309a77fa4302ca57" kindref="member">selection_data_source_listener</ref>;</highlight></codeline>
<codeline lineno="829" refid="structweston__seat_1a407370ba48e4a88858215df78a38c6ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__seat_1a407370ba48e4a88858215df78a38c6ee" kindref="member">selection_signal</ref>;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="structweston__seat_1a32bed4e68fda40820be3535fc2740530" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__seat_1a32bed4e68fda40820be3535fc2740530" kindref="member">led_update</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*ws,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a77b80adb37abff82ab61240d8c45b6b0" kindref="member">weston_led</ref><sp/>leds);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833" refid="structweston__seat_1a1e2decde2d84b3a108e9c00a7a58064b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat_1a1e2decde2d84b3a108e9c00a7a58064b" kindref="member">input_method</ref><sp/>*<ref refid="structweston__seat_1a1e2decde2d84b3a108e9c00a7a58064b" kindref="member">input_method</ref>;</highlight></codeline>
<codeline lineno="834" refid="structweston__seat_1a990d4933e2070b6e496317aa3108caa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__seat_1a990d4933e2070b6e496317aa3108caa8" kindref="member">seat_name</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal">};</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838" refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad3408c9425d98ee7990dbdd19ddf6377" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad3408c9425d98ee7990dbdd19ddf6377" kindref="member">WESTON_COMPOSITOR_ACTIVE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normal<sp/>rendering<sp/>and<sp/>events<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839" refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad98fb56bd57616678d00cc1fef844267" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4ad98fb56bd57616678d00cc1fef844267" kindref="member">WESTON_COMPOSITOR_IDLE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shell-&gt;unlock<sp/>called<sp/>on<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4adb9bc7ee26e50a44e0f09d3c820c3c70" kindref="member">WESTON_COMPOSITOR_OFFSCREEN</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>rendering,<sp/>no<sp/>frame<sp/>events<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1aaf8fd5f0e57d456151c951e0f3715fc4aeef9ca5084390f404bf57170eeadfc32" kindref="member">WESTON_COMPOSITOR_SLEEPING</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>same<sp/>as<sp/>offscreen,<sp/>but<sp/>also<sp/>set<sp/>dpms</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal">};</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="structweston__layer__entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/>{</highlight></codeline>
<codeline lineno="846" refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="847" refid="structweston__layer__entry_1ad281f228d540b94475e9a788e646269b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*<ref refid="structweston__layer__entry_1ad281f228d540b94475e9a788e646269b" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal">};</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5c" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5c" kindref="member">weston_layer_position</ref><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Special<sp/>value<sp/>to<sp/>make<sp/>the<sp/>layer<sp/>invisible<sp/>and<sp/>still<sp/>rendered.</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>used<sp/>by<sp/>compositors<sp/>wanting<sp/>e.g.<sp/>minimized<sp/>surfaces<sp/>to<sp/>still</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>receive<sp/>frame<sp/>callbacks.</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5cacf7abe83f5ce1dc50dc531ac7071c54b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5cacf7abe83f5ce1dc50dc531ac7071c54b" kindref="member">WESTON_LAYER_POSITION_HIDDEN</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000000,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>There<sp/>should<sp/>always<sp/>be<sp/>a<sp/>background<sp/>layer<sp/>with<sp/>a<sp/>surface<sp/>covering</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>visible<sp/>area.</highlight></codeline>
<codeline lineno="871"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>compositor<sp/>handles<sp/>the<sp/>background<sp/>itself,<sp/>it<sp/>should<sp/>use</highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>BACKGROUND.</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>compositor<sp/>supports<sp/>runtime-loadable<sp/>modules<sp/>to<sp/>set<sp/>the</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>background,<sp/>it<sp/>should<sp/>put<sp/>a<sp/>solid<sp/>color<sp/>surface<sp/>at<sp/>(BACKGROUND<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>modules<sp/>must<sp/>use<sp/>BACKGROUND.</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca535c01934b02be5377b30abdf7821807" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca535c01934b02be5377b30abdf7821807" kindref="member">WESTON_LAYER_POSITION_BACKGROUND</ref><sp/>=<sp/>0x00000002,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>&quot;desktop<sp/>widgets&quot;<sp/>and<sp/>applications<sp/>like<sp/>conky.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5cad279cd1cff10326d6c98e17f4c03863e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5cad279cd1cff10326d6c98e17f4c03863e" kindref="member">WESTON_LAYER_POSITION_BOTTOM_UI</ref><sp/><sp/>=<sp/>0x30000000,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>regular<sp/>applications,<sp/>only<sp/>one<sp/>layer<sp/>should<sp/>have<sp/>this<sp/>value</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>ensure<sp/>proper<sp/>stacking<sp/>control.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca8d9648b768e66696eb0377487fdb3bee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca8d9648b768e66696eb0377487fdb3bee" kindref="member">WESTON_LAYER_POSITION_NORMAL</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x50000000,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>desktop<sp/>UI,<sp/>like<sp/>panels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca577ca974e38714ebdec8cc05e55df591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca577ca974e38714ebdec8cc05e55df591" kindref="member">WESTON_LAYER_POSITION_UI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x80000000,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>fullscreen<sp/>applications<sp/>that<sp/>should<sp/>cover<sp/>UI.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca2170c3a4357c4e2264460c960533df71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca2170c3a4357c4e2264460c960533df71" kindref="member">WESTON_LAYER_POSITION_FULLSCREEN</ref><sp/>=<sp/>0xb0000000,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>special<sp/>UI<sp/>like<sp/>on-screen<sp/>keyboard<sp/>that<sp/>fullscreen<sp/>applications</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>need.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca989a52fb072cf62a6334048f6729eb71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca989a52fb072cf62a6334048f6729eb71" kindref="member">WESTON_LAYER_POSITION_TOP_UI</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0xe0000000,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>the<sp/>lock<sp/>surface.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca113a47738f111934d4cef5f886c3212f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca113a47738f111934d4cef5f886c3212f" kindref="member">WESTON_LAYER_POSITION_LOCK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0xffff0000,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Values<sp/>reserved<sp/>for<sp/>libweston<sp/>internal<sp/>usage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca2e219337cfe0fa85a6e5c70fc269fd93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca2e219337cfe0fa85a6e5c70fc269fd93" kindref="member">WESTON_LAYER_POSITION_CURSOR</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0xfffffffe,</highlight></codeline>
<codeline lineno="903" refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca5c4a827bef388f0a31360726786789e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca5c4a827bef388f0a31360726786789e7" kindref="member">WESTON_LAYER_POSITION_FADE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0xffffffff,</highlight></codeline>
<codeline lineno="904"><highlight class="normal">};</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="structweston__layer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>{</highlight></codeline>
<codeline lineno="907" refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__layer_1a2403f509b6ea462c65a3972262b43814" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="908" refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__layer_1ad65e0529a9879e6c5c643735fbeb29af" kindref="member">link</ref>;<sp/></highlight><highlight class="comment">/*<sp/>weston_compositor::layer_list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="structweston__layer_1a8561a3d6a0d717894ae8110cc18e8487" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5c" kindref="member">weston_layer_position</ref><sp/><ref refid="structweston__layer_1a8561a3d6a0d717894ae8110cc18e8487" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="910" refid="structweston__layer_1a367c993776677feb8105760f07501a29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/><ref refid="structweston__layer_1a367c993776677feb8105760f07501a29" kindref="member">mask</ref>;</highlight></codeline>
<codeline lineno="911" refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/><ref refid="structweston__layer_1a7eeb6d35105ca2c3960477be4abf882e" kindref="member">view_list</ref>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">};</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914" refid="structweston__plane" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>{</highlight></codeline>
<codeline lineno="915" refid="structweston__plane_1a1052bfc9c27c5bc65ced418f895f2942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__plane_1a1052bfc9c27c5bc65ced418f895f2942" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="916" refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__plane_1a8e80302ccee9b0195d9227a04c58ef05" kindref="member">damage</ref>;<sp/></highlight></codeline>
<codeline lineno="917" refid="structweston__plane_1a8ec61668668ea9f07c2590c9d9d7180b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__plane_1a8ec61668668ea9f07c2590c9d9d7180b" kindref="member">clip</ref>;</highlight></codeline>
<codeline lineno="918" refid="structweston__plane_1aa44631ee41fa6a3eff42d5602e673a22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__plane_1ac2537d80979eca0253ae246469f9122c" kindref="member">x</ref>,<sp/><ref refid="structweston__plane_1aa44631ee41fa6a3eff42d5602e673a22" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="919" refid="structweston__plane_1afe11266c30708df9f38d0e44cd661941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__plane_1afe11266c30708df9f38d0e44cd661941" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal">};</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922" refid="structweston__renderer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__renderer" kindref="compound">weston_renderer</ref><sp/>{</highlight></codeline>
<codeline lineno="923" refid="structweston__renderer_1a3efd939e39ab8b4347efb4152e8a5a56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__renderer_1a3efd939e39ab8b4347efb4152e8a5a56" kindref="member">read_pixels</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_format_code_t<sp/>format,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pixels,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__output_1a6828152ad2d2b5c9260b542e6de748e7" kindref="member">x</ref>,<sp/>uint32_t<sp/><ref refid="structweston__output_1a146521cad558d810fb343a471bb529ea" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__output_1afe369b7cd5025ff87f9b8ccfaa1b7a17" kindref="member">width</ref>,<sp/>uint32_t<sp/><ref refid="structweston__output_1acf6ea57c32856e783332467242a966a2" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="927" refid="structweston__renderer_1a3d20edac64ed4e94abf90c3c83479f2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__renderer_1a3d20edac64ed4e94abf90c3c83479f2e" kindref="member">repaint_output</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/>*output_damage);</highlight></codeline>
<codeline lineno="929" refid="structweston__renderer_1ad8200fad4388d10fe23aedfb1ac12acc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__renderer_1ad8200fad4388d10fe23aedfb1ac12acc" kindref="member">flush_damage</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="930" refid="structweston__renderer_1a7ecf9b1c4c4deff1880e666fce7be112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__renderer_1a7ecf9b1c4c4deff1880e666fce7be112" kindref="member">attach</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*es,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="931" refid="structweston__renderer_1a43e96c783c72c2da5d11fb40a18fc6d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__renderer_1a43e96c783c72c2da5d11fb40a18fc6d9" kindref="member">surface_set_color</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="alpha-blending-test_8c_1a81e020c207c4f444a5d60e57c7d55fdf" kindref="member">red</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>green,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="alpha-blending-test_8c_1a9a6f44170dd627caeb06bd6a43943349" kindref="member">blue</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="934" refid="structweston__renderer_1ae0cf2b9ed74efb4f619b4b5e2b84d9fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__renderer_1ae0cf2b9ed74efb4f619b4b5e2b84d9fd" kindref="member">destroy</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="938" refid="structweston__renderer_1a5354db09e69ed5743a59f7ed80fd6bc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__renderer_1a5354db09e69ed5743a59f7ed80fd6bc0" kindref="member">surface_get_content_size</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="942" refid="structweston__renderer_1afcc57b0d929767f57e20b9e5d68f9dee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__renderer_1afcc57b0d929767f57e20b9e5d68f9dee" kindref="member">surface_copy_content</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_y,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="948" refid="structweston__renderer_1a5999bb29493d522ddcff40318e677e2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>(*<ref refid="structweston__renderer_1a5999bb29493d522ddcff40318e677e2d" kindref="member">import_dmabuf</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlinux__dmabuf__buffer" kindref="compound">linux_dmabuf_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="952" refid="structweston__renderer_1a45313a51035c0cda9938cc53bc843dbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__renderer_1a45313a51035c0cda9938cc53bc843dbe" kindref="member">query_dmabuf_formats</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**formats,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_formats);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="956" refid="structweston__renderer_1a2df7097f45e9c4b14ec943033e974383" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__renderer_1a2df7097f45e9c4b14ec943033e974383" kindref="member">query_dmabuf_modifiers</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format,<sp/>uint64_t<sp/>**modifiers,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_modifiers);</highlight></codeline>
<codeline lineno="959"><highlight class="normal">};</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961" refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2d" kindref="member">weston_capability</ref><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>backend/renderer<sp/>supports<sp/>arbitrary<sp/>rotation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963" refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dacfc07a33167b2f9438c61a8aa70bc11a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dacfc07a33167b2f9438c61a8aa70bc11a" kindref="member">WESTON_CAP_ROTATION_ANY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0001,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>screencaptures<sp/>need<sp/>to<sp/>be<sp/>y-flipped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da8c6fa756c17911d39750f20b0270302f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da8c6fa756c17911d39750f20b0270302f" kindref="member">WESTON_CAP_CAPTURE_YFLIP</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0002,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>backend/renderer<sp/>has<sp/>a<sp/>separate<sp/>cursor<sp/>plane<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dad7f491f16c2614d695d30ab36928bf00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dad7f491f16c2614d695d30ab36928bf00" kindref="member">WESTON_CAP_CURSOR_PLANE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0004,</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>backend<sp/>supports<sp/>setting<sp/>arbitrary<sp/>resolutions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972" refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dace9ed878a4985d2dc637b96ac7910ede" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dace9ed878a4985d2dc637b96ac7910ede" kindref="member">WESTON_CAP_ARBITRARY_MODES</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0008,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>renderer<sp/>supports<sp/>weston_view_set_mask()<sp/>clipping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975" refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da9d3b76d6c75b519426aa5a4b8571b500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da9d3b76d6c75b519426aa5a4b8571b500" kindref="member">WESTON_CAP_VIEW_CLIP_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0010,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>renderer<sp/>supports<sp/>explicit<sp/>synchronization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dac0105501579ea73b78960706632814a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2dac0105501579ea73b78960706632814a9" kindref="member">WESTON_CAP_EXPLICIT_SYNC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0020,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>renderer<sp/>supports<sp/>color<sp/>management<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da1b1e29ae46171ce404f460103204ce98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4d5e112f3ecc541323c729709ea9ee2da1b1e29ae46171ce404f460103204ce98" kindref="member">WESTON_CAP_COLOR_OPS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0040,</highlight></codeline>
<codeline lineno="982"><highlight class="normal">};</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Configuration<sp/>struct<sp/>for<sp/>a<sp/>backend.</highlight></codeline>
<codeline lineno="985"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="986"><highlight class="comment"><sp/>*<sp/>This<sp/>struct<sp/>carries<sp/>the<sp/>configuration<sp/>for<sp/>a<sp/>backend,<sp/>and<sp/>it&apos;s</highlight></codeline>
<codeline lineno="987"><highlight class="comment"><sp/>*<sp/>passed<sp/>to<sp/>the<sp/>backend&apos;s<sp/>init<sp/>entry<sp/>point.<sp/>The<sp/>backend<sp/>will</highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/>*<sp/>likely<sp/>want<sp/>to<sp/>subclass<sp/>this<sp/>in<sp/>order<sp/>to<sp/>handle<sp/>backend<sp/>specific</highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/>*<sp/>data.</highlight></codeline>
<codeline lineno="990"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="991"><highlight class="comment"><sp/>*<sp/>\rststar</highlight></codeline>
<codeline lineno="992"><highlight class="comment"><sp/>*<sp/>..<sp/>note:</highlight></codeline>
<codeline lineno="993"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Alternate<sp/>designs<sp/>were<sp/>proposed<sp/>(Feb<sp/>2016)<sp/>for<sp/>using<sp/>opaque<sp/>structures[1]</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>and<sp/>for<sp/>section+key/value<sp/>getter/setters[2].<sp/><sp/>The<sp/>rationale<sp/>for<sp/>selecting</highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>transparent<sp/>structure<sp/>design<sp/>is<sp/>based<sp/>on<sp/>several<sp/>assumptions[3]<sp/>which</highlight></codeline>
<codeline lineno="997"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>require<sp/>re-evaluating<sp/>the<sp/>design<sp/>choice<sp/>if<sp/>they<sp/>fail<sp/>to<sp/>hold.</highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>1.<sp/>https://lists.freedesktop.org/archives/wayland-devel/2016-February/026989.html</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>2.<sp/>https://lists.freedesktop.org/archives/wayland-devel/2016-February/026929.html</highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>3.<sp/>https://lists.freedesktop.org/archives/wayland-devel/2016-February/027228.html</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/>*<sp/>\endrststar</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005" refid="structweston__backend__config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__backend__config" kindref="compound">weston_backend_config</ref><sp/>{</highlight></codeline>
<codeline lineno="1011" refid="structweston__backend__config_1a5b47052f3958d0ba08eb65955ba5ad12" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__backend__config_1a5b47052f3958d0ba08eb65955ba5ad12" kindref="member">struct_version</ref>;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021" refid="structweston__backend__config_1acdec1efd3da3b4967cada3e902b7d655" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structweston__backend__config_1acdec1efd3da3b4967cada3e902b7d655" kindref="member">struct_size</ref>;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__backend" kindref="compound">weston_backend</ref>;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035" refid="libweston_8h_1adf8c2bb0e5fc912dfdc0526930eb1cb8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="libweston_8h_1adf8c2bb0e5fc912dfdc0526930eb1cb8" kindref="member">weston_touch_calibration_save_func</ref>)(</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device__matrix" kindref="compound">weston_touch_device_matrix</ref><sp/>*calibration);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__calibrator" kindref="compound">weston_touch_calibrator</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_desktop_xwayland;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_desktop_xwayland_interface;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_debug_compositor;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049" refid="structweston__compositor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>{</highlight></codeline>
<codeline lineno="1050" refid="structweston__compositor_1a2c143f1cc8d4f174db0fb3ef76a03d20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a2c143f1cc8d4f174db0fb3ef76a03d20" kindref="member">destroy_signal</ref>;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052" refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref><sp/>*<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>;</highlight></codeline>
<codeline lineno="1053" refid="structweston__compositor_1af41ffc09664fe0648be001cab87934d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_desktop_xwayland<sp/>*<ref refid="structweston__compositor_1af41ffc09664fe0648be001cab87934d3" kindref="member">xwayland</ref>;</highlight></codeline>
<codeline lineno="1054" refid="structweston__compositor_1a209b54489bb78aca659015cc51b29c43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_desktop_xwayland_interface<sp/>*<ref refid="structweston__compositor_1a209b54489bb78aca659015cc51b29c43" kindref="member">xwayland_interface</ref>;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>surface<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057" refid="structweston__compositor_1af145ea36a816ec78391cef574c216aa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1af145ea36a816ec78391cef574c216aa0" kindref="member">create_surface_signal</ref>;</highlight></codeline>
<codeline lineno="1058" refid="structweston__compositor_1a952d2d5dad528b120372c5cd95e46dad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a952d2d5dad528b120372c5cd95e46dad" kindref="member">activate_signal</ref>;</highlight></codeline>
<codeline lineno="1059" refid="structweston__compositor_1a827dae6ce67aec219d500428b1eddaf3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a827dae6ce67aec219d500428b1eddaf3" kindref="member">transform_signal</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061" refid="structweston__compositor_1a798aed078c7671946fa4c6a5e0ecc111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a798aed078c7671946fa4c6a5e0ecc111" kindref="member">kill_signal</ref>;</highlight></codeline>
<codeline lineno="1062" refid="structweston__compositor_1ad0a0e9d1055742e7ddb9d35007e77a6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1ad0a0e9d1055742e7ddb9d35007e77a6a" kindref="member">idle_signal</ref>;</highlight></codeline>
<codeline lineno="1063" refid="structweston__compositor_1a56bf6876b62efff1f6de4247973e4147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a56bf6876b62efff1f6de4247973e4147" kindref="member">wake_signal</ref>;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="structweston__compositor_1a414a46edb9a0238a0f8d390cb69a3509" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a414a46edb9a0238a0f8d390cb69a3509" kindref="member">show_input_panel_signal</ref>;</highlight></codeline>
<codeline lineno="1066" refid="structweston__compositor_1af55878b6f2a64f3d2f40826151088b62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1af55878b6f2a64f3d2f40826151088b62" kindref="member">hide_input_panel_signal</ref>;</highlight></codeline>
<codeline lineno="1067" refid="structweston__compositor_1aa84ea0c71118fc80e0422bbc539bdec0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1aa84ea0c71118fc80e0422bbc539bdec0" kindref="member">update_input_panel_signal</ref>;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069" refid="structweston__compositor_1a4c1ce59b05fd209548f06c0dcf7c14e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a4c1ce59b05fd209548f06c0dcf7c14e2" kindref="member">seat_created_signal</ref>;</highlight></codeline>
<codeline lineno="1070" refid="structweston__compositor_1a02dee1be3d004bb90e665aebef5bae5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a02dee1be3d004bb90e665aebef5bae5a" kindref="member">output_created_signal</ref>;</highlight></codeline>
<codeline lineno="1071" refid="structweston__compositor_1ab1912e258bec64ce232b91caa3e54363" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1ab1912e258bec64ce232b91caa3e54363" kindref="member">output_destroyed_signal</ref>;</highlight></codeline>
<codeline lineno="1072" refid="structweston__compositor_1ace8526d2c738b726c11666b3ef137973" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1ace8526d2c738b726c11666b3ef137973" kindref="member">output_moved_signal</ref>;</highlight></codeline>
<codeline lineno="1073" refid="structweston__compositor_1a0d4092bb81afcabc46e564b47b197e3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a0d4092bb81afcabc46e564b47b197e3a" kindref="member">output_resized_signal</ref>;<sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>argument:<sp/>resized<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Signal<sp/>for<sp/>output<sp/>changes<sp/>triggered<sp/>by<sp/>configuration<sp/>from<sp/>frontend</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>or<sp/>head<sp/>state<sp/>changes<sp/>from<sp/>backend.</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078" refid="structweston__compositor_1adc89a6a44aa577d05bddc16bdf44b926" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1adc89a6a44aa577d05bddc16bdf44b926" kindref="member">output_heads_changed_signal</ref>;<sp/></highlight><highlight class="comment">/*<sp/>arg:<sp/>weston_output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080" refid="structweston__compositor_1a6e62e13d73c89d00ef3c7788ea4ddd83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a6e62e13d73c89d00ef3c7788ea4ddd83" kindref="member">session_signal</ref>;</highlight></codeline>
<codeline lineno="1081" refid="structweston__compositor_1a1261d536f85647f94598c6892e6b5b9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1a1261d536f85647f94598c6892e6b5b9f" kindref="member">session_active</ref>;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083" refid="structweston__compositor_1a4726d887fd6b31d6c71f76275715c286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/><ref refid="structweston__compositor_1a4726d887fd6b31d6c71f76275715c286" kindref="member">fade_layer</ref>;</highlight></codeline>
<codeline lineno="1084" refid="structweston__compositor_1a232bc7c0608ea7161cb5d8cfca6e9a82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/><ref refid="structweston__compositor_1a232bc7c0608ea7161cb5d8cfca6e9a82" kindref="member">cursor_layer</ref>;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086" refid="structweston__compositor_1aa4d5b4d134294d69e1ed01d24df78b4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1aa4d5b4d134294d69e1ed01d24df78b4e" kindref="member">pending_output_list</ref>;</highlight></codeline>
<codeline lineno="1087" refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1a581453fe2554be5647e5ecae8f9b99ba" kindref="member">output_list</ref>;</highlight></codeline>
<codeline lineno="1088" refid="structweston__compositor_1a154cc4c320f1d35ecb9886f2b68b6e27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1a154cc4c320f1d35ecb9886f2b68b6e27" kindref="member">head_list</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>weston_head::compositor_link<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="structweston__compositor_1ab4c35ec45448163579d52c41d7df701b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1ab4c35ec45448163579d52c41d7df701b" kindref="member">seat_list</ref>;</highlight></codeline>
<codeline lineno="1090" refid="structweston__compositor_1a9d3d923255aac874249ee6208d012a1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1a9d3d923255aac874249ee6208d012a1c" kindref="member">layer_list</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>weston_layer::link<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091" refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1a32ac5a7b9ccbac09ec941681d12cce44" kindref="member">view_list</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>weston_view::link<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092" refid="structweston__compositor_1a23c931ea0ccaf279dbbc8676c8d75d50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1a23c931ea0ccaf279dbbc8676c8d75d50" kindref="member">plane_list</ref>;</highlight></codeline>
<codeline lineno="1093" refid="structweston__compositor_1aecb5f1570118d8d5be93a9cbfba801a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1aecb5f1570118d8d5be93a9cbfba801a8" kindref="member">key_binding_list</ref>;</highlight></codeline>
<codeline lineno="1094" refid="structweston__compositor_1ae104a342fa491e915b59b0588f78adb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1ae104a342fa491e915b59b0588f78adb8" kindref="member">modifier_binding_list</ref>;</highlight></codeline>
<codeline lineno="1095" refid="structweston__compositor_1ac93a122178ceea1b99d8c7c8c37e9831" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1ac93a122178ceea1b99d8c7c8c37e9831" kindref="member">button_binding_list</ref>;</highlight></codeline>
<codeline lineno="1096" refid="structweston__compositor_1adbb5488a5e90fed2c76ed9b655df48db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1adbb5488a5e90fed2c76ed9b655df48db" kindref="member">touch_binding_list</ref>;</highlight></codeline>
<codeline lineno="1097" refid="structweston__compositor_1a8ce64080f33197bdc4ef63ba85d5e7c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1a8ce64080f33197bdc4ef63ba85d5e7c3" kindref="member">axis_binding_list</ref>;</highlight></codeline>
<codeline lineno="1098" refid="structweston__compositor_1ad5dbb2c4d3f94f4006a8002aa45d7d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1ad5dbb2c4d3f94f4006a8002aa45d7d51" kindref="member">debug_binding_list</ref>;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100" refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__compositor_1a74c7666a27a5435492ec4b2b576177af" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="1101" refid="structweston__compositor_1ab553646b778cf32b1956852f5b9cdcb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source<sp/>*<ref refid="structweston__compositor_1ab553646b778cf32b1956852f5b9cdcb4" kindref="member">idle_source</ref>;</highlight></codeline>
<codeline lineno="1102" refid="structweston__compositor_1a5044af245cac705c327f2122805a3469" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__compositor_1a5044af245cac705c327f2122805a3469" kindref="member">idle_inhibit</ref>;</highlight></codeline>
<codeline lineno="1103" refid="structweston__compositor_1ab8688167325c7fd781a3725cbf23faaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1ab8688167325c7fd781a3725cbf23faaa" kindref="member">idle_time</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>timeout,<sp/>s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104" refid="structweston__compositor_1a18bd4b791afdf479323c96c85f5b6750" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source<sp/>*<ref refid="structweston__compositor_1a18bd4b791afdf479323c96c85f5b6750" kindref="member">repaint_timer</ref>;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106" refid="structweston__compositor_1afb8c36f1ea6c3a7b5898771c60127ed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>*<ref refid="structweston__compositor_1afb8c36f1ea6c3a7b5898771c60127ed9" kindref="member">default_pointer_grab</ref>;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Repaint<sp/>state.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109" refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/><ref refid="structweston__compositor_1acd96fdbda4ef438f5292372ab78535ce" kindref="member">primary_plane</ref>;</highlight></codeline>
<codeline lineno="1110" refid="structweston__compositor_1a5be5c87f03fcdbc3aa7c456ebb96e4aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__compositor_1a5be5c87f03fcdbc3aa7c456ebb96e4aa" kindref="member">capabilities</ref>;<sp/></highlight><highlight class="comment">/*<sp/>combination<sp/>of<sp/>enum<sp/>weston_capability<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112" refid="structweston__compositor_1adfa35d8b6ef4bac08ccecbbd37acb81d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__renderer" kindref="compound">weston_renderer</ref><sp/>*<ref refid="structweston__compositor_1adfa35d8b6ef4bac08ccecbbd37acb81d" kindref="member">renderer</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114" refid="structweston__compositor_1a974cb74b7d8dd5117a8e98d363d341c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_format_code_t<sp/><ref refid="structweston__compositor_1a974cb74b7d8dd5117a8e98d363d341c3" kindref="member">read_format</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116" refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__backend" kindref="compound">weston_backend</ref><sp/>*<ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118" refid="structweston__compositor_1ab1ec453cf4bf3f99467e79acf7591086" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__launcher" kindref="compound">weston_launcher</ref><sp/>*<ref refid="structweston__compositor_1ab1ec453cf4bf3f99467e79acf7591086" kindref="member">launcher</ref>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120" refid="structweston__compositor_1a971594f6ff5050e72c298a17fb88f177" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__compositor_1a971594f6ff5050e72c298a17fb88f177" kindref="member">plugin_api_list</ref>;<sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>weston_plugin_api::link<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122" refid="structweston__compositor_1a5f4e57922615e82919d0d73283425782" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__compositor_1a5f4e57922615e82919d0d73283425782" kindref="member">output_id_pool</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124" refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xkb_rule_names<sp/><ref refid="structweston__compositor_1a777b8b9257cd31d0e1a66c14b45de824" kindref="member">xkb_names</ref>;</highlight></codeline>
<codeline lineno="1125" refid="structweston__compositor_1a7dc311ad4df22872764ddf01e9ac1a27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor_1a7dc311ad4df22872764ddf01e9ac1a27" kindref="member">xkb_context</ref><sp/>*<ref refid="structweston__compositor_1a7dc311ad4df22872764ddf01e9ac1a27" kindref="member">xkb_context</ref>;</highlight></codeline>
<codeline lineno="1126" refid="structweston__compositor_1a5393cfe8cf2c54f154478bf2f53e77a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__xkb__info" kindref="compound">weston_xkb_info</ref><sp/>*<ref refid="structweston__compositor_1a5393cfe8cf2c54f154478bf2f53e77a9" kindref="member">xkb_info</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128" refid="structweston__compositor_1a0bdcc28a8f535b9f63f4d31803babd42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__compositor_1a0bdcc28a8f535b9f63f4d31803babd42" kindref="member">kb_repeat_rate</ref>;</highlight></codeline>
<codeline lineno="1129" refid="structweston__compositor_1a5501dff49a64b01b35db831d20dbf24b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__compositor_1a5501dff49a64b01b35db831d20dbf24b" kindref="member">kb_repeat_delay</ref>;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131" refid="structweston__compositor_1aea80aab28c8cd947b1444ca00cea353a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1aea80aab28c8cd947b1444ca00cea353a" kindref="member">vt_switching</ref>;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133" refid="structweston__compositor_1a1c71e925911663d02d441842a5793e91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clockid_t<sp/><ref refid="structweston__compositor_1a1c71e925911663d02d441842a5793e91" kindref="member">presentation_clock</ref>;</highlight></codeline>
<codeline lineno="1134" refid="structweston__compositor_1aebdb50c57184889bb82a75433ec5bb74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__compositor_1aebdb50c57184889bb82a75433ec5bb74" kindref="member">repaint_msec</ref>;</highlight></codeline>
<codeline lineno="1135" refid="structweston__compositor_1afb6d3bf67f2a115cc9e0db0786c8392a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="structweston__compositor_1afb6d3bf67f2a115cc9e0db0786c8392a" kindref="member">last_repaint_start</ref>;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137" refid="structweston__compositor_1ae4926a7915767362658139b652fe0237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1ae4926a7915767362658139b652fe0237" kindref="member">activate_serial</ref>;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139" refid="structweston__compositor_1abbe2803202d4ab7f0e51681d8b820ce5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_global<sp/>*<ref refid="structweston__compositor_1abbe2803202d4ab7f0e51681d8b820ce5" kindref="member">pointer_constraints</ref>;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141" refid="structweston__compositor_1a1fa6ab0d71bc8d7d605ac607faa9552f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1a1fa6ab0d71bc8d7d605ac607faa9552f" kindref="member">exit_code</ref>;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143" refid="structweston__compositor_1a21f2b4d090a79fff8da494ee2774cef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__compositor_1a21f2b4d090a79fff8da494ee2774cef6" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="1144" refid="structweston__compositor_1ae3996cfb4ee9b4cf1947c09156e94325" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__compositor_1ae3996cfb4ee9b4cf1947c09156e94325" kindref="member">exit</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*c);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Whether<sp/>to<sp/>let<sp/>the<sp/>compositor<sp/>run<sp/>without<sp/>any<sp/>input<sp/>device.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147" refid="structweston__compositor_1a267a0cc8636e211d81de78a41c12cc28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1a267a0cc8636e211d81de78a41c12cc28" kindref="member">require_input</ref>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>suite<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150" refid="structweston__compositor_1a90cacc8c057f29e53566637f6dfa3fad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__testsuite__data" kindref="compound">weston_testsuite_data</ref><sp/><ref refid="structweston__compositor_1a90cacc8c057f29e53566637f6dfa3fad" kindref="member">test_data</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Signal<sp/>for<sp/>a<sp/>backend<sp/>to<sp/>inform<sp/>a<sp/>frontend<sp/>about<sp/>possible<sp/>changes</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>head<sp/>status.</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155" refid="structweston__compositor_1a09a2bfe7cc2442ae9afe49fe4819a8c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__compositor_1a09a2bfe7cc2442ae9afe49fe4819a8c6" kindref="member">heads_changed_signal</ref>;</highlight></codeline>
<codeline lineno="1156" refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source<sp/>*<ref refid="structweston__compositor_1ac221c8e240a724149b758b4aa4a357b4" kindref="member">heads_changed_source</ref>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Touchscreen<sp/>calibrator<sp/>support:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a643d4610daedc150e69e9bfcca7f4cf4" kindref="member">weston_touch_mode</ref><sp/><ref refid="structweston__compositor_1a9568df63aecb8047457297dc0ebbe22f" kindref="member">touch_mode</ref>;</highlight></codeline>
<codeline lineno="1160" refid="structweston__compositor_1a811158fa9c3d80b448f2d62d6514f63a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_global<sp/>*<ref refid="structweston__compositor_1a811158fa9c3d80b448f2d62d6514f63a" kindref="member">touch_calibration</ref>;</highlight></codeline>
<codeline lineno="1161" refid="structweston__compositor_1a53dcb228aae6ec3e25364b7e5fce9ac9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adf8c2bb0e5fc912dfdc0526930eb1cb8" kindref="member">weston_touch_calibration_save_func</ref><sp/><ref refid="structweston__compositor_1a53dcb228aae6ec3e25364b7e5fce9ac9" kindref="member">touch_calibration_save</ref>;</highlight></codeline>
<codeline lineno="1162" refid="structweston__compositor_1a920db960c53baadaaa9f8e6a231541c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/><ref refid="structweston__compositor_1a920db960c53baadaaa9f8e6a231541c3" kindref="member">calibrator_layer</ref>;</highlight></codeline>
<codeline lineno="1163" refid="structweston__compositor_1acfbeb96c7859596d757822ca8d3cad73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__calibrator" kindref="compound">weston_touch_calibrator</ref><sp/>*<ref refid="structweston__compositor_1acfbeb96c7859596d757822ca8d3cad73" kindref="member">touch_calibrator</ref>;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165" refid="structweston__compositor_1aa3f5874da7035c9d98b75a88a68fa4ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__log__context" kindref="compound">weston_log_context</ref><sp/>*<ref refid="structweston__compositor_1aa3f5874da7035c9d98b75a88a68fa4ca" kindref="member">weston_log_ctx</ref>;</highlight></codeline>
<codeline lineno="1166" refid="structweston__compositor_1a6487d84ea5397f7a97e5bbd5b2a36ee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__log__scope" kindref="compound">weston_log_scope</ref><sp/>*<ref refid="structweston__compositor_1a6487d84ea5397f7a97e5bbd5b2a36ee8" kindref="member">debug_scene</ref>;</highlight></codeline>
<codeline lineno="1167" refid="structweston__compositor_1adfcfd084e55976891e8a742c3c2490af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__log__scope" kindref="compound">weston_log_scope</ref><sp/>*<ref refid="structweston__compositor_1adfcfd084e55976891e8a742c3c2490af" kindref="member">timeline</ref>;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169" refid="structweston__compositor_1a42ad71eeccc5497d3667cca8e38f39f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*<ref refid="structweston__compositor_1a42ad71eeccc5497d3667cca8e38f39f8" kindref="member">content_protection</ref>;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172" refid="structweston__buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="1173" refid="structweston__buffer_1a420d98068b5cb266b9ec3ad696333cf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__buffer_1a420d98068b5cb266b9ec3ad696333cf9" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="1174" refid="structweston__buffer_1a4939f6e2e960d15807c89662da233f26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__buffer_1a4939f6e2e960d15807c89662da233f26" kindref="member">destroy_signal</ref>;</highlight></codeline>
<codeline lineno="1175" refid="structweston__buffer_1a35e3e49c98eaba10e328bca3223d5c79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__buffer_1a35e3e49c98eaba10e328bca3223d5c79" kindref="member">destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1178" refid="structweston__buffer_1aba362da46a8598d201438f6254f08fd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_shm_buffer<sp/>*<ref refid="structweston__buffer_1aba362da46a8598d201438f6254f08fd3" kindref="member">shm_buffer</ref>;</highlight></codeline>
<codeline lineno="1179" refid="structweston__buffer_1a6fea00fe3b399bf8ffd984a04212897d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__buffer_1a6fea00fe3b399bf8ffd984a04212897d" kindref="member">legacy_buffer</ref>;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1181" refid="structweston__buffer_1a208f9607af5722a2f8130e77b2856801" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__buffer_1a208f9607af5722a2f8130e77b2856801" kindref="member">width</ref>,<sp/><ref refid="structweston__buffer_1a2ad81a0be5ad2a32696f10936f3123fb" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="1182" refid="structweston__buffer_1a349981af081cad595e13fce42b1961b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__buffer_1a349981af081cad595e13fce42b1961b6" kindref="member">busy_count</ref>;</highlight></codeline>
<codeline lineno="1183" refid="structweston__buffer_1a39c0084277572eaabeb95d73d5b187c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer_1a39c0084277572eaabeb95d73d5b187c4" kindref="member">y_inverted</ref>;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186" refid="structweston__buffer__reference" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref><sp/>{</highlight></codeline>
<codeline lineno="1187" refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structweston__buffer__reference_1a87b175662a988253c4f12a2f25ce04e9" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1188" refid="structweston__buffer__reference_1af2127d2c5b67e2201d396ff4ac8e3b15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__buffer__reference_1af2127d2c5b67e2201d396ff4ac8e3b15" kindref="member">destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191" refid="structweston__buffer__viewport" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_buffer_transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194" refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__buffer__viewport_1a08d7c5b081b94b5def5832f39515939e" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_scaling_factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197" refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__buffer__viewport_1a88940e4f0e08988bbcf0e8039191cd25" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>src_width<sp/>!=<sp/>wl_fixed_from_int(-1),</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>and<sp/>only<sp/>then<sp/>src_*<sp/>are<sp/>used.</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203" refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__buffer__viewport_1a1b8c86e76e559b39c5c2f02dd4202265" kindref="member">src_x</ref>,<sp/><ref refid="structweston__buffer__viewport_1a8411821517c09b3486d726accc34b725" kindref="member">src_y</ref>;</highlight></codeline>
<codeline lineno="1204" refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__buffer__viewport_1adf15912a19ecd5dfb57186572703e143" kindref="member">src_width</ref>,<sp/><ref refid="structweston__buffer__viewport_1a2e03747808f7599ac45650cfd76981dd" kindref="member">src_height</ref>;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__buffer__viewport_1a6cbde13161041b6a89e5eb3aea32a17d" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>width<sp/>==<sp/>-1,<sp/>the<sp/>size<sp/>is<sp/>inferred<sp/>from<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__buffer__viewport_1af34fedcf260d33887565ab38b8055513" kindref="member">width</ref>,<sp/><ref refid="structweston__buffer__viewport_1a98ff5062bc1f356b8df0f17bd3d17b0d" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__buffer__viewport_1ae567b1dc9314de9bb532059159d40a56" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214" refid="structweston__buffer__viewport_1a90026f4dae947712c1963459d7ef8cfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__viewport_1a90026f4dae947712c1963459d7ef8cfa" kindref="member">changed</ref>;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217" refid="structweston__buffer__release" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__release" kindref="compound">weston_buffer_release</ref><sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>associated<sp/>zwp_linux_buffer_release_v1<sp/>resource.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219" refid="structweston__buffer__release_1ad09915f551946199a868a7ef4a6de55c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__buffer__release_1ad09915f551946199a868a7ef4a6de55c" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>How<sp/>many<sp/>weston_buffer_release_reference<sp/>objects<sp/>point<sp/>to<sp/>this</highlight></codeline>
<codeline lineno="1221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222" refid="structweston__buffer__release_1a78530295221869aeaa781d91197c6237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__buffer__release_1a78530295221869aeaa781d91197c6237" kindref="member">ref_count</ref>;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>fence<sp/>fd,<sp/>if<sp/>any,<sp/>associated<sp/>with<sp/>this<sp/>release.<sp/>If<sp/>the<sp/>fence<sp/>fd</highlight></codeline>
<codeline lineno="1224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>-1<sp/>then<sp/>this<sp/>is<sp/>considered<sp/>an<sp/>immediate<sp/>release.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="structweston__buffer__release_1a16a29644865618443c6bee1105322f99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer__release_1a16a29644865618443c6bee1105322f99" kindref="member">fence_fd</ref>;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228" refid="structweston__buffer__release__reference" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/>{</highlight></codeline>
<codeline lineno="1229" refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__release" kindref="compound">weston_buffer_release</ref><sp/>*<ref refid="structweston__buffer__release__reference_1af56e0a7bde3736fa32cce5107e620d14" kindref="member">buffer_release</ref>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Listener<sp/>for<sp/>the<sp/>destruction<sp/>of<sp/>the<sp/>wl_resource<sp/>associated<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>referenced<sp/>buffer_release<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232" refid="structweston__buffer__release__reference_1a4c77bd7f6c6a01bcf827ba3fb8dd6cec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__buffer__release__reference_1a4c77bd7f6c6a01bcf827ba3fb8dd6cec" kindref="member">destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="structweston__region" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__region" kindref="compound">weston_region</ref><sp/>{</highlight></codeline>
<codeline lineno="1236" refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__region_1a8168d93a65ac64bb5773c723466953e5" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="1237" refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__region_1ac4632bb6e79b9c80e7a678437f571bf4" kindref="member">region</ref>;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Using<sp/>weston_view<sp/>transformations</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/>*<sp/>To<sp/>add<sp/>a<sp/>transformation<sp/>to<sp/>a<sp/>view,<sp/>create<sp/>a<sp/>struct<sp/>weston_transform,<sp/>and</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/>*<sp/>add<sp/>it<sp/>to<sp/>the<sp/>list<sp/>view-&gt;geometry.transformation_list.<sp/>Whenever<sp/>you</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/>*<sp/>change<sp/>the<sp/>list,<sp/>anything<sp/>under<sp/>view-&gt;geometry,<sp/>or<sp/>anything<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/>*<sp/>weston_transforms<sp/>linked<sp/>into<sp/>the<sp/>list,<sp/>you<sp/>must<sp/>call</highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/>*<sp/>weston_view_geometry_dirty().</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1248"><highlight class="comment"><sp/>*<sp/>The<sp/>order<sp/>in<sp/>the<sp/>list<sp/>defines<sp/>the<sp/>order<sp/>of<sp/>transformations.<sp/>Let<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="1249"><highlight class="comment"><sp/>*<sp/>contain<sp/>the<sp/>transformation<sp/>matrices<sp/>M1,<sp/>...,<sp/>Mn<sp/>as<sp/>head<sp/>to<sp/>tail.<sp/>The</highlight></codeline>
<codeline lineno="1250"><highlight class="comment"><sp/>*<sp/>transformation<sp/>is<sp/>applied<sp/>to<sp/>view-local<sp/>coordinate<sp/>vector<sp/>p<sp/>as</highlight></codeline>
<codeline lineno="1251"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>P<sp/>=<sp/>Mn<sp/>*<sp/>...<sp/>*<sp/>M2<sp/>*<sp/>M1<sp/>*<sp/>p</highlight></codeline>
<codeline lineno="1252"><highlight class="comment"><sp/>*<sp/>to<sp/>produce<sp/>the<sp/>global<sp/>coordinate<sp/>vector<sp/>P.<sp/>The<sp/>total<sp/>transform</highlight></codeline>
<codeline lineno="1253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Mn<sp/>*<sp/>...<sp/>*<sp/>M2<sp/>*<sp/>M1</highlight></codeline>
<codeline lineno="1254"><highlight class="comment"><sp/>*<sp/>is<sp/>cached<sp/>in<sp/>view-&gt;transform.matrix,<sp/>and<sp/>the<sp/>inverse<sp/>of<sp/>it<sp/>in</highlight></codeline>
<codeline lineno="1255"><highlight class="comment"><sp/>*<sp/>view-&gt;transform.inverse.</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>*<sp/>The<sp/>list<sp/>always<sp/>contains<sp/>view-&gt;transform.position<sp/>transformation,<sp/>which</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/>*<sp/>is<sp/>the<sp/>translation<sp/>by<sp/>view-&gt;geometry.x<sp/>and<sp/>y.</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>want<sp/>to<sp/>apply<sp/>a<sp/>transformation<sp/>in<sp/>local<sp/>coordinates,<sp/>add<sp/>your</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/>*<sp/>weston_transform<sp/>to<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list.<sp/>If<sp/>you<sp/>want<sp/>to<sp/>apply<sp/>a</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/>*<sp/>transformation<sp/>in<sp/>global<sp/>coordinates,<sp/>add<sp/>it<sp/>to<sp/>the<sp/>tail<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/>*<sp/>If<sp/>view-&gt;geometry.parent<sp/>is<sp/>set,<sp/>the<sp/>total<sp/>transformation<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/>*<sp/>view<sp/>will<sp/>be<sp/>the<sp/>parent&apos;s<sp/>total<sp/>transformation<sp/>and<sp/>this<sp/>transformation</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/>*<sp/>combined:</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Mparent<sp/>*<sp/>Mn<sp/>*<sp/>...<sp/>*<sp/>M2<sp/>*<sp/>M1</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270" refid="structweston__view" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>{</highlight></codeline>
<codeline lineno="1271" refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__view_1a378ad6a9de6d0d4f908769d106436034" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="1272" refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__view_1a9186967c5dedc3d58d64bd24cc6be9bb" kindref="member">surface_link</ref>;</highlight></codeline>
<codeline lineno="1273" refid="structweston__view_1a2f080864caf024d69229c411f4c65f94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__view_1a2f080864caf024d69229c411f4c65f94" kindref="member">destroy_signal</ref>;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275" refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__view_1a81dd60dee728758e7963f2fd0eb12cee" kindref="member">link</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>weston_compositor::view_list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276" refid="structweston__view_1a5185d78e10d20bba70022466b196e990" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/><ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>;<sp/></highlight><highlight class="comment">/*<sp/>part<sp/>of<sp/>geometry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277" refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__plane" kindref="compound">weston_plane</ref><sp/>*<ref refid="structweston__view_1a083349493fecdb4e90d413e122c802b0" kindref="member">plane</ref>;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>weston_layer<sp/>inheritance<sp/>from<sp/>another<sp/>view<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280" refid="structweston__view_1a51c664daeb6b36d2742c3fb06d7887fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view_1a51c664daeb6b36d2742c3fb06d7887fa" kindref="member">parent_view</ref>;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282" refid="structweston__view_1a352296fe09a8b12565a295c528cac665" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1a352296fe09a8b12565a295c528cac665" kindref="member">click_to_activate_serial</ref>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284" refid="structweston__view_1a7f10ad4288de845f3f42609bdf617416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__view_1a7f10ad4288de845f3f42609bdf617416" kindref="member">clip</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>weston_view_damage_below()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285" refid="structweston__view_1a2ee87852507e80f9c33d1dbaa7749e1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1a2ee87852507e80f9c33d1dbaa7749e1b" kindref="member">alpha</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>part<sp/>of<sp/>geometry,<sp/>see<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287" refid="structweston__view_1ac9a951481214b98a046fb5ab59cf8412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view_1ac9a951481214b98a046fb5ab59cf8412" kindref="member">renderer_state</ref>;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Surface<sp/>geometry<sp/>state,<sp/>mutable.</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>you<sp/>change<sp/>anything,<sp/>call<sp/>weston_surface_geometry_dirty().</highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>That<sp/>includes<sp/>the<sp/>transformations<sp/>referenced<sp/>from<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1294" refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>;<sp/></highlight><highlight class="comment">/*<sp/>surface<sp/>translation<sp/>on<sp/>display<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>weston_transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297" refid="structweston__view_1a826a16f7e32f6db912d72b515f0e4d46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__view_1a826a16f7e32f6db912d72b515f0e4d46" kindref="member">transformation_list</ref>;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>managed<sp/>by<sp/>weston_surface_set_transform_parent()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300" refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="1301" refid="structweston__view_1ad7af39a0da713a4c61f00c0ae3540c95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__view_1ad7af39a0da713a4c61f00c0ae3540c95" kindref="member">parent_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1302" refid="structweston__view_1aa0a618d418cb2ffdd5d1eb070c5e3dd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__view_1aa0a618d418cb2ffdd5d1eb070c5e3dd4" kindref="member">child_list</ref>;<sp/></highlight><highlight class="comment">/*<sp/>geometry.parent_link<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303" refid="structweston__view_1ad3495e04a1443c8f7a98e1a54cbac86b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__view_1ad3495e04a1443c8f7a98e1a54cbac86b" kindref="member">parent_link</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>managed<sp/>by<sp/>weston_view_set_mask()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306" refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1a559364a2aa2a37cf13bf355e7b1becd5" kindref="member">scissor_enabled</ref>;</highlight></codeline>
<codeline lineno="1307" refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__view_1addcf6382f9701e3eff29167aad1b1039" kindref="member">scissor</ref>;<sp/></highlight><highlight class="comment">/*<sp/>always<sp/>a<sp/>simple<sp/>rect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__view_1ab74e78d4ee0389b21cc3098c8ffb2421" kindref="member">geometry</ref>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>State<sp/>derived<sp/>from<sp/>geometry<sp/>state,<sp/>read-only.</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>updated<sp/>by<sp/>weston_view_update_transform().</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314" refid="structweston__view_1aae2b060fd6ca394b45cc79c7c3a601aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1aae2b060fd6ca394b45cc79c7c3a601aa" kindref="member">dirty</ref>;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Approximations<sp/>in<sp/>global<sp/>coordinates:</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>-<sp/>boundingbox<sp/>is<sp/>guaranteed<sp/>to<sp/>include<sp/>the<sp/>whole<sp/>view<sp/>in</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>smallest<sp/>possible<sp/>single<sp/>rectangle.</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>-<sp/>opaque<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>fully<sp/>opaque,<sp/>though<sp/>not</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>necessarily<sp/>include<sp/>all<sp/>opaque<sp/>areas.</highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322" refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__view_1a7425ba4bac68148bc9e5d8eaedff352d" kindref="member">boundingbox</ref>;</highlight></codeline>
<codeline lineno="1323" refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__view_1ac4978a5189591bb013d573deea70af9d" kindref="member">opaque</ref>;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>matrix<sp/>and<sp/>inverse<sp/>are<sp/>used<sp/>only<sp/>if<sp/>enabled<sp/>=<sp/>1.</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>enabled<sp/>=<sp/>0,<sp/>use<sp/>x,<sp/>y,<sp/>width,<sp/>height<sp/>directly.</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328" refid="structweston__view_1ad81ff06883a9d4720a6b9400233ab04f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ad81ff06883a9d4720a6b9400233ab04f" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="1329" refid="structweston__view_1a02e76479fada96d5d1f80b8530f8ea18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/><ref refid="structweston__view_1a02e76479fada96d5d1f80b8530f8ea18" kindref="member">matrix</ref>;</highlight></codeline>
<codeline lineno="1330" refid="structweston__view_1a6e78c58ca4e4f089c383ff89c68f5f8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/><ref refid="structweston__view_1a6e78c58ca4e4f089c383ff89c68f5f8e" kindref="member">inverse</ref>;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332" refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__transform" kindref="compound">weston_transform</ref><sp/><ref refid="structweston__view_1a48fa7c7b5f0a5c9bed5ff6b3414fce4e" kindref="member">position</ref>;<sp/></highlight><highlight class="comment">/*<sp/>matrix<sp/>from<sp/>x,<sp/>y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__view_1a6f0357af0dd60a9bc84d7df538664f71" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>primary<sp/>output<sp/>for<sp/>this<sp/>view.</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Used<sp/>for<sp/>picking<sp/>the<sp/>output<sp/>for<sp/>driving<sp/>internal<sp/>animations<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>view,<sp/>inheriting<sp/>the<sp/>primary<sp/>output<sp/>for<sp/>related<sp/>views<sp/>in<sp/>shells,<sp/>etc.</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340" refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structweston__view_1a885ebed1c2555583ec20c73383d5464a" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="1341" refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__view_1aa5e502d2d4a5b8da2ef4c598f778db79" kindref="member">output_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>more<sp/>complete<sp/>representation<sp/>of<sp/>all<sp/>outputs<sp/>this<sp/>surface<sp/>is</highlight></codeline>
<codeline lineno="1345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>displayed<sp/>on.</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347" refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__view_1a3e5d20dfb39935683495fa0920223906" kindref="member">output_mask</ref>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Per-surface<sp/>Presentation<sp/>feedback<sp/>flags,<sp/>controlled<sp/>by<sp/>backend.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350" refid="structweston__view_1a51a7b717c3e3a9e6024cfa2bfa95ca0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__view_1a51a7b717c3e3a9e6024cfa2bfa95ca0d" kindref="member">psf_flags</ref>;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352" refid="structweston__view_1a18d37d84392f17fc306c8410a84b1f04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1a18d37d84392f17fc306c8410a84b1f04" kindref="member">is_mapped</ref>;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355" refid="structweston__surface__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.attach<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357" refid="structweston__surface__state_1a6597f745d7ffcd424e8cdaffce3cafb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__surface__state_1a6597f745d7ffcd424e8cdaffce3cafb2" kindref="member">newly_attached</ref>;</highlight></codeline>
<codeline lineno="1358" refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structweston__surface__state_1a94c7f2e756f820d883473f2d5301a5ca" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1359" refid="structweston__surface__state_1a04028650bbb36f367c176363be4a90ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__surface__state_1a04028650bbb36f367c176363be4a90ff" kindref="member">buffer_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1360" refid="structweston__surface__state_1a251b246e8b6677da69fa03421bcc8d26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__surface__state_1a251b246e8b6677da69fa03421bcc8d26" kindref="member">sx</ref>;</highlight></codeline>
<codeline lineno="1361" refid="structweston__surface__state_1aee475073e8434bca501ab79d3bbdeb2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__surface__state_1aee475073e8434bca501ab79d3bbdeb2d" kindref="member">sy</ref>;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.damage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364" refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__surface__state_1a7b1c7bea6b9410bae68d6c017c98bf5a" kindref="member">damage_surface</ref>;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.damage_buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366" refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__surface__state_1a36ea2a88ba4ab6aa3f7eb4a57795d00d" kindref="member">damage_buffer</ref>;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_opaque_region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369" refid="structweston__surface__state_1ac7e80149394ec6a71d4b3a34551eb982" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__surface__state_1ac7e80149394ec6a71d4b3a34551eb982" kindref="member">opaque</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_input_region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372" refid="structweston__surface__state_1a3ec88c1ba535b2ba4e38dc9a2eb97a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__surface__state_1a3ec88c1ba535b2ba4e38dc9a2eb97a32" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375" refid="structweston__surface__state_1a9e10cab51077c11e29ffbdb2bf4e3a59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__surface__state_1a9e10cab51077c11e29ffbdb2bf4e3a59" kindref="member">frame_callback_list</ref>;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>presentation.feedback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378" refid="structweston__surface__state_1a86d5bea2884539ddaa34e0995bf90ccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__surface__state_1a86d5bea2884539ddaa34e0995bf90ccf" kindref="member">feedback_list</ref>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_buffer_transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_surface.set_scaling_factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wp_viewport.set_source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wp_viewport.set_destination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384" refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/><ref refid="structweston__surface__state_1a7b05e3e791bde857d23c030db2b6cb1d" kindref="member">buffer_viewport</ref>;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zwp_surface_synchronization_v1.set_acquire_fence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387" refid="structweston__surface__state_1a6d57cd58b8c29333b246883193786774" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__surface__state_1a6d57cd58b8c29333b246883193786774" kindref="member">acquire_fence_fd</ref>;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zwp_surface_synchronization_v1.get_release<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390" refid="structweston__surface__state_1a38c0835d8fcdd6d883bc2685aae7402d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/><ref refid="structweston__surface__state_1a38c0835d8fcdd6d883bc2685aae7402d" kindref="member">buffer_release_ref</ref>;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>weston_protected_surface.set_type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393" refid="structweston__surface__state_1aa7cb0c5d15edb989d03c635046a5e923" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/><ref refid="structweston__surface__state_1aa7cb0c5d15edb989d03c635046a5e923" kindref="member">desired_protection</ref>;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>weston_protected_surface.enforced/relaxed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396" refid="structweston__surface__state_1a2c8ab81f6bccd6fad2dec8bb13045d96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208" kindref="member">weston_surface_protection_mode</ref><sp/><ref refid="structweston__surface__state_1a2c8ab81f6bccd6fad2dec8bb13045d96" kindref="member">protection_mode</ref>;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399" refid="structweston__surface__activation__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__activation__data" kindref="compound">weston_surface_activation_data</ref><sp/>{</highlight></codeline>
<codeline lineno="1400" refid="structweston__surface__activation__data_1a4b47b09a3f9828f4688b6789b4b16331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__surface__activation__data_1a4b47b09a3f9828f4688b6789b4b16331" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="1401" refid="structweston__surface__activation__data_1af2492e7d45e19f49d8a14fd842540ee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__surface__activation__data_1af2492e7d45e19f49d8a14fd842540ee1" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404" refid="structweston__pointer__constraint" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__constraint" kindref="compound">weston_pointer_constraint</ref><sp/>{</highlight></codeline>
<codeline lineno="1405" refid="structweston__pointer__constraint_1ab329036693caeb2778aa17f1628c6e34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__pointer__constraint_1ab329036693caeb2778aa17f1628c6e34" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407" refid="structweston__pointer__constraint_1a9cde684c20bf346ea28724b3a5d2c559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__pointer__constraint_1a9cde684c20bf346ea28724b3a5d2c559" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="1408" refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__pointer__constraint_1aec1d6908505c34bd717ed6aa5cb21962" kindref="member">view</ref>;</highlight></codeline>
<codeline lineno="1409" refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__pointer__constraint_1afbea0e2e5c7df3cdd141f582edeb43f8" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="1410" refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__grab" kindref="compound">weston_pointer_grab</ref><sp/><ref refid="structweston__pointer__constraint_1a26cdab254c72a4ad1a725a47dd7beb4f" kindref="member">grab</ref>;</highlight></codeline>
<codeline lineno="1411" refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structweston__pointer__constraint_1a90237af01646c8238619980a040e433d" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="1412" refid="structweston__pointer__constraint_1adbe2c7557a0df0512afcd17352009c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__pointer__constraint_1adbe2c7557a0df0512afcd17352009c92" kindref="member">lifetime</ref>;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414" refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__pointer__constraint_1a47ecaef07ab734bd9221f68e24409d6f" kindref="member">region</ref>;</highlight></codeline>
<codeline lineno="1415" refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__pointer__constraint_1a077716cbed97991f5703a8a6a3fe24c3" kindref="member">region_pending</ref>;</highlight></codeline>
<codeline lineno="1416" refid="structweston__pointer__constraint_1a0385e5cc132cb587a6d8fd75bdbf8a01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint_1a0385e5cc132cb587a6d8fd75bdbf8a01" kindref="member">region_is_pending</ref>;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418" refid="structweston__pointer__constraint_1a309986abb6778e82f4bac038cc1a492b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__pointer__constraint_1a309986abb6778e82f4bac038cc1a492b" kindref="member">hint_x</ref>;</highlight></codeline>
<codeline lineno="1419" refid="structweston__pointer__constraint_1a9c5fb7aadfd8db4048cd6516ddcc0078" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__pointer__constraint_1a9c5fb7aadfd8db4048cd6516ddcc0078" kindref="member">hint_y</ref>;</highlight></codeline>
<codeline lineno="1420" refid="structweston__pointer__constraint_1a3c5710725d229e9cd0dc5b6ca39d84b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__pointer__constraint_1a3c5710725d229e9cd0dc5b6ca39d84b4" kindref="member">hint_x_pending</ref>;</highlight></codeline>
<codeline lineno="1421" refid="structweston__pointer__constraint_1a44f256161ff4942eb54808a0b92a5ea1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__pointer__constraint_1a44f256161ff4942eb54808a0b92a5ea1" kindref="member">hint_y_pending</ref>;</highlight></codeline>
<codeline lineno="1422" refid="structweston__pointer__constraint_1a2c63f96b19a360e7f806479b03b1d424" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__constraint_1a2c63f96b19a360e7f806479b03b1d424" kindref="member">hint_is_pending</ref>;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424" refid="structweston__pointer__constraint_1ab12460780ecdf53855c1fffc5fa345cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__pointer__constraint_1ab12460780ecdf53855c1fffc5fa345cb" kindref="member">pointer_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1425" refid="structweston__pointer__constraint_1a19a1c71aa8f0199a525c6f87c53a6fe9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__pointer__constraint_1a19a1c71aa8f0199a525c6f87c53a6fe9" kindref="member">surface_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1426" refid="structweston__pointer__constraint_1a5fb91060ed420411b649ee4947b95107" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__pointer__constraint_1a5fb91060ed420411b649ee4947b95107" kindref="member">surface_commit_listener</ref>;</highlight></codeline>
<codeline lineno="1427" refid="structweston__pointer__constraint_1a272b3b6b9f9e3e55b72c4d6ed4f69597" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__pointer__constraint_1a272b3b6b9f9e3e55b72c4d6ed4f69597" kindref="member">surface_activate_listener</ref>;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430" refid="structweston__surface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>{</highlight></codeline>
<codeline lineno="1431" refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__surface_1a1a91ebdf5cc858c25db4a1aca78fa990" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="1432" refid="structweston__surface_1ac6cffe8c4761faf4eafa539dd508b570" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__surface_1ac6cffe8c4761faf4eafa539dd508b570" kindref="member">destroy_signal</ref>;<sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>argument:<sp/>this<sp/>surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433" refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1434" refid="structweston__surface_1ae57dec9baed64110ab45ea384a3f4ea6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_signal<sp/><ref refid="structweston__surface_1ae57dec9baed64110ab45ea384a3f4ea6" kindref="member">commit_signal</ref>;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437" refid="structweston__surface_1ae331801d413dd52701ded0995519419c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__surface_1ae331801d413dd52701ded0995519419c" kindref="member">damage</ref>;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439" refid="structweston__surface_1ab587081c8482be3e8c68d6d806945aff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__surface_1ab587081c8482be3e8c68d6d806945aff" kindref="member">opaque</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>part<sp/>of<sp/>geometry,<sp/>see<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440" refid="structweston__surface_1ab288fca02a260a7eb9ca4d82b5b5f8e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_region32_t<sp/><ref refid="structweston__surface_1ab288fca02a260a7eb9ca4d82b5b5f8e1" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="1441" refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,<sp/><ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="1442" refid="structweston__surface_1a8230a81ebcdd41bf29e20e8270a57385" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__surface_1a8230a81ebcdd41bf29e20e8270a57385" kindref="member">ref_count</ref>;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>for<sp/>long-term<sp/>storage.<sp/><sp/>This<sp/>exists<sp/>for<sp/>book-keeping<sp/>while</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>iterating<sp/>over<sp/>surfaces<sp/>and<sp/>views</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447" refid="structweston__surface_1ae3c50e07ad19c86e6d62e75353ef94ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__surface_1ae3c50e07ad19c86e6d62e75353ef94ee" kindref="member">touched</ref>;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449" refid="structweston__surface_1a34c900dc44207a99101ce1d73886aa83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__surface_1a34c900dc44207a99101ce1d73886aa83" kindref="member">renderer_state</ref>;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451" refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__surface_1aea2a4f6f031c5a3b415ed60e10de73c1" kindref="member">views</ref>;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Which<sp/>output<sp/>to<sp/>vsync<sp/>this<sp/>surface<sp/>to.</highlight></codeline>
<codeline lineno="1455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Used<sp/>to<sp/>determine<sp/>whether<sp/>to<sp/>send<sp/>or<sp/>queue<sp/>frame<sp/>events,<sp/>and<sp/>for</highlight></codeline>
<codeline lineno="1456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>client-visible<sp/>syncing/throttling<sp/>tied<sp/>to<sp/>the<sp/>output</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>repaint<sp/>cycle.</highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459" refid="structweston__surface_1ae8d290fdb242cb764120c95fe33c3f58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structweston__surface_1ae8d290fdb242cb764120c95fe33c3f58" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>more<sp/>complete<sp/>representation<sp/>of<sp/>all<sp/>outputs<sp/>this<sp/>surface<sp/>is</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>displayed<sp/>on.</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465" refid="structweston__surface_1a0fbe47c63b1a9a07b10d5c9074841c2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__surface_1a0fbe47c63b1a9a07b10d5c9074841c2e" kindref="member">output_mask</ref>;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467" refid="structweston__surface_1afc7c31a38f39e63d09d2df93bb00af8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__surface_1afc7c31a38f39e63d09d2df93bb00af8d" kindref="member">frame_callback_list</ref>;</highlight></codeline>
<codeline lineno="1468" refid="structweston__surface_1a2f0dbf73244ea695e36cc5a2179299f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__surface_1a2f0dbf73244ea695e36cc5a2179299f0" kindref="member">feedback_list</ref>;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470" refid="structweston__surface_1affec03529ce882666716424fd468f575" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref><sp/><ref refid="structweston__surface_1affec03529ce882666716424fd468f575" kindref="member">buffer_ref</ref>;</highlight></codeline>
<codeline lineno="1471" refid="structweston__surface_1ad5175fcb5fb15c438fd9dcab2f596922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__viewport" kindref="compound">weston_buffer_viewport</ref><sp/><ref refid="structweston__surface_1ad5175fcb5fb15c438fd9dcab2f596922" kindref="member">buffer_viewport</ref>;</highlight></codeline>
<codeline lineno="1472" refid="structweston__surface_1ac521a7fb7f717883c20f5b1c1af1fe95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__surface_1ac521a7fb7f717883c20f5b1c1af1fe95" kindref="member">width_from_buffer</ref>;<sp/></highlight><highlight class="comment">/*<sp/>before<sp/>applying<sp/>viewport<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473" refid="structweston__surface_1a21d66af15be67d515c0ac2025c38bf45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__surface_1a21d66af15be67d515c0ac2025c38bf45" kindref="member">height_from_buffer</ref>;</highlight></codeline>
<codeline lineno="1474" refid="structweston__surface_1a2a50fa49f7663968c8129721357270de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__surface_1a2a50fa49f7663968c8129721357270de" kindref="member">keep_buffer</ref>;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>backends<sp/>to<sp/>prevent<sp/>early<sp/>release<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wp_viewport<sp/>resource<sp/>for<sp/>this<sp/>surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477" refid="structweston__surface_1a0406c0010cab6e0ac6547d4c20b14339" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__surface_1a0406c0010cab6e0ac6547d4c20b14339" kindref="member">viewport_resource</ref>;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>pending<sp/>state,<sp/>that<sp/>wl_surface.commit<sp/>will<sp/>apply.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480" refid="structweston__surface_1a308d5d1f9b1a3d2043a60be0cd806842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/><ref refid="structweston__surface_1a308d5d1f9b1a3d2043a60be0cd806842" kindref="member">pending</ref>;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Matrices<sp/>representing<sp/>of<sp/>the<sp/>full<sp/>transformation<sp/>between</highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>buffer<sp/>and<sp/>surface<sp/>coordinates.<sp/><sp/>These<sp/>matrices<sp/>are<sp/>updated</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>using<sp/>the<sp/>weston_surface_build_buffer_matrix<sp/>function.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485" refid="structweston__surface_1a0c94cf9a79c83046e9fc0df026eaa800" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/><ref refid="structweston__surface_1a0c94cf9a79c83046e9fc0df026eaa800" kindref="member">buffer_to_surface_matrix</ref>;</highlight></codeline>
<codeline lineno="1486" refid="structweston__surface_1afa868503b7b18977ae4691bf713cc81c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__matrix" kindref="compound">weston_matrix</ref><sp/><ref refid="structweston__surface_1afa868503b7b18977ae4691bf713cc81c" kindref="member">surface_to_buffer_matrix</ref>;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>non-NULL,<sp/>this<sp/>function<sp/>will<sp/>be<sp/>called<sp/>on</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wl_surface::commit<sp/>after<sp/>a<sp/>new<sp/>buffer<sp/>has<sp/>been<sp/>set<sp/>up<sp/>for</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>surface.<sp/>The<sp/>integer<sp/>params<sp/>are<sp/>the<sp/>sx<sp/>and<sp/>sy</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>parameters<sp/>supplied<sp/>to<sp/>wl_surface::attach.</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494" refid="structweston__surface_1acbbe30b40326bd82d7765a1c8a2f7cf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structweston__surface_1acbbe30b40326bd82d7765a1c8a2f7cf9" kindref="member">committed</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*es,<sp/>int32_t<sp/>sx,<sp/>int32_t<sp/>sy);</highlight></codeline>
<codeline lineno="1495" refid="structweston__surface_1a8252a976b6e444f98377e6a51fc62154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__surface_1a8252a976b6e444f98377e6a51fc62154" kindref="member">committed_private</ref>;</highlight></codeline>
<codeline lineno="1496" refid="structweston__surface_1ad4d4d818ede7bc46eeed7119176863e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structweston__surface_1ad4d4d818ede7bc46eeed7119176863e8" kindref="member">get_label</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parent&apos;s<sp/>list<sp/>of<sp/>its<sp/>sub-surfaces,<sp/>weston_subsurface:parent_link.</highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Contains<sp/>also<sp/>the<sp/>parent<sp/>itself<sp/>as<sp/>a<sp/>dummy<sp/>weston_subsurface,</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>the<sp/>list<sp/>is<sp/>not<sp/>empty.</highlight></codeline>
<codeline lineno="1501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502" refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__surface_1af78d679d0bacd375692fb524889286cd" kindref="member">subsurface_list</ref>;<sp/></highlight><highlight class="comment">/*<sp/>weston_subsurface::parent_link<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503" refid="structweston__surface_1a51fd08490515915c37188ce1cd9b7b98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__surface_1a51fd08490515915c37188ce1cd9b7b98" kindref="member">subsurface_list_pending</ref>;<sp/></highlight><highlight class="comment">/*<sp/>...::parent_link_pending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>tracking<sp/>protocol<sp/>role<sp/>assignments.<sp/>Different<sp/>roles<sp/>may</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>the<sp/>same<sp/>configure<sp/>hook,<sp/>e.g.<sp/>in<sp/>shell.c.<sp/>Configure<sp/>hook</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>may<sp/>get<sp/>reset,<sp/>this<sp/>will<sp/>not.</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>XXX:<sp/>map<sp/>configure<sp/>functions<sp/>1:1<sp/>to<sp/>roles,<sp/>and<sp/>never<sp/>reset<sp/>it,</highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>replace<sp/>role_name<sp/>with<sp/>configure.</highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512" refid="structweston__surface_1a9e7e22587531e6ead13ef1513105c182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__surface_1a9e7e22587531e6ead13ef1513105c182" kindref="member">role_name</ref>;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514" refid="structweston__surface_1a01c08279440b8bcb241a6dd61956217c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__surface_1a01c08279440b8bcb241a6dd61956217c" kindref="member">is_mapped</ref>;</highlight></codeline>
<codeline lineno="1515" refid="structweston__surface_1a739863882d20b0be0cca2be06592d82a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__surface_1a739863882d20b0be0cca2be06592d82a" kindref="member">is_opaque</ref>;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>An<sp/>list<sp/>of<sp/>per<sp/>seat<sp/>pointer<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518" refid="structweston__surface_1a8f42f1bc6cf916f6c1b557a4bbdf0be6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__surface_1a8f42f1bc6cf916f6c1b557a4bbdf0be6" kindref="member">pointer_constraints</ref>;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zwp_surface_synchronization_v1<sp/>resource<sp/>for<sp/>this<sp/>surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521" refid="structweston__surface_1a9a1d1461621f1debc9014c345c601a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__surface_1a9a1d1461621f1debc9014c345c601a08" kindref="member">synchronization_resource</ref>;</highlight></codeline>
<codeline lineno="1522" refid="structweston__surface_1a575763c3f0545400d2269b6605c0f717" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__surface_1a575763c3f0545400d2269b6605c0f717" kindref="member">acquire_fence_fd</ref>;</highlight></codeline>
<codeline lineno="1523" refid="structweston__surface_1ad07b0407bd73441852ec1336c3b92118" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__release__reference" kindref="compound">weston_buffer_release_reference</ref><sp/><ref refid="structweston__surface_1ad07b0407bd73441852ec1336c3b92118" kindref="member">buffer_release_ref</ref>;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525" refid="structweston__surface_1a64f9fe73b0da889194bbfee96e0aa69e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/><ref refid="structweston__surface_1a64f9fe73b0da889194bbfee96e0aa69e" kindref="member">desired_protection</ref>;</highlight></codeline>
<codeline lineno="1526" refid="structweston__surface_1a2a8f981bbb213440de831fdf1fdd46da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/><ref refid="structweston__surface_1a2a8f981bbb213440de831fdf1fdd46da" kindref="member">current_protection</ref>;</highlight></codeline>
<codeline lineno="1527" refid="structweston__surface_1a2a8174daa5c86a0d2bae73d4cbf7a676" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a149b1ac0bd76933ff03da35d64709208" kindref="member">weston_surface_protection_mode</ref><sp/><ref refid="structweston__surface_1a2a8174daa5c86a0d2bae73d4cbf7a676" kindref="member">protection_mode</ref>;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530" refid="structweston__subsurface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__subsurface" kindref="compound">weston_subsurface</ref><sp/>{</highlight></codeline>
<codeline lineno="1531" refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structweston__subsurface_1acf8f406be342d9c5d716b817ea3af930" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>guaranteed<sp/>to<sp/>be<sp/>valid<sp/>and<sp/>non-NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534" refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__subsurface_1a4dab7e6340277e0c9d43d62271b27a01" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="1535" refid="structweston__subsurface_1a515361851e2ddd888abb466e3c242836" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__subsurface_1a515361851e2ddd888abb466e3c242836" kindref="member">surface_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>can<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538" refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__subsurface_1a1e3b79e01927b71ed0811d73e60ab94c" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="1539" refid="structweston__subsurface_1a544441f90ccc084214e61c221777d1ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__subsurface_1a544441f90ccc084214e61c221777d1ea" kindref="member">parent_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1540" refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__subsurface_1a12c614c5cf8f9e19621f05ec04d13681" kindref="member">parent_link</ref>;</highlight></codeline>
<codeline lineno="1541" refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__subsurface_1a0139105626138a12df18c213390e5f49" kindref="member">parent_link_pending</ref>;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1544" refid="structweston__subsurface_1a8baddc94439e6119d2caeae21756811f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__subsurface_1a8baddc94439e6119d2caeae21756811f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1545" refid="structweston__subsurface_1a6b10500dc4cefdee48e5d3b4b9040f97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__subsurface_1a6b10500dc4cefdee48e5d3b4b9040f97" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1546" refid="structweston__subsurface_1aab177c8d03af1da2a85c620a9025f3cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface_1aab177c8d03af1da2a85c620a9025f3cd" kindref="member">set</ref>;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structweston__subsurface_1ad502bb28897f442660a7c7649bd9358d" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549" refid="structweston__subsurface_1ada2212b09abac159f4e883c022600bba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface_1ada2212b09abac159f4e883c022600bba" kindref="member">has_cached_data</ref>;</highlight></codeline>
<codeline lineno="1550" refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface__state" kindref="compound">weston_surface_state</ref><sp/><ref refid="structweston__subsurface_1aee81eaa018c9f92faf8fa14b84a9d127" kindref="member">cached</ref>;</highlight></codeline>
<codeline lineno="1551" refid="structweston__subsurface_1ae5bd19834250980fc6455cc87015c999" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer__reference" kindref="compound">weston_buffer_reference</ref><sp/><ref refid="structweston__subsurface_1ae5bd19834250980fc6455cc87015c999" kindref="member">cached_buffer_ref</ref>;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sub-surface<sp/>has<sp/>been<sp/>reordered;<sp/>need<sp/>to<sp/>apply<sp/>damage.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554" refid="structweston__subsurface_1a94645d1d81a3ed9addee4ac8eaac8972" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__subsurface_1a94645d1d81a3ed9addee4ac8eaac8972" kindref="member">reordered</ref>;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556" refid="structweston__subsurface_1a36e1633bc4e3b2fe7a0fe37cb092e3e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Used<sp/>for<sp/>constructing<sp/>the<sp/>view<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559" refid="structweston__subsurface_1ab93b7ffd6d26e3c4089a36dd700c7868" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structweston__subsurface_1ab93b7ffd6d26e3c4089a36dd700c7868" kindref="member">unused_views</ref>;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562" refid="structprotected__surface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structprotected__surface" kindref="compound">protected_surface</ref><sp/>{</highlight></codeline>
<codeline lineno="1563" refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structprotected__surface_1af2d1f22420aa3a2f55e9c2cf8fd25872" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="1564" refid="structprotected__surface_1a570b892f3f2e0ce6db1812215f81417c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structprotected__surface_1a570b892f3f2e0ce6db1812215f81417c" kindref="member">surface_destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1565" refid="structprotected__surface_1aa40b1e3218e17c8c140de83036091348" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structprotected__surface_1aa40b1e3218e17c8c140de83036091348" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="1566" refid="structprotected__surface_1a6402de58375bd915ca8a28b6e0c02f3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*<ref refid="structprotected__surface_1a6402de58375bd915ca8a28b6e0c02f3b" kindref="member">protection_resource</ref>;</highlight></codeline>
<codeline lineno="1567" refid="structprotected__surface_1a457cc1d9588fd2d69429d434874bc28e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>*<ref refid="structprotected__surface_1a457cc1d9588fd2d69429d434874bc28e" kindref="member">cp_backptr</ref>;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570" refid="structcontent__protection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcontent__protection" kindref="compound">content_protection</ref><sp/>{</highlight></codeline>
<codeline lineno="1571" refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structcontent__protection_1a5efcf08fd6cdf9743341a4b9b8ceeff8" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="1572" refid="structcontent__protection_1aaf17187dbaffba4b496a61255aaed109" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structcontent__protection_1aaf17187dbaffba4b496a61255aaed109" kindref="member">destroy_listener</ref>;</highlight></codeline>
<codeline lineno="1573" refid="structcontent__protection_1a85a7247299b8af09797c3e2af20cd92e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__log__scope" kindref="compound">weston_log_scope</ref><sp/>*<ref refid="structcontent__protection_1a85a7247299b8af09797c3e2af20cd92e" kindref="member">debug</ref>;</highlight></codeline>
<codeline lineno="1574" refid="structcontent__protection_1a8e39824cc2b131956732d99ddbd27e4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_list<sp/><ref refid="structcontent__protection_1a8e39824cc2b131956732d99ddbd27e4a" kindref="member">protected_list</ref>;</highlight></codeline>
<codeline lineno="1575" refid="structcontent__protection_1acdaf51b0f4db5fb0c0d9dcf9b8ab7cfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source<sp/>*<ref refid="structcontent__protection_1acdaf51b0f4db5fb0c0d9dcf9b8ab7cfe" kindref="member">surface_protection_update</ref>;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579" refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51" kindref="member">weston_key_state_update</ref><sp/>{</highlight></codeline>
<codeline lineno="1580" refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a816b30ccdbbe24e29682edc1fca8f45d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a816b30ccdbbe24e29682edc1fca8f45d" kindref="member">STATE_UPDATE_AUTOMATIC</ref>,</highlight></codeline>
<codeline lineno="1581" refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a46aec089b299b52eac5d2496a211522c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a46aec089b299b52eac5d2496a211522c" kindref="member">STATE_UPDATE_NONE</ref>,</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584" refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4ba" kindref="member">weston_activate_flag</ref><sp/>{</highlight></codeline>
<codeline lineno="1585" refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baa0012c23a7037d7d0881c41e06d11ba60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baa0012c23a7037d7d0881c41e06d11ba60" kindref="member">WESTON_ACTIVATE_FLAG_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1586" refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baa41ea78e42446fa020fa0711a90bb3758" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baa41ea78e42446fa020fa0711a90bb3758" kindref="member">WESTON_ACTIVATE_FLAG_CONFIGURE</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="1587" refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baaf3b8b43f8e2c13134d83f59acf0068c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a4ebb4352b69aafb40607fc7f5564d4baaf3b8b43f8e2c13134d83f59acf0068c7" kindref="member">WESTON_ACTIVATE_FLAG_CLICKED</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><ref refid="libweston_8h_1a727f0b7833b706014790d029ba86684c" kindref="member">weston_version</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*major,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*minor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*micro);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><ref refid="libweston_8h_1a282f55c3bc4fcad342539921f04cc484" kindref="member">weston_view_set_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><ref refid="libweston_8h_1a9605e8abe1240aa6cbe7abdd2fc7f2be" kindref="member">weston_view_update_transform</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><ref refid="libweston_8h_1a2c99bb32d9b9c6fa15e4a129fce7ce30" kindref="member">weston_view_geometry_dirty</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><ref refid="libweston_8h_1a1666f1b9cb32183712d16d893af00dae" kindref="member">weston_view_to_global_float</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><ref refid="libweston_8h_1a0e9c9a3eaa8a28e392585c3fc0a92c0f" kindref="member">weston_view_from_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/>*vx,<sp/>int32_t<sp/>*vy);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><ref refid="libweston_8h_1a4f40c4fe8494126d487f957034d73320" kindref="member">weston_view_from_global_fixed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y,</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*vx,<sp/>wl_fixed_t<sp/>*vy);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><ref refid="libweston_8h_1a55b0b308f8ca8dfe27622277eafabacd" kindref="member">weston_view_activate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><ref refid="libweston_8h_1aae75251c5c98be717a0513bed342264c" kindref="member">notify_modifiers</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat,<sp/>uint32_t<sp/>serial);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><ref refid="libweston_8h_1adcf675a1f1ac2cea92e8ca52900b89c4" kindref="member">weston_layer_entry_insert</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/>*list,</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/>*entry);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><ref refid="libweston_8h_1a30169d037f8e3aa397fb354f9ee3f5a5" kindref="member">weston_layer_entry_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer__entry" kindref="compound">weston_layer_entry</ref><sp/>*entry);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><ref refid="libweston_8h_1ab4294fb27b3079ee70660a0975d3e0e5" kindref="member">weston_layer_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer,</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><ref refid="libweston_8h_1a736341961367a84eac0b635b94eefc61" kindref="member">weston_layer_set_position</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer,</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5c" kindref="member">weston_layer_position</ref><sp/>position);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><ref refid="libweston_8h_1aeea455f7de4acc7dda325e8dda148caa" kindref="member">weston_layer_unset_position</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><ref refid="libweston_8h_1a3bad282ec84d83635ede2e78f0861f6c" kindref="member">weston_layer_set_mask</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><ref refid="libweston_8h_1aa94f16fd96514709edcd9b4a0163378c" kindref="member">weston_layer_set_mask_infinite</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><ref refid="libweston_8h_1aa3710db18821fd6bb0226c49e22de3f9" kindref="member">weston_layer_mask_is_infinite</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/>*layer);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>An<sp/>invalid<sp/>flag<sp/>in<sp/>presented_flags<sp/>to<sp/>catch<sp/>logic<sp/>errors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646" refid="libweston_8h_1ac57ab20ccb8a4f9f66d9d2f9bb5500d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WP_PRESENTATION_FEEDBACK_INVALID<sp/>(1U<sp/>&lt;&lt;<sp/>31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><ref refid="group__output_1ga0464b27eac6a50ce14d0db08958e9489" kindref="member">weston_output_schedule_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><ref refid="group__compositor_1ga8477eedbbb0660db00b0c1be93c913db" kindref="member">weston_compositor_schedule_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><ref refid="group__compositor_1ga674d4dd1642c36ca73a7ddc246a4b411" kindref="member">weston_compositor_damage_all</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><ref refid="group__compositor_1ga7efd2631f78297037a9ba5668b5fa9ac" kindref="member">weston_compositor_wake</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><ref refid="group__compositor_1ga0d01f39e15e169b13384be82bb05370d" kindref="member">weston_compositor_sleep</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><ref refid="group__compositor_1gad2c7ea85353aed21f10e1e663e216ae0" kindref="member">weston_compositor_pick_view</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/>wl_fixed_t<sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>*sx,<sp/>wl_fixed_t<sp/>*sy);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__binding" kindref="compound">weston_binding</ref>;</highlight></codeline>
<codeline lineno="1665" refid="libweston_8h_1a84c78b0176d92da0fe7f354c9de4e38f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="libweston_8h_1a84c78b0176d92da0fe7f354c9de4e38f" kindref="member">weston_key_binding_handler_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key,</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__binding" kindref="compound">weston_binding</ref><sp/>*</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><ref refid="libweston_8h_1ac8d58d8d956a2212f003e6b78ccc467d" kindref="member">weston_compositor_add_key_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__binding_1aa67a253d820fa0a859718dc7e56e5d37" kindref="member">key</ref>,</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/><ref refid="structweston__binding_1a2e195c996c9ff8dbdd01af0870dcf476" kindref="member">modifier</ref>,</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a84c78b0176d92da0fe7f354c9de4e38f" kindref="member">weston_key_binding_handler_t</ref><sp/>binding,</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__binding_1ac136658b15407d64d71c670fda280ba9" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__binding" kindref="compound">weston_binding</ref><sp/>*</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><ref refid="libweston_8h_1a6048cc0c18488b35bb0d139d7e3fc2af" kindref="member">weston_compositor_add_debug_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__binding_1aa67a253d820fa0a859718dc7e56e5d37" kindref="member">key</ref>,</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a84c78b0176d92da0fe7f354c9de4e38f" kindref="member">weston_key_binding_handler_t</ref><sp/>binding,</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__binding_1ac136658b15407d64d71c670fda280ba9" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681" refid="libweston_8h_1ab07e18845de33d478c4ce8e154babfe0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="libweston_8h_1ab07e18845de33d478c4ce8e154babfe0" kindref="member">weston_modifier_binding_handler_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>,</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/>modifier,</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__binding" kindref="compound">weston_binding</ref><sp/>*</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><ref refid="libweston_8h_1ad378ada6abd4ba81ae0da7a1d2b7d358" kindref="member">weston_compositor_add_modifier_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/><ref refid="structweston__binding_1a2e195c996c9ff8dbdd01af0870dcf476" kindref="member">modifier</ref>,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1ab07e18845de33d478c4ce8e154babfe0" kindref="member">weston_modifier_binding_handler_t</ref><sp/>binding,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__binding_1ac136658b15407d64d71c670fda280ba9" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690" refid="libweston_8h_1a8f95f19dde1eb1075f4f233d2f668f91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="libweston_8h_1a8f95f19dde1eb1075f4f233d2f668f91" kindref="member">weston_button_binding_handler_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>button,</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__binding" kindref="compound">weston_binding</ref><sp/>*</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><ref refid="libweston_8h_1a03c90715eacac780e0d2c2c3e8f746ee" kindref="member">weston_compositor_add_button_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__binding_1ac78ed4fce87b812338bd455a7a210d7c" kindref="member">button</ref>,</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/><ref refid="structweston__binding_1a2e195c996c9ff8dbdd01af0870dcf476" kindref="member">modifier</ref>,</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a8f95f19dde1eb1075f4f233d2f668f91" kindref="member">weston_button_binding_handler_t</ref><sp/>binding,</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__binding_1ac136658b15407d64d71c670fda280ba9" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701" refid="libweston_8h_1a20cceeb02a0017f5eac24db0e0efb021" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="libweston_8h_1a20cceeb02a0017f5eac24db0e0efb021" kindref="member">weston_touch_binding_handler_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>,</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__binding" kindref="compound">weston_binding</ref><sp/>*</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><ref refid="libweston_8h_1a9c0f3c25e274938d545f7d92d6122d2e" kindref="member">weston_compositor_add_touch_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/><ref refid="structweston__binding_1a2e195c996c9ff8dbdd01af0870dcf476" kindref="member">modifier</ref>,</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a20cceeb02a0017f5eac24db0e0efb021" kindref="member">weston_touch_binding_handler_t</ref><sp/>binding,</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__binding_1ac136658b15407d64d71c670fda280ba9" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710" refid="libweston_8h_1a8fdfc58407b3cb20ae86afb627b3e7c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="libweston_8h_1a8fdfc58407b3cb20ae86afb627b3e7c6" kindref="member">weston_axis_binding_handler_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>,</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>*time,</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>*event,</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__binding" kindref="compound">weston_binding</ref><sp/>*</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><ref refid="libweston_8h_1a705c5af55d8d46e686e9ed9994349a1d" kindref="member">weston_compositor_add_axis_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__binding_1a72c6b1f38cf003e1209835c564c160d0" kindref="member">axis</ref>,</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1adc0293d9193b23154a60f0e64ac6896f" kindref="member">weston_keyboard_modifier</ref><sp/><ref refid="structweston__binding_1a2e195c996c9ff8dbdd01af0870dcf476" kindref="member">modifier</ref>,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a8fdfc58407b3cb20ae86afb627b3e7c6" kindref="member">weston_axis_binding_handler_t</ref><sp/>binding,</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__binding_1ac136658b15407d64d71c670fda280ba9" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><ref refid="libweston_8h_1ac05f4cdd96d5aa388f5104d88f24f7a8" kindref="member">weston_binding_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__binding" kindref="compound">weston_binding</ref><sp/>*binding);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><ref refid="libweston_8h_1aedbd0ae0610f2df3923900339be0be74" kindref="member">weston_install_debug_key_binding</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mod);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><ref refid="group__compositor_1gad227efb7ecb34f771ad93dc86fdb5bcf" kindref="member">weston_compositor_set_default_pointer_grab</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__pointer__grab__interface" kindref="compound">weston_pointer_grab_interface</ref><sp/>*interface);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><ref refid="libweston_8h_1a1e3347a74e72ecb0aa7617dbf89b76fb" kindref="member">weston_surface_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__surface_1a41c8e02bbd08f7a51960586aff9f4eac" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><ref refid="libweston_8h_1aa7c65b03520dde2e12d5a35f444435d5" kindref="member">weston_view_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><ref refid="libweston_8h_1a3b0df14d913003992656e8f791a6da9f" kindref="member">weston_view_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><ref refid="libweston_8h_1ae1df17820e004a35b62f4a923066e9fd" kindref="member">weston_view_set_position</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><ref refid="libweston_8h_1a7fe0cf860d67bd9ee79c561a95adb1d5" kindref="member">weston_view_set_transform_parent</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view_1abbc04f800f790fb29bea016301992a9a" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><ref refid="libweston_8h_1a8b2efecffa6f4d76ea628be8363723d1" kindref="member">weston_view_set_mask</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view,</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ac15339472d5d777e401e8444b8537e22" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__view_1ad3d9728320b27a2a368e092fb7b09b9c" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><ref refid="libweston_8h_1a7b5c79b554c9394f17b2d3a1fd7c5607" kindref="member">weston_view_set_mask_infinite</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><ref refid="libweston_8h_1ab6d0b425ed3ea36224d7fe3f3c5d4667" kindref="member">weston_view_is_mapped</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><ref refid="libweston_8h_1a60b2b361cc447823985669f9743e8e29" kindref="member">weston_view_schedule_repaint</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><ref refid="libweston_8h_1a13f5eb8c585d0bd1598d04ce4b318e7f" kindref="member">weston_surface_is_mapped</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><ref refid="libweston_8h_1ab9e73efa632b2b2aa47c1b460f08e16f" kindref="member">weston_surface_set_size</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><ref refid="libweston_8h_1a37abee2fc874d8a6394731696eb5be5c" kindref="member">weston_surface_damage</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><ref refid="libweston_8h_1a3a8dd59c945611948e04e68ba09248d7" kindref="member">weston_view_damage_below</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><ref refid="libweston_8h_1af34d4b676e7ce4e41a963cd0b41c6dc8" kindref="member">weston_view_unmap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*view);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><ref refid="libweston_8h_1a80d606617df1553ec673787ebcfa2ba5" kindref="member">weston_surface_unmap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><ref refid="libweston_8h_1a8868325c450a7c04cd3e1cfec22b7104" kindref="member">weston_surface_get_main_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><ref refid="libweston_8h_1a77ddbc1401698987792d00d6e7e3407d" kindref="member">weston_surface_set_role</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__surface_1a9e7e22587531e6ead13ef1513105c182" kindref="member">role_name</ref>,</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*error_resource,</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>error_code);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><ref refid="libweston_8h_1a0ece5eb3f051d927072a77f531cd2a56" kindref="member">weston_surface_get_role</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><ref refid="libweston_8h_1a15415df8115e81631c8dae987b7ef40c" kindref="member">weston_surface_set_label_func</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*desc)(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*,</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><ref refid="libweston_8h_1af05cf4ebc640cb40915253335538b4cb" kindref="member">weston_surface_get_content_size</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structweston__surface_1a645a3cfb49c05e33bd53f5e9896ea390" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structweston__surface_1a24ce05497c254ad0718c34d4fc3f68d8" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__geometry" kindref="compound">weston_geometry</ref></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><ref refid="libweston_8h_1a4a639f0bac3d1fb3f0c464ea0e6f79e6" kindref="member">weston_surface_get_bounding_box</ref>(struct<sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><ref refid="libweston_8h_1a353f17fe827e1c25b87e7e964e8d9892" kindref="member">weston_surface_copy_content</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_y,</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__geometry_1a477e159bfa1399930d7554834bca0578" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__geometry_1afaa61c8f08bcea5f12fec0bf38a91a86" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><ref refid="libweston_8h_1a31d4c4886f3f3d7e363a732225462faf" kindref="member">weston_buffer_from_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*<ref refid="structweston__buffer_1a420d98068b5cb266b9ec3ad696333cf9" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><ref refid="group__compositor_1ga8e5847024d92d76171a144d15c5452da" kindref="member">weston_compositor_get_time</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><ref refid="group__compositor_1ga4f29f61ed5f73015798a14bdabb73dcc" kindref="member">weston_compositor_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><ref refid="group__compositor_1ga081445a62197fac7bcbeeab449261373" kindref="member">weston_compositor_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__log__context" kindref="compound">weston_log_context</ref><sp/>*log_ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__compositor_1a21f2b4d090a79fff8da494ee2774cef6" kindref="member">user_data</ref>,</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__testsuite__data" kindref="compound">weston_testsuite_data</ref><sp/>*<ref refid="vertex-clip-test_8c_1a6115133101abda4c59ea992ce2982aeb" kindref="member">test_data</ref>);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><ref refid="group__compositor_1gaa92b2b7d2b73302bf143e1c3245045f0" kindref="member">weston_compositor_get_test_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><ref refid="libweston_8h_1a91193ce4a068dee9a1cf248a81a049bc" kindref="member">weston_compositor_add_destroy_listener_once</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_notify_func_t<sp/>destroy_handler);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832" refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036" kindref="member">weston_compositor_backend</ref><sp/>{</highlight></codeline>
<codeline lineno="1833" refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a62a6d338e4bbfd69283bcecd0c4146d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a62a6d338e4bbfd69283bcecd0c4146d3" kindref="member">WESTON_BACKEND_DRM</ref>,</highlight></codeline>
<codeline lineno="1834" refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a89d4a284bb5b45264384b20211a49dd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a89d4a284bb5b45264384b20211a49dd4" kindref="member">WESTON_BACKEND_FBDEV</ref>,</highlight></codeline>
<codeline lineno="1835" refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a27dd7bf7e18276a1bcdc28f659f22813" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a27dd7bf7e18276a1bcdc28f659f22813" kindref="member">WESTON_BACKEND_HEADLESS</ref>,</highlight></codeline>
<codeline lineno="1836" refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a7dde123c05411479dcb853cfbab3bf19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a7dde123c05411479dcb853cfbab3bf19" kindref="member">WESTON_BACKEND_RDP</ref>,</highlight></codeline>
<codeline lineno="1837" refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a5ca3bb9d37a3b99dc829aa823a1f5e7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a5ca3bb9d37a3b99dc829aa823a1f5e7f" kindref="member">WESTON_BACKEND_WAYLAND</ref>,</highlight></codeline>
<codeline lineno="1838" refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a3b8188668bc350c2614b4f0b8d400edd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036a3b8188668bc350c2614b4f0b8d400edd" kindref="member">WESTON_BACKEND_X11</ref>,</highlight></codeline>
<codeline lineno="1839"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><ref refid="group__compositor_1ga14405f588f9880d19e0764af6243e5ef" kindref="member">weston_compositor_load_backend</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a6523745d75d8e1a9a9b8aec9c8c68036" kindref="member">weston_compositor_backend</ref><sp/><ref refid="structweston__compositor_1af5fb998fe634d54b5c0d358c33bc0413" kindref="member">backend</ref>,</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__backend__config" kindref="compound">weston_backend_config</ref><sp/>*config_base);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><ref refid="group__compositor_1gaf4e53253ff94f741ee4a04e7e52e302f" kindref="member">weston_compositor_exit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><ref refid="group__compositor_1gaaecdc50a0ea2aebbf36a22db50e62385" kindref="member">weston_compositor_get_user_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><ref refid="group__compositor_1ga6299e93b80dfd70bd2c9c1603417f940" kindref="member">weston_compositor_exit_with_code</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor_1a1fa6ab0d71bc8d7d605ac607faa9552f" kindref="member">exit_code</ref>);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><ref refid="libweston_8h_1a28dd8782c78da83f36a046f2c24535e8" kindref="member">weston_output_update_zoom</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><ref refid="libweston_8h_1af307dccfaf6e7c83fe946f9760a630a3" kindref="member">weston_output_activate_zoom</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><ref refid="group__output_1ga76ab2121852bb7a085ac23abaac35bdd" kindref="member">weston_output_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/>*</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><ref refid="group__output_1ga0678ba130cd10a2c92720a2decfe7aeb" kindref="member">weston_output_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_notify_func_t<sp/>notify);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><ref refid="libweston_8h_1a9f979dcc0b012fa585f4393d774fe053" kindref="member">weston_compositor_set_xkb_rule_names</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xkb_rule_names<sp/>*names);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>String<sp/>literal<sp/>of<sp/>spaces,<sp/>the<sp/>same<sp/>width<sp/>as<sp/>the<sp/>timestamp.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868" refid="libweston_8h_1a4dcb9f8540ab54e157a5237c5354a203" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STAMP_SPACE<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873" refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>ap);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><ref refid="group__wlog_1gaae64561b04016b5b060befc9b5f5fb85" kindref="member">weston_log_set_handler</ref>(<ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref><sp/>log,<sp/><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref><sp/>cont);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((format<sp/>(printf,<sp/>1,<sp/>2)));</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><ref refid="group__wlog_1gaa0016cb4379eb39a57ac3be92f19ffa9" kindref="member">weston_log_continue</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((format<sp/>(printf,<sp/>1,<sp/>2)));</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883" refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597" refkind="member"><highlight class="normal">enum<sp/><ref refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597" kindref="member">weston_screenshooter_outcome</ref><sp/>{</highlight></codeline>
<codeline lineno="1884" refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a15572492c6051a5b07a9f63dae44e7c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a15572492c6051a5b07a9f63dae44e7c6" kindref="member">WESTON_SCREENSHOOTER_SUCCESS</ref>,</highlight></codeline>
<codeline lineno="1885" refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a5bbf640d4c011dd5762c536da481200c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a5bbf640d4c011dd5762c536da481200c" kindref="member">WESTON_SCREENSHOOTER_NO_MEMORY</ref>,</highlight></codeline>
<codeline lineno="1886" refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a3d179b261161f6059e95f4f42d16efcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597a3d179b261161f6059e95f4f42d16efcc" kindref="member">WESTON_SCREENSHOOTER_BAD_BUFFER</ref></highlight></codeline>
<codeline lineno="1887"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889" refid="libweston_8h_1a98320969b064cca70f7b47066c792cd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="libweston_8h_1a98320969b064cca70f7b47066c792cd6" kindref="member">weston_screenshooter_done_func_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a3aab23652ab88eb09d27a041a335e597" kindref="member">weston_screenshooter_outcome</ref><sp/>outcome);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><ref refid="libweston_8h_1acbd7d685ea0272fe7e26ba5dba9d650f" kindref="member">weston_screenshooter_shoot</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__buffer" kindref="compound">weston_buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a98320969b064cca70f7b47066c792cd6" kindref="member">weston_screenshooter_done_func_t</ref><sp/>done,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__recorder" kindref="compound">weston_recorder</ref><sp/>*</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><ref refid="libweston_8h_1a45d3aadf969f0360b6c7db78a4dbcf02" kindref="member">weston_recorder_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><ref refid="libweston_8h_1abf73149f28c462c3da37da5483140770" kindref="member">weston_recorder_stop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__recorder" kindref="compound">weston_recorder</ref><sp/>*recorder);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref>;</highlight></codeline>
<codeline lineno="1900" refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*<ref refid="structweston__view__animation_1ac4d0564077c31deb39edafbc73898790" kindref="member">animation</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view__animation_1a0142a7a652b223171ff2c2d90a53a1f0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><ref refid="libweston_8h_1aae530da10fd186078ae3c239c62a7df1" kindref="member">weston_view_animation_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*<ref refid="structweston__view__animation_1ac4d0564077c31deb39edafbc73898790" kindref="member">animation</ref>);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><ref refid="libweston_8h_1a017dec24b5d39eb7813245961905531a" kindref="member">weston_zoom_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view__animation_1a143b69b38180430c2446df1464264122" kindref="member">view</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation_1a3b558ff7817cac7c51c00f267563f6ca" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation_1a47b7b7ae4d676c4f8ec2844d5a990815" kindref="member">stop</ref>,</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref><sp/><ref refid="structweston__view__animation_1a606d2f7d9e846eb2f7a62654ecd9ba54" kindref="member">done</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view__animation_1a0142a7a652b223171ff2c2d90a53a1f0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><ref refid="libweston_8h_1add3af7fd8ec0e72c525157027954c3ef" kindref="member">weston_fade_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view__animation_1a143b69b38180430c2446df1464264122" kindref="member">view</ref>,</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation_1a3b558ff7817cac7c51c00f267563f6ca" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>end,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref><sp/><ref refid="structweston__view__animation_1a606d2f7d9e846eb2f7a62654ecd9ba54" kindref="member">done</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view__animation_1a0142a7a652b223171ff2c2d90a53a1f0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><ref refid="libweston_8h_1ad076838d095a0a32752ae9bf13156632" kindref="member">weston_move_scale_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view__animation_1a143b69b38180430c2446df1464264122" kindref="member">view</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy,</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation_1a3b558ff7817cac7c51c00f267563f6ca" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>end,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reverse,</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref><sp/><ref refid="structweston__view__animation_1a606d2f7d9e846eb2f7a62654ecd9ba54" kindref="member">done</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view__animation_1a0142a7a652b223171ff2c2d90a53a1f0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><ref refid="libweston_8h_1a861b34f14f178f47ad848c245b51d000" kindref="member">weston_move_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view__animation_1a143b69b38180430c2446df1464264122" kindref="member">view</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy,</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation_1a3b558ff7817cac7c51c00f267563f6ca" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>end,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reverse,</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref><sp/><ref refid="structweston__view__animation_1a606d2f7d9e846eb2f7a62654ecd9ba54" kindref="member">done</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view__animation_1a0142a7a652b223171ff2c2d90a53a1f0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><ref refid="libweston_8h_1a7b55afecab4117c47d43576fdc2e00d8" kindref="member">weston_fade_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*fade,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><ref refid="libweston_8h_1a9bff26c092c05eebcef5356986b0805d" kindref="member">weston_stable_fade_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*front_view,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation_1a3b558ff7817cac7c51c00f267563f6ca" kindref="member">start</ref>,</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*back_view,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>end,</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref><sp/><ref refid="structweston__view__animation_1a606d2f7d9e846eb2f7a62654ecd9ba54" kindref="member">done</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view__animation_1a0142a7a652b223171ff2c2d90a53a1f0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view__animation" kindref="compound">weston_view_animation</ref><sp/>*</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><ref refid="libweston_8h_1a80daa8edc72836f513e9f02e7f7a18a9" kindref="member">weston_slide_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__view__animation_1a143b69b38180430c2446df1464264122" kindref="member">view</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation_1a3b558ff7817cac7c51c00f267563f6ca" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structweston__view__animation_1a47b7b7ae4d676c4f8ec2844d5a990815" kindref="member">stop</ref>,</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1a2088d073412dd19f599b0be43d2fdaea" kindref="member">weston_view_animation_done_func_t</ref><sp/><ref refid="structweston__view__animation_1a606d2f7d9e846eb2f7a62654ecd9ba54" kindref="member">done</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view__animation_1a0142a7a652b223171ff2c2d90a53a1f0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><ref refid="libweston_8h_1a864f2297b36a4f94f96b8ba55869fe66" kindref="member">weston_surface_set_color</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="alpha-blending-test_8c_1a81e020c207c4f444a5d60e57c7d55fdf" kindref="member">red</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>green,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="alpha-blending-test_8c_1a9a6f44170dd627caeb06bd6a43943349" kindref="member">blue</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><ref refid="libweston_8h_1aa8175b2c6f8cd4cc3f3f6006ecf7acb1" kindref="member">weston_surface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><ref refid="group__output_1ga3cae00e20c6451270741932f1330e64d" kindref="member">weston_output_mode_switch_to_temporary</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__mode" kindref="compound">weston_mode</ref><sp/>*mode,</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><ref refid="group__output_1ga71e8b4c2d4a15c8d153b85f178d1006d" kindref="member">weston_output_mode_switch_to_native</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><ref refid="libweston_8h_1ae820cf03dcc3048da9077549b0abb1c4" kindref="member">weston_backend_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*c,</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__backend__config" kindref="compound">weston_backend_config</ref><sp/>*config_base);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><ref refid="libweston_8h_1a74564adc82a9dd5d5d450ccc29e2b773" kindref="member">weston_module_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><ref refid="libweston_8h_1a1cf9686b2a6a6764e8197fdbb473607f" kindref="member">weston_load_module</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*entrypoint);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><ref refid="libweston_8h_1a1f6a9e6a6915ff39ee0f7dfca47bed95" kindref="member">weston_module_path_from_env</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>path_len);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><ref refid="libweston_8h_1a42a8b6c4a834f6f2d4a2a6bed2b203e3" kindref="member">weston_parse_transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__view__animation_1a42c442dad7da53050a5891913dbd2538" kindref="member">transform</ref>,<sp/>uint32_t<sp/>*out);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><ref refid="libweston_8h_1aef7351622664de3e786581957a8ff121" kindref="member">weston_transform_to_string</ref>(uint32_t<sp/>output_transform);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><ref refid="libweston_8h_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><ref refid="libweston_8h_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch" kindref="compound">weston_touch</ref><sp/>*</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><ref refid="libweston_8h_1a4d586b87353ba3d18989739666a1f7dd" kindref="member">weston_seat_get_touch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><ref refid="libweston_8h_1a46e90691191fd2cdc9fab021d6238829" kindref="member">weston_seat_set_keyboard_focus</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*<ref refid="structweston__touch_1a5dec746b9f732956d1a7abcd7426f3f2" kindref="member">seat</ref>,</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><ref refid="libweston_8h_1adee16da18d2931849cb3581a3555f40e" kindref="member">weston_keyboard_send_keymap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*kbd,</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><ref refid="group__compositor_1gac6e898461759aedc521674d927c4f433" kindref="member">weston_compositor_load_xwayland</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><ref refid="group__head_1gad0da27f9a2e98faf8aecf84704935440" kindref="member">weston_head_is_connected</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><ref refid="group__head_1ga8d49a887b440265b363a5075fefff343" kindref="member">weston_head_is_enabled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><ref refid="group__head_1ga8166b9178e0d63360ebe4bd1a3d9466b" kindref="member">weston_head_is_device_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><ref refid="group__head_1gaf349968c812aa4496e3afd9e2a550ce8" kindref="member">weston_head_is_non_desktop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><ref refid="group__head_1ga4f891068162ad3c11b7c971dcf7087d6" kindref="member">weston_head_reset_device_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><ref refid="group__head_1gadc2cacc63e1e08fa67962fd1379dd085" kindref="member">weston_head_get_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><ref refid="group__head_1gaa421449fe0fad20bece74a1359e9dea7" kindref="member">weston_head_get_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><ref refid="group__head_1ga2be199d2caef16d084aa4aa56434f0ef" kindref="member">weston_head_get_transform</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><ref refid="group__head_1gac5cc5415250a9aa4f830af252b72a666" kindref="member">weston_head_detach</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><ref refid="group__head_1gacb1d8713745a3e871acad1bdb129d720" kindref="member">weston_head_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/>*</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><ref refid="group__head_1ga523c746a6ae0d5457e5696b903c1508d" kindref="member">weston_head_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_notify_func_t<sp/>notify);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><ref refid="libweston_8h_1ad857cfe1c11b72be724989f35dbb2d5a" kindref="member">weston_head_set_content_protection_status</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head,</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libweston_8h_1a883af45c9ba95a4ce9c18877cc420671" kindref="member">weston_hdcp_protection</ref><sp/>status);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><ref refid="group__compositor_1ga23fa98d05ed6886179c337931ae8a407" kindref="member">weston_compositor_iterate_heads</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*iter);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><ref refid="group__compositor_1gaaf5629bbdce30062a548444c7df59205" kindref="member">weston_compositor_add_heads_changed_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><ref refid="group__compositor_1ga2a4277e31b2ef83535ad5ace9cb61488" kindref="member">weston_compositor_find_output_by_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><ref refid="group__compositor_1gafee0c9120b6d2ffcdbf3d7cae5837975" kindref="member">weston_compositor_create_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__output_1ab65dff659f1d2d38bc253ca1de2b6c04" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><ref refid="group__compositor_1gadc6c426dbd044667d0d1f5ec7ec47ae0" kindref="member">weston_compositor_create_output_with_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__output_1ab4b884d4d420d4254723d12f7650e878" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><ref refid="group__output_1ga44dae09ae8bbdb6e8b6574e2bd407c5b" kindref="member">weston_output_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><ref refid="group__output_1ga4e31a4f40995c5c80cca21775d15a15a" kindref="member">weston_output_attach_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*head);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><ref refid="group__output_1gaabbac16a3b4715c19d3f69b521e89750" kindref="member">weston_output_iterate_heads</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*iter);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><ref refid="group__output_1gaf55cb7ce87a56e9284c9860ed8e56cb4" kindref="member">weston_output_set_scale</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>scale);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><ref refid="group__output_1ga11bebd6791c64fbf449251f74e3254bf" kindref="member">weston_output_set_transform</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structweston__head_1affdfdef9ee39e39657bd65484d963e23" kindref="member">transform</ref>);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><ref refid="group__output_1ga524b14e04e1478ab2ebe168b97cda322" kindref="member">weston_output_set_renderer_shadow_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><ref refid="group__output_1gaeb6468e3cabf74cba4030400f1907799" kindref="member">weston_output_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structweston__head_1a8539bd24d05dce91d80fa5e389f84db1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><ref refid="group__output_1ga1e29336a58385636b0d2c213eaddbac1" kindref="member">weston_output_move</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><ref refid="group__output_1ga80c54aa6f93b50afc216bb6ab9c97575" kindref="member">weston_output_enable</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><ref refid="group__output_1gad86b73873e740780e6a1b4b7ad7b7e2b" kindref="member">weston_output_disable</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><ref refid="group__compositor_1gae835d9bf9af471b041a588778a774db2" kindref="member">weston_compositor_flush_heads_changed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><ref refid="group__head_1ga09a7ecebc209197f9691e09a4c8a3c8b" kindref="member">weston_head_from_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__head" kindref="compound">weston_head</ref><sp/>*</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><ref refid="group__output_1gaf0756dca4563d0814c75d534c51a7ecc" kindref="member">weston_output_get_first_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><ref refid="libweston_8h_1a25906f3a587580e6a9541dd7d301b626" kindref="member">weston_output_allow_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__output" kindref="compound">weston_output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_protection);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><ref refid="libweston_8h_1a3f374ba352726b65dd85c4c489e12a00" kindref="member">weston_compositor_enable_touch_calibrator</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__head_1a27f428b3fdd097e199d711e7ecd92269" kindref="member">compositor</ref>,</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1adf8c2bb0e5fc912dfdc0526930eb1cb8" kindref="member">weston_touch_calibration_save_func</ref><sp/>save);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__log__context" kindref="compound">weston_log_context</ref><sp/>*</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><ref refid="group__log_1ga1a1c4adc72146aa351636b0456939d34" kindref="member">weston_log_ctx_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><ref refid="group__log_1ga23d424d8976026793627d7736375e5f1" kindref="member">weston_log_ctx_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__log__context" kindref="compound">weston_log_context</ref><sp/>*log_ctx);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><ref refid="libweston_8h_1a551f7585a5eae5a200b0b142ccee16af" kindref="member">weston_compositor_enable_content_protection</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><ref refid="group__log_1gabfcf8e012be0cc478dd901ca59ad3721" kindref="member">weston_timeline_refresh_subscription_objects</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*wc,</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/include/libweston/libweston.h"/>
  </compounddef>
</doxygen>
