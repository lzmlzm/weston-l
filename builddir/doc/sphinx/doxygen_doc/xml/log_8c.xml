<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="log_8c" kind="file" language="C++">
    <compoundname>log.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">wayland-util.h</includes>
    <includes refid="libweston_8h" local="no">libweston/libweston.h</includes>
    <includes refid="weston-log-internal_8h" local="yes">weston-log-internal.h</includes>
    <incdepgraph>
      <node id="11">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="10">
        <label>libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="15">
        <label>wayland-server.h</label>
      </node>
      <node id="14">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="18">
        <label>weston-log-internal.h</label>
        <link refid="weston-log-internal_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/libweston/log.c</label>
        <link refid="log_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="17">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>time.h</label>
      </node>
      <node id="7">
        <label>sys/time.h</label>
      </node>
      <node id="16">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="13">
        <label>pixman.h</label>
      </node>
      <node id="9">
        <label>wayland-util.h</label>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__wlog_1ga1af9e91eb3e0c3be04d9219966247db8" prot="public" static="yes" mutable="no">
        <type><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref></type>
        <definition>log_func_t log_handler</definition>
        <argsstring></argsstring>
        <name>log_handler</name>
        <initializer>= <ref refid="group__wlog_1ga61ef301bb57d863af5bcdb2d1a3942cb" kindref="member">default_log_handler</ref></initializer>
        <briefdescription>
<para>Needs to be set, defaults to default_log_handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/log.c" line="51" column="19" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wlog_1ga3e3d1e661b185ed76d1fb1c004bdbff7" prot="public" static="yes" mutable="no">
        <type><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref></type>
        <definition>log_func_t log_continue_handler</definition>
        <argsstring></argsstring>
        <name>log_continue_handler</name>
        <initializer>= <ref refid="group__wlog_1ga61ef301bb57d863af5bcdb2d1a3942cb" kindref="member">default_log_handler</ref></initializer>
        <briefdescription>
<para>Needs to be set, defaults to default_log_handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/log.c" line="57" column="19" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wlog_1ga61ef301bb57d863af5bcdb2d1a3942cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int default_log_handler</definition>
        <argsstring>(const char *fmt, va_list ap)</argsstring>
        <name>default_log_handler</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
<para>Sentinel log message handler. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used as the default handler for log messages. It exists only to issue a noisy reminder to the user that a real handler must be installed prior to issuing logging calls. The process is immediately aborted after the reminder is printed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string. Ignored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ap</parametername>
</parameternamelist>
<parameterdescription>
<para>The variadic argument list. Ignored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/log.c" line="72" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="72" bodyend="76" declfile="/home/lzm/Wayland/weston/libweston/log.c" declline="45" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wlog_1gaae64561b04016b5b060befc9b5f5fb85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_log_set_handler</definition>
        <argsstring>(log_func_t log, log_func_t cont)</argsstring>
        <name>weston_log_set_handler</name>
        <param>
          <type><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref></type>
          <declname>log</declname>
        </param>
        <param>
          <type><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref></type>
          <declname>cont</declname>
        </param>
        <briefdescription>
<para>Install the log handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The given functions will be called to output text as passed to the <emphasis>weston_log</emphasis> and <emphasis>weston_log_continue</emphasis> functions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>log</parametername>
</parameternamelist>
<parameterdescription>
<para>The log function. This function will be called when <emphasis>weston_log</emphasis> is called, and should begin a new line, with user defined line headers, if any. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The continue log function. This function will be called when <emphasis>weston_log_continue</emphasis> is called, and should append its output to the current line, without any header or other content in between. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/log.c" line="94" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="group__wlog_1gab61770ae7ae15976b04e88681b1d1c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_vlog</definition>
        <argsstring>(const char *fmt, va_list ap)</argsstring>
        <name>weston_vlog</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
<para>weston_vlog calls log_handler </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/log.c" line="104" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_log</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>weston_log</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>printf() equivalent in weston compositor. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
*       .. note::
*
*               Needs :var:`log_handler` to be set-up!
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/log.c" line="120" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="120" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group__wlog_1gaae8b11650848785c5367ee698d2e0f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_vlog_continue</definition>
        <argsstring>(const char *fmt, va_list argp)</argsstring>
        <name>weston_vlog_continue</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>argp</declname>
        </param>
        <briefdescription>
<para>weston_vlog_continue calls log_continue_handler </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/log.c" line="137" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="group__wlog_1gaa0016cb4379eb39a57ac3be92f19ffa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_log_continue</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>weston_log_continue</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>weston_log_continue </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/libweston/log.c" line="147" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/log.c" bodystart="147" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012<sp/>Martin<sp/>Minarik</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wayland-util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="libweston_8h" kindref="compound">libweston/libweston.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weston-log-internal_8h" kindref="compound">weston-log-internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="group__wlog_1ga61ef301bb57d863af5bcdb2d1a3942cb" kindref="member">default_log_handler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>ap);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref><sp/><ref refid="group__wlog_1ga1af9e91eb3e0c3be04d9219966247db8" kindref="member">log_handler</ref><sp/>=<sp/><ref refid="group__wlog_1ga61ef301bb57d863af5bcdb2d1a3942cb" kindref="member">default_log_handler</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref><sp/><ref refid="group__wlog_1ga3e3d1e661b185ed76d1fb1c004bdbff7" kindref="member">log_continue_handler</ref><sp/>=<sp/><ref refid="group__wlog_1ga61ef301bb57d863af5bcdb2d1a3942cb" kindref="member">default_log_handler</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="group__wlog_1ga61ef301bb57d863af5bcdb2d1a3942cb" kindref="member">default_log_handler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>ap)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;weston_log_set_handler()<sp/>must<sp/>be<sp/>called<sp/>before<sp/>using<sp/>of<sp/>weston_log().\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="group__wlog_1gaae64561b04016b5b060befc9b5f5fb85" kindref="member">weston_log_set_handler</ref>(<ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref><sp/>log,<sp/><ref refid="group__wlog_1ga7f6de92f37121c82cae44dce48df4611" kindref="member">log_func_t</ref><sp/>cont)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga1af9e91eb3e0c3be04d9219966247db8" kindref="member">log_handler</ref><sp/>=<sp/>log;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga3e3d1e661b185ed76d1fb1c004bdbff7" kindref="member">log_continue_handler</ref><sp/>=<sp/>cont;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="group__wlog_1gab61770ae7ae15976b04e88681b1d1c4a" kindref="member">weston_vlog</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>ap)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wlog_1ga1af9e91eb3e0c3be04d9219966247db8" kindref="member">log_handler</ref>(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>argp;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(argp,<sp/>fmt);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="group__wlog_1gab61770ae7ae15976b04e88681b1d1c4a" kindref="member">weston_vlog</ref>(fmt,<sp/>argp);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(argp);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="group__wlog_1gaae8b11650848785c5367ee698d2e0f3d" kindref="member">weston_vlog_continue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>argp)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wlog_1ga3e3d1e661b185ed76d1fb1c004bdbff7" kindref="member">log_continue_handler</ref>(fmt,<sp/>argp);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="group__wlog_1gaa0016cb4379eb39a57ac3be92f19ffa9" kindref="member">weston_log_continue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>argp;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(argp,<sp/>fmt);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="group__wlog_1gaae8b11650848785c5367ee698d2e0f3d" kindref="member">weston_vlog_continue</ref>(fmt,<sp/>argp);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(argp);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/libweston/log.c"/>
  </compounddef>
</doxygen>
