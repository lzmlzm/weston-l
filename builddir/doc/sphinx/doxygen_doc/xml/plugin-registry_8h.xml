<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="plugin-registry_8h" kind="file" language="C++">
    <compoundname>plugin-registry.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includedby refid="compositor_8c" local="no">/home/lzm/Wayland/weston/libweston/compositor.c</includedby>
    <includedby refid="plugin-registry_8c" local="no">/home/lzm/Wayland/weston/libweston/plugin-registry.c</includedby>
    <includedby refid="backend-drm_8h" local="no">/home/lzm/Wayland/weston/include/libweston/backend-drm.h</includedby>
    <includedby refid="backend-rdp_8h" local="no">/home/lzm/Wayland/weston/include/libweston/backend-rdp.h</includedby>
    <includedby refid="pipewire-plugin_8h" local="no">/home/lzm/Wayland/weston/include/libweston/pipewire-plugin.h</includedby>
    <includedby refid="remoting-plugin_8h" local="no">/home/lzm/Wayland/weston/include/libweston/remoting-plugin.h</includedby>
    <includedby refid="windowed-output-api_8h" local="no">/home/lzm/Wayland/weston/include/libweston/windowed-output-api.h</includedby>
    <includedby refid="xwayland-api_8h" local="no">/home/lzm/Wayland/weston/include/libweston/xwayland-api.h</includedby>
    <includedby refid="plugin-registry-test_8c" local="no">/home/lzm/Wayland/weston/tests/plugin-registry-test.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/include/libweston/plugin-registry.h</label>
        <link refid="plugin-registry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-virtual.c</label>
        <link refid="drm-virtual_8c"/>
      </node>
      <node id="8">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm.c</label>
        <link refid="drm_8c"/>
      </node>
      <node id="3">
        <label>/home/lzm/Wayland/weston/libweston/plugin-registry.c</label>
        <link refid="plugin-registry_8c"/>
      </node>
      <node id="18">
        <label>/home/lzm/Wayland/weston/include/libweston/windowed-output-api.h</label>
        <link refid="windowed-output-api_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-gbm.c</label>
        <link refid="drm-gbm_8c"/>
      </node>
      <node id="16">
        <label>/home/lzm/Wayland/weston/include/libweston/pipewire-plugin.h</label>
        <link refid="pipewire-plugin_8h"/>
      </node>
      <node id="19">
        <label>/home/lzm/Wayland/weston/libweston/backend-headless/headless.c</label>
        <link refid="headless_8c"/>
      </node>
      <node id="15">
        <label>/home/lzm/Wayland/weston/libweston/backend-rdp/rdp.c</label>
        <link refid="rdp_8c"/>
      </node>
      <node id="22">
        <label>/home/lzm/Wayland/weston/include/libweston/xwayland-api.h</label>
        <link refid="xwayland-api_8h"/>
      </node>
      <node id="5">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/drm-internal.h</label>
        <link refid="drm-internal_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/lzm/Wayland/weston/include/libweston/remoting-plugin.h</label>
        <link refid="remoting-plugin_8h"/>
      </node>
      <node id="23">
        <label>/home/lzm/Wayland/weston/tests/plugin-registry-test.c</label>
        <link refid="plugin-registry-test_8c"/>
      </node>
      <node id="21">
        <label>/home/lzm/Wayland/weston/libweston/backend-x11/x11.c</label>
        <link refid="x11_8c"/>
      </node>
      <node id="14">
        <label>/home/lzm/Wayland/weston/include/libweston/backend-rdp.h</label>
        <link refid="backend-rdp_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/state-propose.c</label>
        <link refid="state-propose_8c"/>
      </node>
      <node id="12">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/state-helpers.c</label>
        <link refid="state-helpers_8c"/>
      </node>
      <node id="4">
        <label>/home/lzm/Wayland/weston/include/libweston/backend-drm.h</label>
        <link refid="backend-drm_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/include/libweston/plugin-registry.h</label>
        <link refid="plugin-registry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/kms.c</label>
        <link refid="kms_8c"/>
      </node>
      <node id="20">
        <label>/home/lzm/Wayland/weston/libweston/backend-wayland/wayland.c</label>
        <link refid="wayland_8c"/>
      </node>
      <node id="9">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="2">
        <label>/home/lzm/Wayland/weston/libweston/compositor.c</label>
        <link refid="compositor_8c"/>
      </node>
      <node id="11">
        <label>/home/lzm/Wayland/weston/libweston/backend-drm/modes.c</label>
        <link refid="modes_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="plugin-registry_8h_1a1416d4631dfb73f6ed290b80c019c6a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weston_plugin_api_register</definition>
        <argsstring>(struct weston_compositor *compositor, const char *api_name, const void *vtable, size_t vtable_size)</argsstring>
        <name>weston_plugin_api_register</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>api_name</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>vtable</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>vtable_size</declname>
        </param>
        <briefdescription>
<para>Register an implementation of an API. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>api_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The API name which other plugins use to find the implementation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtable</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the function table of the API. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtable_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the function table in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error, -2 if api_name already registered</para>
</simplesect>
This call makes the given vtable to be reachable via <ref refid="plugin-registry_8c_1a4d25e89e688058739294781577c52870" kindref="member">weston_plugin_api_get()</ref>. Calls through the vtable may start happening as soon as the caller returns after success. Argument vtable must not be NULL. Argument api_name must be non-NULL and non-zero length.</para>
<para>You can increase the function table size without breaking the ABI. To cater for ABI breaks, it is recommended to have api_name include a version number.</para>
<para>A registered API cannot be unregistered. However, calls through a registered API must not be made from the compositor destroy signal handlers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/plugin-registry.h" line="38" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/plugin-registry.c" bodystart="65" bodyend="102" declfile="/home/lzm/Wayland/weston/include/libweston/plugin-registry.h" declline="38" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="plugin-registry_8h_1a4d25e89e688058739294781577c52870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* weston_plugin_api_get</definition>
        <argsstring>(struct weston_compositor *compositor, const char *api_name, size_t vtable_size)</argsstring>
        <name>weston_plugin_api_get</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>api_name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>vtable_size</declname>
        </param>
        <briefdescription>
<para>Fetch the implementation of an API. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>api_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the API to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtable_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected function table size in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the function table, or NULL on error.</para>
</simplesect>
Find the function table corresponding to api_name. The vtable_size here must be less or equal to the vtable_size given in the corresponding <ref refid="plugin-registry_8c_1a1416d4631dfb73f6ed290b80c019c6a9" kindref="member">weston_plugin_api_register()</ref> call made by the implementing plugin.</para>
<para>Calls can be made through the function table immediately. However, calls must not be made from or after the compositor destroy signal handler. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/plugin-registry.h" line="44" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/plugin-registry.c" bodystart="135" bodyend="156" declfile="/home/lzm/Wayland/weston/include/libweston/plugin-registry.h" declline="44" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="plugin-registry_8h_1a1b26e2b1714defb1357ad9d4c717bb76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void weston_plugin_api_destroy_list</definition>
        <argsstring>(struct weston_compositor *compositor)</argsstring>
        <name>weston_plugin_api_destroy_list</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>compositor</declname>
        </param>
        <briefdescription>
<para>Internal function to free registered APIs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compositor</parametername>
</parameternamelist>
<parameterdescription>
<para>The compositor instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/plugin-registry.h" line="49" column="1" bodyfile="/home/lzm/Wayland/weston/libweston/plugin-registry.c" bodystart="109" bodyend="118" declfile="/home/lzm/Wayland/weston/include/libweston/plugin-registry.h" declline="49" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2016<sp/>DENSO<sp/>CORPORATION</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WESTON_PLUGIN_REGISTRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WESTON_PLUGIN_REGISTRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="plugin-registry_8h_1a1416d4631dfb73f6ed290b80c019c6a9" kindref="member">weston_plugin_api_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*api_name,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*vtable,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vtable_size);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="plugin-registry_8h_1a4d25e89e688058739294781577c52870" kindref="member">weston_plugin_api_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*api_name,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vtable_size);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="plugin-registry_8h_1a1b26e2b1714defb1357ad9d4c717bb76" kindref="member">weston_plugin_api_destroy_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*compositor);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>WESTON_PLUGIN_REGISTRY_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/include/libweston/plugin-registry.h"/>
  </compounddef>
</doxygen>
