<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pointer-test_8c" kind="file" language="C++">
    <compoundname>pointer-test.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">linux/input.h</includes>
    <includes refid="input-timestamps-helper_8h" local="yes">input-timestamps-helper.h</includes>
    <includes local="yes">shared/timespec-util.h</includes>
    <includes refid="weston-test-client-helper_8h" local="yes">weston-test-client-helper.h</includes>
    <includes refid="weston-test-fixture-compositor_8h" local="yes">weston-test-fixture-compositor.h</includes>
    <incdepgraph>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="26">
        <label>viewporter-client-protocol.h</label>
      </node>
      <node id="18">
        <label>libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>linux/input.h</label>
      </node>
      <node id="17">
        <label>weston-test-fixture-compositor.h</label>
        <link refid="weston-test-fixture-compositor_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>input-timestamps-helper.h</label>
        <link refid="input-timestamps-helper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>assert.h</label>
      </node>
      <node id="25">
        <label>weston-screenshooter-client-protocol.h</label>
      </node>
      <node id="24">
        <label>weston-test-client-protocol.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
      <node id="20">
        <label>wayland-server.h</label>
      </node>
      <node id="19">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="16">
        <label>shared/helpers.h</label>
      </node>
      <node id="23">
        <label>weston-testsuite-data.h</label>
        <link refid="weston-testsuite-data_8h"/>
      </node>
      <node id="12">
        <label>wayland-client-protocol.h</label>
      </node>
      <node id="22">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>time.h</label>
      </node>
      <node id="21">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="11">
        <label>pixman.h</label>
      </node>
      <node id="15">
        <label>wayland-util.h</label>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/tests/pointer-test.c</label>
        <link refid="pointer-test_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>weston-test-runner.h</label>
        <link refid="weston-test-runner_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="5">
        <label>shared/timespec-util.h</label>
      </node>
      <node id="6">
        <label>weston-test-client-helper.h</label>
        <link refid="weston-test-client-helper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pointer-test_8c_1a89d575d4407ad762d1965c4405d61fd4" prot="public" static="yes" mutable="no">
        <type>const struct timespec</type>
        <definition>const struct timespec t0</definition>
        <argsstring></argsstring>
        <name>t0</name>
        <initializer>= { .tv_sec = 0, .tv_nsec = 100000000 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="45" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" prot="public" static="yes" mutable="no">
        <type>const struct timespec</type>
        <definition>const struct timespec t1</definition>
        <argsstring></argsstring>
        <name>t1</name>
        <initializer>= { .tv_sec = 1, .tv_nsec = 1000001 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="45" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" prot="public" static="yes" mutable="no">
        <type>const struct timespec</type>
        <definition>const struct timespec t2</definition>
        <argsstring></argsstring>
        <name>t2</name>
        <initializer>= { .tv_sec = 2, .tv_nsec = 2000001 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="45" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pointer-test_8c_1a37b779d0c4ed0f9e909681b420a40063" prot="public" static="yes" mutable="no">
        <type>const struct timespec</type>
        <definition>const struct timespec t_other</definition>
        <argsstring></argsstring>
        <name>t_other</name>
        <initializer>= { .tv_sec = 123, .tv_nsec = 456 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="45" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pointer-test_8c_1a94e9ff74226ccd29a26846ccb66d481f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__testharness_1gaf45a885e3df7d3e0204f0beb2036a103" kindref="member">test_result_code</ref></type>
        <definition>static enum test_result_code fixture_setup</definition>
        <argsstring>(struct weston_test_harness *harness)</argsstring>
        <name>fixture_setup</name>
        <param>
          <type>struct <ref refid="structweston__test__harness" kindref="compound">weston_test_harness</ref> *</type>
          <declname>harness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="1" column="0" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a1ac8add2dcb01a58f69f41ce2ad0ccfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_FIXTURE_SETUP</definition>
        <argsstring>(fixture_setup)</argsstring>
        <name>DECLARE_FIXTURE_SETUP</name>
        <param>
          <type><ref refid="yuv-buffer-test_8c_1a94e9ff74226ccd29a26846ccb66d481f" kindref="member">fixture_setup</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="45" column="1" declfile="/home/lzm/Wayland/weston/tests/pointer-test.c" declline="45" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1ad4ba813a344130cd74437fa4f3e05281" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_motion</definition>
        <argsstring>(struct client *client, const struct timespec *time, int x, int y)</argsstring>
        <name>send_motion</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="53" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="53" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1acffde4776bdf1cfc810d8800f2a9a9be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_button</definition>
        <argsstring>(struct client *client, const struct timespec *time, uint32_t button, uint32_t state)</argsstring>
        <name>send_button</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="64" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1ab0722e7d137827d620e64d030c09ce79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_axis</definition>
        <argsstring>(struct client *client, const struct timespec *time, uint32_t axis, double value)</argsstring>
        <name>send_axis</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="76" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="76" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1afb0acd72bf09f4ebe2fc688a80c9da20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void check_pointer</definition>
        <argsstring>(struct client *client, int x, int y)</argsstring>
        <name>check_pointer</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="88" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="88" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void check_pointer_move</definition>
        <argsstring>(struct client *client, int x, int y)</argsstring>
        <name>check_pointer_move</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="119" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1af75a95d08c851450d448be990ff8240c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
        <definition>static struct client* create_client_with_pointer_focus</definition>
        <argsstring>(int x, int y, int w, int h)</argsstring>
        <name>create_client_with_pointer_focus</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="126" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_top_left)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_top_left</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="136" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="136" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a6d203330d476dc9d0c6a1a2bd21a3a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_bottom_left)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_bottom_left</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="161" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="161" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a1d573436a0723f2c1aa5b3bf3ef1e3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_top_right)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_top_right</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="186" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="186" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1ab0eb92ebb2d8f3fcdc8f093732458225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_bottom_right)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_bottom_right</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="211" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="211" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a94eb3cfd178c5e53ea76b165aadc5702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_top_center)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_top_center</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="236" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="236" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a50099932a036ea11c9de270726b1ef56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_bottom_center)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_bottom_center</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="261" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="261" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a0cb3c1bbe77d4b5410f5547c1373134e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_left_center)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_left_center</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="286" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="286" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1ac5ec0e3d1ed9d1e8faecebf0a0d48c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_right_center)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_right_center</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="311" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="311" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1aa18829448b6567e9e78efb854c4c0ffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(test_pointer_surface_move)</argsstring>
        <name>TEST</name>
        <param>
          <type>test_pointer_surface_move</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="336" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="336" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a600b4a1d6ea547e9f1bb7e5335d6dfad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(pointer_motion_events)</argsstring>
        <name>TEST</name>
        <param>
          <type>pointer_motion_events</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="353" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="353" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1acd3fff8cdfe341355c4d44a66d2f1a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(pointer_button_events)</argsstring>
        <name>TEST</name>
        <param>
          <type>pointer_button_events</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="370" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="370" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a6d71f2c443867711b85933e9a34282ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(pointer_axis_events)</argsstring>
        <name>TEST</name>
        <param>
          <type>pointer_axis_events</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="396" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="396" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1a8ff5802ab6fea686cd98bc626417179f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(pointer_timestamps_stop_after_input_timestamps_object_is_destroyed)</argsstring>
        <name>TEST</name>
        <param>
          <type>pointer_timestamps_stop_after_input_timestamps_object_is_destroyed</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="418" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="418" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="pointer-test_8c_1aa98c6fa0cbc492d0d1dc19625da94487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(pointer_timestamps_stop_after_client_releases_wl_pointer)</argsstring>
        <name>TEST</name>
        <param>
          <type>pointer_timestamps_stop_after_client_releases_wl_pointer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/pointer-test.c" line="441" column="1" bodyfile="/home/lzm/Wayland/weston/tests/pointer-test.c" bodystart="441" bodyend="467"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2013<sp/>Collabora,<sp/>Ltd.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/input.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input-timestamps-helper_8h" kindref="compound">input-timestamps-helper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/timespec-util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weston-test-client-helper_8h" kindref="compound">weston-test-client-helper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weston-test-fixture-compositor_8h" kindref="compound">weston-test-fixture-compositor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__testharness_1gaf45a885e3df7d3e0204f0beb2036a103" kindref="member">test_result_code</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="pointer-test_8c_1a94e9ff74226ccd29a26846ccb66d481f" kindref="member">fixture_setup</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test__harness" kindref="compound">weston_test_harness</ref><sp/>*harness)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcompositor__setup" kindref="compound">compositor_setup</ref><sp/>setup;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1ga6d93ba47ec578b140fa2cbd3efa1218c" kindref="member">compositor_setup_defaults</ref>(&amp;setup);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__testharness_1gacd7b26a0f0f337781013b40d229cf262" kindref="member">weston_test_harness_execute_as_client</ref>(harness,<sp/>&amp;setup);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="pointer-test_8c_1a1ac8add2dcb01a58f69f41ce2ad0ccfc" kindref="member">DECLARE_FIXTURE_SETUP</ref>(<ref refid="pointer-test_8c_1a94e9ff74226ccd29a26846ccb66d481f" kindref="member">fixture_setup</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="pointer-test_8c_1a89d575d4407ad762d1965c4405d61fd4" kindref="member">t0</ref><sp/>=<sp/>{<sp/>.tv_sec<sp/>=<sp/>0,<sp/>.tv_nsec<sp/>=<sp/>100000000<sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref><sp/>=<sp/>{<sp/>.tv_sec<sp/>=<sp/>1,<sp/>.tv_nsec<sp/>=<sp/>1000001<sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref><sp/>=<sp/>{<sp/>.tv_sec<sp/>=<sp/>2,<sp/>.tv_nsec<sp/>=<sp/>2000001<sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="pointer-test_8c_1a37b779d0c4ed0f9e909681b420a40063" kindref="member">t_other</ref><sp/>=<sp/>{<sp/>.tv_sec<sp/>=<sp/>123,<sp/>.tv_nsec<sp/>=<sp/>456<sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="pointer-test_8c_1ad4ba813a344130cd74437fa4f3e05281" kindref="member">send_motion</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_to_proto(time,<sp/>&amp;tv_sec_hi,<sp/>&amp;tv_sec_lo,<sp/>&amp;tv_nsec);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_test_move_pointer(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>-&gt;<ref refid="structtest_1ac67f68f85cec23036bebedc63443bdcd" kindref="member">weston_test</ref>,<sp/>tv_sec_hi,<sp/>tv_sec_lo,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv_nsec,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8h_1ab95988e6d0d010625831b6b8c92a4a9d" kindref="member">client_roundtrip</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="pointer-test_8c_1acffde4776bdf1cfc810d8800f2a9a9be" kindref="member">send_button</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>button,<sp/>uint32_t<sp/>state)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_to_proto(time,<sp/>&amp;tv_sec_hi,<sp/>&amp;tv_sec_lo,<sp/>&amp;tv_nsec);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_test_send_button(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>-&gt;<ref refid="structtest_1ac67f68f85cec23036bebedc63443bdcd" kindref="member">weston_test</ref>,<sp/>tv_sec_hi,<sp/>tv_sec_lo,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv_nsec,<sp/>button,<sp/>state);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8h_1ab95988e6d0d010625831b6b8c92a4a9d" kindref="member">client_roundtrip</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="pointer-test_8c_1ab0722e7d137827d620e64d030c09ce79" kindref="member">send_axis</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*time,<sp/>uint32_t<sp/>axis,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_to_proto(time,<sp/>&amp;tv_sec_hi,<sp/>&amp;tv_sec_lo,<sp/>&amp;tv_nsec);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_test_send_axis(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>-&gt;<ref refid="structtest_1ac67f68f85cec23036bebedc63443bdcd" kindref="member">weston_test</ref>,<sp/>tv_sec_hi,<sp/>tv_sec_lo,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv_nsec,<sp/>axis,<sp/>wl_fixed_from_double(value));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8h_1ab95988e6d0d010625831b6b8c92a4a9d" kindref="member">client_roundtrip</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="pointer-test_8c_1afb0acd72bf09f4ebe2fc688a80c9da20" kindref="member">check_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sx,<sp/>sy;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>that<sp/>the<sp/>client<sp/>got<sp/>the<sp/>global<sp/>pointer<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>-&gt;<ref refid="structtest_1ab0ac9dfb03681b033abfa63aa49e59d8" kindref="member">pointer_x</ref><sp/>==<sp/>x);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>-&gt;<ref refid="structtest_1a1787f521a086ce060f5d9f6f17fe6fdb" kindref="member">pointer_y</ref><sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Does<sp/>global<sp/>pointer<sp/>map<sp/>onto<sp/>the<sp/>surface?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>that<sp/>the<sp/>surface<sp/>has<sp/>the<sp/>pointer<sp/>focus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>==<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>check<sp/>that<sp/>the<sp/>local<sp/>surface<sp/>pointer<sp/>maps</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>global<sp/>pointer.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sx<sp/>==<sp/>x);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sy<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>global<sp/>pointer<sp/>does<sp/>not<sp/>map<sp/>onto<sp/>surface.<sp/><sp/>So</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>check<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>have<sp/>the<sp/>pointer<sp/>focus.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1ad4ba813a344130cd74437fa4f3e05281" kindref="member">send_motion</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a89d575d4407ad762d1965c4405d61fd4" kindref="member">t0</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1afb0acd72bf09f4ebe2fc688a80c9da20" kindref="member">check_pointer</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="pointer-test_8c_1af75a95d08c851450d448be990ff8240c" kindref="member">create_client_with_pointer_focus</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*cl<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(x,<sp/>y,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(cl);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>the<sp/>pointer<sp/>inside<sp/>the<sp/>surface<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>surface</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>has<sp/>the<sp/>pointer<sp/>focus.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(cl,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_top_left)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(46,<sp/>76,<sp/>111,<sp/>134);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>top<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>on<sp/>top<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>1;<sp/>y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>top<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>1;<sp/>y<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_bottom_left)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(99,<sp/>100,<sp/>100,<sp/>98);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>bottom<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>on<sp/>bottom<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>1;<sp/>y<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>bottom<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>1;<sp/>y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_top_right)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(48,<sp/>100,<sp/>67,<sp/>100);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>top<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>on<sp/>top<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>1;<sp/>y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>top<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>1;<sp/>y<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_bottom_right)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(100,<sp/>123,<sp/>100,<sp/>69);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>bottom<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>on<sp/>bottom<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>1;<sp/>y<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>bottom<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>1;<sp/>y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_top_center)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(100,<sp/>201,<sp/>100,<sp/>50);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>top<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>/2;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>on<sp/>top<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>top<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_bottom_center)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(100,<sp/>45,<sp/>67,<sp/>100);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>bottom<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>/2;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>on<sp/>bottom<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>bottom<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_left_center)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(167,<sp/>45,<sp/>78,<sp/>100);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>left<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>/2;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>on<sp/>left<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>left<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_right_center)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(110,<sp/>37,<sp/>100,<sp/>46);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>right<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>+<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>/2;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>on<sp/>right<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>right<sp/>center<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>x,<sp/>y));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(test_pointer_surface_move)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(100,<sp/>100,<sp/>100,<sp/>100);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>outside<sp/>of<sp/>client<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>50,<sp/>50));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1af76fba95305bde6796c5d7d7ad6bc51c" kindref="member">check_pointer_move</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>50,<sp/>50);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>client<sp/>center<sp/>to<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a37328a264739e2481da21489c1964335" kindref="member">move_client</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>,<sp/>50,<sp/>50));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1afb0acd72bf09f4ebe2fc688a80c9da20" kindref="member">check_pointer</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>50,<sp/>50);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(pointer_motion_events)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="pointer-test_8c_1af75a95d08c851450d448be990ff8240c" kindref="member">create_client_with_pointer_focus</ref>(100,<sp/>100,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100,<sp/>100);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput__timestamps" kindref="compound">input_timestamps</ref><sp/>*input_ts<sp/>=</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input-timestamps-helper_8c_1adf8480aab2199afad7709b3307c11489" kindref="member">input_timestamps_create_for_pointer</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1ad4ba813a344130cd74437fa4f3e05281" kindref="member">send_motion</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>,<sp/>150,<sp/>150);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>==<sp/>50);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>==<sp/>50);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1af1b3141005e068606b7f882162ea5f5c" kindref="member">motion_time_msec</ref><sp/>==<sp/>timespec_to_msec(&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_eq(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a7c152fc968ca70ab4bcd970ce740a86f" kindref="member">motion_time_timespec</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae64352d414f52517f87c7926691c35bf" kindref="member">input_timestamps_destroy</ref>(input_ts);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(pointer_button_events)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="pointer-test_8c_1af75a95d08c851450d448be990ff8240c" kindref="member">create_client_with_pointer_focus</ref>(100,<sp/>100,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100,<sp/>100);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput__timestamps" kindref="compound">input_timestamps</ref><sp/>*input_ts<sp/>=</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input-timestamps-helper_8c_1adf8480aab2199afad7709b3307c11489" kindref="member">input_timestamps_create_for_pointer</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a9fc6f37d552aad4189cf13065df9d3ef" kindref="member">button</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1aa88404eba7d0a0326e6b0503e6f27e30" kindref="member">state</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1acffde4776bdf1cfc810d8800f2a9a9be" kindref="member">send_button</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>,<sp/>BTN_LEFT,<sp/>WL_POINTER_BUTTON_STATE_PRESSED);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a9fc6f37d552aad4189cf13065df9d3ef" kindref="member">button</ref><sp/>==<sp/>BTN_LEFT);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1aa88404eba7d0a0326e6b0503e6f27e30" kindref="member">state</ref><sp/>==<sp/>WL_POINTER_BUTTON_STATE_PRESSED);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abf3f61a5d18bfd2adef4a7e157ff1a0c" kindref="member">button_time_msec</ref><sp/>==<sp/>timespec_to_msec(&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_eq(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a32d4d9f3c83b45be06dfdce222779420" kindref="member">button_time_timespec</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1acffde4776bdf1cfc810d8800f2a9a9be" kindref="member">send_button</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>,<sp/>BTN_LEFT,<sp/>WL_POINTER_BUTTON_STATE_RELEASED);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a9fc6f37d552aad4189cf13065df9d3ef" kindref="member">button</ref><sp/>==<sp/>BTN_LEFT);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1aa88404eba7d0a0326e6b0503e6f27e30" kindref="member">state</ref><sp/>==<sp/>WL_POINTER_BUTTON_STATE_RELEASED);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abf3f61a5d18bfd2adef4a7e157ff1a0c" kindref="member">button_time_msec</ref><sp/>==<sp/>timespec_to_msec(&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_eq(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a32d4d9f3c83b45be06dfdce222779420" kindref="member">button_time_timespec</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae64352d414f52517f87c7926691c35bf" kindref="member">input_timestamps_destroy</ref>(input_ts);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(pointer_axis_events)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="pointer-test_8c_1af75a95d08c851450d448be990ff8240c" kindref="member">create_client_with_pointer_focus</ref>(100,<sp/>100,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100,<sp/>100);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput__timestamps" kindref="compound">input_timestamps</ref><sp/>*input_ts<sp/>=</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input-timestamps-helper_8c_1adf8480aab2199afad7709b3307c11489" kindref="member">input_timestamps_create_for_pointer</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1ab0722e7d137827d620e64d030c09ce79" kindref="member">send_axis</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>,<sp/>1,<sp/>1.0);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a3a7a32e7eb81d8407ac5c8e9054e8055" kindref="member">axis</ref><sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a3ca0be969d952b7997ef459f9e97bc96" kindref="member">axis_value</ref><sp/>==<sp/>1.0);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a2ea12ae16a952f2df2cb0fc180ecb923" kindref="member">axis_time_msec</ref><sp/>==<sp/>timespec_to_msec(&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_eq(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a775dd330288d2c615cd08b9d4f652f1d" kindref="member">axis_time_timespec</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1ab0722e7d137827d620e64d030c09ce79" kindref="member">send_axis</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>,<sp/>2,<sp/>0.0);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a3a7a32e7eb81d8407ac5c8e9054e8055" kindref="member">axis</ref><sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a87a5178b7991cd1475e4fdff74908011" kindref="member">axis_stop_time_msec</ref><sp/>==<sp/>timespec_to_msec(&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_eq(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1af80c76ce0a2911ee5cffcbf1aef8add6" kindref="member">axis_stop_time_timespec</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae64352d414f52517f87c7926691c35bf" kindref="member">input_timestamps_destroy</ref>(input_ts);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(pointer_timestamps_stop_after_input_timestamps_object_is_destroyed)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="pointer-test_8c_1af75a95d08c851450d448be990ff8240c" kindref="member">create_client_with_pointer_focus</ref>(100,<sp/>100,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100,<sp/>100);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput__timestamps" kindref="compound">input_timestamps</ref><sp/>*input_ts<sp/>=</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input-timestamps-helper_8c_1adf8480aab2199afad7709b3307c11489" kindref="member">input_timestamps_create_for_pointer</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1acffde4776bdf1cfc810d8800f2a9a9be" kindref="member">send_button</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>,<sp/>BTN_LEFT,<sp/>WL_POINTER_BUTTON_STATE_PRESSED);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a9fc6f37d552aad4189cf13065df9d3ef" kindref="member">button</ref><sp/>==<sp/>BTN_LEFT);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1aa88404eba7d0a0326e6b0503e6f27e30" kindref="member">state</ref><sp/>==<sp/>WL_POINTER_BUTTON_STATE_PRESSED);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abf3f61a5d18bfd2adef4a7e157ff1a0c" kindref="member">button_time_msec</ref><sp/>==<sp/>timespec_to_msec(&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_eq(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a32d4d9f3c83b45be06dfdce222779420" kindref="member">button_time_timespec</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae64352d414f52517f87c7926691c35bf" kindref="member">input_timestamps_destroy</ref>(input_ts);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1acffde4776bdf1cfc810d8800f2a9a9be" kindref="member">send_button</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>,<sp/>BTN_LEFT,<sp/>WL_POINTER_BUTTON_STATE_RELEASED);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a9fc6f37d552aad4189cf13065df9d3ef" kindref="member">button</ref><sp/>==<sp/>BTN_LEFT);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1aa88404eba7d0a0326e6b0503e6f27e30" kindref="member">state</ref><sp/>==<sp/>WL_POINTER_BUTTON_STATE_RELEASED);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abf3f61a5d18bfd2adef4a7e157ff1a0c" kindref="member">button_time_msec</ref><sp/>==<sp/>timespec_to_msec(&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_is_zero(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a32d4d9f3c83b45be06dfdce222779420" kindref="member">button_time_timespec</ref>));</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><ref refid="pointer-test_8c_1a267f734fd6280c7cfb0075ae428365f7" kindref="member">TEST</ref>(pointer_timestamps_stop_after_client_releases_wl_pointer)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="pointer-test_8c_1af75a95d08c851450d448be990ff8240c" kindref="member">create_client_with_pointer_focus</ref>(100,<sp/>100,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100,<sp/>100);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput__timestamps" kindref="compound">input_timestamps</ref><sp/>*input_ts<sp/>=</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input-timestamps-helper_8c_1adf8480aab2199afad7709b3307c11489" kindref="member">input_timestamps_create_for_pointer</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1ad4ba813a344130cd74437fa4f3e05281" kindref="member">send_motion</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>,<sp/>150,<sp/>150);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>==<sp/>50);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>==<sp/>50);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1af1b3141005e068606b7f882162ea5f5c" kindref="member">motion_time_msec</ref><sp/>==<sp/>timespec_to_msec(&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_eq(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a7c152fc968ca70ab4bcd970ce740a86f" kindref="member">motion_time_timespec</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a7a3096f0fc777dd3fac90553a5e4ebb9" kindref="member">t1</ref>));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_release(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>-&gt;<ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>input_timestamp<sp/>to<sp/>an<sp/>arbitrary<sp/>value<sp/>(different<sp/>from<sp/>t1,<sp/>t2</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>0)<sp/>and<sp/>check<sp/>that<sp/>it<sp/>is<sp/>not<sp/>changed<sp/>by<sp/>sending<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>preferred<sp/>over<sp/>just<sp/>checking<sp/>for<sp/>0,<sp/>since<sp/>0<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>internally<sp/>for<sp/>resetting<sp/>the<sp/>timestamp<sp/>after<sp/>handling<sp/>an<sp/>input</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>event<sp/>and<sp/>checking<sp/>for<sp/>it<sp/>here<sp/>may<sp/>lead<sp/>to<sp/>false<sp/>negatives.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref><sp/>=<sp/><ref refid="pointer-test_8c_1a37b779d0c4ed0f9e909681b420a40063" kindref="member">t_other</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer-test_8c_1ad4ba813a344130cd74437fa4f3e05281" kindref="member">send_motion</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a51ca56bc6b16baaf4ef3b252fe2ca73f" kindref="member">t2</ref>,<sp/>175,<sp/>175);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(timespec_eq(&amp;<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref>,<sp/>&amp;<ref refid="pointer-test_8c_1a37b779d0c4ed0f9e909681b420a40063" kindref="member">t_other</ref>));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1ae64352d414f52517f87c7926691c35bf" kindref="member">input_timestamps_destroy</ref>(input_ts);</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/tests/pointer-test.c"/>
  </compounddef>
</doxygen>
