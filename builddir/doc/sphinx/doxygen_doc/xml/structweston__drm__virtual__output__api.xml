<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structweston__drm__virtual__output__api" kind="struct" language="C++" prot="public">
    <compoundname>weston_drm_virtual_output_api</compoundname>
    <includes refid="backend-drm_8h" local="no">backend-drm.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structweston__drm__virtual__output__api_1a349ccf4aa56f2a5600c025f950f0847d" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structweston__output" kindref="compound">weston_output</ref> *(*</type>
        <definition>struct weston_output*(* weston_drm_virtual_output_api::create_output) (struct weston_compositor *c, char *name)</definition>
        <argsstring>)(struct weston_compositor *c, char *name)</argsstring>
        <name>create_output</name>
        <briefdescription>
<para>Create virtual output. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a low-level function, where the caller is expected to wrap the <ref refid="structweston__output" kindref="compound">weston_output</ref> function pointers as necessary to make the virtual output useful. The caller must set up output make, model, serial, physical size, the mode list and current mode.</para>
<para>Returns output on success, NULL on failure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" line="79" column="1" bodyfile="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structweston__drm__virtual__output__api_1a784cbcfd316ab435c3b42fb37bad8e0f" prot="public" static="no" mutable="no">
        <type>uint32_t(*</type>
        <definition>uint32_t(* weston_drm_virtual_output_api::set_gbm_format) (struct weston_output *output, const char *gbm_format)</definition>
        <argsstring>)(struct weston_output *output, const char *gbm_format)</argsstring>
        <name>set_gbm_format</name>
        <briefdescription>
<para>Set pixel format same as <ref refid="structdrm__output" kindref="compound">drm_output</ref> <ref refid="structweston__drm__virtual__output__api_1a784cbcfd316ab435c3b42fb37bad8e0f" kindref="member">set_gbm_format()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the set format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" line="115" column="1" bodyfile="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structweston__drm__virtual__output__api_1aa9ef5935315e925a668ac619b57ee4f6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* weston_drm_virtual_output_api::set_submit_frame_cb) (struct weston_output *output, submit_frame_cb cb)</definition>
        <argsstring>)(struct weston_output *output, submit_frame_cb cb)</argsstring>
        <name>set_submit_frame_cb</name>
        <briefdescription>
<para>Set a callback to be called when the DRM-backend has drawn a new frame and submits it for display. </para>
        </briefdescription>
        <detaileddescription>
<para>The callback will deliver a buffer to the virtual output&apos;s the owner and assumes the buffer is now reserved for the owner. The callback is called in virtual output repaint function. The caller must call <ref refid="structweston__drm__virtual__output__api_1a2fa52498b537fcdbde4d84182413e84c" kindref="member">buffer_released()</ref> and <ref refid="structweston__drm__virtual__output__api_1add7c6ac3dcd276f846509ab286d7196e" kindref="member">finish_frame()</ref>.</para>
<para>The callback parameters are output, FD and stride (bytes) of dmabuf, and buffer (<ref refid="structdrm__fb" kindref="compound">drm_fb</ref>) pointer. The callback returns 0 on success, -1 on failure.</para>
<para>The submit_frame_cb callback hook is responsible for closing the fd if it returns success. One needs to call the buffer release and finish frame functions if and only if this hook returns success. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" line="133" column="1" bodyfile="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structweston__drm__virtual__output__api_1ac76392f4f3d3d21f042781387c09fa1b" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* weston_drm_virtual_output_api::get_fence_sync_fd) (struct weston_output *output)</definition>
        <argsstring>)(struct weston_output *output)</argsstring>
        <name>get_fence_sync_fd</name>
        <briefdescription>
<para>Get fd for renderer fence. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned fence signals when the renderer job has completed and the buffer is fully drawn.</para>
<para>Returns fd on success, -1 on failure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" line="142" column="1" bodyfile="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structweston__drm__virtual__output__api_1a2fa52498b537fcdbde4d84182413e84c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* weston_drm_virtual_output_api::buffer_released) (struct drm_fb *fb)</definition>
        <argsstring>)(struct drm_fb *fb)</argsstring>
        <name>buffer_released</name>
        <briefdescription>
<para>Notify that the caller has finished using buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" line="145" column="1" bodyfile="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structweston__drm__virtual__output__api_1add7c6ac3dcd276f846509ab286d7196e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* weston_drm_virtual_output_api::finish_frame) (struct weston_output *output, struct timespec *stamp, uint32_t presented_flags)</definition>
        <argsstring>)(struct weston_output *output, struct timespec *stamp, uint32_t presented_flags)</argsstring>
        <name>finish_frame</name>
        <briefdescription>
<para>Notify finish frame This function allows the output repainting mechanism to advance to the next frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" line="151" column="1" bodyfile="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="21">
        <label>weston_testsuite_quirks</label>
        <link refid="structweston__testsuite__quirks"/>
      </node>
      <node id="1">
        <label>weston_drm_virtual_output_api</label>
        <link refid="structweston__drm__virtual__output__api"/>
        <childnode refid="2" relation="usage">
          <edgelabel>create_output</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>weston_buffer_release_reference</label>
        <link refid="structweston__buffer__release__reference"/>
        <childnode refid="15" relation="usage">
          <edgelabel>buffer_release</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>launcher_interface</label>
        <link refid="structlauncher__interface"/>
      </node>
      <node id="38">
        <label>weston_log_subscriber</label>
        <link refid="structweston__log__subscriber"/>
      </node>
      <node id="17">
        <label>weston_matrix</label>
        <link refid="structweston__matrix"/>
      </node>
      <node id="16">
        <label>weston_buffer_reference</label>
        <link refid="structweston__buffer__reference"/>
        <childnode refid="13" relation="usage">
          <edgelabel>buffer</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>weston_log_context</label>
        <link refid="structweston__log__context"/>
      </node>
      <node id="23">
        <label>weston_renderer</label>
        <link refid="structweston__renderer"/>
      </node>
      <node id="25">
        <label>weston_layer_entry</label>
        <link refid="structweston__layer__entry"/>
        <childnode refid="24" relation="usage">
          <edgelabel>layer</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>weston_transform</label>
        <link refid="structweston__transform"/>
        <childnode refid="17" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>weston_view</label>
        <link refid="structweston__view"/>
        <childnode refid="27" relation="usage">
          <edgelabel>parent_view</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>output</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>layer_link</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>plane</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>matrix</edgelabel>
          <edgelabel>inverse</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>surface</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>weston_data_source</label>
        <link refid="structweston__data__source"/>
        <childnode refid="47" relation="usage">
          <edgelabel>offer</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>seat</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>weston_buffer_viewport</label>
        <link refid="structweston__buffer__viewport"/>
      </node>
      <node id="40">
        <label>weston_backend</label>
        <link refid="structweston__backend"/>
        <childnode refid="2" relation="usage">
          <edgelabel>create_output</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>weston_pointer</label>
        <link refid="structweston__pointer"/>
        <childnode refid="27" relation="usage">
          <edgelabel>focus</edgelabel>
          <edgelabel>sprite</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>focus_client</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>seat</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>default_grab</edgelabel>
          <edgelabel>grab</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>weston_output</label>
        <link refid="structweston__output"/>
        <childnode refid="3" relation="usage">
          <edgelabel>zoom</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>original_mode</edgelabel>
          <edgelabel>current_mode</edgelabel>
          <edgelabel>native_mode</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>matrix</edgelabel>
          <edgelabel>inverse_matrix</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>compositor</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>weston_log_scope</label>
        <link refid="structweston__log__scope"/>
        <childnode refid="37" relation="usage">
          <edgelabel>destroy_subscription</edgelabel>
          <edgelabel>new_subscription</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>weston_layer</label>
        <link refid="structweston__layer"/>
        <childnode refid="25" relation="usage">
          <edgelabel>view_list</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>compositor</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>weston_compositor</label>
        <link refid="structweston__compositor"/>
        <childnode refid="19" relation="usage">
          <edgelabel>weston_log_ctx</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>test_data</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>default_pointer_grab</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>renderer</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>calibrator_layer</edgelabel>
          <edgelabel>fade_layer</edgelabel>
          <edgelabel>cursor_layer</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>touch_calibrator</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>xkb_info</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>timeline</edgelabel>
          <edgelabel>debug_scene</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>content_protection</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>backend</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>primary_plane</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>touch_calibration_save</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>launcher</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>weston_touch_grab</label>
        <link refid="structweston__touch__grab"/>
        <childnode refid="35" relation="usage">
          <edgelabel>interface</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>touch</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>weston_data_offer</label>
        <link refid="structweston__data__offer"/>
        <childnode refid="46" relation="usage">
          <edgelabel>source</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>weston_keyboard_grab</label>
        <link refid="structweston__keyboard__grab"/>
        <childnode refid="6" relation="usage">
          <edgelabel>keyboard</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>interface</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>weston_touch_device</label>
        <link refid="structweston__touch__device"/>
        <childnode refid="31" relation="usage">
          <edgelabel>saved_calibration</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>ops</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>aggregate</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>weston_plane</label>
        <link refid="structweston__plane"/>
        <childnode refid="18" relation="usage">
          <edgelabel>compositor</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>weston_log_subscription</label>
        <link refid="structweston__log__subscription"/>
        <childnode refid="36" relation="usage">
          <edgelabel>source</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>weston_seat</label>
        <link refid="structweston__seat"/>
        <childnode refid="6" relation="usage">
          <edgelabel>keyboard_state</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>output</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>pointer_state</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>selection_data_source</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>compositor</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>saved_kbd_focus</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>touch_state</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>weston_touch_device_matrix</label>
        <link refid="structweston__touch__device__matrix"/>
      </node>
      <node id="12">
        <label>weston_surface_state</label>
        <link refid="structweston__surface__state"/>
        <childnode refid="13" relation="usage">
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>buffer_viewport</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>buffer_release_ref</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>weston_pointer_grab_interface</label>
        <link refid="structweston__pointer__grab__interface"/>
      </node>
      <node id="4">
        <label>weston_animation</label>
        <link refid="structweston__animation"/>
      </node>
      <node id="9">
        <label>weston_keyboard_grab_interface</label>
        <link refid="structweston__keyboard__grab__interface"/>
      </node>
      <node id="48">
        <label>weston_spring</label>
        <link refid="structweston__spring"/>
      </node>
      <node id="35">
        <label>weston_touch_grab_interface</label>
        <link refid="structweston__touch__grab__interface"/>
      </node>
      <node id="13">
        <label>weston_buffer</label>
        <link refid="structweston__buffer"/>
      </node>
      <node id="7">
        <label>weston_xkb_info</label>
        <link refid="structweston__xkb__info"/>
      </node>
      <node id="3">
        <label>weston_output_zoom</label>
        <link refid="structweston__output__zoom"/>
        <childnode refid="4" relation="usage">
          <edgelabel>animation_z</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>seat</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>spring_z</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>weston_surface</label>
        <link refid="structweston__surface"/>
        <childnode refid="2" relation="usage">
          <edgelabel>output</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>buffer_viewport</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>pending</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>buffer_ref</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>surface_to_buffer_matrix</edgelabel>
          <edgelabel>buffer_to_surface_matrix</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>compositor</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>buffer_release_ref</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>weston_launcher</label>
        <link refid="structweston__launcher"/>
        <childnode refid="42" relation="usage">
          <edgelabel>iface</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>weston_mode</label>
        <link refid="structweston__mode"/>
      </node>
      <node id="20">
        <label>weston_testsuite_data</label>
        <link refid="structweston__testsuite__data"/>
        <childnode refid="21" relation="usage">
          <edgelabel>test_quirks</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>weston_buffer_release</label>
        <link refid="structweston__buffer__release"/>
      </node>
      <node id="26">
        <label>weston_touch_calibrator</label>
        <link refid="structweston__touch__calibrator"/>
        <childnode refid="27" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>output</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>compositor</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>surface</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>weston_keyboard</label>
        <link refid="structweston__keyboard"/>
        <childnode refid="7" relation="usage">
          <edgelabel>xkb_info</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>seat</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>default_grab</edgelabel>
          <edgelabel>input_method_grab</edgelabel>
          <edgelabel>grab</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>focus</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>weston_touch</label>
        <link refid="structweston__touch"/>
        <childnode refid="27" relation="usage">
          <edgelabel>focus</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>seat</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>default_grab</edgelabel>
          <edgelabel>grab</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>weston_pointer_client</label>
        <link refid="structweston__pointer__client"/>
      </node>
      <node id="45">
        <label>weston_pointer_grab</label>
        <link refid="structweston__pointer__grab"/>
        <childnode refid="22" relation="usage">
          <edgelabel>interface</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>pointer</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>weston_touch_device_ops</label>
        <link refid="structweston__touch__device__ops"/>
        <childnode refid="2" relation="usage">
          <edgelabel>get_output</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>content_protection</label>
        <link refid="structcontent__protection"/>
        <childnode refid="36" relation="usage">
          <edgelabel>debug</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>compositor</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" line="99" column="36" bodyfile="/home/lzm/Wayland/weston/include/libweston/backend-drm.h" bodystart="99" bodyend="154"/>
    <listofallmembers>
      <member refid="structweston__drm__virtual__output__api_1a2fa52498b537fcdbde4d84182413e84c" prot="public" virt="non-virtual"><scope>weston_drm_virtual_output_api</scope><name>buffer_released</name></member>
      <member refid="structweston__drm__virtual__output__api_1a349ccf4aa56f2a5600c025f950f0847d" prot="public" virt="non-virtual"><scope>weston_drm_virtual_output_api</scope><name>create_output</name></member>
      <member refid="structweston__drm__virtual__output__api_1add7c6ac3dcd276f846509ab286d7196e" prot="public" virt="non-virtual"><scope>weston_drm_virtual_output_api</scope><name>finish_frame</name></member>
      <member refid="structweston__drm__virtual__output__api_1ac76392f4f3d3d21f042781387c09fa1b" prot="public" virt="non-virtual"><scope>weston_drm_virtual_output_api</scope><name>get_fence_sync_fd</name></member>
      <member refid="structweston__drm__virtual__output__api_1a784cbcfd316ab435c3b42fb37bad8e0f" prot="public" virt="non-virtual"><scope>weston_drm_virtual_output_api</scope><name>set_gbm_format</name></member>
      <member refid="structweston__drm__virtual__output__api_1aa9ef5935315e925a668ac619b57ee4f6" prot="public" virt="non-virtual"><scope>weston_drm_virtual_output_api</scope><name>set_submit_frame_cb</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
