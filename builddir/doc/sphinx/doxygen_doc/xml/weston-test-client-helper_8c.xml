<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="weston-test-client-helper_8c" kind="file" language="C++">
    <compoundname>weston-test-client-helper.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">cairo.h</includes>
    <includes local="yes">test-config.h</includes>
    <includes local="yes">shared/os-compatibility.h</includes>
    <includes local="yes">shared/xalloc.h</includes>
    <includes refid="zalloc_8h" local="no">libweston/zalloc.h</includes>
    <includes refid="weston-test-client-helper_8h" local="yes">weston-test-client-helper.h</includes>
    <incdepgraph>
      <node id="17">
        <label>stdbool.h</label>
      </node>
      <node id="32">
        <label>viewporter-client-protocol.h</label>
      </node>
      <node id="25">
        <label>libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>weston-test-fixture-compositor.h</label>
        <link refid="weston-test-fixture-compositor_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>assert.h</label>
      </node>
      <node id="31">
        <label>weston-screenshooter-client-protocol.h</label>
      </node>
      <node id="30">
        <label>weston-test-client-protocol.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>sys/mman.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="27">
        <label>wayland-server.h</label>
      </node>
      <node id="26">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="8">
        <label>errno.h</label>
      </node>
      <node id="13">
        <label>shared/xalloc.h</label>
      </node>
      <node id="12">
        <label>shared/os-compatibility.h</label>
      </node>
      <node id="23">
        <label>shared/helpers.h</label>
      </node>
      <node id="29">
        <label>weston-testsuite-data.h</label>
        <link refid="weston-testsuite-data_8h"/>
      </node>
      <node id="20">
        <label>wayland-client-protocol.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="11">
        <label>test-config.h</label>
      </node>
      <node id="14">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>time.h</label>
      </node>
      <node id="28">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="19">
        <label>pixman.h</label>
      </node>
      <node id="22">
        <label>wayland-util.h</label>
      </node>
      <node id="21">
        <label>weston-test-runner.h</label>
        <link refid="weston-test-runner_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/tests/weston-test-client-helper.c</label>
        <link refid="weston-test-client-helper_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>weston-test-client-helper.h</label>
        <link refid="weston-test-client-helper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cairo.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structformat__map__entry" prot="public">format_map_entry</innerclass>
    <innerclass refid="structimage__iterator" prot="public">image_iterator</innerclass>
    <innerclass refid="structpixel__diff__stat" prot="public">pixel_diff_stat</innerclass>
    <innerclass refid="structpixel__diff__stat_1_1pixel__diff__stat__channel" prot="public">pixel_diff_stat::pixel_diff_stat_channel</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="weston-test-client-helper_8c_1affe776513b24d84b39af8ab0930fef7f" prot="public" static="no">
        <name>max</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((a) &gt; (b)) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="45" column="9" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="weston-test-client-helper_8c_1ac6afabdc09a49a433ee19d8a9486056d" prot="public" static="no">
        <name>min</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((a) &gt; (b)) ? (b) : (a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="46" column="9" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="weston-test-client-helper_8c_1ade0ac16de71f1b411f933a8b2cd513bc" prot="public" static="no">
        <name>clip</name>
        <param><defname>x</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer><ref refid="weston-test-client-helper_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(<ref refid="weston-test-client-helper_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(x, a), b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="47" column="9" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="weston-test-client-helper_8c_1ad912c6d1dcc81e5d920a321bfff76598" prot="public" static="yes" mutable="no">
        <type>const struct wl_callback_listener</type>
        <definition>const struct wl_callback_listener frame_listener</definition>
        <argsstring></argsstring>
        <name>frame_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1af7e2ab9d2a2a6c9c62cb500cc32ecc52" kindref="member">frame_callback_handler</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="61" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1a95f773b8c486e0bd6d3f330ede160ca3" prot="public" static="yes" mutable="no">
        <type>const struct wl_pointer_listener</type>
        <definition>const struct wl_pointer_listener pointer_listener</definition>
        <argsstring></argsstring>
        <name>pointer_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1a0652503dbc2ca8c51b12e99803691029" kindref="member">pointer_handle_enter</ref>,
	<ref refid="weston-test-client-helper_8c_1a6cd9495e1b5dda22feecca98d418e14b" kindref="member">pointer_handle_leave</ref>,
	<ref refid="weston-test-client-helper_8c_1a1c3c7a471982596bc68148e37d456ba6" kindref="member">pointer_handle_motion</ref>,
	<ref refid="weston-test-client-helper_8c_1ad4d1bc450cf20b50d1fa83d701e1e8f5" kindref="member">pointer_handle_button</ref>,
	<ref refid="weston-test-client-helper_8c_1a387c713e9ff69495360bfa983f5e24bd" kindref="member">pointer_handle_axis</ref>,
	<ref refid="weston-test-client-helper_8c_1ad9d8f300d57271fa43e1593a0f2ba122" kindref="member">pointer_handle_frame</ref>,
	<ref refid="weston-test-client-helper_8c_1a87609483cfbbab9a523ddcc095cfa84b" kindref="member">pointer_handle_axis_source</ref>,
	<ref refid="weston-test-client-helper_8c_1abcf4fe0488356e73657b379c6442af82" kindref="member">pointer_handle_axis_stop</ref>,
	<ref refid="weston-test-client-helper_8c_1abebc00259ffb7041a37a902bf0aea565" kindref="member">pointer_handle_axis_discrete</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="228" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1ad2397b21621af84a362f43f4371223e6" prot="public" static="yes" mutable="no">
        <type>const struct wl_keyboard_listener</type>
        <definition>const struct wl_keyboard_listener keyboard_listener</definition>
        <argsstring></argsstring>
        <name>keyboard_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1a183762eee71720cb4487fa5dbae8646c" kindref="member">keyboard_handle_keymap</ref>,
	<ref refid="weston-test-client-helper_8c_1af2ac3ef0fce1b9f9b56808c5aec0f39a" kindref="member">keyboard_handle_enter</ref>,
	<ref refid="weston-test-client-helper_8c_1a8095ed560f4f0fda5018154849c61823" kindref="member">keyboard_handle_leave</ref>,
	<ref refid="weston-test-client-helper_8c_1a59932f8b571a5426a7031d14d6aa6092" kindref="member">keyboard_handle_key</ref>,
	<ref refid="weston-test-client-helper_8c_1a3820c47b42e7a337875b81d4c8bad25c" kindref="member">keyboard_handle_modifiers</ref>,
	<ref refid="weston-test-client-helper_8c_1a0b73a7b837c7609dafd42b868d9b3136" kindref="member">keyboard_handle_repeat_info</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="317" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1ae93f064fd5442b726948626c64eed7a3" prot="public" static="yes" mutable="no">
        <type>const struct wl_touch_listener</type>
        <definition>const struct wl_touch_listener touch_listener</definition>
        <argsstring></argsstring>
        <name>touch_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1a644cd2f71597aee1d22fc012152855fe" kindref="member">touch_handle_down</ref>,
	<ref refid="weston-test-client-helper_8c_1a31cdd7c475e2c8ec6fccf1c5f2e0e179" kindref="member">touch_handle_up</ref>,
	<ref refid="weston-test-client-helper_8c_1aecbbed68194b2cb35a1b117fde77179e" kindref="member">touch_handle_motion</ref>,
	<ref refid="weston-test-client-helper_8c_1a37257b91ffef0d995a3cc321a5df6603" kindref="member">touch_handle_frame</ref>,
	<ref refid="weston-test-client-helper_8c_1a3f1339203e9bacfa983045d9e27f5471" kindref="member">touch_handle_cancel</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="396" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1ab06cca987f5be7d8a99e61abeed445eb" prot="public" static="yes" mutable="no">
        <type>const struct wl_surface_listener</type>
        <definition>const struct wl_surface_listener surface_listener</definition>
        <argsstring></argsstring>
        <name>surface_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1a99262a4fc877082936c61b968f500aef" kindref="member">surface_enter</ref>,
	<ref refid="weston-test-client-helper_8c_1ad552387e29c9aeed8e6e4107a87601e5" kindref="member">surface_leave</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="425" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1abf52f02f4fde286f53a02fd1cf168ea2" prot="public" static="no" mutable="no">
        <type>struct wl_shm_listener</type>
        <definition>struct wl_shm_listener shm_listener</definition>
        <argsstring></argsstring>
        <name>shm_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1a5b41b1e13bbc9d1008bf949523be1da8" kindref="member">shm_format</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="518" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1a028a57b52711bac74ec2472a3d8e793e" prot="public" static="yes" mutable="no">
        <type>const struct weston_screenshooter_listener</type>
        <definition>const struct weston_screenshooter_listener screenshooter_listener</definition>
        <argsstring></argsstring>
        <name>screenshooter_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1ac7eff01a2cc2fe7b42d6c18c1925a5fc" kindref="member">test_handle_capture_screenshot_done</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="543" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1a04c5ae2f7e0692503f72ddfb041ace17" prot="public" static="yes" mutable="no">
        <type>const struct weston_test_listener</type>
        <definition>const struct weston_test_listener test_listener</definition>
        <argsstring></argsstring>
        <name>test_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1a1f7ae4d1f1ce6e409dfa355c2fc2ebf8" kindref="member">test_handle_pointer_position</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="543" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1a54998e34e5d326dcfdc75efbb8153526" prot="public" static="yes" mutable="no">
        <type>const struct wl_seat_listener</type>
        <definition>const struct wl_seat_listener seat_listener</definition>
        <argsstring></argsstring>
        <name>seat_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1ae5b6ae9df7662ca951bb14923da60fc5" kindref="member">seat_handle_capabilities</ref>,
	<ref refid="weston-test-client-helper_8c_1af56b0d9ee2b1a169c16b97b20bf4f660" kindref="member">seat_handle_name</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="648" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="667" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1a1f22d30776bc9f97b7ab9ca6d2c3594c" prot="public" static="yes" mutable="no">
        <type>const struct wl_output_listener</type>
        <definition>const struct wl_output_listener output_listener</definition>
        <argsstring></argsstring>
        <name>output_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1a5562a0e4d56dab6b428731577ecb26eb" kindref="member">output_handle_geometry</ref>,
	<ref refid="weston-test-client-helper_8c_1aa3d1801b189ea1dc57622845412bd136" kindref="member">output_handle_mode</ref>,
	<ref refid="weston-test-client-helper_8c_1acfe6c6564c8b55c63e425cfd7a72c390" kindref="member">output_handle_done</ref>,
	<ref refid="weston-test-client-helper_8c_1a4038e138bbf589bd1f4da7cb9ddca3cb" kindref="member">output_handle_scale</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="716" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1a8998c87c94cd7d185e8f0cdafab4b1c4" prot="public" static="yes" mutable="no">
        <type>const struct wl_registry_listener</type>
        <definition>const struct wl_registry_listener registry_listener</definition>
        <argsstring></argsstring>
        <name>registry_listener</name>
        <initializer>= {
	<ref refid="weston-test-client-helper_8c_1a5df7311cf77f7899c05f89b660f0cd1e" kindref="member">handle_global</ref>,
	<ref refid="weston-test-client-helper_8c_1a967ee7103297a0cb736752330cf6c609" kindref="member">handle_global_remove</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="842" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="weston-test-client-helper_8c_1a21314cdb99919972b44fd2d003b3a668" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structformat__map__entry" kindref="compound">format_map_entry</ref></type>
        <definition>const struct format_map_entry format_map[]</definition>
        <argsstring>[]</argsstring>
        <name>format_map</name>
        <initializer>= {
	{ CAIRO_FORMAT_ARGB32,    PIXMAN_a8r8g8b8 },
	{ CAIRO_FORMAT_RGB24,     PIXMAN_x8r8g8b8 },
	{ CAIRO_FORMAT_A8,        PIXMAN_a8 },
	{ CAIRO_FORMAT_RGB16_565, PIXMAN_r5g6b5 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1130" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int surface_contains</definition>
        <argsstring>(struct surface *surface, int x, int y)</argsstring>
        <name>surface_contains</name>
        <param>
          <type>struct <ref refid="structsurface" kindref="compound">surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="50" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1af7e2ab9d2a2a6c9c62cb500cc32ecc52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void frame_callback_handler</definition>
        <argsstring>(void *data, struct wl_callback *callback, uint32_t time)</argsstring>
        <name>frame_callback_handler</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_callback *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="61" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="61" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1adb6105ea2e8be1aa9823fda8c44ea704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct wl_callback *</type>
        <definition>struct wl_callback* frame_callback_set</definition>
        <argsstring>(struct wl_surface *surface, int *done)</argsstring>
        <name>frame_callback_set</name>
        <param>
          <type>struct wl_surface *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>done</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="75" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="75" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1aa2ffb776c995e9f7ef754d6a990eb6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int frame_callback_wait_nofail</definition>
        <argsstring>(struct client *client, int *done)</argsstring>
        <name>frame_callback_wait_nofail</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>done</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="87" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="87" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a37328a264739e2481da21489c1964335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void move_client</definition>
        <argsstring>(struct client *client, int x, int y)</argsstring>
        <name>move_client</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="98" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="98" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a0652503dbc2ca8c51b12e99803691029" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_enter</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer, uint32_t serial, struct wl_surface *wl_surface, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>pointer_handle_enter</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>struct wl_surface *</type>
          <declname>wl_surface</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="122" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="122" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a6cd9495e1b5dda22feecca98d418e14b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_leave</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer, uint32_t serial, struct wl_surface *wl_surface)</argsstring>
        <name>pointer_handle_leave</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>struct wl_surface *</type>
          <declname>wl_surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="141" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="141" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a1c3c7a471982596bc68148e37d456ba6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_motion</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer, uint32_t time_msec, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>pointer_handle_motion</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_msec</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="153" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="153" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ad4d1bc450cf20b50d1fa83d701e1e8f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_button</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer, uint32_t serial, uint32_t time_msec, uint32_t button, uint32_t state)</argsstring>
        <name>pointer_handle_button</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_msec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="169" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="169" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a387c713e9ff69495360bfa983f5e24bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_axis</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer, uint32_t time_msec, uint32_t axis, wl_fixed_t value)</argsstring>
        <name>pointer_handle_axis</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_msec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="185" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="185" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ad9d8f300d57271fa43e1593a0f2ba122" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_frame</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer)</argsstring>
        <name>pointer_handle_frame</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="201" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a87609483cfbbab9a523ddcc095cfa84b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_axis_source</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer, uint32_t source)</argsstring>
        <name>pointer_handle_axis_source</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="207" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1abcf4fe0488356e73657b379c6442af82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_axis_stop</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer, uint32_t time_msec, uint32_t axis)</argsstring>
        <name>pointer_handle_axis_stop</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_msec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="214" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="214" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1abebc00259ffb7041a37a902bf0aea565" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointer_handle_axis_discrete</definition>
        <argsstring>(void *data, struct wl_pointer *wl_pointer, uint32_t axis, int32_t value)</argsstring>
        <name>pointer_handle_axis_discrete</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_pointer *</type>
          <declname>wl_pointer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="228" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="228" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a183762eee71720cb4487fa5dbae8646c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void keyboard_handle_keymap</definition>
        <argsstring>(void *data, struct wl_keyboard *wl_keyboard, uint32_t format, int fd, uint32_t size)</argsstring>
        <name>keyboard_handle_keymap</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_keyboard *</type>
          <declname>wl_keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="247" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="247" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1af2ac3ef0fce1b9f9b56808c5aec0f39a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void keyboard_handle_enter</definition>
        <argsstring>(void *data, struct wl_keyboard *wl_keyboard, uint32_t serial, struct wl_surface *wl_surface, struct wl_array *keys)</argsstring>
        <name>keyboard_handle_enter</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_keyboard *</type>
          <declname>wl_keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>struct wl_surface *</type>
          <declname>wl_surface</declname>
        </param>
        <param>
          <type>struct wl_array *</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="256" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="256" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a8095ed560f4f0fda5018154849c61823" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void keyboard_handle_leave</definition>
        <argsstring>(void *data, struct wl_keyboard *wl_keyboard, uint32_t serial, struct wl_surface *wl_surface)</argsstring>
        <name>keyboard_handle_leave</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_keyboard *</type>
          <declname>wl_keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>struct wl_surface *</type>
          <declname>wl_surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="272" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="272" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a59932f8b571a5426a7031d14d6aa6092" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void keyboard_handle_key</definition>
        <argsstring>(void *data, struct wl_keyboard *wl_keyboard, uint32_t serial, uint32_t time_msec, uint32_t key, uint32_t state)</argsstring>
        <name>keyboard_handle_key</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_keyboard *</type>
          <declname>wl_keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_msec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="284" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="284" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a3820c47b42e7a337875b81d4c8bad25c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void keyboard_handle_modifiers</definition>
        <argsstring>(void *data, struct wl_keyboard *wl_keyboard, uint32_t serial, uint32_t mods_depressed, uint32_t mods_latched, uint32_t mods_locked, uint32_t group)</argsstring>
        <name>keyboard_handle_modifiers</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_keyboard *</type>
          <declname>wl_keyboard</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_depressed</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_latched</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mods_locked</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="300" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="300" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a0b73a7b837c7609dafd42b868d9b3136" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void keyboard_handle_repeat_info</definition>
        <argsstring>(void *data, struct wl_keyboard *wl_keyboard, int32_t rate, int32_t delay)</argsstring>
        <name>keyboard_handle_repeat_info</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_keyboard *</type>
          <declname>wl_keyboard</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="317" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="317" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a644cd2f71597aee1d22fc012152855fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_handle_down</definition>
        <argsstring>(void *data, struct wl_touch *wl_touch, uint32_t serial, uint32_t time_msec, struct wl_surface *surface, int32_t id, wl_fixed_t x_w, wl_fixed_t y_w)</argsstring>
        <name>touch_handle_down</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_touch *</type>
          <declname>wl_touch</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_msec</declname>
        </param>
        <param>
          <type>struct wl_surface *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="338" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="338" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a31cdd7c475e2c8ec6fccf1c5f2e0e179" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_handle_up</definition>
        <argsstring>(void *data, struct wl_touch *wl_touch, uint32_t serial, uint32_t time_msec, int32_t id)</argsstring>
        <name>touch_handle_up</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_touch *</type>
          <declname>wl_touch</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_msec</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="357" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="357" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1aecbbed68194b2cb35a1b117fde77179e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_handle_motion</definition>
        <argsstring>(void *data, struct wl_touch *wl_touch, uint32_t time_msec, int32_t id, wl_fixed_t x_w, wl_fixed_t y_w)</argsstring>
        <name>touch_handle_motion</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_touch *</type>
          <declname>wl_touch</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_msec</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="370" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="370" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a37257b91ffef0d995a3cc321a5df6603" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_handle_frame</definition>
        <argsstring>(void *data, struct wl_touch *wl_touch)</argsstring>
        <name>touch_handle_frame</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_touch *</type>
          <declname>wl_touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="386" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="386" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a3f1339203e9bacfa983045d9e27f5471" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_handle_cancel</definition>
        <argsstring>(void *data, struct wl_touch *wl_touch)</argsstring>
        <name>touch_handle_cancel</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_touch *</type>
          <declname>wl_touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="396" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="396" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a99262a4fc877082936c61b968f500aef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_enter</definition>
        <argsstring>(void *data, struct wl_surface *wl_surface, struct wl_output *output)</argsstring>
        <name>surface_enter</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_surface *</type>
          <declname>wl_surface</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="414" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="414" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ad552387e29c9aeed8e6e4107a87601e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void surface_leave</definition>
        <argsstring>(void *data, struct wl_surface *wl_surface, struct wl_output *output)</argsstring>
        <name>surface_leave</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_surface *</type>
          <declname>wl_surface</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="425" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="425" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ae6720253d93c41950ad9800461d8eb7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structbuffer" kindref="compound">buffer</ref> *</type>
        <definition>static struct buffer* create_shm_buffer</definition>
        <argsstring>(struct client *client, int width, int height, pixman_format_code_t format, uint32_t wlfmt)</argsstring>
        <name>create_shm_buffer</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>pixman_format_code_t</type>
          <declname>format</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>wlfmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="442" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="442" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a1eecc92b5b5e115112d67cbc7f538e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structbuffer" kindref="compound">buffer</ref> *</type>
        <definition>struct buffer* create_shm_buffer_a8r8g8b8</definition>
        <argsstring>(struct client *client, int width, int height)</argsstring>
        <name>create_shm_buffer_a8r8g8b8</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="492" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="492" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a014665bba4cce883927372cc5348216f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void buffer_destroy</definition>
        <argsstring>(struct buffer *buf)</argsstring>
        <name>buffer_destroy</name>
        <param>
          <type>struct <ref refid="structbuffer" kindref="compound">buffer</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="501" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="501" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a5b41b1e13bbc9d1008bf949523be1da8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shm_format</definition>
        <argsstring>(void *data, struct wl_shm *wl_shm, uint32_t format)</argsstring>
        <name>shm_format</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_shm *</type>
          <declname>wl_shm</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="518" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="518" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a1f7ae4d1f1ce6e409dfa355c2fc2ebf8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_handle_pointer_position</definition>
        <argsstring>(void *data, struct weston_test *weston_test, wl_fixed_t x, wl_fixed_t y)</argsstring>
        <name>test_handle_pointer_position</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>weston_test</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="531" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="531" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ac7eff01a2cc2fe7b42d6c18c1925a5fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_handle_capture_screenshot_done</definition>
        <argsstring>(void *data, struct weston_screenshooter *screenshooter)</argsstring>
        <name>test_handle_capture_screenshot_done</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct weston_screenshooter *</type>
          <declname>screenshooter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="543" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="543" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a232cb6e776603a06b4184c8ff3ee8562" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void input_destroy</definition>
        <argsstring>(struct input *inp)</argsstring>
        <name>input_destroy</name>
        <param>
          <type>struct <ref refid="structinput" kindref="compound">input</ref> *</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="560" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="560" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a2857a5244349e27d7559cc8a193b1a16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void input_update_devices</definition>
        <argsstring>(struct input *input)</argsstring>
        <name>input_update_devices</name>
        <param>
          <type>struct <ref refid="structinput" kindref="compound">input</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="581" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="581" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ae5b6ae9df7662ca951bb14923da60fc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_handle_capabilities</definition>
        <argsstring>(void *data, struct wl_seat *seat, enum wl_seat_capability caps)</argsstring>
        <name>seat_handle_capabilities</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_seat *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>enum wl_seat_capability</type>
          <declname>caps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="631" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="631" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1af56b0d9ee2b1a169c16b97b20bf4f660" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seat_handle_name</definition>
        <argsstring>(void *data, struct wl_seat *seat, const char *name)</argsstring>
        <name>seat_handle_name</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_seat *</type>
          <declname>seat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="648" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="648" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a5562a0e4d56dab6b428731577ecb26eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_handle_geometry</definition>
        <argsstring>(void *data, struct wl_output *wl_output, int x, int y, int physical_width, int physical_height, int subpixel, const char *make, const char *model, int32_t transform)</argsstring>
        <name>output_handle_geometry</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>wl_output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>physical_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>physical_height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subpixel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>make</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="673" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="673" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1aa3d1801b189ea1dc57622845412bd136" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_handle_mode</definition>
        <argsstring>(void *data, struct wl_output *wl_output, uint32_t flags, int width, int height, int refresh)</argsstring>
        <name>output_handle_mode</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>wl_output</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>refresh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="690" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="690" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a4038e138bbf589bd1f4da7cb9ddca3cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_handle_scale</definition>
        <argsstring>(void *data, struct wl_output *wl_output, int scale)</argsstring>
        <name>output_handle_scale</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>wl_output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="706" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="706" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1acfe6c6564c8b55c63e425cfd7a72c390" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_handle_done</definition>
        <argsstring>(void *data, struct wl_output *wl_output)</argsstring>
        <name>output_handle_done</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>wl_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="716" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="716" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a517aee233a8c3ab311347acec0eb7dfb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_destroy</definition>
        <argsstring>(struct output *output)</argsstring>
        <name>output_destroy</name>
        <param>
          <type>struct <ref refid="structoutput" kindref="compound">output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="732" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="732" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a5df7311cf77f7899c05f89b660f0cd1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_global</definition>
        <argsstring>(void *data, struct wl_registry *registry, uint32_t id, const char *interface, uint32_t version)</argsstring>
        <name>handle_global</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_registry *</type>
          <declname>registry</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="741" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="741" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1acf446ef63d2b0764abcc2dd539970742" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structglobal" kindref="compound">global</ref> *</type>
        <definition>static struct global* client_find_global_with_name</definition>
        <argsstring>(struct client *client, uint32_t name)</argsstring>
        <name>client_find_global_with_name</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="808" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="808" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a0343d45f15ad29d650951ea06a64ec0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structinput" kindref="compound">input</ref> *</type>
        <definition>static struct input* client_find_input_with_name</definition>
        <argsstring>(struct client *client, uint32_t name)</argsstring>
        <name>client_find_input_with_name</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="821" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="821" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a49b9500483e32b527a972160b6c15e1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void global_destroy</definition>
        <argsstring>(struct global *global)</argsstring>
        <name>global_destroy</name>
        <param>
          <type>struct <ref refid="structglobal" kindref="compound">global</ref> *</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="834" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="834" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a967ee7103297a0cb736752330cf6c609" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_global_remove</definition>
        <argsstring>(void *data, struct wl_registry *registry, uint32_t name)</argsstring>
        <name>handle_global_remove</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_registry *</type>
          <declname>registry</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="842" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="842" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a70a6740f5702a0a4d532a927658d028f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void skip</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>skip</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="871" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="871" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a3a9a023a48a87193c1a6fc6bbbd8c6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void expect_protocol_error</definition>
        <argsstring>(struct client *client, const struct wl_interface *intf, uint32_t code)</argsstring>
        <name>expect_protocol_error</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct wl_interface *</type>
          <declname>intf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="887" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="887" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1aa2dee7110e405ac39d7a372cb6f28d5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void log_handler</definition>
        <argsstring>(const char *fmt, va_list args)</argsstring>
        <name>log_handler</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="933" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="933" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1af73e5cb173ce63199265176e2b0e90dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
        <definition>struct client* create_client</definition>
        <argsstring>(void)</argsstring>
        <name>create_client</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="940" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="940" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a48b9e7f0e76b1c88869a2f8666d8026e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structsurface" kindref="compound">surface</ref> *</type>
        <definition>struct surface* create_test_surface</definition>
        <argsstring>(struct client *client)</argsstring>
        <name>create_test_surface</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="984" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="984" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a2c686f203eab16492d51ed7262aa479c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void surface_destroy</definition>
        <argsstring>(struct surface *surface)</argsstring>
        <name>surface_destroy</name>
        <param>
          <type>struct <ref refid="structsurface" kindref="compound">surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1003" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1003" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
        <definition>struct client* create_client_and_test_surface</definition>
        <argsstring>(int x, int y, int width, int height)</argsstring>
        <name>create_client_and_test_surface</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1013" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1013" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a9d6289c37c3b56c85f4cc40a7cf71513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void client_destroy</definition>
        <argsstring>(struct client *client)</argsstring>
        <name>client_destroy</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1047" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1047" bodyend="1084"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a49e55fa6f4c34b1f30ec5b818e293266" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* output_path</definition>
        <argsstring>(void)</argsstring>
        <name>output_path</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1087" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1087" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ae60561096f469244eb55140459df230a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* screenshot_output_filename</definition>
        <argsstring>(const char *basename, uint32_t seq)</argsstring>
        <name>screenshot_output_filename</name>
        <param>
          <type>const char *</type>
          <declname>basename</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1098" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1098" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a29a3c01e33dd2e6720b3a775c881f965" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* reference_path</definition>
        <argsstring>(void)</argsstring>
        <name>reference_path</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1109" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1109" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ac48baacfb41665edc58ab4f3e65fe95c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* screenshot_reference_filename</definition>
        <argsstring>(const char *basename, uint32_t seq)</argsstring>
        <name>screenshot_reference_filename</name>
        <param>
          <type>const char *</type>
          <declname>basename</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1119" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1119" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a739aad515ceacc99cfbde6c4c2cf87af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* image_filename</definition>
        <argsstring>(const char *basename)</argsstring>
        <name>image_filename</name>
        <param>
          <type>const char *</type>
          <declname>basename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1130" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1130" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a30ca788f68fb41345ce23489a073ff4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_format_code_t</type>
        <definition>static pixman_format_code_t format_cairo2pixman</definition>
        <argsstring>(cairo_format_t fmt)</argsstring>
        <name>format_cairo2pixman</name>
        <param>
          <type>cairo_format_t</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1152" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1152" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a3b8c41b24c2c4ddc7925c705503ab62c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cairo_format_t</type>
        <definition>static cairo_format_t format_pixman2cairo</definition>
        <argsstring>(pixman_format_code_t fmt)</argsstring>
        <name>format_pixman2cairo</name>
        <param>
          <type>pixman_format_code_t</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1164" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1164" bodyend="1173"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1acb5288876f174a77d77341a59547554d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structrange" kindref="compound">range</ref></type>
        <definition>static struct range range_get</definition>
        <argsstring>(const struct range *r)</argsstring>
        <name>range_get</name>
        <param>
          <type>const struct <ref refid="structrange" kindref="compound">range</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Validate range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Range to validate or NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The given range, or {0, 0} for NULL.</para>
</simplesect>
Will abort if range is invalid, that is a &gt; b. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1164" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1184" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ad109f37100799030b524a8c005738c9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_box32_t</type>
        <definition>static pixman_box32_t image_check_get_roi</definition>
        <argsstring>(pixman_image_t *img_a, pixman_image_t *img_b, const struct rectangle *clip_rect)</argsstring>
        <name>image_check_get_roi</name>
        <param>
          <type>pixman_image_t *</type>
          <declname>img_a</declname>
        </param>
        <param>
          <type>pixman_image_t *</type>
          <declname>img_b</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrectangle" kindref="compound">rectangle</ref> *</type>
          <declname>clip_rect</declname>
        </param>
        <briefdescription>
<para>Compute the ROI for image comparisons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img_a</parametername>
</parameternamelist>
<parameterdescription>
<para>An image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_b</parametername>
</parameternamelist>
<parameterdescription>
<para>Another image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clip_rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Explicit ROI, or NULL for using the whole image area.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The region of interest (ROI) that is guaranteed to be inside both images.</para>
</simplesect>
If clip_rect is given, it must fall inside of both images. If clip_rect is NULL, the images must be of the same size. If any precondition is violated, this function aborts with an error.</para>
<para>The ROI is given as pixman_box32_t, where x2,y2 are non-inclusive. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1211" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1211" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a29ddf562364d1d62a43137ccd8a95201" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void image_iter_init</definition>
        <argsstring>(struct image_iterator *it, pixman_image_t *image)</argsstring>
        <name>image_iter_init</name>
        <param>
          <type>struct <ref refid="structimage__iterator" kindref="compound">image_iterator</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>pixman_image_t *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1256" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1256" bodyend="1265"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a5659be2c0d8b8284fd0a1b8232daee50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t *</type>
        <definition>static uint32_t* image_iter_get_row</definition>
        <argsstring>(struct image_iterator *it, int y)</argsstring>
        <name>image_iter_get_row</name>
        <param>
          <type>struct <ref refid="structimage__iterator" kindref="compound">image_iterator</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1268" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1268" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a42a747c7c1c2a1f12245204527d03bb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void testlog_pixel_diff_stat</definition>
        <argsstring>(const struct pixel_diff_stat *stat)</argsstring>
        <name>testlog_pixel_diff_stat</name>
        <param>
          <type>const struct <ref refid="structpixel__diff__stat" kindref="compound">pixel_diff_stat</ref> *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1281" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1281" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1acaf1d59f677686ab1a558a7c3fe846b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool fuzzy_match_pixels</definition>
        <argsstring>(uint32_t pix_a, uint32_t pix_b, const struct range *fuzz, struct pixel_diff_stat *stat)</argsstring>
        <name>fuzzy_match_pixels</name>
        <param>
          <type>uint32_t</type>
          <declname>pix_a</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pix_b</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrange" kindref="compound">range</ref> *</type>
          <declname>fuzz</declname>
        </param>
        <param>
          <type>struct <ref refid="structpixel__diff__stat" kindref="compound">pixel_diff_stat</ref> *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1293" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1293" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ac660a60c4cbc6ce52d1b68b14bfab7f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool check_images_match</definition>
        <argsstring>(pixman_image_t *img_a, pixman_image_t *img_b, const struct rectangle *clip_rect, const struct range *prec)</argsstring>
        <name>check_images_match</name>
        <param>
          <type>pixman_image_t *</type>
          <declname>img_a</declname>
        </param>
        <param>
          <type>pixman_image_t *</type>
          <declname>img_b</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrectangle" kindref="compound">rectangle</ref> *</type>
          <declname>clip_rect</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrange" kindref="compound">range</ref> *</type>
          <declname>prec</declname>
        </param>
        <briefdescription>
<para>Test if a given region within two images are pixel-identical. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the two images pixel-wise identical, and false otherwise.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img_a</parametername>
</parameternamelist>
<parameterdescription>
<para>First image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clip_rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The region of interest, or NULL for comparing the whole images. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prec</parametername>
</parameternamelist>
<parameterdescription>
<para>Per-channel allowed difference, or NULL for identical match required.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function hard-fails if clip_rect is not inside both images. If clip_rect is given, the images do not have to match in size, otherwise size mismatch will be a hard failure.</para>
<para>The per-pixel, per-channel difference is computed as img_b - img_a which is required to be in the range [prec-&gt;a, prec-&gt;b] inclusive. The difference is signed. All four channels are compared the same way, without any special meaning on alpha channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1338" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1338" bodyend="1370"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ae9f6c27f16d782c4c46684785f08c104" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t tint</definition>
        <argsstring>(uint32_t src, uint32_t add)</argsstring>
        <name>tint</name>
        <param>
          <type>uint32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>add</declname>
        </param>
        <briefdescription>
<para>Tint a color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source pixel as x8r8g8b8. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add</parametername>
</parameternamelist>
<parameterdescription>
<para>The tint as x8r8g8b8, x8 must be zero; r8, g8 and b8 must be no greater than 0xc0 to avoid overflow to another channel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The tinted pixel color as x8r8g8b8, x8 guaranteed to be 0xff.</para>
</simplesect>
The source pixel RGB values are divided by 4, and then the tint is added. To achieve colors outside of the range of src, a tint color channel must be at least 0x40. (0xff / 4 = 0x3f, 0xff - 0x3f = 0xc0) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1385" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1385" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a3ad420bb5f1f58c26b8160716b2d839b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_image_t *</type>
        <definition>pixman_image_t* visualize_image_difference</definition>
        <argsstring>(pixman_image_t *img_a, pixman_image_t *img_b, const struct rectangle *clip_rect, const struct range *prec)</argsstring>
        <name>visualize_image_difference</name>
        <param>
          <type>pixman_image_t *</type>
          <declname>img_a</declname>
        </param>
        <param>
          <type>pixman_image_t *</type>
          <declname>img_b</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrectangle" kindref="compound">rectangle</ref> *</type>
          <declname>clip_rect</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrange" kindref="compound">range</ref> *</type>
          <declname>prec</declname>
        </param>
        <briefdescription>
<para>Create a visualization of image differences. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img_a</parametername>
</parameternamelist>
<parameterdescription>
<para>First image, which is used as the basis for the output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clip_rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The region of interest, or NULL for comparing the whole images. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prec</parametername>
</parameternamelist>
<parameterdescription>
<para>Per-channel allowed difference, or NULL for identical match required. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new image with the differences highlighted.</para>
</simplesect>
Regions outside of the region of interest are shaded with black, matching pixels are shaded with green, and differing pixels are shaded with bright red.</para>
<para>This function hard-fails if clip_rect is not inside both images. If clip_rect is given, the images do not have to match in size, otherwise size mismatch will be a hard failure.</para>
<para>The per-pixel, per-channel difference is computed as img_b - img_a which is required to be in the range [prec-&gt;a, prec-&gt;b] inclusive. The difference is signed. All four channels are compared the same way, without any special meaning on alpha channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1419" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1419" bodyend="1482"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ae254076694f843e36140c726a0e00005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool write_image_as_png</definition>
        <argsstring>(pixman_image_t *image, const char *fname)</argsstring>
        <name>write_image_as_png</name>
        <param>
          <type>pixman_image_t *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Write an image into a PNG file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>The name and path for the file.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successfully saved file; false otherwise.</para>
</simplesect>
<simplesect kind="note"><para>Only image formats directly supported by Cairo are accepted, not all Pixman formats. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1496" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1496" bodyend="1522"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1afd80ada4602a329ab5749c3724829847" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_image_t *</type>
        <definition>static pixman_image_t* image_convert_to_a8r8g8b8</definition>
        <argsstring>(pixman_image_t *image)</argsstring>
        <name>image_convert_to_a8r8g8b8</name>
        <param>
          <type>pixman_image_t *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1525" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1525" bodyend="1545"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a9bb6677c8e8257430cff6cd106e54ec3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_cairo_surface</definition>
        <argsstring>(pixman_image_t *image, void *data)</argsstring>
        <name>destroy_cairo_surface</name>
        <param>
          <type>pixman_image_t *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1548" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1548" bodyend="1553"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ad159fed4fdbc577de29b965501c9d0c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_image_t *</type>
        <definition>pixman_image_t* load_image_from_png</definition>
        <argsstring>(const char *fname)</argsstring>
        <name>load_image_from_png</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Load an image from a PNG file. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads a PNG image from disk using the given filename (and path) and returns as a Pixman image. Use pixman_image_unref() to free it.</para>
<para>The returned image is always in PIXMAN_a8r8g8b8 format.</para>
<para><simplesect kind="return"><para>Pixman image, or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1566" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1566" bodyend="1609"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a43cb7562bb853f9838e8d7cd4852734b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structbuffer" kindref="compound">buffer</ref> *</type>
        <definition>struct buffer* capture_screenshot_of_output</definition>
        <argsstring>(struct client *client)</argsstring>
        <name>capture_screenshot_of_output</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Take screenshot of a single output. </para>
        </briefdescription>
        <detaileddescription>
<para>Requests a screenshot from the server of the output that the client appears on. This implies that the compositor goes through an output repaint to provide the screenshot before this function returns. This function is therefore both a server roundtrip and a wait for a repaint.</para>
<para><simplesect kind="return"><para>A new buffer object, that should be freed with <ref refid="weston-test-client-helper_8c_1a014665bba4cce883927372cc5348216f" kindref="member">buffer_destroy()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1622" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1622" bodyend="1646"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a5ad8e37a036c8d8a945e223bc736e61c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void write_visual_diff</definition>
        <argsstring>(pixman_image_t *ref_image, struct buffer *shot, const struct rectangle *clip, const char *test_name, int seq_no, const struct range *fuzz)</argsstring>
        <name>write_visual_diff</name>
        <param>
          <type>pixman_image_t *</type>
          <declname>ref_image</declname>
        </param>
        <param>
          <type>struct <ref refid="structbuffer" kindref="compound">buffer</ref> *</type>
          <declname>shot</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrectangle" kindref="compound">rectangle</ref> *</type>
          <declname>clip</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>test_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seq_no</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrange" kindref="compound">range</ref> *</type>
          <declname>fuzz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1649" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1649" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a1449fafdd0df847d4e4708a03635ddec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool verify_image</definition>
        <argsstring>(struct buffer *shot, const char *ref_image, int ref_seq_no, const struct rectangle *clip, int seq_no)</argsstring>
        <name>verify_image</name>
        <param>
          <type>struct <ref refid="structbuffer" kindref="compound">buffer</ref> *</type>
          <declname>shot</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ref_image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ref_seq_no</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrectangle" kindref="compound">rectangle</ref> *</type>
          <declname>clip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seq_no</declname>
        </param>
        <briefdescription>
<para>Verify image contents. </para>
        </briefdescription>
        <detaileddescription>
<para>Compares the contents of the given shot to the given reference image over the given clip rectangle, reports whether they match to the test log, and if they do not match writes a visual diff into a PNG file and the screenshot into another PNG file named with <ref refid="group__testharness_1gae81a0b16dc498f48d248e7fb7d819660" kindref="member">get_test_name()</ref> and seq_no.</para>
<para>The shot image size and the reference image size must both contain the clip rectangle.</para>
<para>This function uses the pixel value allowed fuzz appropriate for GL-renderer with 8 bits per channel data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shot</parametername>
</parameternamelist>
<parameterdescription>
<para>The image to be verified, usually a screenshot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref_image</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference image file basename, without sequence number and .png suffix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref_seq_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference image sequence number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clip</parametername>
</parameternamelist>
<parameterdescription>
<para>The region of interest, or NULL for comparing the whole images. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seq_no</parametername>
</parameternamelist>
<parameterdescription>
<para>Test sequence number, for writing output files. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the shot matches the reference image, false otherwise.</para>
</simplesect>
For bootstrapping, ref_image can be NULL or the file can be missing. In that case the screenshot file is written but no comparison is performed, and false is returned.</para>
<para><simplesect kind="see"><para><ref refid="weston-test-client-helper_8c_1ac924fe13101f7a8c258314a16bb8dc41" kindref="member">verify_screen_content</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1704" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1704" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1ac924fe13101f7a8c258314a16bb8dc41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool verify_screen_content</definition>
        <argsstring>(struct client *client, const char *ref_image, int ref_seq_no, const struct rectangle *clip, int seq_no)</argsstring>
        <name>verify_screen_content</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ref_image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ref_seq_no</declname>
        </param>
        <param>
          <type>const struct <ref refid="structrectangle" kindref="compound">rectangle</ref> *</type>
          <declname>clip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seq_no</declname>
        </param>
        <briefdescription>
<para>Take a screenshot and verify its contents. </para>
        </briefdescription>
        <detaileddescription>
<para>Takes a screenshot and calls <ref refid="weston-test-client-helper_8c_1a1449fafdd0df847d4e4708a03635ddec" kindref="member">verify_image()</ref> with it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The client, for connecting to the compositor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref_image</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="weston-test-client-helper_8c_1a1449fafdd0df847d4e4708a03635ddec" kindref="member">verify_image()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref_seq_no</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="weston-test-client-helper_8c_1a1449fafdd0df847d4e4708a03635ddec" kindref="member">verify_image()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clip</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="weston-test-client-helper_8c_1a1449fafdd0df847d4e4708a03635ddec" kindref="member">verify_image()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seq_no</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="weston-test-client-helper_8c_1a1449fafdd0df847d4e4708a03635ddec" kindref="member">verify_image()</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the screen contents matches the reference image, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1762" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1762" bodyend="1777"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a21b461fa04a876060467d4c6771d2ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structbuffer" kindref="compound">buffer</ref> *</type>
        <definition>struct buffer* client_buffer_from_image_file</definition>
        <argsstring>(struct client *client, const char *basename, int scale)</argsstring>
        <name>client_buffer_from_image_file</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Create a wl_buffer from a PNG file. </para>
        </briefdescription>
        <detaileddescription>
<para>Loads the named PNG file from the directory of reference images, creates a wl_buffer with scale times the image dimensions in pixels, and copies the image content into the buffer using nearest-neighbor filter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The client, for the Wayland connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basename</parametername>
</parameternamelist>
<parameterdescription>
<para>The PNG file name without .png suffix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Upscaling factor &gt;= 1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1791" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1791" bodyend="1829"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1aed27dc43b7c4076e6c8af4c51b19f13d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* bind_to_singleton_global</definition>
        <argsstring>(struct client *client, const struct wl_interface *iface, int version)</argsstring>
        <name>bind_to_singleton_global</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct wl_interface *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Bind to a singleton global in wl_registry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client whose registry and globals to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>The Wayland interface to look for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>The version to bind the interface with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A struct wl_proxy, which you need to cast to the proper type.</para>
</simplesect>
Asserts that the global being searched for is a singleton and is found.</para>
<para>Binds with the exact version given, does not take compositor interface version into account. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1845" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1845" bodyend="1867"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a81901fe0b38e9590e62ce88680fcc0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct wp_viewport *</type>
        <definition>struct wp_viewport* client_create_viewport</definition>
        <argsstring>(struct client *client)</argsstring>
        <name>client_create_viewport</name>
        <param>
          <type>struct <ref refid="structclient" kindref="compound">client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Create a wp_viewport for the client surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The client-&gt;surface to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A fresh viewport object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1876" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1876" bodyend="1889"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a19461415389d3c87d20bf1151e460f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_image_with_color</definition>
        <argsstring>(pixman_image_t *image, const pixman_color_t *color)</argsstring>
        <name>fill_image_with_color</name>
        <param>
          <type>pixman_image_t *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const pixman_color_t *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Fill the image with the given color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The image to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>The color to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1898" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1898" bodyend="1917"/>
      </memberdef>
      <memberdef kind="function" id="weston-test-client-helper_8c_1a6c2ea066953a045e2e4e887361ef1dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixman_color_t *</type>
        <definition>pixman_color_t* color_rgb888</definition>
        <argsstring>(pixman_color_t *tmp, uint8_t r, uint8_t g, uint8_t b)</argsstring>
        <name>color_rgb888</name>
        <param>
          <type>pixman_color_t *</type>
          <declname>tmp</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Convert 8-bit RGB to opaque Pixman color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pixman color struct to fill in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Red value, 0 - 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Green value, 0 - 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Blue value, 0 - 255. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tmp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" line="1929" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c" bodystart="1929" bodyend="1937"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2015<sp/>Samsung<sp/>Electronics<sp/>Co.,<sp/>Ltd</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2016,<sp/>2017<sp/>Collabora,<sp/>Ltd.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cairo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/os-compatibility.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/xalloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zalloc_8h" kindref="compound">libweston/zalloc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weston-test-client-helper_8h" kindref="compound">weston-test-client-helper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>max(a,<sp/>b)<sp/>(((a)<sp/>&gt;<sp/>(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>min(a,<sp/>b)<sp/>(((a)<sp/>&gt;<sp/>(b))<sp/>?<sp/>(b)<sp/>:<sp/>(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>clip(x,<sp/>a,<sp/>b)<sp/><sp/>min(max(x,<sp/>a),<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a591d20df97aa31980eb34bcca197bf0d" kindref="member">surface_contains</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>whether<sp/>a<sp/>global<sp/>x,y<sp/>point<sp/>is<sp/>contained<sp/>in<sp/>the<sp/>surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sx<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sy<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sw<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sh<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>&gt;=<sp/>sx<sp/>&amp;&amp;<sp/>y<sp/>&gt;=<sp/>sy<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>sx<sp/>+<sp/>sw<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>sy<sp/>+<sp/>sh;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1af7e2ab9d2a2a6c9c62cb500cc32ecc52" kindref="member">frame_callback_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_callback<sp/>*callback,<sp/>uint32_t<sp/>time)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*done<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*done<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_callback_destroy(callback);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_callback_listener<sp/><ref refid="weston-test-client-helper_8c_1ad912c6d1dcc81e5d920a321bfff76598" kindref="member">frame_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1af7e2ab9d2a2a6c9c62cb500cc32ecc52" kindref="member">frame_callback_handler</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_callback<sp/>*</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1adb6105ea2e8be1aa9823fda8c44ea704" kindref="member">frame_callback_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_surface<sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*done)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_callback<sp/>*callback;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*done<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>=<sp/>wl_surface_frame(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_callback_add_listener(callback,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1ad912c6d1dcc81e5d920a321bfff76598" kindref="member">frame_listener</ref>,<sp/>done);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>callback;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1aa2ffb776c995e9f7ef754d6a990eb6d0" kindref="member">frame_callback_wait_nofail</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*done)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!*done)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_display_dispatch(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a37328a264739e2481da21489c1964335" kindref="member">move_client</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsurface" kindref="compound">surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref><sp/>=<sp/><ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref><sp/>=<sp/><ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_test_move_surface(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>-&gt;<ref refid="structtest_1ac67f68f85cec23036bebedc63443bdcd" kindref="member">weston_test</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>attach<sp/>here<sp/>is<sp/>necessary<sp/>because<sp/>commit()<sp/>will<sp/>call<sp/>configure</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>only<sp/>on<sp/>surfaces<sp/>newly<sp/>attached,<sp/>and<sp/>the<sp/>one<sp/>that<sp/>sets<sp/>the<sp/>surface</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>position<sp/>is<sp/>the<sp/>configure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface_attach(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>-&gt;<ref refid="structbuffer_1a47f5f09576d179641e98d1d6730067dc" kindref="member">proxy</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface_damage(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>,<sp/>0,<sp/>0,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1adb6105ea2e8be1aa9823fda8c44ea704" kindref="member">frame_callback_set</ref>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>,<sp/>&amp;done);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface_commit(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8h_1a37f23eba3475e8976a9f8fee224b0d6a" kindref="member">frame_callback_wait</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;done);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a0652503dbc2ca8c51b12e99803691029" kindref="member">pointer_handle_enter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_pointer<sp/>*wl_pointer,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref><sp/>*<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/><ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref>,<sp/>wl_fixed_t<sp/><ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_surface)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>=<sp/>wl_surface_get_user_data(wl_surface);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>enter<sp/>%d<sp/>%d,<sp/>surface<sp/>%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a6cd9495e1b5dda22feecca98d418e14b" kindref="member">pointer_handle_leave</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref><sp/>*<ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_surface<sp/>*wl_surface)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abdf4324f7f4ee4a46dced5080f8ee645" kindref="member">focus</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>leave,<sp/>surface<sp/>%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface<sp/>?<sp/>wl_surface_get_user_data(wl_surface)<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a1c3c7a471982596bc68148e37d456ba6" kindref="member">pointer_handle_motion</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref><sp/>*<ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>time_msec,<sp/>wl_fixed_t<sp/><ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>,<sp/>wl_fixed_t<sp/><ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref><sp/>=<sp/>wl_fixed_to_int(<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1af1b3141005e068606b7f882162ea5f5c" kindref="member">motion_time_msec</ref><sp/>=<sp/>time_msec;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a7c152fc968ca70ab4bcd970ce740a86f" kindref="member">motion_time_timespec</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec)<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>motion<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ad4d1bc450cf20b50d1fa83d701e1e8f5" kindref="member">pointer_handle_button</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_pointer<sp/>*wl_pointer,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>time_msec,<sp/>uint32_t<sp/>button,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>state)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a9fc6f37d552aad4189cf13065df9d3ef" kindref="member">button</ref><sp/>=<sp/><ref refid="structpointer_1a9fc6f37d552aad4189cf13065df9d3ef" kindref="member">button</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1aa88404eba7d0a0326e6b0503e6f27e30" kindref="member">state</ref><sp/>=<sp/><ref refid="structpointer_1aa88404eba7d0a0326e6b0503e6f27e30" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1abf3f61a5d18bfd2adef4a7e157ff1a0c" kindref="member">button_time_msec</ref><sp/>=<sp/>time_msec;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a32d4d9f3c83b45be06dfdce222779420" kindref="member">button_time_timespec</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec)<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>button<sp/>%u<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>button,<sp/>state);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a387c713e9ff69495360bfa983f5e24bd" kindref="member">pointer_handle_axis</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_pointer<sp/>*wl_pointer,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>time_msec,<sp/>uint32_t<sp/>axis,<sp/>wl_fixed_t<sp/>value)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a3a7a32e7eb81d8407ac5c8e9054e8055" kindref="member">axis</ref><sp/>=<sp/><ref refid="structpointer_1a3a7a32e7eb81d8407ac5c8e9054e8055" kindref="member">axis</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a3ca0be969d952b7997ef459f9e97bc96" kindref="member">axis_value</ref><sp/>=<sp/>wl_fixed_to_double(value);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a2ea12ae16a952f2df2cb0fc180ecb923" kindref="member">axis_time_msec</ref><sp/>=<sp/>time_msec;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a775dd330288d2c615cd08b9d4f652f1d" kindref="member">axis_time_timespec</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec)<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>axis<sp/>%u<sp/>%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis,<sp/>wl_fixed_to_double(value));</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ad9d8f300d57271fa43e1593a0f2ba122" kindref="member">pointer_handle_frame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_pointer<sp/>*wl_pointer)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>frame\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a87609483cfbbab9a523ddcc095cfa84b" kindref="member">pointer_handle_axis_source</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_pointer<sp/>*wl_pointer,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>source)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>axis<sp/>source<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1abcf4fe0488356e73657b379c6442af82" kindref="member">pointer_handle_axis_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_pointer<sp/>*wl_pointer,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>time_msec,<sp/>uint32_t<sp/>axis)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a3a7a32e7eb81d8407ac5c8e9054e8055" kindref="member">axis</ref><sp/>=<sp/><ref refid="structpointer_1a3a7a32e7eb81d8407ac5c8e9054e8055" kindref="member">axis</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a87a5178b7991cd1475e4fdff74908011" kindref="member">axis_stop_time_msec</ref><sp/>=<sp/>time_msec;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1af80c76ce0a2911ee5cffcbf1aef8add6" kindref="member">axis_stop_time_timespec</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a570835d4302069281420dae3c2d575c1" kindref="member">input_timestamp</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec)<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>axis<sp/>stop<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>axis);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1abebc00259ffb7041a37a902bf0aea565" kindref="member">pointer_handle_axis_discrete</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_pointer<sp/>*wl_pointer,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>axis,<sp/>int32_t<sp/>value)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>pointer<sp/>axis<sp/>discrete<sp/>%u<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>axis,<sp/>value);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_pointer_listener<sp/><ref refid="weston-test-client-helper_8c_1a95f773b8c486e0bd6d3f330ede160ca3" kindref="member">pointer_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a0652503dbc2ca8c51b12e99803691029" kindref="member">pointer_handle_enter</ref>,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a6cd9495e1b5dda22feecca98d418e14b" kindref="member">pointer_handle_leave</ref>,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a1c3c7a471982596bc68148e37d456ba6" kindref="member">pointer_handle_motion</ref>,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1ad4d1bc450cf20b50d1fa83d701e1e8f5" kindref="member">pointer_handle_button</ref>,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a387c713e9ff69495360bfa983f5e24bd" kindref="member">pointer_handle_axis</ref>,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1ad9d8f300d57271fa43e1593a0f2ba122" kindref="member">pointer_handle_frame</ref>,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a87609483cfbbab9a523ddcc095cfa84b" kindref="member">pointer_handle_axis_source</ref>,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1abcf4fe0488356e73657b379c6442af82" kindref="member">pointer_handle_axis_stop</ref>,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1abebc00259ffb7041a37a902bf0aea565" kindref="member">pointer_handle_axis_discrete</ref>,</highlight></codeline>
<codeline lineno="244"><highlight class="normal">};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a183762eee71720cb4487fa5dbae8646c" kindref="member">keyboard_handle_keymap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_keyboard<sp/>*wl_keyboard,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>format,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>uint32_t<sp/>size)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>keyboard<sp/>keymap\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1af2ac3ef0fce1b9f9b56808c5aec0f39a" kindref="member">keyboard_handle_enter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_keyboard<sp/>*wl_keyboard,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_surface<sp/>*wl_surface,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_array<sp/>*keys)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_surface)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>=<sp/>wl_surface_get_user_data(wl_surface);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>keyboard<sp/>enter,<sp/>surface<sp/>%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a8095ed560f4f0fda5018154849c61823" kindref="member">keyboard_handle_leave</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref><sp/>*<ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref>,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_surface<sp/>*wl_surface)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a06aad4b35ab08a52de3e894e107f7f81" kindref="member">focus</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>keyboard<sp/>leave,<sp/>surface<sp/>%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface<sp/>?<sp/>wl_surface_get_user_data(wl_surface)<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a59932f8b571a5426a7031d14d6aa6092" kindref="member">keyboard_handle_key</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref><sp/>*<ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref>,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>time_msec,<sp/>uint32_t<sp/><ref refid="structkeyboard_1a321b7e51d52f6353dd1a79db007ce680" kindref="member">key</ref>,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a321b7e51d52f6353dd1a79db007ce680" kindref="member">key</ref><sp/>=<sp/><ref refid="structkeyboard_1a321b7e51d52f6353dd1a79db007ce680" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref><sp/>=<sp/><ref refid="structkeyboard_1ad91e5a995bc6d923ea08bee05aac51b6" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a08428791734bc0760f8c623566a6f69b" kindref="member">key_time_msec</ref><sp/>=<sp/>time_msec;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1ae90d178a3ebc2361a9e48134f370d48c" kindref="member">key_time_timespec</ref><sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a876fcf976238714c258bb31c1feccd8d" kindref="member">input_timestamp</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a876fcf976238714c258bb31c1feccd8d" kindref="member">input_timestamp</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec)<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>keyboard<sp/>key<sp/>%u<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>state);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a3820c47b42e7a337875b81d4c8bad25c" kindref="member">keyboard_handle_modifiers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_keyboard<sp/>*wl_keyboard,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>mods_depressed,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mods_latched,<sp/>uint32_t<sp/>mods_locked,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>group)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref><sp/>=<sp/><ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a8bb44ac8e8fceb671ab93f263ccb9617" kindref="member">mods_latched</ref><sp/>=<sp/><ref refid="structkeyboard_1a8bb44ac8e8fceb671ab93f263ccb9617" kindref="member">mods_latched</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1a2012e8f062eb115b64e39dfdd94373fb" kindref="member">mods_locked</ref><sp/>=<sp/><ref refid="structkeyboard_1a2012e8f062eb115b64e39dfdd94373fb" kindref="member">mods_locked</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1adb62149681606abc035f3bb35b72aa8d" kindref="member">group</ref><sp/>=<sp/><ref refid="structkeyboard_1adb62149681606abc035f3bb35b72aa8d" kindref="member">group</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>keyboard<sp/>modifiers<sp/>%u<sp/>%u<sp/>%u<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard_1a2ad72b676536692317410757f96d8c27" kindref="member">mods_depressed</ref>,<sp/><ref refid="structkeyboard_1a8bb44ac8e8fceb671ab93f263ccb9617" kindref="member">mods_latched</ref>,<sp/><ref refid="structkeyboard_1a2012e8f062eb115b64e39dfdd94373fb" kindref="member">mods_locked</ref>,<sp/><ref refid="structkeyboard_1adb62149681606abc035f3bb35b72aa8d" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a0b73a7b837c7609dafd42b868d9b3136" kindref="member">keyboard_handle_repeat_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref><sp/>*<ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref>,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structkeyboard_1a52c32ae3ad36dead362d3c8fc56c066b" kindref="member">rate</ref>,<sp/>int32_t<sp/><ref refid="structkeyboard_1a1dfa4ae22ac86834b68c62ae66e760fc" kindref="member">delay</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1aed056de28ae574695b75ead3b76d42cb" kindref="member">repeat_info</ref>.<ref refid="structkeyboard_1a52c32ae3ad36dead362d3c8fc56c066b" kindref="member">rate</ref><sp/>=<sp/><ref refid="structkeyboard_1a52c32ae3ad36dead362d3c8fc56c066b" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1aed056de28ae574695b75ead3b76d42cb" kindref="member">repeat_info</ref>.<ref refid="structkeyboard_1a1dfa4ae22ac86834b68c62ae66e760fc" kindref="member">delay</ref><sp/>=<sp/><ref refid="structkeyboard_1a1dfa4ae22ac86834b68c62ae66e760fc" kindref="member">delay</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>keyboard<sp/>repeat_info<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structkeyboard_1a52c32ae3ad36dead362d3c8fc56c066b" kindref="member">rate</ref>,<sp/><ref refid="structkeyboard_1a1dfa4ae22ac86834b68c62ae66e760fc" kindref="member">delay</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_keyboard_listener<sp/><ref refid="weston-test-client-helper_8c_1ad2397b21621af84a362f43f4371223e6" kindref="member">keyboard_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a183762eee71720cb4487fa5dbae8646c" kindref="member">keyboard_handle_keymap</ref>,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1af2ac3ef0fce1b9f9b56808c5aec0f39a" kindref="member">keyboard_handle_enter</ref>,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a8095ed560f4f0fda5018154849c61823" kindref="member">keyboard_handle_leave</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a59932f8b571a5426a7031d14d6aa6092" kindref="member">keyboard_handle_key</ref>,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a3820c47b42e7a337875b81d4c8bad25c" kindref="member">keyboard_handle_modifiers</ref>,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a0b73a7b837c7609dafd42b868d9b3136" kindref="member">keyboard_handle_repeat_info</ref>,</highlight></codeline>
<codeline lineno="335"><highlight class="normal">};</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a644cd2f71597aee1d22fc012152855fe" kindref="member">touch_handle_down</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_touch<sp/>*wl_touch,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>time_msec,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_surface<sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>int32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x_w,<sp/>wl_fixed_t<sp/>y_w)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtouch" kindref="compound">touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1aeeda9b8c0a035bdf44c0e24e927fdb91" kindref="member">down_x</ref><sp/>=<sp/>wl_fixed_to_int(x_w);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a82b13de54c8ddea0e657c87c6ea244bb" kindref="member">down_y</ref><sp/>=<sp/>wl_fixed_to_int(y_w);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a10c8641178262cec2e33b47e44bd6454" kindref="member">id</ref><sp/>=<sp/><ref refid="structtouch_1a10c8641178262cec2e33b47e44bd6454" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1af945efcc26488980c4fa174893a53782" kindref="member">down_time_msec</ref><sp/>=<sp/>time_msec;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a138cc07e6d5dc14151f39b848759f12d" kindref="member">down_time_timespec</ref><sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a546fca2caba4460e23393111d2244c63" kindref="member">input_timestamp</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a546fca2caba4460e23393111d2244c63" kindref="member">input_timestamp</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec)<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>touch<sp/>down<sp/>%d<sp/>%d,<sp/>surf:<sp/>%p,<sp/>id:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1aeeda9b8c0a035bdf44c0e24e927fdb91" kindref="member">down_x</ref>,<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a82b13de54c8ddea0e657c87c6ea244bb" kindref="member">down_y</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a31cdd7c475e2c8ec6fccf1c5f2e0e179" kindref="member">touch_handle_up</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_touch<sp/>*wl_touch,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>time_msec,<sp/>int32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtouch" kindref="compound">touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a34722ffde1389ecf28701b5da87df488" kindref="member">up_id</ref><sp/>=<sp/><ref refid="structtouch_1a10c8641178262cec2e33b47e44bd6454" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1ae0d4f4b04688d5f0bfe571ff768ab580" kindref="member">up_time_msec</ref><sp/>=<sp/>time_msec;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a5549af43259d299f13e6c50582740c55" kindref="member">up_time_timespec</ref><sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a546fca2caba4460e23393111d2244c63" kindref="member">input_timestamp</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a546fca2caba4460e23393111d2244c63" kindref="member">input_timestamp</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec)<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>touch<sp/>up,<sp/>id:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1aecbbed68194b2cb35a1b117fde77179e" kindref="member">touch_handle_motion</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_touch<sp/>*wl_touch,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>time_msec,<sp/>int32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x_w,<sp/>wl_fixed_t<sp/>y_w)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtouch" kindref="compound">touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a1975e8ffbf49234f45b9bf38f1720e30" kindref="member">x</ref><sp/>=<sp/>wl_fixed_to_int(x_w);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a84b525cac8d1c9b4404eebda5941db55" kindref="member">y</ref><sp/>=<sp/>wl_fixed_to_int(y_w);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a685805860a13f7c7e551af84cc4162e7" kindref="member">motion_time_msec</ref><sp/>=<sp/>time_msec;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a6e984ecc0d2600e8269fc9d60c900e8f" kindref="member">motion_time_timespec</ref><sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a546fca2caba4460e23393111d2244c63" kindref="member">input_timestamp</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a546fca2caba4460e23393111d2244c63" kindref="member">input_timestamp</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec)<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>touch<sp/>motion,<sp/>%d<sp/>%d,<sp/>id:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a1975e8ffbf49234f45b9bf38f1720e30" kindref="member">x</ref>,<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a84b525cac8d1c9b4404eebda5941db55" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a37257b91ffef0d995a3cc321a5df6603" kindref="member">touch_handle_frame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_touch<sp/>*wl_touch)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtouch" kindref="compound">touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a15138db97603c8a013e2e5db64009fed" kindref="member">frame_no</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>touch<sp/>frame<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a15138db97603c8a013e2e5db64009fed" kindref="member">frame_no</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a3f1339203e9bacfa983045d9e27f5471" kindref="member">touch_handle_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtouch_1a022ca737a44369f0f2664935bfac14f1" kindref="member">wl_touch</ref><sp/>*<ref refid="structtouch_1a022ca737a44369f0f2664935bfac14f1" kindref="member">wl_touch</ref>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtouch" kindref="compound">touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a0876c6a76b91e405e281ad53e76331bb" kindref="member">cancel_no</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>touch<sp/>cancel<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a0876c6a76b91e405e281ad53e76331bb" kindref="member">cancel_no</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_touch_listener<sp/><ref refid="weston-test-client-helper_8c_1ae93f064fd5442b726948626c64eed7a3" kindref="member">touch_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a644cd2f71597aee1d22fc012152855fe" kindref="member">touch_handle_down</ref>,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a31cdd7c475e2c8ec6fccf1c5f2e0e179" kindref="member">touch_handle_up</ref>,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1aecbbed68194b2cb35a1b117fde77179e" kindref="member">touch_handle_motion</ref>,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a37257b91ffef0d995a3cc321a5df6603" kindref="member">touch_handle_frame</ref>,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a3f1339203e9bacfa983045d9e27f5471" kindref="member">touch_handle_cancel</ref>,</highlight></codeline>
<codeline lineno="411"><highlight class="normal">};</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a99262a4fc877082936c61b968f500aef" kindref="member">surface_enter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_surface<sp/>*wl_surface,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_output<sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsurface" kindref="compound">surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a37142b17569064055bedc351a7d7dd25" kindref="member">output</ref><sp/>=<sp/>wl_output_get_user_data(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>surface<sp/>enter<sp/>output<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a37142b17569064055bedc351a7d7dd25" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ad552387e29c9aeed8e6e4107a87601e5" kindref="member">surface_leave</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref><sp/>*<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_output<sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsurface" kindref="compound">surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a37142b17569064055bedc351a7d7dd25" kindref="member">output</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>surface<sp/>leave<sp/>output<sp/>%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_get_user_data(<ref refid="structoutput" kindref="compound">output</ref>));</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_surface_listener<sp/><ref refid="weston-test-client-helper_8c_1ab06cca987f5be7d8a99e61abeed445eb" kindref="member">surface_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a99262a4fc877082936c61b968f500aef" kindref="member">surface_enter</ref>,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1ad552387e29c9aeed8e6e4107a87601e5" kindref="member">surface_leave</ref></highlight></codeline>
<codeline lineno="439"><highlight class="normal">};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ae6720253d93c41950ad9800461d8eb7a" kindref="member">create_shm_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_format_code_t<sp/>format,<sp/>uint32_t<sp/>wlfmt)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_shm<sp/>*shm<sp/>=<sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a84969eaf7f9e7dd6896e7b6b8c5ddca4" kindref="member">wl_shm</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*buf;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_bytes;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_shm_pool<sp/>*pool;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_pp;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(width<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(height<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*buf);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_pp<sp/>=<sp/>PIXMAN_FORMAT_BPP(format)<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride_bytes<sp/>=<sp/>width<sp/>*<sp/>bytes_pp;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>round<sp/>up<sp/>to<sp/>multiple<sp/>of<sp/>4<sp/>bytes<sp/>for<sp/>Pixman<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride_bytes<sp/>=<sp/>(stride_bytes<sp/>+<sp/>3)<sp/>&amp;<sp/>~3u;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stride_bytes<sp/>/<sp/>bytes_pp<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)width);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="structbuffer_1a2966e19c7a1355df268a743450746f8e" kindref="member">len</ref><sp/>=<sp/>stride_bytes<sp/>*<sp/>height;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(buf-&gt;<ref refid="structbuffer_1a2966e19c7a1355df268a743450746f8e" kindref="member">len</ref><sp/>/<sp/>stride_bytes<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)height);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>os_create_anonymous_file(buf-&gt;<ref refid="structbuffer_1a2966e19c7a1355df268a743450746f8e" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(fd<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>mmap(NULL,<sp/>buf-&gt;<ref refid="structbuffer_1a2966e19c7a1355df268a743450746f8e" kindref="member">len</ref>,<sp/>PROT_READ<sp/>|<sp/>PROT_WRITE,<sp/>MAP_SHARED,<sp/>fd,<sp/>0);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/>MAP_FAILED)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(data<sp/>!=<sp/>MAP_FAILED);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool<sp/>=<sp/>wl_shm_create_pool(shm,<sp/>fd,<sp/>buf-&gt;<ref refid="structbuffer_1a2966e19c7a1355df268a743450746f8e" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="structbuffer_1a47f5f09576d179641e98d1d6730067dc" kindref="member">proxy</ref><sp/>=<sp/>wl_shm_pool_create_buffer(pool,<sp/>0,<sp/>width,<sp/>height,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride_bytes,<sp/>wlfmt);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_shm_pool_destroy(pool);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref><sp/>=<sp/>pixman_image_create_bits(format,<sp/>width,<sp/>height,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>stride_bytes);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(buf-&gt;<ref refid="structbuffer_1a47f5f09576d179641e98d1d6730067dc" kindref="member">proxy</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(buf-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a1eecc92b5b5e115112d67cbc7f538e8d" kindref="member">create_shm_buffer_a8r8g8b8</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a8b7c48ff09447daaa5d91d71eafb82bb" kindref="member">has_argb</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="weston-test-client-helper_8c_1ae6720253d93c41950ad9800461d8eb7a" kindref="member">create_shm_buffer</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>width,<sp/>height,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXMAN_a8r8g8b8,<sp/>WL_SHM_FORMAT_ARGB8888);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a014665bba4cce883927372cc5348216f" kindref="member">buffer_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*buf)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pixels;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels<sp/>=<sp/>pixman_image_get_data(buf-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf-&gt;<ref refid="structbuffer_1a47f5f09576d179641e98d1d6730067dc" kindref="member">proxy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_buffer_destroy(buf-&gt;<ref refid="structbuffer_1a47f5f09576d179641e98d1d6730067dc" kindref="member">proxy</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(munmap(pixels,<sp/>buf-&gt;<ref refid="structbuffer_1a2966e19c7a1355df268a743450746f8e" kindref="member">len</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(pixman_image_unref(buf-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref>));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a5b41b1e13bbc9d1008bf949523be1da8" kindref="member">shm_format</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_shm<sp/>*wl_shm,<sp/>uint32_t<sp/>format)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>WL_SHM_FORMAT_ARGB8888)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a8b7c48ff09447daaa5d91d71eafb82bb" kindref="member">has_argb</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_shm_listener<sp/><ref refid="weston-test-client-helper_8c_1abf52f02f4fde286f53a02fd1cf168ea2" kindref="member">shm_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a5b41b1e13bbc9d1008bf949523be1da8" kindref="member">shm_format</ref></highlight></codeline>
<codeline lineno="528"><highlight class="normal">};</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a1f7ae4d1f1ce6e409dfa355c2fc2ebf8" kindref="member">test_handle_pointer_position</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structweston__test" kindref="compound">weston_test</ref>,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest" kindref="compound">test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;<ref refid="structtest_1ab0ac9dfb03681b033abfa63aa49e59d8" kindref="member">pointer_x</ref><sp/>=<sp/>wl_fixed_to_int(x);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;<ref refid="structtest_1a1787f521a086ce060f5d9f6f17fe6fdb" kindref="member">pointer_y</ref><sp/>=<sp/>wl_fixed_to_int(y);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>global<sp/>pointer<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;<ref refid="structtest_1ab0ac9dfb03681b033abfa63aa49e59d8" kindref="member">pointer_x</ref>,<sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;<ref refid="structtest_1a1787f521a086ce060f5d9f6f17fe6fdb" kindref="member">pointer_y</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ac7eff01a2cc2fe7b42d6c18c1925a5fc" kindref="member">test_handle_capture_screenshot_done</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>weston_screenshooter<sp/>*screenshooter)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Screenshot<sp/>has<sp/>been<sp/>captured\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1abb9fdd8290a061c3a77cb0fd7fb9f2ed" kindref="member">buffer_copy_done</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_screenshooter_listener<sp/><ref refid="weston-test-client-helper_8c_1a028a57b52711bac74ec2472a3d8e793e" kindref="member">screenshooter_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1ac7eff01a2cc2fe7b42d6c18c1925a5fc" kindref="member">test_handle_capture_screenshot_done</ref></highlight></codeline>
<codeline lineno="553"><highlight class="normal">};</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_test_listener<sp/><ref refid="weston-test-client-helper_8c_1a04c5ae2f7e0692503f72ddfb041ace17" kindref="member">test_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a1f7ae4d1f1ce6e409dfa355c2fc2ebf8" kindref="member">test_handle_pointer_position</ref>,</highlight></codeline>
<codeline lineno="557"><highlight class="normal">};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a232cb6e776603a06b4184c8ff3ee8562" kindref="member">input_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinput" kindref="compound">input</ref><sp/>*inp)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inp-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_release(inp-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>-&gt;<ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(inp-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inp-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref>)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_release(inp-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref>-&gt;<ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(inp-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inp-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_touch_release(inp-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref>-&gt;<ref refid="structtouch_1a022ca737a44369f0f2664935bfac14f1" kindref="member">wl_touch</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(inp-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;inp-&gt;<ref refid="structinput_1a0f460269218b558d9d228c89d6c307cc" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_seat_release(inp-&gt;<ref refid="structinput_1af45f5a0b505dce542ea33fe3da08a85d" kindref="member">wl_seat</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(inp-&gt;<ref refid="structinput_1a961613a2b0c06fc8b9009f9530fcbe97" kindref="member">seat_name</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(inp);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a2857a5244349e27d7559cc8a193b1a16" kindref="member">input_update_devices</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinput" kindref="compound">input</ref><sp/>*<ref refid="structinput" kindref="compound">input</ref>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpointer" kindref="compound">pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtouch" kindref="compound">touch</ref><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_seat<sp/>*seat<sp/>=<sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1af45f5a0b505dce542ea33fe3da08a85d" kindref="member">wl_seat</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_seat_capability<sp/>caps<sp/>=<sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1ac680907260db3ec09cd3eba48b342124" kindref="member">caps</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((caps<sp/>&amp;<sp/>WL_SEAT_CAPABILITY_POINTER)<sp/>&amp;&amp;<sp/>!<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref><sp/>=<sp/>wl_seat_get_pointer(seat);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_set_user_data(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_add_listener(<ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref>,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1a95f773b8c486e0bd6d3f330ede160ca3" kindref="member">pointer_listener</ref>,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpointer" kindref="compound">pointer</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref><sp/>=<sp/><ref refid="structpointer" kindref="compound">pointer</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(caps<sp/>&amp;<sp/>WL_SEAT_CAPABILITY_POINTER)<sp/>&amp;&amp;<sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_pointer_destroy(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>-&gt;<ref refid="structpointer_1a49b5af0a96f7491f839d46f8d7bac969" kindref="member">wl_pointer</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abf5e47efd904369fce64cab252801b1f" kindref="member">pointer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((caps<sp/>&amp;<sp/>WL_SEAT_CAPABILITY_KEYBOARD)<sp/>&amp;&amp;<sp/>!<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref>)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref><sp/>=<sp/>wl_seat_get_keyboard(seat);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_set_user_data(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref>,<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_add_listener(<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;<ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref>,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1ad2397b21621af84a362f43f4371223e6" kindref="member">keyboard_listener</ref>,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref><sp/>=<sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(caps<sp/>&amp;<sp/>WL_SEAT_CAPABILITY_KEYBOARD)<sp/>&amp;&amp;<sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref>)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_keyboard_destroy(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref>-&gt;<ref refid="structkeyboard_1af83de2f2964ebd01c9017622785bbc3d" kindref="member">wl_keyboard</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1abc3887b3a98592fca0055bdb31597b90" kindref="member">keyboard</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((caps<sp/>&amp;<sp/>WL_SEAT_CAPABILITY_TOUCH)<sp/>&amp;&amp;<sp/>!<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structtouch" kindref="compound">touch</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a022ca737a44369f0f2664935bfac14f1" kindref="member">wl_touch</ref><sp/>=<sp/>wl_seat_get_touch(seat);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_touch_set_user_data(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a022ca737a44369f0f2664935bfac14f1" kindref="member">wl_touch</ref>,<sp/><ref refid="structtouch" kindref="compound">touch</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_touch_add_listener(<ref refid="structtouch" kindref="compound">touch</ref>-&gt;<ref refid="structtouch_1a022ca737a44369f0f2664935bfac14f1" kindref="member">wl_touch</ref>,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1ae93f064fd5442b726948626c64eed7a3" kindref="member">touch_listener</ref>,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtouch" kindref="compound">touch</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref><sp/>=<sp/><ref refid="structtouch" kindref="compound">touch</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(caps<sp/>&amp;<sp/>WL_SEAT_CAPABILITY_TOUCH)<sp/>&amp;&amp;<sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_touch_destroy(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref>-&gt;<ref refid="structtouch_1a022ca737a44369f0f2664935bfac14f1" kindref="member">wl_touch</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a9facf568420fea33baa039e0786f3e87" kindref="member">touch</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ae5b6ae9df7662ca951bb14923da60fc5" kindref="member">seat_handle_capabilities</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_seat<sp/>*seat,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_seat_capability<sp/>caps)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput" kindref="compound">input</ref><sp/>*<ref refid="structinput" kindref="compound">input</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1ac680907260db3ec09cd3eba48b342124" kindref="member">caps</ref><sp/>=<sp/><ref refid="structinput_1ac680907260db3ec09cd3eba48b342124" kindref="member">caps</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>will<sp/>create/update<sp/>the<sp/>devices<sp/>only<sp/>with<sp/>the<sp/>right<sp/>(test)<sp/>seat.</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>we<sp/>haven&apos;t<sp/>discovered<sp/>which<sp/>seat<sp/>is<sp/>the<sp/>test<sp/>seat,<sp/>just</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>store<sp/>capabilities<sp/>and<sp/>bail<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a961613a2b0c06fc8b9009f9530fcbe97" kindref="member">seat_name</ref><sp/>&amp;&amp;<sp/>strcmp(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a961613a2b0c06fc8b9009f9530fcbe97" kindref="member">seat_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;test-seat&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a2857a5244349e27d7559cc8a193b1a16" kindref="member">input_update_devices</ref>(<ref refid="structinput" kindref="compound">input</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>seat<sp/>%p<sp/>capabilities:<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structinput" kindref="compound">input</ref>,<sp/><ref refid="structinput_1ac680907260db3ec09cd3eba48b342124" kindref="member">caps</ref>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1af56b0d9ee2b1a169c16b97b20bf4f660" kindref="member">seat_handle_name</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinput_1af45f5a0b505dce542ea33fe3da08a85d" kindref="member">wl_seat</ref><sp/>*seat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput" kindref="compound">input</ref><sp/>*<ref refid="structinput" kindref="compound">input</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a961613a2b0c06fc8b9009f9530fcbe97" kindref="member">seat_name</ref><sp/>=<sp/>strdup(name);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a961613a2b0c06fc8b9009f9530fcbe97" kindref="member">seat_name</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>only<sp/>update<sp/>the<sp/>devices<sp/>and<sp/>set<sp/>client<sp/>input<sp/>for<sp/>the<sp/>test<sp/>seat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;test-seat&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1ae82b973783001ca5654d5fda7c22c958" kindref="member">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multiple<sp/>test<sp/>seats<sp/>detected!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a2857a5244349e27d7559cc8a193b1a16" kindref="member">input_update_devices</ref>(<ref refid="structinput" kindref="compound">input</ref>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1ae82b973783001ca5654d5fda7c22c958" kindref="member">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref><sp/>=<sp/><ref refid="structinput" kindref="compound">input</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;test-client:<sp/>got<sp/>seat<sp/>%p<sp/>name:<sp/>\&apos;%s\&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structinput" kindref="compound">input</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_seat_listener<sp/><ref refid="weston-test-client-helper_8c_1a54998e34e5d326dcfdc75efbb8153526" kindref="member">seat_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1ae5b6ae9df7662ca951bb14923da60fc5" kindref="member">seat_handle_capabilities</ref>,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1af56b0d9ee2b1a169c16b97b20bf4f660" kindref="member">seat_handle_name</ref>,</highlight></codeline>
<codeline lineno="670"><highlight class="normal">};</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a5562a0e4d56dab6b428731577ecb26eb" kindref="member">output_handle_geometry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_output<sp/>*wl_output,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>physical_width,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>physical_height,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subpixel,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*make,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*model,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>transform)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoutput" kindref="compound">output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref><sp/>=<sp/><ref refid="structoutput_1acaa160777547223ba734d78e4690c24b" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref><sp/>=<sp/><ref refid="structoutput_1ac2c2a13096bd351fda95e72cb6f5a254" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1aa3d1801b189ea1dc57622845412bd136" kindref="member">output_handle_mode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref><sp/>*<ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref>,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refresh)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoutput" kindref="compound">output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>WL_OUTPUT_MODE_CURRENT)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref><sp/>=<sp/><ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref><sp/>=<sp/><ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a4038e138bbf589bd1f4da7cb9ddca3cb" kindref="member">output_handle_scale</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref><sp/>*<ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref>,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoutput" kindref="compound">output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref><sp/>=<sp/><ref refid="structoutput_1aa7a572455f77dc2d50ff14cda028cde2" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1acfe6c6564c8b55c63e425cfd7a72c390" kindref="member">output_handle_done</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref><sp/>*<ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref>)</highlight></codeline>
<codeline lineno="718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoutput" kindref="compound">output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1af5d772347c11941b20b7e83b952d42bd" kindref="member">initialized</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_output_listener<sp/><ref refid="weston-test-client-helper_8c_1a1f22d30776bc9f97b7ab9ca6d2c3594c" kindref="member">output_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a5562a0e4d56dab6b428731577ecb26eb" kindref="member">output_handle_geometry</ref>,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1aa3d1801b189ea1dc57622845412bd136" kindref="member">output_handle_mode</ref>,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1acfe6c6564c8b55c63e425cfd7a72c390" kindref="member">output_handle_done</ref>,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a4038e138bbf589bd1f4da7cb9ddca3cb" kindref="member">output_handle_scale</ref>,</highlight></codeline>
<codeline lineno="729"><highlight class="normal">};</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a517aee233a8c3ab311347acec0eb7dfb" kindref="member">output_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structoutput" kindref="compound">output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_proxy_get_version((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_proxy<sp/>*)<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref>)<sp/>&gt;=<sp/>3);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_release(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a5df7311cf77f7899c05f89b660f0cd1e" kindref="member">handle_global</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_registry<sp/>*registry,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*interface,<sp/>uint32_t<sp/>version)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoutput" kindref="compound">output</ref><sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest" kindref="compound">test</ref><sp/>*<ref refid="matrix-test_8c_1a40180e42e1cf6c3fbbb74f44cb78ca67" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglobal" kindref="compound">global</ref><sp/>*<ref refid="structglobal" kindref="compound">global</ref>;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput" kindref="compound">input</ref><sp/>*<ref refid="structinput" kindref="compound">input</ref>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglobal" kindref="compound">global</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structglobal" kindref="compound">global</ref>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1a7894ae4e045450c7792493e63353ef65" kindref="member">name</ref><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1addc85d2e981c005a33f32104134e1bc8" kindref="member">interface</ref><sp/>=<sp/>strdup(interface);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(interface);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1a7ebca62067549b259f367c73df87c064" kindref="member">version</ref><sp/>=<sp/>version;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a7c5841d081e771cd4216f7c8572feed2" kindref="member">global_list</ref>.prev,<sp/>&amp;<ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1aa9abdbaf3ea14a5477f3297648b81978" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>deliberately<sp/>bind<sp/>all<sp/>globals<sp/>with<sp/>the<sp/>maximum<sp/>(advertised)</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>version,<sp/>because<sp/>this<sp/>test<sp/>suite<sp/>must<sp/>be<sp/>kept<sp/>up-to-date<sp/>with</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Weston.<sp/>We<sp/>must<sp/>always<sp/>implement<sp/>at<sp/>least<sp/>the<sp/>version<sp/>advertised</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>Weston.<sp/>This<sp/>is<sp/>not<sp/>ok<sp/>for<sp/>normal<sp/>clients,<sp/>but<sp/>it<sp/>is<sp/>ok<sp/>in</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>test<sp/>suite.</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(interface,<sp/></highlight><highlight class="stringliteral">&quot;wl_compositor&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5c4464bb82b07c4e4383465307a2d8d" kindref="member">wl_compositor</ref><sp/>=</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_registry_bind(registry,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wl_compositor_interface,<sp/>version);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(interface,<sp/></highlight><highlight class="stringliteral">&quot;wl_seat&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structinput" kindref="compound">input</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1ae82b973783001ca5654d5fda7c22c958" kindref="member">client</ref><sp/>=<sp/><ref refid="structinput_1ae82b973783001ca5654d5fda7c22c958" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1af6a3db5cc930608b78644a1bbcce4d70" kindref="member">global_name</ref><sp/>=<sp/><ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1a7894ae4e045450c7792493e63353ef65" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1af45f5a0b505dce542ea33fe3da08a85d" kindref="member">wl_seat</ref><sp/>=</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_registry_bind(registry,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wl_seat_interface,<sp/>version);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_seat_add_listener(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1af45f5a0b505dce542ea33fe3da08a85d" kindref="member">wl_seat</ref>,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1a54998e34e5d326dcfdc75efbb8153526" kindref="member">seat_listener</ref>,<sp/><ref refid="structinput" kindref="compound">input</ref>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1af00846258eadd39a5b83837d16124762" kindref="member">inputs</ref>,<sp/>&amp;<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1a0f460269218b558d9d228c89d6c307cc" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(interface,<sp/></highlight><highlight class="stringliteral">&quot;wl_shm&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a84969eaf7f9e7dd6896e7b6b8c5ddca4" kindref="member">wl_shm</ref><sp/>=</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_registry_bind(registry,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wl_shm_interface,<sp/>version);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_shm_add_listener(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a84969eaf7f9e7dd6896e7b6b8c5ddca4" kindref="member">wl_shm</ref>,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1abf52f02f4fde286f53a02fd1cf168ea2" kindref="member">shm_listener</ref>,<sp/><ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(interface,<sp/></highlight><highlight class="stringliteral">&quot;wl_output&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref><sp/>=</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_registry_bind(registry,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wl_output_interface,<sp/>version);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_add_listener(<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref>,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="weston-test-client-helper_8c_1a1f22d30776bc9f97b7ab9ca6d2c3594c" kindref="member">output_listener</ref>,<sp/><ref refid="structoutput" kindref="compound">output</ref>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aaf7878e687c2487156da8cd97dfb4310" kindref="member">output_list</ref>,<sp/>&amp;<ref refid="structoutput" kindref="compound">output</ref>-&gt;<ref refid="structoutput_1a3b73765192267573e6a570e88c1a27d0" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a33cd2943396c33cdd874a15ed2f52473" kindref="member">output</ref><sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(interface,<sp/></highlight><highlight class="stringliteral">&quot;weston_test&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;<ref refid="structtest_1ac67f68f85cec23036bebedc63443bdcd" kindref="member">weston_test</ref><sp/>=</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_registry_bind(registry,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;weston_test_interface,<sp/>version);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_test_add_listener(<ref refid="structtest" kindref="compound">test</ref>-&gt;<ref refid="structtest_1ac67f68f85cec23036bebedc63443bdcd" kindref="member">weston_test</ref>,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1a04c5ae2f7e0692503f72ddfb041ace17" kindref="member">test_listener</ref>,<sp/><ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref><sp/>=<sp/><ref refid="matrix-test_8c_1a40180e42e1cf6c3fbbb74f44cb78ca67" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(interface,<sp/></highlight><highlight class="stringliteral">&quot;weston_screenshooter&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1adcb29238763484fbcff4f7ac3ecb4d3a" kindref="member">screenshooter</ref><sp/>=</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_registry_bind(registry,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;weston_screenshooter_interface,<sp/>1);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_screenshooter_add_listener(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1adcb29238763484fbcff4f7ac3ecb4d3a" kindref="member">screenshooter</ref>,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="weston-test-client-helper_8c_1a028a57b52711bac74ec2472a3d8e793e" kindref="member">screenshooter_listener</ref>,<sp/><ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglobal" kindref="compound">global</ref><sp/>*</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1acf446ef63d2b0764abcc2dd539970742" kindref="member">client_find_global_with_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/>uint32_t<sp/><ref refid="structglobal_1a7894ae4e045450c7792493e63353ef65" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglobal" kindref="compound">global</ref><sp/>*<ref refid="structglobal" kindref="compound">global</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structglobal" kindref="compound">global</ref>,<sp/>&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a7c5841d081e771cd4216f7c8572feed2" kindref="member">global_list</ref>,<sp/><ref refid="structglobal_1aa9abdbaf3ea14a5477f3297648b81978" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1a7894ae4e045450c7792493e63353ef65" kindref="member">name</ref><sp/>==<sp/><ref refid="structglobal_1a7894ae4e045450c7792493e63353ef65" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglobal" kindref="compound">global</ref>;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput" kindref="compound">input</ref><sp/>*</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a0343d45f15ad29d650951ea06a64ec0a" kindref="member">client_find_input_with_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/>uint32_t<sp/>name)</highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput" kindref="compound">input</ref><sp/>*<ref refid="structinput" kindref="compound">input</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(<ref refid="structinput" kindref="compound">input</ref>,<sp/>&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1af00846258eadd39a5b83837d16124762" kindref="member">inputs</ref>,<sp/><ref refid="structinput_1a0f460269218b558d9d228c89d6c307cc" kindref="member">link</ref>)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinput" kindref="compound">input</ref>-&gt;<ref refid="structinput_1af6a3db5cc930608b78644a1bbcce4d70" kindref="member">global_name</ref><sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structinput" kindref="compound">input</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a49b9500483e32b527a972160b6c15e1c" kindref="member">global_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structglobal" kindref="compound">global</ref><sp/>*<ref refid="structglobal" kindref="compound">global</ref>)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1aa9abdbaf3ea14a5477f3297648b81978" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1addc85d2e981c005a33f32104134e1bc8" kindref="member">interface</ref>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structglobal" kindref="compound">global</ref>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a967ee7103297a0cb736752330cf6c609" kindref="member">handle_global_remove</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_registry<sp/>*registry,<sp/>uint32_t<sp/>name)</highlight></codeline>
<codeline lineno="843"><highlight class="normal">{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglobal" kindref="compound">global</ref><sp/>*<ref refid="structglobal" kindref="compound">global</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinput" kindref="compound">input</ref><sp/>*<ref refid="structinput" kindref="compound">input</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglobal" kindref="compound">global</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1acf446ef63d2b0764abcc2dd539970742" kindref="member">client_find_global_with_name</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structglobal" kindref="compound">global</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>to<sp/>remove<sp/>unknown<sp/>global&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<ref refid="structglobal" kindref="compound">global</ref>-&gt;<ref refid="structglobal_1addc85d2e981c005a33f32104134e1bc8" kindref="member">interface</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wl_seat&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinput" kindref="compound">input</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a0343d45f15ad29d650951ea06a64ec0a" kindref="member">client_find_input_with_name</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinput" kindref="compound">input</ref>)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref><sp/>==<sp/><ref refid="structinput" kindref="compound">input</ref>)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a232cb6e776603a06b4184c8ff3ee8562" kindref="member">input_destroy</ref>(<ref refid="structinput" kindref="compound">input</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>handle<sp/>wl_output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a49b9500483e32b527a972160b6c15e1c" kindref="member">global_destroy</ref>(<ref refid="structglobal" kindref="compound">global</ref>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_registry_listener<sp/><ref refid="weston-test-client-helper_8c_1a8998c87c94cd7d185e8f0cdafab4b1c4" kindref="member">registry_listener</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a5df7311cf77f7899c05f89b660f0cd1e" kindref="member">handle_global</ref>,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a967ee7103297a0cb736752330cf6c609" kindref="member">handle_global_remove</ref>,</highlight></codeline>
<codeline lineno="868"><highlight class="normal">};</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a70a6740f5702a0a4d532a927658d028f" kindref="member">skip</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>argp;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(argp,<sp/>fmt);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfprintf(stderr,<sp/>fmt,<sp/>argp);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(argp);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>automake<sp/>tests<sp/>uses<sp/>exit<sp/>code<sp/>77.<sp/>weston-test-runner<sp/>will<sp/>see</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>and<sp/>use<sp/>it,<sp/>and<sp/>then<sp/>weston-test&apos;s<sp/>sigchld<sp/>handler<sp/>(in<sp/>the</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>weston<sp/>process)<sp/>will<sp/>use<sp/>that<sp/>as<sp/>an<sp/>exit<sp/>status,<sp/>which<sp/>is<sp/>what</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ninja<sp/>will<sp/>see<sp/>in<sp/>the<sp/>end.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(77);</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a3a9a023a48a87193c1a6fc6bbbd8c6ed" kindref="member">expect_protocol_error</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_interface<sp/>*intf,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>code)</highlight></codeline>
<codeline lineno="890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>errcode,<sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_interface<sp/>*interface;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>error<sp/>has<sp/>not<sp/>come<sp/>yet,<sp/>make<sp/>it<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_display_roundtrip(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>wl_display_get_error(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(err<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>protocol<sp/>error<sp/>but<sp/>nothing<sp/>came&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(err<sp/>==<sp/>EPROTO<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>protocol<sp/>error<sp/>but<sp/>got<sp/>local<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errcode<sp/>=<sp/>wl_display_get_protocol_error(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;interface,<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errcode<sp/>!=<sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Should<sp/>get<sp/>error<sp/>code<sp/>%d<sp/>but<sp/>got<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>code,<sp/>errcode);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>be<sp/>definitely<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(interface);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(intf-&gt;name,<sp/>interface-&gt;name)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Should<sp/>get<sp/>interface<sp/>&apos;%s&apos;<sp/>but<sp/>got<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intf-&gt;name,<sp/>interface-&gt;name);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Expected<sp/>other<sp/>protocol<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Got<sp/>expected<sp/>protocol<sp/>error<sp/>on<sp/>&apos;%s&apos;<sp/>(object<sp/>id:<sp/>%d)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;with<sp/>code<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>interface-&gt;name,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>errcode);</highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1aa2dee7110e405ac39d7a372cb6f28d5e" kindref="member">log_handler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;libwayland:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfprintf(stderr,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1af73e5cb173ce63199265176e2b0e90dd" kindref="member">create_client</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log_set_handler_client(<ref refid="weston-test-client-helper_8c_1aa2dee7110e405ac39d7a372cb6f28d5e" kindref="member">log_handler</ref>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>connect<sp/>to<sp/>display<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref><sp/>=<sp/>wl_display_connect(NULL);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a7c5841d081e771cd4216f7c8572feed2" kindref="member">global_list</ref>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1af00846258eadd39a5b83837d16124762" kindref="member">inputs</ref>);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aaf7878e687c2487156da8cd97dfb4310" kindref="member">output_list</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>registry<sp/>so<sp/>we<sp/>can<sp/>bind<sp/>to<sp/>interfaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a9d3ffb64375ce782e18ab3a3bc29fd4b" kindref="member">wl_registry</ref><sp/>=<sp/>wl_display_get_registry(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_registry_add_listener(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a9d3ffb64375ce782e18ab3a3bc29fd4b" kindref="member">wl_registry</ref>,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1a8998c87c94cd7d185e8f0cdafab4b1c4" kindref="member">registry_listener</ref>,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>roundtrip<sp/>makes<sp/>sure<sp/>we<sp/>have<sp/>all<sp/>globals<sp/>and<sp/>we<sp/>bound<sp/>to<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8h_1ab95988e6d0d010625831b6b8c92a4a9d" kindref="member">client_roundtrip</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>roundtrip<sp/>makes<sp/>sure<sp/>we<sp/>got<sp/>all<sp/>wl_shm.format<sp/>and<sp/>wl_seat.*</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>events<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8h_1ab95988e6d0d010625831b6b8c92a4a9d" kindref="member">client_roundtrip</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>have<sp/>WL_SHM_FORMAT_ARGB32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a8b7c48ff09447daaa5d91d71eafb82bb" kindref="member">has_argb</ref>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>have<sp/>weston_test<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>have<sp/>an<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a33cd2943396c33cdd874a15ed2f52473" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>output<sp/>must<sp/>be<sp/>initialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a33cd2943396c33cdd874a15ed2f52473" kindref="member">output</ref>-&gt;<ref refid="structoutput_1af5d772347c11941b20b7e83b952d42bd" kindref="member">initialized</ref><sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>have<sp/>seat<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ae1814ee58540f083f1ba2ce1f0084722" kindref="member">input</ref>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsurface" kindref="compound">surface</ref><sp/>*</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a48b9e7f0e76b1c88869a2f8666d8026e" kindref="member">create_test_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsurface" kindref="compound">surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>xzalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref><sp/>=</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_compositor_create_surface(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5c4464bb82b07c4e4383465307a2d8d" kindref="member">wl_compositor</ref>);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface_add_listener(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>,<sp/>&amp;<ref refid="weston-test-client-helper_8c_1ab06cca987f5be7d8a99e61abeed445eb" kindref="member">surface_listener</ref>,</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface_set_user_data(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a2c686f203eab16492d51ed7262aa479c" kindref="member">surface_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_surface_destroy(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a014665bba4cce883927372cc5348216f" kindref="member">buffer_destroy</ref>(<ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1afaf75d0d97a6872840e248ca4e300190" kindref="member">create_client_and_test_surface</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsurface" kindref="compound">surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_color_t<sp/>color<sp/>=<sp/>{<sp/>16384,<sp/>16384,<sp/>16384,<sp/>16384<sp/>};<sp/></highlight><highlight class="comment">/*<sp/>uint16_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*solid;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1af73e5cb173ce63199265176e2b0e90dd" kindref="member">create_client</ref>();</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>the<sp/>client<sp/>surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a48b9e7f0e76b1c88869a2f8666d8026e" kindref="member">create_test_surface</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref><sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref><sp/>=<sp/><ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref><sp/>=<sp/><ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a1eecc92b5b5e115112d67cbc7f538e8d" kindref="member">create_shm_buffer_a8r8g8b8</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/><ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>,<sp/><ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solid<sp/>=<sp/>pixman_image_create_solid_fill(&amp;color);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_composite32(PIXMAN_OP_SRC,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solid,<sp/></highlight><highlight class="comment">/*<sp/>src<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;<ref refid="structsurface_1a6380eb64761a852c50514a0ad1b8a37c" kindref="member">buffer</ref>-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref>,<sp/></highlight><highlight class="comment">/*<sp/>dst<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>src<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>mask<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>dst<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface_1ad441498d73778f515b36e669b478b04f" kindref="member">width</ref>,<sp/><ref refid="structsurface_1a973cb10ddcf4f6f6def6a745fc8ca880" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_unref(solid);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a37328a264739e2481da21489c1964335" kindref="member">move_client</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/><ref refid="structsurface_1a104eceda8bfeae5e85ba9feafae1fd74" kindref="member">x</ref>,<sp/><ref refid="structsurface_1a23fe8671b6964ab56aa08c8d211ad4d3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a9d6289c37c3b56c85f4cc40a7cf71513" kindref="member">client_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a2c686f203eab16492d51ed7262aa479c" kindref="member">surface_destroy</ref>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1af00846258eadd39a5b83837d16124762" kindref="member">inputs</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a232cb6e776603a06b4184c8ff3ee8562" kindref="member">input_destroy</ref>(container_of(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1af00846258eadd39a5b83837d16124762" kindref="member">inputs</ref>.next,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinput" kindref="compound">input</ref>,<sp/>link));</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aaf7878e687c2487156da8cd97dfb4310" kindref="member">output_list</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a517aee233a8c3ab311347acec0eb7dfb" kindref="member">output_destroy</ref>(container_of(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aaf7878e687c2487156da8cd97dfb4310" kindref="member">output_list</ref>.next,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structoutput" kindref="compound">output</ref>,<sp/>link));</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a7c5841d081e771cd4216f7c8572feed2" kindref="member">global_list</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a49b9500483e32b527a972160b6c15e1c" kindref="member">global_destroy</ref>(container_of(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a7c5841d081e771cd4216f7c8572feed2" kindref="member">global_list</ref>.next,</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structglobal" kindref="compound">global</ref>,<sp/>link));</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_test_destroy(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>-&gt;<ref refid="structtest_1ac67f68f85cec23036bebedc63443bdcd" kindref="member">weston_test</ref>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5e3d8c23b08a5795428b5b0bfcd3b8e" kindref="member">test</ref>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a84969eaf7f9e7dd6896e7b6b8c5ddca4" kindref="member">wl_shm</ref>)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_shm_destroy(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a84969eaf7f9e7dd6896e7b6b8c5ddca4" kindref="member">wl_shm</ref>);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5c4464bb82b07c4e4383465307a2d8d" kindref="member">wl_compositor</ref>)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_compositor_destroy(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1aa5c4464bb82b07c4e4383465307a2d8d" kindref="member">wl_compositor</ref>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a9d3ffb64375ce782e18ab3a3bc29fd4b" kindref="member">wl_registry</ref>)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_registry_destroy(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a9d3ffb64375ce782e18ab3a3bc29fd4b" kindref="member">wl_registry</ref>);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8h_1ab95988e6d0d010625831b6b8c92a4a9d" kindref="member">client_roundtrip</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_display_disconnect(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a49e55fa6f4c34b1f30ec5b818e293266" kindref="member">output_path</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;WESTON_TEST_OUTPUT_PATH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ae60561096f469244eb55140459df230a" kindref="member">screenshot_output_filename</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basename,<sp/>uint32_t<sp/>seq)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asprintf(&amp;filename,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s-%02d.png&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a49e55fa6f4c34b1f30ec5b818e293266" kindref="member">output_path</ref>(),<sp/>basename,<sp/>seq)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filename;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a29a3c01e33dd2e6720b3a775c881f965" kindref="member">reference_path</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;WESTON_TEST_REFERENCE_PATH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WESTON_TEST_REFERENCE_PATH;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ac48baacfb41665edc58ab4f3e65fe95c" kindref="member">screenshot_reference_filename</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basename,<sp/>uint32_t<sp/>seq)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asprintf(&amp;filename,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s-%02d.png&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a29a3c01e33dd2e6720b3a775c881f965" kindref="member">reference_path</ref>(),<sp/>basename,<sp/>seq)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filename;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a739aad515ceacc99cfbde6c4c2cf87af" kindref="member">image_filename</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basename)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asprintf(&amp;filename,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s.png&quot;</highlight><highlight class="normal">,<sp/><ref refid="weston-test-client-helper_8c_1a29a3c01e33dd2e6720b3a775c881f965" kindref="member">reference_path</ref>(),<sp/>basename)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filename;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139" refid="structformat__map__entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformat__map__entry" kindref="compound">format_map_entry</ref><sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_format_t<sp/><ref refid="structformat__map__entry_1a5e0c3efb9c503dc907efce4bcbdf6eea" kindref="member">cairo</ref>;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_format_code_t<sp/><ref refid="structformat__map__entry_1a272a7be1e83d7274fd532cd9ec6cdd17" kindref="member">pixman</ref>;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformat__map__entry" kindref="compound">format_map_entry</ref><sp/><ref refid="weston-test-client-helper_8c_1a21314cdb99919972b44fd2d003b3a668" kindref="member">format_map</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>CAIRO_FORMAT_ARGB32,<sp/><sp/><sp/><sp/>PIXMAN_a8r8g8b8<sp/>},</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>CAIRO_FORMAT_RGB24,<sp/><sp/><sp/><sp/><sp/>PIXMAN_x8r8g8b8<sp/>},</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>CAIRO_FORMAT_A8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXMAN_a8<sp/>},</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>CAIRO_FORMAT_RGB16_565,<sp/>PIXMAN_r5g6b5<sp/>},</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pixman_format_code_t</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a30ca788f68fb41345ce23489a073ff4b" kindref="member">format_cairo2pixman</ref>(cairo_format_t<sp/>fmt)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ARRAY_LENGTH(<ref refid="weston-test-client-helper_8c_1a21314cdb99919972b44fd2d003b3a668" kindref="member">format_map</ref>);<sp/>i++)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weston-test-client-helper_8c_1a21314cdb99919972b44fd2d003b3a668" kindref="member">format_map</ref>[i].<ref refid="structformat__map__entry_1a5e0c3efb9c503dc907efce4bcbdf6eea" kindref="member">cairo</ref><sp/>==<sp/>fmt)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="weston-test-client-helper_8c_1a21314cdb99919972b44fd2d003b3a668" kindref="member">format_map</ref>[i].<ref refid="structformat__map__entry_1a272a7be1e83d7274fd532cd9ec6cdd17" kindref="member">pixman</ref>;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>Cairo<sp/>pixel<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cairo_format_t</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a3b8c41b24c2c4ddc7925c705503ab62c" kindref="member">format_pixman2cairo</ref>(pixman_format_code_t<sp/>fmt)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ARRAY_LENGTH(<ref refid="weston-test-client-helper_8c_1a21314cdb99919972b44fd2d003b3a668" kindref="member">format_map</ref>);<sp/>i++)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weston-test-client-helper_8c_1a21314cdb99919972b44fd2d003b3a668" kindref="member">format_map</ref>[i].<ref refid="structformat__map__entry_1a272a7be1e83d7274fd532cd9ec6cdd17" kindref="member">pixman</ref><sp/>==<sp/>fmt)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="weston-test-client-helper_8c_1a21314cdb99919972b44fd2d003b3a668" kindref="member">format_map</ref>[i].<ref refid="structformat__map__entry_1a5e0c3efb9c503dc907efce4bcbdf6eea" kindref="member">cairo</ref>;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>Pixman<sp/>pixel<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrange" kindref="compound">range</ref></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1acb5288876f174a77d77341a59547554d" kindref="member">range_get</ref>(const<sp/>struct<sp/><ref refid="structrange" kindref="compound">range</ref><sp/>*r)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!r)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range</ref>){<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(r-&gt;a<sp/>&lt;=<sp/>r-&gt;b);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*r;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pixman_box32_t</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ad109f37100799030b524a8c005738c9a" kindref="member">image_check_get_roi</ref>(pixman_image_t<sp/>*img_a,<sp/>pixman_image_t<sp/>*img_b,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrectangle" kindref="compound">rectangle</ref><sp/>*clip_rect)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_a;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_b;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_a;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_b;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>box;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_a<sp/>=<sp/>pixman_image_get_width(img_a);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_a<sp/>=<sp/>pixman_image_get_height(img_a);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_b<sp/>=<sp/>pixman_image_get_width(img_b);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_b<sp/>=<sp/>pixman_image_get_height(img_b);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip_rect)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.x1<sp/>=<sp/>clip_rect-&gt;<ref refid="structrectangle_1a03970481db05be5eb4e1b55eaba3b347" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.y1<sp/>=<sp/>clip_rect-&gt;<ref refid="structrectangle_1a2331724555ab2149f4ce4e2b57079e4d" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.x2<sp/>=<sp/>clip_rect-&gt;<ref refid="structrectangle_1a03970481db05be5eb4e1b55eaba3b347" kindref="member">x</ref><sp/>+<sp/>clip_rect-&gt;<ref refid="structrectangle_1a57a9b24a714057d8d2ca9a06333560d3" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.y2<sp/>=<sp/>clip_rect-&gt;<ref refid="structrectangle_1a2331724555ab2149f4ce4e2b57079e4d" kindref="member">y</ref><sp/>+<sp/>clip_rect-&gt;<ref refid="structrectangle_1af460193d9a375b8e2813bf1fe6216cce" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.x1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.y1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.x2<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(width_a,<sp/>width_b);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.y2<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(height_a,<sp/>height_b);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(box.x1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(box.y1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(box.x2<sp/>&gt;<sp/>box.x1);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(box.y2<sp/>&gt;<sp/>box.y1);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(box.x2<sp/>&lt;=<sp/>width_a);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(box.x2<sp/>&lt;=<sp/>width_b);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(box.y2<sp/>&lt;=<sp/>height_a);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(box.y2<sp/>&lt;=<sp/>height_b);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250" refid="structimage__iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimage__iterator" kindref="compound">image_iterator</ref><sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structimage__iterator_1a5745e2041248a86c1c85c76a05f6bb27" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structimage__iterator_1aac763d206ca5b8e14b3ed883db8810e4" kindref="member">stride</ref>;<sp/></highlight><highlight class="comment">/*<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a29ddf562364d1d62a43137ccd8a95201" kindref="member">image_iter_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structimage__iterator" kindref="compound">image_iterator</ref><sp/>*it,<sp/>pixman_image_t<sp/>*image)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_format_code_t<sp/>fmt;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="structimage__iterator_1aac763d206ca5b8e14b3ed883db8810e4" kindref="member">stride</ref><sp/>=<sp/>pixman_image_get_stride(image);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="structimage__iterator_1a5745e2041248a86c1c85c76a05f6bb27" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pixman_image_get_data(image);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>pixman_image_get_format(image);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(PIXMAN_FORMAT_BPP(fmt)<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>*</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a5659be2c0d8b8284fd0a1b8232daee50" kindref="member">image_iter_get_row</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structimage__iterator" kindref="compound">image_iterator</ref><sp/>*it,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t<sp/>*)(it-&gt;<ref refid="structimage__iterator_1a5745e2041248a86c1c85c76a05f6bb27" kindref="member">data</ref><sp/>+<sp/>y<sp/>*<sp/>it-&gt;<ref refid="structimage__iterator_1aac763d206ca5b8e14b3ed883db8810e4" kindref="member">stride</ref>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273" refid="structpixel__diff__stat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpixel__diff__stat" kindref="compound">pixel_diff_stat</ref><sp/>{</highlight></codeline>
<codeline lineno="1274" refid="structpixel__diff__stat_1_1pixel__diff__stat__channel" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel" kindref="compound">pixel_diff_stat_channel</ref><sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel_1a97b59a72e21cb063ab491c4dfcd55ef3" kindref="member">min_diff</ref>;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel_1a85bd2a55413c88cf956a62a15433ee2c" kindref="member">max_diff</ref>;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structpixel__diff__stat_1a8e73da9aa30d8804464a3bfc4eb4abbb" kindref="member">ch</ref>[4];</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a42a747c7c1c2a1f12245204527d03bb1" kindref="member">testlog_pixel_diff_stat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpixel__diff__stat" kindref="compound">pixel_diff_stat</ref><sp/>*stat)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Image<sp/>difference<sp/>statistics:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;\tch<sp/>%d:<sp/>[%d,<sp/>%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>stat-&gt;<ref refid="structpixel__diff__stat_1a8e73da9aa30d8804464a3bfc4eb4abbb" kindref="member">ch</ref>[i].<ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel_1a97b59a72e21cb063ab491c4dfcd55ef3" kindref="member">min_diff</ref>,<sp/>stat-&gt;<ref refid="structpixel__diff__stat_1a8e73da9aa30d8804464a3bfc4eb4abbb" kindref="member">ch</ref>[i].<ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel_1a85bd2a55413c88cf956a62a15433ee2c" kindref="member">max_diff</ref>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1acaf1d59f677686ab1a558a7c3fe846b9" kindref="member">fuzzy_match_pixels</ref>(uint32_t<sp/>pix_a,<sp/>uint32_t<sp/>pix_b,</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range</ref><sp/>*fuzz,</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpixel__diff__stat" kindref="compound">pixel_diff_stat</ref><sp/>*stat)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(shift<sp/>=<sp/>0,<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>shift<sp/>+=<sp/>8,<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val_a<sp/>=<sp/>(pix_a<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>0xffu;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val_b<sp/>=<sp/>(pix_b<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>0xffu;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>val_b<sp/>-<sp/>val_a;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat-&gt;<ref refid="structpixel__diff__stat_1a8e73da9aa30d8804464a3bfc4eb4abbb" kindref="member">ch</ref>[i].<ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel_1a97b59a72e21cb063ab491c4dfcd55ef3" kindref="member">min_diff</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(stat-&gt;<ref refid="structpixel__diff__stat_1a8e73da9aa30d8804464a3bfc4eb4abbb" kindref="member">ch</ref>[i].<ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel_1a97b59a72e21cb063ab491c4dfcd55ef3" kindref="member">min_diff</ref>,<sp/>d);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat-&gt;<ref refid="structpixel__diff__stat_1a8e73da9aa30d8804464a3bfc4eb4abbb" kindref="member">ch</ref>[i].<ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel_1a85bd2a55413c88cf956a62a15433ee2c" kindref="member">max_diff</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(stat-&gt;<ref refid="structpixel__diff__stat_1a8e73da9aa30d8804464a3bfc4eb4abbb" kindref="member">ch</ref>[i].<ref refid="structpixel__diff__stat_1_1pixel__diff__stat__channel_1a85bd2a55413c88cf956a62a15433ee2c" kindref="member">max_diff</ref>,<sp/>d);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>fuzz-&gt;a<sp/>||<sp/>d<sp/>&gt;<sp/>fuzz-&gt;<ref refid="structrange_1ad82038b126576d13756f64833a360042" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ac660a60c4cbc6ce52d1b68b14bfab7f9" kindref="member">check_images_match</ref>(pixman_image_t<sp/>*img_a,<sp/>pixman_image_t<sp/>*img_b,</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrectangle" kindref="compound">rectangle</ref><sp/>*clip_rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range</ref><sp/>*prec)</highlight></codeline>
<codeline lineno="1340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrange" kindref="compound">range</ref><sp/>fuzz<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1acb5288876f174a77d77341a59547554d" kindref="member">range_get</ref>(prec);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpixel__diff__stat" kindref="compound">pixel_diff_stat</ref><sp/>diffstat<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimage__iterator" kindref="compound">image_iterator</ref><sp/>it_a;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimage__iterator" kindref="compound">image_iterator</ref><sp/>it_b;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>box;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*pix_a;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*pix_b;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ad109f37100799030b524a8c005738c9a" kindref="member">image_check_get_roi</ref>(img_a,<sp/>img_b,<sp/>clip_rect);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a29ddf562364d1d62a43137ccd8a95201" kindref="member">image_iter_init</ref>(&amp;it_a,<sp/>img_a);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a29ddf562364d1d62a43137ccd8a95201" kindref="member">image_iter_init</ref>(&amp;it_b,<sp/>img_b);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>box.y1;<sp/>y<sp/>&lt;<sp/>box.y2;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_a<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a5659be2c0d8b8284fd0a1b8232daee50" kindref="member">image_iter_get_row</ref>(&amp;it_a,<sp/>y)<sp/>+<sp/>box.x1;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_b<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a5659be2c0d8b8284fd0a1b8232daee50" kindref="member">image_iter_get_row</ref>(&amp;it_b,<sp/>y)<sp/>+<sp/>box.x1;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>box.x1;<sp/>x<sp/>&lt;<sp/>box.x2;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="weston-test-client-helper_8c_1acaf1d59f677686ab1a558a7c3fe846b9" kindref="member">fuzzy_match_pixels</ref>(*pix_a,<sp/>*pix_b,</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fuzz,<sp/>&amp;diffstat))</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_a++;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_b++;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ae9f6c27f16d782c4c46684785f08c104" kindref="member">tint</ref>(uint32_t<sp/>src,<sp/>uint32_t<sp/>add)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>v;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>((src<sp/>&amp;<sp/>0xfcfcfcfc)<sp/>&gt;&gt;<sp/>2)<sp/>|<sp/>0xff000000;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>+<sp/>add;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal">pixman_image_t<sp/>*</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a3ad420bb5f1f58c26b8160716b2d839b" kindref="member">visualize_image_difference</ref>(pixman_image_t<sp/>*img_a,<sp/>pixman_image_t<sp/>*img_b,</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrectangle" kindref="compound">rectangle</ref><sp/>*clip_rect,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range</ref><sp/>*prec)</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrange" kindref="compound">range</ref><sp/>fuzz<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1acb5288876f174a77d77341a59547554d" kindref="member">range_get</ref>(prec);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpixel__diff__stat" kindref="compound">pixel_diff_stat</ref><sp/>diffstat<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*diffimg;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*shade;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimage__iterator" kindref="compound">image_iterator</ref><sp/>it_a;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimage__iterator" kindref="compound">image_iterator</ref><sp/>it_b;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimage__iterator" kindref="compound">image_iterator</ref><sp/>it_d;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_box32_t<sp/>box;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*pix_a;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*pix_b;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*pix_d;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_color_t<sp/>shade_color<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>32768<sp/>};</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>pixman_image_get_width(img_a);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>pixman_image_get_height(img_a);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ad109f37100799030b524a8c005738c9a" kindref="member">image_check_get_roi</ref>(img_a,<sp/>img_b,<sp/>clip_rect);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffimg<sp/>=<sp/>pixman_image_create_bits_no_clear(PIXMAN_x8r8g8b8,</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>diffimg<sp/>with<sp/>a<sp/>black-shaded<sp/>copy<sp/>of<sp/>img_a,<sp/>and<sp/>then<sp/>fill</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>clip_rect<sp/>area<sp/>with<sp/>original<sp/>img_a.</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade<sp/>=<sp/>pixman_image_create_solid_fill(&amp;shade_color);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_composite32(PIXMAN_OP_SRC,<sp/>img_a,<sp/>shade,<sp/>diffimg,</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_unref(shade);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_composite32(PIXMAN_OP_SRC,<sp/>img_a,<sp/>NULL,<sp/>diffimg,</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.x1,<sp/>box.y1,<sp/>0,<sp/>0,<sp/>box.x1,<sp/>box.y1,</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.x2<sp/>-<sp/>box.x1,<sp/>box.y2<sp/>-<sp/>box.y1);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a29ddf562364d1d62a43137ccd8a95201" kindref="member">image_iter_init</ref>(&amp;it_a,<sp/>img_a);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a29ddf562364d1d62a43137ccd8a95201" kindref="member">image_iter_init</ref>(&amp;it_b,<sp/>img_b);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a29ddf562364d1d62a43137ccd8a95201" kindref="member">image_iter_init</ref>(&amp;it_d,<sp/>diffimg);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>box.y1;<sp/>y<sp/>&lt;<sp/>box.y2;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_a<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a5659be2c0d8b8284fd0a1b8232daee50" kindref="member">image_iter_get_row</ref>(&amp;it_a,<sp/>y)<sp/>+<sp/>box.x1;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_b<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a5659be2c0d8b8284fd0a1b8232daee50" kindref="member">image_iter_get_row</ref>(&amp;it_b,<sp/>y)<sp/>+<sp/>box.x1;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_d<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a5659be2c0d8b8284fd0a1b8232daee50" kindref="member">image_iter_get_row</ref>(&amp;it_d,<sp/>y)<sp/>+<sp/>box.x1;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>box.x1;<sp/>x<sp/>&lt;<sp/>box.x2;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weston-test-client-helper_8c_1acaf1d59f677686ab1a558a7c3fe846b9" kindref="member">fuzzy_match_pixels</ref>(*pix_a,<sp/>*pix_b,</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fuzz,<sp/>&amp;diffstat))</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pix_d<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ae9f6c27f16d782c4c46684785f08c104" kindref="member">tint</ref>(*pix_d,<sp/>0x00008000);<sp/></highlight><highlight class="comment">/*<sp/>green<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pix_d<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ae9f6c27f16d782c4c46684785f08c104" kindref="member">tint</ref>(*pix_d,<sp/>0x00c00000);<sp/></highlight><highlight class="comment">/*<sp/>red<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_a++;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_b++;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_d++;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a42a747c7c1c2a1f12245204527d03bb1" kindref="member">testlog_pixel_diff_stat</ref>(&amp;diffstat);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diffimg;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ae254076694f843e36140c726a0e00005" kindref="member">write_image_as_png</ref>(pixman_image_t<sp/>*image,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname)</highlight></codeline>
<codeline lineno="1497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_surface_t<sp/>*cairo_surface;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_status_t<sp/>status;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_format_t<sp/>fmt;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a3b8c41b24c2c4ddc7925c705503ab62c" kindref="member">format_pixman2cairo</ref>(pixman_image_get_format(image));</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_surface<sp/>=<sp/>cairo_image_surface_create_for_data(</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pixman_image_get_data(image),</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt,</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_get_width(image),</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_get_height(image),</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_get_stride(image));</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cairo_surface_write_to_png(cairo_surface,<sp/>fname);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>CAIRO_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>save<sp/>image<sp/>&apos;%s&apos;:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fname,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_status_to_string(status));</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_surface_destroy(cairo_surface);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pixman_image_t<sp/>*</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1afd80ada4602a329ab5749c3724829847" kindref="member">image_convert_to_a8r8g8b8</ref>(pixman_image_t<sp/>*image)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*ret;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixman_image_get_format(image)<sp/>==<sp/>PIXMAN_a8r8g8b8)</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pixman_image_ref(image);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>pixman_image_get_width(image);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>pixman_image_get_height(image);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pixman_image_create_bits_no_clear(PIXMAN_a8r8g8b8,<sp/>width,<sp/>height,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ret);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_composite32(PIXMAN_OP_SRC,<sp/>image,<sp/>NULL,<sp/>ret,</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a9bb6677c8e8257430cff6cd106e54ec3" kindref="member">destroy_cairo_surface</ref>(pixman_image_t<sp/>*image,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structimage__iterator_1a5745e2041248a86c1c85c76a05f6bb27" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_surface_t<sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/><ref refid="structimage__iterator_1a5745e2041248a86c1c85c76a05f6bb27" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_surface_destroy(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal">pixman_image_t<sp/>*</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ad159fed4fdbc577de29b965501c9d0c3" kindref="member">load_image_from_png</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*image;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*converted;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_format_t<sp/>cairo_fmt;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_format_code_t<sp/>pixman_fmt;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_surface_t<sp/>*reference_cairo_surface;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_status_t<sp/>status;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structimage__iterator_1aac763d206ca5b8e14b3ed883db8810e4" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structimage__iterator_1a5745e2041248a86c1c85c76a05f6bb27" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference_cairo_surface<sp/>=<sp/>cairo_image_surface_create_from_png(fname);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_surface_flush(reference_cairo_surface);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cairo_surface_status(reference_cairo_surface);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>CAIRO_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fname,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_status_to_string(status));</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_surface_destroy(reference_cairo_surface);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cairo_fmt<sp/>=<sp/>cairo_image_surface_get_format(reference_cairo_surface);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_fmt<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a30ca788f68fb41345ce23489a073ff4b" kindref="member">format_cairo2pixman</ref>(cairo_fmt);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>cairo_image_surface_get_width(reference_cairo_surface);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>cairo_image_surface_get_height(reference_cairo_surface);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimage__iterator_1aac763d206ca5b8e14b3ed883db8810e4" kindref="member">stride</ref><sp/>=<sp/>cairo_image_surface_get_stride(reference_cairo_surface);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimage__iterator_1a5745e2041248a86c1c85c76a05f6bb27" kindref="member">data</ref><sp/>=<sp/>cairo_image_surface_get_data(reference_cairo_surface);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>Cairo<sp/>surface<sp/>will<sp/>own<sp/>the<sp/>data,<sp/>so<sp/>we<sp/>keep<sp/>it<sp/>around.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>pixman_image_create_bits_no_clear(pixman_fmt,</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height,<sp/><ref refid="structimage__iterator_1a5745e2041248a86c1c85c76a05f6bb27" kindref="member">data</ref>,<sp/><ref refid="structimage__iterator_1aac763d206ca5b8e14b3ed883db8810e4" kindref="member">stride</ref>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(image);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_set_destroy_function(image,<sp/><ref refid="weston-test-client-helper_8c_1a9bb6677c8e8257430cff6cd106e54ec3" kindref="member">destroy_cairo_surface</ref>,</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference_cairo_surface);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converted<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1afd80ada4602a329ab5749c3724829847" kindref="member">image_convert_to_a8r8g8b8</ref>(image);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_unref(image);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>converted;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a43cb7562bb853f9838e8d7cd4852734b" kindref="member">capture_screenshot_of_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1adcb29238763484fbcff4f7ac3ecb4d3a" kindref="member">screenshooter</ref>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a1eecc92b5b5e115112d67cbc7f538e8d" kindref="member">create_shm_buffer_a8r8g8b8</ref>(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a33cd2943396c33cdd874a15ed2f52473" kindref="member">output</ref>-&gt;<ref refid="structoutput_1a8d0ce045e764bc53e9cb70b1c5830acb" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a33cd2943396c33cdd874a15ed2f52473" kindref="member">output</ref>-&gt;<ref refid="structoutput_1ab82f03b52728ed0bdc7471851c0411ef" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1abb9fdd8290a061c3a77cb0fd7fb9f2ed" kindref="member">buffer_copy_done</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_screenshooter_take_shot(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1adcb29238763484fbcff4f7ac3ecb4d3a" kindref="member">screenshooter</ref>,</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a33cd2943396c33cdd874a15ed2f52473" kindref="member">output</ref>-&gt;<ref refid="structoutput_1ab3714f202a35ed8ad64ec34ec33e7c41" kindref="member">wl_output</ref>,</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;<ref refid="structbuffer_1a47f5f09576d179641e98d1d6730067dc" kindref="member">proxy</ref>);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1abb9fdd8290a061c3a77cb0fd7fb9f2ed" kindref="member">buffer_copy_done</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wl_display_dispatch(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a352435d858382f9c925c9f248f12d1ce" kindref="member">wl_display</ref>)<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Document<sp/>somewhere<sp/>the<sp/>orientation<sp/>the<sp/>screenshot<sp/>is<sp/>taken</highlight></codeline>
<codeline lineno="1640"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>how<sp/>the<sp/>clip<sp/>coords<sp/>are<sp/>interpreted,<sp/>in<sp/>case<sp/>of<sp/>scaling/transform.</highlight></codeline>
<codeline lineno="1641"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>we&apos;re<sp/>using<sp/>read_pixels()<sp/>just<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>documented<sp/>somewhere.</highlight></codeline>
<codeline lineno="1642"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Protocol<sp/>docs<sp/>in<sp/>the<sp/>XML,<sp/>comparison<sp/>function<sp/>docs<sp/>in<sp/>Doxygen<sp/>style.</highlight></codeline>
<codeline lineno="1643"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a5ad8e37a036c8d8a945e223bc736e61c" kindref="member">write_visual_diff</ref>(pixman_image_t<sp/>*ref_image,</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*shot,</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrectangle" kindref="compound">rectangle</ref><sp/>*<ref refid="weston-test-client-helper_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_name,</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seq_no,</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range</ref><sp/>*fuzz)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ext_test_name;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*diff;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>asprintf(&amp;ext_test_name,<sp/></highlight><highlight class="stringliteral">&quot;%s-diff&quot;</highlight><highlight class="normal">,<sp/>test_name);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ret<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ae60561096f469244eb55140459df230a" kindref="member">screenshot_output_filename</ref>(ext_test_name,<sp/>seq_no);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a3ad420bb5f1f58c26b8160716b2d839b" kindref="member">visualize_image_difference</ref>(ref_image,<sp/>shot-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref>,<sp/><ref refid="weston-test-client-helper_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,<sp/>fuzz);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1ae254076694f843e36140c726a0e00005" kindref="member">write_image_as_png</ref>(diff,<sp/>fname);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_unref(diff);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(fname);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ext_test_name);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a1449fafdd0df847d4e4708a03635ddec" kindref="member">verify_image</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*shot,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ref_image,</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref_seq_no,</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrectangle" kindref="compound">rectangle</ref><sp/>*<ref refid="weston-test-client-helper_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seq_no)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_name<sp/>=<sp/><ref refid="group__testharness_1gae81a0b16dc498f48d248e7fb7d819660" kindref="member">get_test_name</ref>();</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrange" kindref="compound">range</ref><sp/>gl_fuzz<sp/>=<sp/>{<sp/>-3,<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*ref<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ref_fname<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shot_fname;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shot_fname<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ae60561096f469244eb55140459df230a" kindref="member">screenshot_output_filename</ref>(test_name,<sp/>seq_no);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref_image)<sp/>{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_fname<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ac48baacfb41665edc58ab4f3e65fe95c" kindref="member">screenshot_reference_filename</ref>(ref_image,<sp/>ref_seq_no);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ad159fed4fdbc577de29b965501c9d0c3" kindref="member">load_image_from_png</ref>(ref_fname);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref)<sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ac660a60c4cbc6ce52d1b68b14bfab7f9" kindref="member">check_images_match</ref>(ref,<sp/>shot-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref>,<sp/><ref refid="weston-test-client-helper_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,<sp/>&amp;gl_fuzz);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;Verify<sp/>reference<sp/>image<sp/>%s<sp/>vs.<sp/>shot<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_fname,<sp/>shot_fname,<sp/>match<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;PASS&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!match)<sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a5ad8e37a036c8d8a945e223bc736e61c" kindref="member">write_visual_diff</ref>(ref,<sp/>shot,<sp/><ref refid="weston-test-client-helper_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_name,<sp/>seq_no,<sp/>&amp;gl_fuzz);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_unref(ref);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1gaa1538dfd4262a1feafd60cd1f09d9878" kindref="member">testlog</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>reference<sp/>image,<sp/>shot<sp/>%s:<sp/>FAIL\n&quot;</highlight><highlight class="normal">,<sp/>shot_fname);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!match)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1ae254076694f843e36140c726a0e00005" kindref="member">write_image_as_png</ref>(shot-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref>,<sp/>shot_fname);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ref_fname);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(shot_fname);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1ac924fe13101f7a8c258314a16bb8dc41" kindref="member">verify_screen_content</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ref_image,</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref_seq_no,</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrectangle" kindref="compound">rectangle</ref><sp/>*<ref refid="weston-test-client-helper_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seq_no)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*shot;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shot<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a43cb7562bb853f9838e8d7cd4852734b" kindref="member">capture_screenshot_of_output</ref>(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(shot);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a1449fafdd0df847d4e4708a03635ddec" kindref="member">verify_image</ref>(shot,<sp/>ref_image,<sp/>ref_seq_no,<sp/><ref refid="weston-test-client-helper_8c_1ade0ac16de71f1b411f933a8b2cd513bc" kindref="member">clip</ref>,<sp/>seq_no);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test-client-helper_8c_1a014665bba4cce883927372cc5348216f" kindref="member">buffer_destroy</ref>(shot);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a21b461fa04a876060467d4c6771d2ddf" kindref="member">client_buffer_from_image_file</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basename,</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="1794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>*buf;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*img;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_w,<sp/>buf_h;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_transform_t<sp/>scaling;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(scale<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a739aad515ceacc99cfbde6c4c2cf87af" kindref="member">image_filename</ref>(basename);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1ad159fed4fdbc577de29b965501c9d0c3" kindref="member">load_image_from_png</ref>(fname);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(fname);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(img);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_w<sp/>=<sp/>scale<sp/>*<sp/>pixman_image_get_width(img);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_h<sp/>=<sp/>scale<sp/>*<sp/>pixman_image_get_height(img);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1a1eecc92b5b5e115112d67cbc7f538e8d" kindref="member">create_shm_buffer_a8r8g8b8</ref>(<ref refid="structclient" kindref="compound">client</ref>,<sp/>buf_w,<sp/>buf_h);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_transform_init_scale(&amp;scaling,</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_fixed_1<sp/>/<sp/>scale,</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_fixed_1<sp/>/<sp/>scale);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_set_transform(img,<sp/>&amp;scaling);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_set_filter(img,<sp/>PIXMAN_FILTER_NEAREST,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_composite32(PIXMAN_OP_SRC,</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img,<sp/></highlight><highlight class="comment">/*<sp/>src<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="structbuffer_1a6f57d8719ac323d52c3b1fd816dedf76" kindref="member">image</ref>,<sp/></highlight><highlight class="comment">/*<sp/>dst<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>src<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>mask<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>dst<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_w,<sp/>buf_h);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_unref(img);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1aed27dc43b7c4076e6c8af4c51b19f13d" kindref="member">bind_to_singleton_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_interface<sp/>*iface,</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="1848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglobal" kindref="compound">global</ref><sp/>*tmp;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglobal" kindref="compound">global</ref><sp/>*g<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_proxy<sp/>*proxy;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(tmp,<sp/>&amp;<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a7c5841d081e771cd4216f7c8572feed2" kindref="member">global_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmp-&gt;<ref refid="structglobal_1addc85d2e981c005a33f32104134e1bc8" kindref="member">interface</ref>,<sp/>iface-&gt;name))</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!g<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;multiple<sp/>singleton<sp/>objects&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(g<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;singleton<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxy<sp/>=<sp/>wl_registry_bind(<ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1a9d3ffb64375ce782e18ab3a3bc29fd4b" kindref="member">wl_registry</ref>,<sp/>g-&gt;<ref refid="structglobal_1a7894ae4e045450c7792493e63353ef65" kindref="member">name</ref>,<sp/>iface,<sp/>version);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(proxy);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_viewport<sp/>*</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a81901fe0b38e9590e62ce88680fcc0ee" kindref="member">client_create_viewport</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structclient" kindref="compound">client</ref><sp/>*<ref refid="structclient" kindref="compound">client</ref>)</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_viewporter<sp/>*viewporter;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_viewport<sp/>*viewport;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewporter<sp/>=<sp/><ref refid="weston-test-client-helper_8c_1aed27dc43b7c4076e6c8af4c51b19f13d" kindref="member">bind_to_singleton_global</ref>(<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wp_viewporter_interface,<sp/>1);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport<sp/>=<sp/>wp_viewporter_get_viewport(viewporter,</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclient" kindref="compound">client</ref>-&gt;<ref refid="structclient_1ab08863485e285fef208584804ca7480a" kindref="member">surface</ref>-&gt;<ref refid="structsurface_1a4910a1070e78b84c00c8ab27a508b4da" kindref="member">wl_surface</ref>);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(viewport);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp_viewporter_destroy(viewporter);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>viewport;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a19461415389d3c87d20bf1151e460f41" kindref="member">fill_image_with_color</ref>(pixman_image_t<sp/>*image,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pixman_color_t<sp/>*color)</highlight></codeline>
<codeline lineno="1899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_t<sp/>*solid;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>pixman_image_get_width(image);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>pixman_image_get_height(image);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solid<sp/>=<sp/>pixman_image_create_solid_fill(color);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_composite32(PIXMAN_OP_SRC,</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solid,<sp/></highlight><highlight class="comment">/*<sp/>src<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image,<sp/></highlight><highlight class="comment">/*<sp/>dst<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>src<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>mask<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>dst<sp/>x,y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixman_image_unref(solid);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal">pixman_color_t<sp/>*</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><ref refid="weston-test-client-helper_8c_1a6c2ea066953a045e2e4e887361ef1dd1" kindref="member">color_rgb888</ref>(pixman_color_t<sp/>*tmp,<sp/>uint8_t<sp/>r,<sp/>uint8_t<sp/>g,<sp/>uint8_t<sp/>b)</highlight></codeline>
<codeline lineno="1930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp-&gt;alpha<sp/>=<sp/>65535;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp-&gt;red<sp/>=<sp/>(r<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>r;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp-&gt;green<sp/>=<sp/>(g<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>g;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp-&gt;blue<sp/>=<sp/>(b<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/tests/weston-test-client-helper.c"/>
  </compounddef>
</doxygen>
