<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="weston-test_8c" kind="file" language="C++">
    <compoundname>weston-test.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">pthread.h</includes>
    <includes refid="libweston_8h" local="no">libweston/libweston.h</includes>
    <includes refid="weston-log_8h" local="no">libweston/weston-log.h</includes>
    <includes refid="backend_8h" local="yes">backend.h</includes>
    <includes refid="libweston-internal_8h" local="yes">libweston-internal.h</includes>
    <includes local="yes">compositor/weston.h</includes>
    <includes local="yes">weston-test-server-protocol.h</includes>
    <includes local="yes">weston.h</includes>
    <includes refid="weston-testsuite-data_8h" local="yes">weston-testsuite-data.h</includes>
    <includes local="yes">shared/helpers.h</includes>
    <includes local="yes">shared/timespec-util.h</includes>
    <incdepgraph>
      <node id="13">
        <label>stdbool.h</label>
      </node>
      <node id="21">
        <label>stdarg.h</label>
      </node>
      <node id="26">
        <label>weston-test-server-protocol.h</label>
      </node>
      <node id="27">
        <label>weston.h</label>
      </node>
      <node id="12">
        <label>libweston/libweston.h</label>
        <link refid="libweston_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="20">
        <label>libweston/weston-log.h</label>
        <link refid="weston-log_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>wayland-server.h</label>
      </node>
      <node id="16">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
      <node id="9">
        <label>errno.h</label>
      </node>
      <node id="10">
        <label>fcntl.h</label>
      </node>
      <node id="29">
        <label>shared/helpers.h</label>
      </node>
      <node id="25">
        <label>compositor/weston.h</label>
      </node>
      <node id="28">
        <label>weston-testsuite-data.h</label>
        <link refid="weston-testsuite-data_8h"/>
      </node>
      <node id="11">
        <label>pthread.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="6">
        <label>signal.h</label>
      </node>
      <node id="19">
        <label>libweston/zalloc.h</label>
        <link refid="zalloc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>time.h</label>
      </node>
      <node id="18">
        <label>libweston/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
      <node id="15">
        <label>pixman.h</label>
      </node>
      <node id="24">
        <label>libweston-internal.h</label>
        <link refid="libweston-internal_8h"/>
      </node>
      <node id="1">
        <label>/home/lzm/Wayland/weston/tests/weston-test.c</label>
        <link refid="weston-test_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="30">
        <label>shared/timespec-util.h</label>
      </node>
      <node id="23">
        <label>backend.h</label>
        <link refid="backend_8h"/>
      </node>
      <node id="22">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structweston__test" prot="public">weston_test</innerclass>
    <innerclass refid="structweston__test__surface" prot="public">weston_test_surface</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="weston-test_8c_1a668904fb95d09ef2b01a18206dda8063" prot="public" static="no">
        <name>MAX_TOUCH_DEVICES</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="50" column="9" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="weston-test_8c_1ace1895f1d66e12c7e46594aefa27c522" prot="public" static="yes" mutable="no">
        <type>const struct weston_test_interface</type>
        <definition>const struct weston_test_interface test_implementation</definition>
        <argsstring></argsstring>
        <name>test_implementation</name>
        <initializer>= {
	<ref refid="weston-test_8c_1aba549353eacc6ed36d1b406e53b866fa" kindref="member">move_surface</ref>,
	<ref refid="weston-test_8c_1a722a1943579c9a10dbc619e94de57335" kindref="member">move_pointer</ref>,
	<ref refid="weston-test_8c_1afece1f4b62bbb85cb6b99a9b720cfa69" kindref="member">send_button</ref>,
	<ref refid="weston-test_8c_1a6cdc3e9024189d0e4cca7af437abaaa5" kindref="member">send_axis</ref>,
	<ref refid="weston-test_8c_1a68ae94443c0508191cba68766baa8fc3" kindref="member">activate_surface</ref>,
	<ref refid="weston-test_8c_1af117ae7e0a787d24c8b62bc97938ccde" kindref="member">send_key</ref>,
	<ref refid="weston-test_8c_1add0367c86fb2fcb8781beacee698ccd4" kindref="member">device_release</ref>,
	<ref refid="weston-test_8c_1ab6f2bead457996bafdc5353fb8b2708e" kindref="member">device_add</ref>,
	<ref refid="weston-test_8c_1ae8fed69775acfa8e3b784d9abb027c23" kindref="member">send_touch</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="342" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="358" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="weston-test_8c_1a77a2fa57729c7ed4c79b1aece409a172" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_device_add</definition>
        <argsstring>(struct weston_test *test)</argsstring>
        <name>touch_device_add</name>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="76" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="76" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1af2ba9dd703260c0ea3f85323685f7438" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void touch_device_remove</definition>
        <argsstring>(struct weston_test *test)</argsstring>
        <name>touch_device_remove</name>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="92" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="92" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1aaa6c31a71593b686315bcb274f0961e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_seat_init</definition>
        <argsstring>(struct weston_test *test)</argsstring>
        <name>test_seat_init</name>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="104" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="104" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a71fe8c8483a7edc2003961421873f9d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_seat_release</definition>
        <argsstring>(struct weston_test *test)</argsstring>
        <name>test_seat_release</name>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="124" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="124" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structweston__seat" kindref="compound">weston_seat</ref> *</type>
        <definition>static struct weston_seat* get_seat</definition>
        <argsstring>(struct weston_test *test)</argsstring>
        <name>get_seat</name>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="137" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a1caf747a57b7530db5d9ce3805c082a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void notify_pointer_position</definition>
        <argsstring>(struct weston_test *test, struct wl_resource *resource)</argsstring>
        <name>notify_pointer_position</name>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>test</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="143" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="143" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a2ebabfae605913765117a1d6d4f1d17b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_surface_committed</definition>
        <argsstring>(struct weston_surface *surface, int32_t sx, int32_t sy)</argsstring>
        <name>test_surface_committed</name>
        <param>
          <type>struct <ref refid="structweston__surface" kindref="compound">weston_surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="152" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="152" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1aba549353eacc6ed36d1b406e53b866fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void move_surface</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *surface_resource, int32_t x, int32_t y)</argsstring>
        <name>move_surface</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="171" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="171" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a722a1943579c9a10dbc619e94de57335" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void move_pointer</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t tv_sec_hi, uint32_t tv_sec_lo, uint32_t tv_nsec, int32_t x, int32_t y)</argsstring>
        <name>move_pointer</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_lo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_nsec</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="205" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="205" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1afece1f4b62bbb85cb6b99a9b720cfa69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_button</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t tv_sec_hi, uint32_t tv_sec_lo, uint32_t tv_nsec, int32_t button, uint32_t state)</argsstring>
        <name>send_button</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_lo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_nsec</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="229" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="229" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a6cdc3e9024189d0e4cca7af437abaaa5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_axis</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t tv_sec_hi, uint32_t tv_sec_lo, uint32_t tv_nsec, uint32_t axis, wl_fixed_t value)</argsstring>
        <name>send_axis</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_lo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_nsec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="244" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="244" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a68ae94443c0508191cba68766baa8fc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void activate_surface</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, struct wl_resource *surface_resource)</argsstring>
        <name>activate_surface</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="263" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="263" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1af117ae7e0a787d24c8b62bc97938ccde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_key</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t tv_sec_hi, uint32_t tv_sec_lo, uint32_t tv_nsec, uint32_t key, enum wl_keyboard_key_state state)</argsstring>
        <name>send_key</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_lo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_nsec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum wl_keyboard_key_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="286" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="286" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1add0367c86fb2fcb8781beacee698ccd4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void device_release</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, const char *device)</argsstring>
        <name>device_release</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="300" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="300" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1ab6f2bead457996bafdc5353fb8b2708e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void device_add</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, const char *device)</argsstring>
        <name>device_add</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="321" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="321" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1ae8fed69775acfa8e3b784d9abb027c23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void send_touch</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t tv_sec_hi, uint32_t tv_sec_lo, uint32_t tv_nsec, int32_t touch_id, wl_fixed_t x, wl_fixed_t y, uint32_t touch_type)</argsstring>
        <name>send_touch</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct wl_resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_sec_lo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tv_nsec</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>touch_id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>touch_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="342" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="342" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a11cd5a0d1b4ddfc501ea6147f29c7c66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_test</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_test</name>
        <param>
          <type>struct wl_client *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="371" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="371" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a6549bd0212347f39a689baf94fe434c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void client_thread_cleanup</definition>
        <argsstring>(void *data_)</argsstring>
        <name>client_thread_cleanup</name>
        <param>
          <type>void *</type>
          <declname>data_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="389" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="389" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1aacef2143170f8d5bceadea44f86f6fbc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* client_thread_routine</definition>
        <argsstring>(void *data_)</argsstring>
        <name>client_thread_routine</name>
        <param>
          <type>void *</type>
          <declname>data_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="398" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="398" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a72504f5885f2189195c2fb2b4dada8a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void client_thread_join</definition>
        <argsstring>(struct weston_test *test)</argsstring>
        <name>client_thread_join</name>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="411" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="411" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1ac61c312e1d8eaf2a12f2ad47393beb75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int handle_client_thread_event</definition>
        <argsstring>(int fd, uint32_t mask, void *data_)</argsstring>
        <name>handle_client_thread_event</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="423" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="423" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a57b9424b102f7d378e1f39fdbc7befc0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int create_client_thread</definition>
        <argsstring>(struct weston_test *test, struct wet_testsuite_data *data)</argsstring>
        <name>create_client_thread</name>
        <param>
          <type>struct <ref refid="structweston__test" kindref="compound">weston_test</ref> *</type>
          <declname>test</declname>
        </param>
        <param>
          <type>struct <ref refid="structwet__testsuite__data" kindref="compound">wet_testsuite_data</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="440" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="440" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a2acdec9dbf6eda61b6670145aa9534bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idle_launch_testsuite</definition>
        <argsstring>(void *test_)</argsstring>
        <name>idle_launch_testsuite</name>
        <param>
          <type>void *</type>
          <declname>test_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="505" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="505" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1ad6577c2ba29e1abd46812b42ca59af67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_compositor_destroy</definition>
        <argsstring>(struct wl_listener *listener, void *weston_compositor)</argsstring>
        <name>handle_compositor_destroy</name>
        <param>
          <type>struct wl_listener *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>weston_compositor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="539" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="539" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="weston-test_8c_1a193679ebf69d258c725481b10ad8f816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wet_module_init</definition>
        <argsstring>(struct weston_compositor *ec, int *argc, char *argv[])</argsstring>
        <name>wet_module_init</name>
        <param>
          <type>struct <ref refid="structweston__compositor" kindref="compound">weston_compositor</ref> *</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lzm/Wayland/weston/tests/weston-test.c" line="563" column="1" bodyfile="/home/lzm/Wayland/weston/tests/weston-test.c" bodystart="563" bodyend="604"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="libweston_8h" kindref="compound">libweston/libweston.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="weston-log_8h" kindref="compound">libweston/weston-log.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="backend_8h" kindref="compound">backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libweston-internal_8h" kindref="compound">libweston-internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compositor/weston.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;weston-test-server-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;weston.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weston-testsuite-data_8h" kindref="compound">weston-testsuite-data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/helpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared/timespec-util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_TOUCH_DEVICES<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structweston__test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*<ref refid="structweston__test_1a52b9642b3c1b52c800919299ab5d234b" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_listener<sp/><ref refid="structweston__test_1a5fa873b007be3f50f93edc2dbfdb778c" kindref="member">destroy_listener</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__log__scope" kindref="compound">weston_log_scope</ref><sp/>*<ref refid="structweston__test_1a9b58ccac0266345a3451dcac693e70cd" kindref="member">log</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__layer" kindref="compound">weston_layer</ref><sp/><ref refid="structweston__test_1ab94d1bfe9cdf42ba916754158e1f50a6" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/><ref refid="structweston__test_1aff5cf169ab81d60a2a333d975ce23d36" kindref="member">seat</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*<ref refid="structweston__test_1ad6f833db82d758311dd1f2351ca9e93d" kindref="member">touch_device</ref>[<ref refid="weston-test_8c_1a668904fb95d09ef2b01a18206dda8063" kindref="member">MAX_TOUCH_DEVICES</ref>];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structweston__test_1af6bddca374db48c3094de16ac412247d" kindref="member">nr_touch_devices</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structweston__test_1a43b5439dd054ccf6078cde1d0b9ea829" kindref="member">is_seat_initialized</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_t<sp/><ref refid="structweston__test_1a4a41faa44120ec1d3d37696fa6b79731" kindref="member">client_thread</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source<sp/>*<ref refid="structweston__test_1a57d805d1d631f07aee556b6dec28f368" kindref="member">client_source</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structweston__test__surface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test__surface" kindref="compound">weston_test_surface</ref><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structweston__test__surface_1afa3e653a8ec75d6c85921ac9d9b1de74" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__view" kindref="compound">weston_view</ref><sp/>*<ref refid="structweston__test__surface_1a70199c1d032256f70d09b8667cbbf414" kindref="member">view</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__test__surface_1a6137d595d65b9524881c42dc869092ef" kindref="member">x</ref>,<sp/><ref refid="structweston__test__surface_1ab3408e4b0d05ea8f6c59e0dfce81ea7d" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structweston__test__surface_1a7db5f9fc742cfd206268825b796f2b0f" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="weston-test_8c_1a77a2fa57729c7ed4c79b1aece409a172" kindref="member">touch_device_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;nr_touch_devices;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(i<sp/>&lt;<sp/><ref refid="weston-test_8c_1a668904fb95d09ef2b01a18206dda8063" kindref="member">MAX_TOUCH_DEVICES</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structtest" kindref="compound">test</ref>-&gt;touch_device[i]);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>buf,<sp/></highlight><highlight class="stringliteral">&quot;test-touch-device-%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;touch_device[i]<sp/>=<sp/><ref refid="input_8c_1ab636d1e6d0bc7f2204c8f1f80cb47e07" kindref="member">weston_touch_create_touch_device</ref>(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;seat.touch_state,<sp/>buf,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;nr_touch_devices++;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="weston-test_8c_1af2ba9dd703260c0ea3f85323685f7438" kindref="member">touch_device_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;nr_touch_devices<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(i<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structtest" kindref="compound">test</ref>-&gt;touch_device[i]);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1aa6762c2cc7031bbfe61074d8b0d90191" kindref="member">weston_touch_device_destroy</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;touch_device[i]);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;touch_device[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="structtest" kindref="compound">test</ref>-&gt;nr_touch_devices;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="weston-test_8c_1aaa6c31a71593b686315bcb274f0961e8" kindref="member">test_seat_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="structtest" kindref="compound">test</ref>-&gt;is_seat_initialized<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>add<sp/>already<sp/>added<sp/>test<sp/>seat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>our<sp/>own<sp/>seat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a8e69f6e66263be7757aadcc5f1528f71" kindref="member">weston_seat_init</ref>(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;seat,<sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;compositor,<sp/></highlight><highlight class="stringliteral">&quot;test-seat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;is_seat_initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a0f241f297507f22da6465509d03c9f33" kindref="member">weston_seat_init_pointer</ref>(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;seat);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="input_8c_1a6ee7365931e5b81e995c640d1bf158e0" kindref="member">weston_seat_init_keyboard</ref>(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;seat,<sp/>NULL)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a04b3f51a81712517ce6ed5a71adf6c5a" kindref="member">weston_seat_init_touch</ref>(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;seat);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a77a2fa57729c7ed4c79b1aece409a172" kindref="member">touch_device_add</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="weston-test_8c_1a71fe8c8483a7edc2003961421873f9d0" kindref="member">test_seat_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="structtest" kindref="compound">test</ref>-&gt;nr_touch_devices<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1af2ba9dd703260c0ea3f85323685f7438" kindref="member">touch_device_remove</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structtest" kindref="compound">test</ref>-&gt;is_seat_initialized<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>release<sp/>already<sp/>released<sp/>test<sp/>seat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;is_seat_initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a4f4636b5443315bd1415369ed427d14c" kindref="member">weston_seat_release</ref>(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;seat);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;seat,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;seat);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;seat;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="weston-test_8c_1a1caf747a57b7530db5d9ce3805c082a6" kindref="member">notify_pointer_position</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weston_test_send_pointer_position(resource,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>,<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="weston-test_8c_1a2ebabfae605913765117a1d6d4f1d17b" kindref="member">test_surface_committed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref>,<sp/>int32_t<sp/><ref refid="structweston__pointer_1afa0c8790e1c49588c94dfee747164837" kindref="member">sx</ref>,<sp/>int32_t<sp/><ref refid="structweston__pointer_1a300ca0ec2b0800aab5ee6820aa8b8253" kindref="member">sy</ref>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test__surface" kindref="compound">weston_test_surface</ref><sp/>*test_surface<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed_private;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>test_surface-&gt;<ref refid="structweston__test__surface_1a7db5f9fc742cfd206268825b796f2b0f" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_list_empty(&amp;test_surface-&gt;<ref refid="structweston__test__surface_1a70199c1d032256f70d09b8667cbbf414" kindref="member">view</ref>-&gt;<ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>.<ref refid="structweston__layer__entry_1a993222d8d3171cdaac64b29514fff13e" kindref="member">link</ref>))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1adcf675a1f1ac2cea92e8ca52900b89c4" kindref="member">weston_layer_entry_insert</ref>(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;layer.view_list,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;test_surface-&gt;<ref refid="structweston__test__surface_1a70199c1d032256f70d09b8667cbbf414" kindref="member">view</ref>-&gt;<ref refid="structweston__view_1a5185d78e10d20bba70022466b196e990" kindref="member">layer_link</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ae1df17820e004a35b62f4a923066e9fd" kindref="member">weston_view_set_position</ref>(test_surface-&gt;<ref refid="structweston__test__surface_1a70199c1d032256f70d09b8667cbbf414" kindref="member">view</ref>,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface-&gt;<ref refid="structweston__test__surface_1a6137d595d65b9524881c42dc869092ef" kindref="member">x</ref>,<sp/>test_surface-&gt;<ref refid="structweston__test__surface_1ab3408e4b0d05ea8f6c59e0dfce81ea7d" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a9605e8abe1240aa6cbe7abdd2fc7f2be" kindref="member">weston_view_update_transform</ref>(test_surface-&gt;<ref refid="structweston__test__surface_1a70199c1d032256f70d09b8667cbbf414" kindref="member">view</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface-&gt;<ref refid="structweston__test__surface_1afa3e653a8ec75d6c85921ac9d9b1de74" kindref="member">surface</ref>-&gt;<ref refid="structweston__surface_1a01c08279440b8bcb241a6dd61956217c" kindref="member">is_mapped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface-&gt;<ref refid="structweston__test__surface_1a70199c1d032256f70d09b8667cbbf414" kindref="member">view</ref>-&gt;<ref refid="structweston__view_1a18d37d84392f17fc306c8410a84b1f04" kindref="member">is_mapped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="weston-test_8c_1aba549353eacc6ed36d1b406e53b866fa" kindref="member">move_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(surface_resource);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test__surface" kindref="compound">weston_test_surface</ref><sp/>*test_surface;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface<sp/>=<sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed_private;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_surface)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*test_surface);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_surface)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(resource);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface-&gt;<ref refid="structweston__test__surface_1a70199c1d032256f70d09b8667cbbf414" kindref="member">view</ref><sp/>=<sp/><ref refid="compositor_8c_1aa7c65b03520dde2e12d5a35f444435d5" kindref="member">weston_view_create</ref>(<ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_surface-&gt;<ref refid="structweston__test__surface_1a70199c1d032256f70d09b8667cbbf414" kindref="member">view</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(resource);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(test_surface);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed_private<sp/>=<sp/>test_surface;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface" kindref="compound">surface</ref>-&gt;committed<sp/>=<sp/><ref refid="weston-test_8c_1a2ebabfae605913765117a1d6d4f1d17b" kindref="member">test_surface_committed</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface-&gt;<ref refid="structweston__test__surface_1afa3e653a8ec75d6c85921ac9d9b1de74" kindref="member">surface</ref><sp/>=<sp/><ref refid="structweston__test__surface_1afa3e653a8ec75d6c85921ac9d9b1de74" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface-&gt;<ref refid="structweston__test__surface_1a7db5f9fc742cfd206268825b796f2b0f" kindref="member">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface-&gt;<ref refid="structweston__test__surface_1a6137d595d65b9524881c42dc869092ef" kindref="member">x</ref><sp/>=<sp/><ref refid="structweston__test__surface_1a6137d595d65b9524881c42dc869092ef" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_surface-&gt;<ref refid="structweston__test__surface_1ab3408e4b0d05ea8f6c59e0dfce81ea7d" kindref="member">y</ref><sp/>=<sp/><ref refid="structweston__test__surface_1ab3408e4b0d05ea8f6c59e0dfce81ea7d" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="weston-test_8c_1a722a1943579c9a10dbc619e94de57335" kindref="member">move_pointer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>uint32_t<sp/>tv_sec_lo,<sp/>uint32_t<sp/>tv_nsec,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structweston__test__surface_1a6137d595d65b9524881c42dc869092ef" kindref="member">x</ref>,<sp/>int32_t<sp/><ref refid="structweston__test__surface_1ab3408e4b0d05ea8f6c59e0dfce81ea7d" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer" kindref="compound">weston_pointer</ref><sp/>*<ref refid="structpointer" kindref="compound">pointer</ref><sp/>=<sp/><ref refid="input_8c_1a19c472e9c28557a525fac4d8b783edab" kindref="member">weston_seat_get_pointer</ref>(<ref refid="structweston__pointer_1abc2866681b28940b405b12ccd88e91d9" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref><sp/>event<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>time;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__motion__event" kindref="compound">weston_pointer_motion_event</ref>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structweston__pointer__motion__event_1a446ab3f5307682f668b624899374458c" kindref="member">mask</ref><sp/>=<sp/><ref refid="libweston_8h_1aac83b5763c409014ae833e140d7f04a5a1a81e5f785512d1f1ea98b3f7774917d" kindref="member">WESTON_POINTER_MOTION_REL</ref>,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dx<sp/>=<sp/>wl_fixed_to_double(wl_fixed_from_int(<ref refid="structweston__pointer__motion__event_1a23d2c4c1ecface14929b695adaf627f8" kindref="member">x</ref>)<sp/>-<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a609c4c6ee72b53ff2245f6e0b438ba32" kindref="member">x</ref>),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dy<sp/>=<sp/>wl_fixed_to_double(wl_fixed_from_int(<ref refid="structweston__pointer__motion__event_1a32457056c8b02f30fd4d60f95aa93f96" kindref="member">y</ref>)<sp/>-<sp/><ref refid="structpointer" kindref="compound">pointer</ref>-&gt;<ref refid="structpointer_1a5fde39991e2687831fadf1f101653810" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_from_proto(&amp;time,<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1a035ebbdf329d3837736d585ae77eb2ed" kindref="member">notify_motion</ref>(seat,<sp/>&amp;time,<sp/>&amp;event);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a1caf747a57b7530db5d9ce3805c082a6" kindref="member">notify_pointer_position</ref>(<ref refid="structtest" kindref="compound">test</ref>,<sp/>resource);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="weston-test_8c_1afece1f4b62bbb85cb6b99a9b720cfa69" kindref="member">send_button</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>uint32_t<sp/>tv_sec_lo,<sp/>uint32_t<sp/>tv_nsec,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>button,<sp/>uint32_t<sp/>state)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>time;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_from_proto(&amp;time,<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1a341d3b175076e06fad2e432288b0bb7b" kindref="member">notify_button</ref>(seat,<sp/>&amp;time,<sp/>button,<sp/>state);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="weston-test_8c_1a6cdc3e9024189d0e4cca7af437abaaa5" kindref="member">send_axis</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>uint32_t<sp/>tv_sec_lo,<sp/>uint32_t<sp/>tv_nsec,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>axis,<sp/>wl_fixed_t<sp/>value)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>time;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__pointer__axis__event" kindref="compound">weston_pointer_axis_event</ref><sp/>axis_event;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_from_proto(&amp;time,<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis_event.axis<sp/>=<sp/><ref refid="structweston__pointer__axis__event_1a921166b269c22fd0b3ec989397f5d88a" kindref="member">axis</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis_event.value<sp/>=<sp/>wl_fixed_to_double(<ref refid="structweston__pointer__axis__event_1a758413a513d73685c127fb41181e4320" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis_event.has_discrete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis_event.discrete<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1a46f42be4885b59c6a4395201f9acb9dc" kindref="member">notify_axis</ref>(seat,<sp/>&amp;time,<sp/>&amp;axis_event);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><ref refid="weston-test_8c_1a68ae94443c0508191cba68766baa8fc3" kindref="member">activate_surface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*surface_resource)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__surface" kindref="compound">weston_surface</ref><sp/>*<ref refid="structsurface" kindref="compound">surface</ref><sp/>=<sp/>surface_resource<sp/>?</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_user_data(surface_resource)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__keyboard" kindref="compound">weston_keyboard</ref><sp/>*<ref refid="structkeyboard" kindref="compound">keyboard</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref><sp/>=<sp/><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkeyboard" kindref="compound">keyboard</ref><sp/>=<sp/><ref refid="input_8c_1a6986418ab4ad62064fab60802cedf99d" kindref="member">weston_seat_get_keyboard</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsurface" kindref="compound">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a46e90691191fd2cdc9fab021d6238829" kindref="member">weston_seat_set_keyboard_focus</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1a3c6bf42d3db7275d5d21e7c471fb66b2" kindref="member">notify_keyboard_focus_in</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>,<sp/>&amp;<ref refid="structkeyboard" kindref="compound">keyboard</ref>-&gt;keys,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a816b30ccdbbe24e29682edc1fca8f45d" kindref="member">STATE_UPDATE_AUTOMATIC</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1af129a8798b5e9e4c417ea356d086761f" kindref="member">notify_keyboard_focus_out</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a46e90691191fd2cdc9fab021d6238829" kindref="member">weston_seat_set_keyboard_focus</ref>(<ref refid="structweston__keyboard_1aa2a5dbc98ed8259987d58cee8e9c6b4d" kindref="member">seat</ref>,<sp/><ref refid="structsurface" kindref="compound">surface</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="weston-test_8c_1af117ae7e0a787d24c8b62bc97938ccde" kindref="member">send_key</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>uint32_t<sp/>tv_sec_lo,<sp/>uint32_t<sp/>tv_nsec,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wl_keyboard_key_state<sp/><ref refid="structweston__keyboard_1a3a23dee8749255183af2d4cda6e95b7e" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>time;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_from_proto(&amp;time,<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1aef2cf9bf595febf9a1e448096797f937" kindref="member">notify_key</ref>(seat,<sp/>&amp;time,<sp/>key,<sp/>state,<sp/><ref refid="libweston_8h_1afff20b83d542a98eccc1fee1314dde51a816b30ccdbbe24e29682edc1fca8f45d" kindref="member">STATE_UPDATE_AUTOMATIC</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="weston-test_8c_1add0367c86fb2fcb8781beacee698ccd4" kindref="member">device_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*device)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device,<sp/></highlight><highlight class="stringliteral">&quot;pointer&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a9be3e32a8ef28ef2011c1b084494a18b" kindref="member">weston_seat_release_pointer</ref>(seat);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device,<sp/></highlight><highlight class="stringliteral">&quot;keyboard&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1adc5a8c2cbe300f6f0be4c17241c1f779" kindref="member">weston_seat_release_keyboard</ref>(seat);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device,<sp/></highlight><highlight class="stringliteral">&quot;touch&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1af2ba9dd703260c0ea3f85323685f7438" kindref="member">touch_device_remove</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a5d6a767a8449fe1bd7ebe9aeaf199ea8" kindref="member">weston_seat_release_touch</ref>(seat);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device,<sp/></highlight><highlight class="stringliteral">&quot;seat&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a71fe8c8483a7edc2003961421873f9d0" kindref="member">test_seat_release</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><ref refid="weston-test_8c_1ab6f2bead457996bafdc5353fb8b2708e" kindref="member">device_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*device)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__seat" kindref="compound">weston_seat</ref><sp/>*seat<sp/>=<sp/><ref refid="weston-test_8c_1a8b63be520b4ce8934c1cac9229dae9e2" kindref="member">get_seat</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device,<sp/></highlight><highlight class="stringliteral">&quot;pointer&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a0f241f297507f22da6465509d03c9f33" kindref="member">weston_seat_init_pointer</ref>(seat);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device,<sp/></highlight><highlight class="stringliteral">&quot;keyboard&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a6ee7365931e5b81e995c640d1bf158e0" kindref="member">weston_seat_init_keyboard</ref>(seat,<sp/>NULL);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device,<sp/></highlight><highlight class="stringliteral">&quot;touch&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="input_8c_1a04b3f51a81712517ce6ed5a71adf6c5a" kindref="member">weston_seat_init_touch</ref>(seat);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a77a2fa57729c7ed4c79b1aece409a172" kindref="member">touch_device_add</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device,<sp/></highlight><highlight class="stringliteral">&quot;seat&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1aaa6c31a71593b686315bcb274f0961e8" kindref="member">test_seat_init</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="weston-test_8c_1ae8fed69775acfa8e3b784d9abb027c23" kindref="member">send_touch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_resource<sp/>*resource,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tv_sec_hi,<sp/>uint32_t<sp/>tv_sec_lo,<sp/>uint32_t<sp/>tv_nsec,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>touch_id,<sp/>wl_fixed_t<sp/>x,<sp/>wl_fixed_t<sp/>y,<sp/>uint32_t<sp/>touch_type)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_resource_get_user_data(resource);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__touch__device" kindref="compound">weston_touch_device</ref><sp/>*device<sp/>=<sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;touch_device[0];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>time;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(device);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timespec_from_proto(&amp;time,<sp/>tv_sec_hi,<sp/>tv_sec_lo,<sp/>tv_nsec);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="backend_8h_1a061cdbcbb528666a0b948270055c661d" kindref="member">notify_touch</ref>(device,<sp/>&amp;time,<sp/>touch_id,<sp/>wl_fixed_to_double(x),</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_to_double(y),<sp/>touch_type);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">weston_test_interface<sp/><ref refid="weston-test_8c_1ace1895f1d66e12c7e46594aefa27c522" kindref="member">test_implementation</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1aba549353eacc6ed36d1b406e53b866fa" kindref="member">move_surface</ref>,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a722a1943579c9a10dbc619e94de57335" kindref="member">move_pointer</ref>,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1afece1f4b62bbb85cb6b99a9b720cfa69" kindref="member">send_button</ref>,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a6cdc3e9024189d0e4cca7af437abaaa5" kindref="member">send_axis</ref>,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a68ae94443c0508191cba68766baa8fc3" kindref="member">activate_surface</ref>,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1af117ae7e0a787d24c8b62bc97938ccde" kindref="member">send_key</ref>,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1add0367c86fb2fcb8781beacee698ccd4" kindref="member">device_release</ref>,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1ab6f2bead457996bafdc5353fb8b2708e" kindref="member">device_add</ref>,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1ae8fed69775acfa8e3b784d9abb027c23" kindref="member">send_touch</ref>,</highlight></codeline>
<codeline lineno="368"><highlight class="normal">};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><ref refid="weston-test_8c_1a11cd5a0d1b4ddfc501ea6147f29c7c66" kindref="member">bind_test</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_client<sp/>*<ref refid="structclient" kindref="compound">client</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_create(<ref refid="structclient" kindref="compound">client</ref>,<sp/>&amp;weston_test_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!resource)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(<ref refid="structclient" kindref="compound">client</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="weston-test_8c_1ace1895f1d66e12c7e46594aefa27c522" kindref="member">test_implementation</ref>,<sp/><ref refid="structtest" kindref="compound">test</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a1caf747a57b7530db5d9ce3805c082a6" kindref="member">notify_pointer_position</ref>(<ref refid="structtest" kindref="compound">test</ref>,<sp/>resource);</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><ref refid="weston-test_8c_1a6549bd0212347f39a689baf94fe434c6" kindref="member">client_thread_cleanup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwet__testsuite__data" kindref="compound">wet_testsuite_data</ref><sp/>*data<sp/>=<sp/>data_;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(data-&gt;<ref refid="structwet__testsuite__data_1ad35c2293edf76a9e5e63e8bb005122ae" kindref="member">thread_event_pipe</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structwet__testsuite__data_1ad35c2293edf76a9e5e63e8bb005122ae" kindref="member">thread_event_pipe</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><ref refid="weston-test_8c_1aacef2143170f8d5bceadea44f86f6fbc" kindref="member">client_thread_routine</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwet__testsuite__data" kindref="compound">wet_testsuite_data</ref><sp/>*data<sp/>=<sp/>data_;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_setname_np(pthread_self(),<sp/></highlight><highlight class="stringliteral">&quot;client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cleanup_push(<ref refid="weston-test_8c_1a6549bd0212347f39a689baf94fe434c6" kindref="member">client_thread_cleanup</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structwet__testsuite__data_1aa778aef8c2990ddf1367f24d5af3b23b" kindref="member">run</ref>(data);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cleanup_pop(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><ref refid="weston-test_8c_1a72504f5885f2189195c2fb2b4dada8a9" kindref="member">client_thread_join</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref>)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structtest" kindref="compound">test</ref>-&gt;client_source);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_join(<ref refid="structtest" kindref="compound">test</ref>-&gt;client_thread,<sp/>NULL);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_remove(<ref refid="structtest" kindref="compound">test</ref>-&gt;client_source);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;client_source<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1ab8df80c01a6b256dee3d6a873b21ad05" kindref="member">weston_log_scope_printf</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;log,<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>thread<sp/>reaped.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><ref refid="weston-test_8c_1ac61c312e1d8eaf2a12f2ad47393beb75" kindref="member">handle_client_thread_event</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>data_;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1ab8df80c01a6b256dee3d6a873b21ad05" kindref="member">weston_log_scope_printf</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;log,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>thread<sp/>event<sp/>mask<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>mask);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>!=<sp/>WL_EVENT_HANGUP)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>unexpected<sp/>event<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>mask);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a72504f5885f2189195c2fb2b4dada8a9" kindref="member">client_thread_join</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1gaf4e53253ff94f741ee4a04e7e52e302f" kindref="member">weston_compositor_exit</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;compositor);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><ref refid="weston-test_8c_1a57b9424b102f7d378e1f39fdbc7befc0" kindref="member">create_client_thread</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwet__testsuite__data" kindref="compound">wet_testsuite_data</ref><sp/>*data)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_loop<sp/>*loop;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pipefd[2]<sp/>=<sp/>{<sp/>-1,<sp/>-1<sp/>};</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigset_t<sp/>saved;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigset_t<sp/>blocked;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1ab8df80c01a6b256dee3d6a873b21ad05" kindref="member">weston_log_scope_printf</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;log,<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>a<sp/>thread<sp/>for<sp/>running<sp/>tests...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe2(pipefd,<sp/>O_CLOEXEC<sp/>|<sp/>O_NONBLOCK)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Creating<sp/>pipe<sp/>for<sp/>a<sp/>client<sp/>thread<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(errno));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>wl_display_get_event_loop(<ref refid="structtest" kindref="compound">test</ref>-&gt;compositor-&gt;wl_display);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;client_source<sp/>=<sp/>wl_event_loop_add_fd(loop,<sp/>pipefd[0],</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_EVENT_READABLE,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1ac61c312e1d8eaf2a12f2ad47393beb75" kindref="member">handle_client_thread_event</ref>,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(pipefd[0]);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtest" kindref="compound">test</ref>-&gt;client_source)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>client<sp/>thread<sp/>fd<sp/>to<sp/>event<sp/>loop<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_pipe;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structwet__testsuite__data_1ad35c2293edf76a9e5e63e8bb005122ae" kindref="member">thread_event_pipe</ref><sp/>=<sp/>pipefd[1];</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>we<sp/>don&apos;t<sp/>accidentally<sp/>get<sp/>signals<sp/>to<sp/>the<sp/>thread.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigfillset(&amp;blocked);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigdelset(&amp;blocked,<sp/>SIGSEGV);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigdelset(&amp;blocked,<sp/>SIGFPE);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigdelset(&amp;blocked,<sp/>SIGILL);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigdelset(&amp;blocked,<sp/>SIGCONT);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigdelset(&amp;blocked,<sp/>SIGSYS);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pthread_sigmask(SIG_BLOCK,<sp/>&amp;blocked,<sp/>&amp;saved)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_source;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_create(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;client_thread,<sp/>NULL,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1aacef2143170f8d5bceadea44f86f6fbc" kindref="member">client_thread_routine</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_sigmask(SIG_SETMASK,<sp/>&amp;saved,<sp/>NULL);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Creating<sp/>client<sp/>thread<sp/>failed:<sp/>%s<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(ret),<sp/>ret);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_source;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">out_source:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structwet__testsuite__data_1ad35c2293edf76a9e5e63e8bb005122ae" kindref="member">thread_event_pipe</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_source_remove(<ref refid="structtest" kindref="compound">test</ref>-&gt;client_source);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;client_source<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">out_pipe:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(pipefd[1]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><ref refid="weston-test_8c_1a2acdec9dbf6eda61b6670145aa9534bb" kindref="member">idle_launch_testsuite</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*test_)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>test_;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwet__testsuite__data" kindref="compound">wet_testsuite_data</ref><sp/>*data<sp/>=<sp/><ref refid="group__compositor_1gaa92b2b7d2b73302bf143e1c3245045f0" kindref="member">weston_compositor_get_test_data</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;compositor);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data-&gt;<ref refid="structwet__testsuite__data_1a9058a6cc8cca95a80c3c4417aa2707db" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__testharness__private_1ggaac4452a7487c189982bfeaca04a1326fa29e6ee8780af534f3ec9f60fa1c24763" kindref="member">TEST_TYPE_CLIENT</ref>:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weston-test_8c_1a57b9424b102f7d378e1f39fdbc7befc0" kindref="member">create_client_thread</ref>(<ref refid="structtest" kindref="compound">test</ref>,<sp/>data)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>creating<sp/>client<sp/>thread<sp/>for<sp/>test<sp/>suite<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga6299e93b80dfd70bd2c9c1603417f940" kindref="member">weston_compositor_exit_with_code</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;compositor,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1ggaf45a885e3df7d3e0204f0beb2036a103a1a9437b5f7317085e7fc0358a47d32f3" kindref="member">RESULT_HARD_ERROR</ref>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__testharness__private_1ggaac4452a7487c189982bfeaca04a1326fa3120f83ea36457050043776ca058fda2" kindref="member">TEST_TYPE_PLUGIN</ref>:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structwet__testsuite__data_1a51825d253002fb20aa5f45d8baa4661a" kindref="member">compositor</ref><sp/>=<sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;compositor;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1ab8df80c01a6b256dee3d6a873b21ad05" kindref="member">weston_log_scope_printf</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;log,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>tests<sp/>from<sp/>idle<sp/>handler...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structwet__testsuite__data_1aa778aef8c2990ddf1367f24d5af3b23b" kindref="member">run</ref>(data);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1gaf4e53253ff94f741ee4a04e7e52e302f" kindref="member">weston_compositor_exit</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;compositor);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__testharness__private_1ggaac4452a7487c189982bfeaca04a1326fafa838cea02f9c1b9df0c3cc3dbd1dc85" kindref="member">TEST_TYPE_STANDALONE</ref>:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wlog_1ga6a7cc2161ce1dad600859022b30162c8" kindref="member">weston_log</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>unknown<sp/>test<sp/>internal<sp/>type<sp/>%d.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structwet__testsuite__data_1a9058a6cc8cca95a80c3c4417aa2707db" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__compositor_1ga6299e93b80dfd70bd2c9c1603417f940" kindref="member">weston_compositor_exit_with_code</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;compositor,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__testharness_1ggaf45a885e3df7d3e0204f0beb2036a103a1a9437b5f7317085e7fc0358a47d32f3" kindref="member">RESULT_HARD_ERROR</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><ref refid="weston-test_8c_1ad6577c2ba29e1abd46812b42ca59af67" kindref="member">handle_compositor_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_listener<sp/>*listener,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structweston__compositor" kindref="compound">weston_compositor</ref>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="matrix-test_8c_1a40180e42e1cf6c3fbbb74f44cb78ca67" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/>wl_container_of(listener,<sp/><ref refid="structtest" kindref="compound">test</ref>,<sp/><ref refid="structweston__test_1a5fa873b007be3f50f93edc2dbfdb778c" kindref="member">destroy_listener</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtest" kindref="compound">test</ref>-&gt;client_source)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1ab8df80c01a6b256dee3d6a873b21ad05" kindref="member">weston_log_scope_printf</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;log,<sp/></highlight><highlight class="stringliteral">&quot;Cancelling<sp/>client<sp/>thread...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cancel(<ref refid="structtest" kindref="compound">test</ref>-&gt;client_thread);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a72504f5885f2189195c2fb2b4dada8a9" kindref="member">client_thread_join</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtest" kindref="compound">test</ref>-&gt;is_seat_initialized)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1a71fe8c8483a7edc2003961421873f9d0" kindref="member">test_seat_release</ref>(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;layer.view_list.link);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;layer.link);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structweston__log__scope_1a32ad399b7e203a9ad0a5a11cdd0711ce" kindref="member">weston_log_scope_destroy</ref>(<ref refid="structtest" kindref="compound">test</ref>-&gt;log);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal">WL_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><ref refid="weston-test_8c_1a193679ebf69d258c725481b10ad8f816" kindref="member">wet_module_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structweston__compositor" kindref="compound">weston_compositor</ref><sp/>*ec,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structweston__test" kindref="compound">weston_test</ref><sp/>*<ref refid="matrix-test_8c_1a40180e42e1cf6c3fbbb74f44cb78ca67" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_loop<sp/>*loop;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref><sp/>=<sp/><ref refid="zalloc_8h_1a260ac290b02627b12230b313c8fa92b3" kindref="member">zalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtest" kindref="compound">test</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="compositor_8c_1a91193ce4a068dee9a1cf248a81a049bc" kindref="member">weston_compositor_add_destroy_listener_once</ref>(ec,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;destroy_listener,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weston-test_8c_1ad6577c2ba29e1abd46812b42ca59af67" kindref="member">handle_compositor_destroy</ref>))<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;compositor<sp/>=<sp/>ec;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1ab4294fb27b3079ee70660a0975d3e0e5" kindref="member">weston_layer_init</ref>(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;layer,<sp/>ec);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compositor_8c_1a736341961367a84eac0b635b94eefc61" kindref="member">weston_layer_set_position</ref>(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;layer,<sp/><ref refid="libweston_8h_1adbefa5d26af7f90e33b3e4da6b67be5ca2e219337cfe0fa85a6e5c70fc269fd93" kindref="member">WESTON_LAYER_POSITION_CURSOR</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>-&gt;log<sp/>=<sp/><ref refid="structweston__compositor_1ae4682c6463d20cedae4215dff64d91c7" kindref="member">weston_compositor_add_log_scope</ref>(ec,<sp/></highlight><highlight class="stringliteral">&quot;test-harness-plugin&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;weston-test<sp/>plugin&apos;s<sp/>own<sp/>actions&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_global_create(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>,<sp/>&amp;weston_test_interface,<sp/>1,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtest" kindref="compound">test</ref>,<sp/><ref refid="weston-test_8c_1a11cd5a0d1b4ddfc501ea6147f29c7c66" kindref="member">bind_test</ref>)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_free;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weston-test_8c_1aaa6c31a71593b686315bcb274f0961e8" kindref="member">test_seat_init</ref>(<ref refid="structtest" kindref="compound">test</ref>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_free;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>wl_display_get_event_loop(ec-&gt;<ref refid="structweston__compositor_1a2ad81ce6f58ba42026cd6d86d5f88c8b" kindref="member">wl_display</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_event_loop_add_idle(loop,<sp/><ref refid="weston-test_8c_1a2acdec9dbf6eda61b6670145aa9534bb" kindref="member">idle_launch_testsuite</ref>,<sp/><ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">out_free:</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;<ref refid="structtest" kindref="compound">test</ref>-&gt;destroy_listener.link);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="structtest" kindref="compound">test</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lzm/Wayland/weston/tests/weston-test.c"/>
  </compounddef>
</doxygen>
